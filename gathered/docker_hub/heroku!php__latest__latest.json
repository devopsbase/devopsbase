{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/heroku/php",
    "repository_url": "https://hub.docker.com/v2/repositories/heroku/php",
    "tags_url": "https://hub.docker.com/v2/repositories/heroku/php/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/heroku/php/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/heroku/php/autobuild",
    "user": "heroku",
    "name": "php",
    "namespace": "heroku",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 4,
    "pull_count": 1042,
    "last_updated": "2016-09-28T20:15:04.911479Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 591356923,
        "id": 876955,
        "repository": 318565,
        "creator": 271078,
        "last_updater": 177,
        "last_updated": "2016-09-28T20:15:03.740083Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "heroku/docker-php"
  },
  "name": "heroku/php Docker container",
  "description": "Heroku PHP Docker Image",
  "readme": "# Heroku PHP Docker Image\n\nThis image is for use with the [Heroku Docker CLI plugin](https://github.com/heroku/heroku-docker).\n\n## Usage\n\nYour project must contain at least the following files:\n\n- `composer.json` & `composer.lock`;\n- a `Procfile` with a [command to launch PHP-FPM together with a web server](https://devcenter.heroku.com/articles/php-support#web-servers)\n\nThen, create an `app.json` file in the root directory of your application with\nat least these contents:\n\n```json\n{\n  \"name\": \"Your App's Name\",\n  \"description\": \"An example app.json for heroku-docker\",\n  \"image\": \"heroku/php\"\n}\n```\n\nInstall the heroku-docker toolbelt plugin:\n\n```sh-session\n$ heroku plugins:install heroku-docker\n```\n\nInitialize your app:\n\n```sh-session\n$ heroku docker:init\nWrote Dockerfile\nWrote docker-compose.yml\n```\n\nAnd run it with Docker Compose:\n\n```sh-session\n$ docker-compose up web\n```\n\nThe first time you run this command, `composer` will download all dependencies into the container, build your application, and then run it. Subsequent runs will use cached dependencies (unless your `composer.json`/`composer.lock` file has changed).\n\nYou'll be able to access your application at `http://<docker-ip>:8080`, where `<docker-ip>` is either the value of running `boot2docker ip` if you are on Mac or Windows, or your localhost if you are running Docker natively.\n\nFor boot2docker users:\n\n```\n$ open \"http://$(boot2docker ip):8080\"\n```\n\n## Hacking\n\nTo test changes locally, you can edit this image and rebuild it, replacing the `heroku/php` image on your machine:\n\n```\ndocker build -t heroku/php .\n```\n\nTo return to the official image:\n\n```\ndocker pull heroku/php\n```",
  "dockerfile": "# Inherit from Heroku's stack\nFROM heroku/cedar:14\n\n# Internally, we arbitrarily use port 3000\nENV PORT 3000\n\n# Which versions?\nENV PHP_VERSION 5.6.15\nENV HTTPD_VERSION 2.4.17\nENV NGINX_VERSION 1.8.0\n\n# Create some needed directories\nRUN mkdir -p /app/.heroku/php /app/.profile.d\nWORKDIR /app/user\n\n# so we can run PHP in here\nENV PATH /app/.heroku/php/bin:/app/.heroku/php/sbin:$PATH\n\n# Install Apache\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-14-master/apache-$HTTPD_VERSION.tar.gz | tar xz -C /app/.heroku/php\n# Config\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/apache2/httpd.conf.default > /app/.heroku/php/etc/apache2/httpd.conf\n# FPM socket permissions workaround when run as root\nRUN echo \"\\n\\\nGroup root\\n\\\n\" >> /app/.heroku/php/etc/apache2/httpd.conf\n\n# Install Nginx\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-14-master/nginx-$NGINX_VERSION.tar.gz | tar xz -C /app/.heroku/php\n# Config\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/nginx/nginx.conf.default > /app/.heroku/php/etc/nginx/nginx.conf\n# FPM socket permissions workaround when run as root\nRUN echo \"\\n\\\nuser nobody root;\\n\\\n\" >> /app/.heroku/php/etc/nginx/nginx.conf\n\n# Install PHP\nRUN curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-14-master/php-$PHP_VERSION.tar.gz | tar xz -C /app/.heroku/php\n# Config\nRUN mkdir -p /app/.heroku/php/etc/php/conf.d\nRUN curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/php/php.ini > /app/.heroku/php/etc/php/php.ini\n# Enable all optional exts\nRUN echo \"\\n\\\nuser_ini.cache_ttl = 30 \\n\\\nzend_extension = opcache.so \\n\\\nopcache.enable_cli = 1 \\n\\\nopcache.validate_timestamps = 1 \\n\\\nopcache.revalidate_freq = 0 \\n\\\nopcache.fast_shutdown = 0 \\n\\\nextension=bcmath.so \\n\\\nextension=calendar.so \\n\\\nextension=exif.so \\n\\\nextension=ftp.so \\n\\\nextension=gd.so \\n\\\nextension=gettext.so \\n\\\nextension=intl.so \\n\\\nextension=mbstring.so \\n\\\nextension=pcntl.so \\n\\\nextension=shmop.so \\n\\\nextension=soap.so \\n\\\nextension=sqlite3.so \\n\\\nextension=pdo_sqlite.so \\n\\\nextension=xmlrpc.so \\n\\\nextension=xsl.so\\n\\\n\" >> /app/.heroku/php/etc/php/php.ini\n\n# Install Composer\nRUN curl --silent --location \"https://lang-php.s3.amazonaws.com/dist-cedar-14-master/composer-1.0.0alpha11.tar.gz\" | tar xz -C /app/.heroku/php\n\n# copy dep files first so Docker caches the install step if they don't change\nONBUILD COPY composer.lock /app/user/\nONBUILD COPY composer.json /app/user/\n# run install but without scripts as we don't have the app source yet\nONBUILD RUN composer install --no-scripts\n# require the buildpack for execution\nONBUILD RUN composer show --installed heroku/heroku-buildpack-php || { echo 'Your composer.json must have \"heroku/heroku-buildpack-php\" as a \"require-dev\" dependency.'; exit 1; }\n# rest of app\nONBUILD ADD . /app/user/\n# run install hooks\nONBUILD RUN cat composer.json | python -c 'import sys,json; sys.exit(\"post-install-cmd\" not in json.load(sys.stdin).get(\"scripts\", {}));' && composer run-script post-install-cmd || true\n\n# TODO: run \"composer compile\", like Heroku?\n\n# ENTRYPOINT [\"/usr/bin/init.sh\"]",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "mkdir -p /app/.heroku/php /app/.profile.d",
      "curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-14-master/apache-$HTTPD_VERSION.tar.gz | tar xz -C /app/.heroku/php",
      "curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/apache2/httpd.conf.default > /app/.heroku/php/etc/apache2/httpd.conf",
      "echo \"\\nGroup root\\n\" >> /app/.heroku/php/etc/apache2/httpd.conf",
      "curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-14-master/nginx-$NGINX_VERSION.tar.gz | tar xz -C /app/.heroku/php",
      "curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/nginx/nginx.conf.default > /app/.heroku/php/etc/nginx/nginx.conf",
      "echo \"\\nuser nobody root;\\n\" >> /app/.heroku/php/etc/nginx/nginx.conf",
      "curl --silent --location https://lang-php.s3.amazonaws.com/dist-cedar-14-master/php-$PHP_VERSION.tar.gz | tar xz -C /app/.heroku/php",
      "mkdir -p /app/.heroku/php/etc/php/conf.d",
      "curl --silent --location https://raw.githubusercontent.com/heroku/heroku-buildpack-php/5a770b914549cf2a897cbbaf379eb5adf410d464/conf/php/php.ini > /app/.heroku/php/etc/php/php.ini",
      "echo \"\\nuser_ini.cache_ttl = 30 \\nzend_extension = opcache.so \\nopcache.enable_cli = 1 \\nopcache.validate_timestamps = 1 \\nopcache.revalidate_freq = 0 \\nopcache.fast_shutdown = 0 \\nextension=bcmath.so \\nextension=calendar.so \\nextension=exif.so \\nextension=ftp.so \\nextension=gd.so \\nextension=gettext.so \\nextension=intl.so \\nextension=mbstring.so \\nextension=pcntl.so \\nextension=shmop.so \\nextension=soap.so \\nextension=sqlite3.so \\nextension=pdo_sqlite.so \\nextension=xmlrpc.so \\nextension=xsl.so\\n\" >> /app/.heroku/php/etc/php/php.ini",
      "curl --silent --location \"https://lang-php.s3.amazonaws.com/dist-cedar-14-master/composer-1.0.0alpha11.tar.gz\" | tar xz -C /app/.heroku/php"
    ],
    "workdir": [
      "/app/user"
    ],
    "from": "heroku/cedar:14",
    "env": {
      "PORT": "3000",
      "PHP_VERSION": "5.6.15",
      "HTTPD_VERSION": "2.4.17",
      "NGINX_VERSION": "1.8.0",
      "PATH": "/app/.heroku/php/bin:/app/.heroku/php/sbin:$PATH"
    },
    "onbuild": "RUN cat composer.json | python -c 'import sys,json; sys.exit(\"post-install-cmd\" not in json.load(sys.stdin).get(\"scripts\", {}));' && composer run-script post-install-cmd || true"
  },
  "source_repository_url": "https://github.com/heroku/docker-php.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/heroku/docker-php",
  "docker_repository": "heroku/php",
  "docker_image": "heroku/php",
  "parameters_schema": {
    "PORT": {
      "default": "3000",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PHP_VERSION": {
      "default": "5.6.15",
      "type": "string",
      "mapping": "environment_variable"
    },
    "HTTPD_VERSION": {
      "default": "2.4.17",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NGINX_VERSION": {
      "default": "1.8.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/app/.heroku/php/bin:/app/.heroku/php/sbin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "heroku/php",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/heroku/php",
    "https://hub.docker.com/v2/repositories/heroku/php",
    "https://github.com/heroku/docker-php.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Middleware/Runtime/PHP"
  ],
  "info_url": "https://hub.docker.com/r/heroku/php",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}