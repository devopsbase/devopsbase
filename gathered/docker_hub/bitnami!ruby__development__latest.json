{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/bitnami/ruby",
    "repository_url": "https://hub.docker.com/v2/repositories/bitnami/ruby",
    "tags_url": "https://hub.docker.com/v2/repositories/bitnami/ruby/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/bitnami/ruby/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/bitnami/ruby/autobuild",
    "user": "bitnami",
    "name": "ruby",
    "namespace": "bitnami",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 8,
    "pull_count": 2714,
    "last_updated": "2016-10-17T12:01:55.150010Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "development",
        "full_size": 169152869,
        "id": 221607,
        "repository": 230166,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-10-17T12:01:54.588804Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "_",
        "full_size": 169146371,
        "id": 5450892,
        "repository": 230166,
        "creator": 342683,
        "last_updater": 342683,
        "last_updated": "2016-10-17T08:38:41.853746Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "latest",
        "full_size": 169149377,
        "id": 387747,
        "repository": 230166,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-24T00:39:41.235624Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.3.1-r3",
        "full_size": 169149280,
        "id": 5043943,
        "repository": 230166,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-24T00:35:58.179752Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.3.1-r0",
        "full_size": 158688106,
        "id": 4612199,
        "repository": 230166,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-08-31T21:25:54.444316Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.3.1-r1",
        "full_size": 158913062,
        "id": 4611579,
        "repository": 230166,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-08-31T20:55:59.906245Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.3.1-r2",
        "full_size": 166261768,
        "id": 4611196,
        "repository": 230166,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-08-31T20:37:27.396682Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.3.0-0",
        "full_size": 178684696,
        "id": 2795150,
        "repository": 230166,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-04-26T14:54:54.312852Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "2.2.4-0-r01",
        "full_size": 177607128,
        "id": 2048028,
        "repository": 230166,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-02-18T19:13:00.648459Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "2.2.4-0",
        "full_size": 153944221,
        "id": 1601660,
        "repository": 230166,
        "creator": 448179,
        "last_updater": 563305,
        "last_updated": "2015-12-21T18:26:18.300140Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "bitnami/bitnami-docker-ruby"
  },
  "name": "bitnami/ruby Docker container",
  "description": "Bitnami Ruby Docker Image",
  "readme": "[![CircleCI](https://circleci.com/gh/bitnami/bitnami-docker-ruby/tree/master.svg?style=shield)](https://circleci.com/gh/bitnami/bitnami-docker-ruby/tree/master)\n[![Docker Hub Automated Build](http://container.checkforupdates.com/badges/bitnami/ruby)](https://hub.docker.com/r/bitnami/ruby/)\n\n# What is Ruby?\n\n> Ruby is a dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write.\n\n[ruby-lang.org](https://www.ruby-lang.org/en/)\n\n# TLDR\n\n```bash\ndocker run -it --name ruby bitnami/ruby:latest\n```\n\n## Docker Compose\n\n```\nruby:\n  image: bitnami/ruby:latest\n  command: ruby script.rb\n  volumes:\n    - .:/app\n```\n\n# Get this image\n\nThe recommended way to get the Bitnami Ruby Docker Image is to pull the prebuilt image from the [Docker Hub Registry](https://hub.docker.com/r/bitnami/ruby).\n\n```bash\ndocker pull bitnami/ruby:latest\n```\n\nTo use a specific version, you can pull a versioned tag. You can view the [list of available versions](https://hub.docker.com/r/bitnami/ruby/tags/) in the Docker Hub Registry.\n\n```bash\ndocker pull bitnami/ruby:[TAG]\n```\n\nIf you wish, you can also build the image yourself.\n\n```bash\ndocker build -t bitnami/ruby:latest https://github.com/bitnami/bitnami-docker-ruby.git\n```\n\n# Entering the REPL\n\nBy default, running this image will drop you into the Ruby REPL (`irb`), where you can interactively test and try things out in Ruby.\n\n```bash\ndocker run -it --name ruby bitnami/ruby:latest\n```\n\n**Further Reading:**\n\n  - [Ruby IRB Documentation](http://ruby-doc.org/stdlib-2.0.0/libdoc/irb/rdoc/IRB.html)\n\n# Running your Ruby script\n\nThe default work directory for the Ruby image is `/app`. You can mount a folder from your host here that includes your Ruby script, and run it normally using the `ruby` command.\n\n```bash\ndocker run -it --name ruby -v /path/to/app:/app bitnami/ruby:latest \\\n  ruby script.rb\n```\n\n# Running a Ruby app with gems\n\nIf your Ruby app has a `Gemfile` defining your app's dependencies and start script, you can install the dependencies before running your app.\n\n```bash\ndocker run -it --name ruby -v /path/to/app:/app bitnami/ruby:latest \\\n  sh -c \"bundle install && ruby script.rb\"\n```\n\nor using Docker Compose:\n\n```\nruby:\n  image: bitnami/ruby:latest\n  command: \"sh -c 'bundle install && ruby script.rb'\"\n  volumes:\n    - .:/app\n```\n\n**Further Reading:**\n\n  - [rubygems.org](https://rubygems.org/)\n  - [bundler.io](http://bundler.io/)\n\n# Accessing a Ruby app running a web server\n\nThis image exposes port `3000` in the container, so you should ensure that your web server is binding to port `3000`, as well as listening on `0.0.0.0` to accept remote connections from your host.\n\nBelow is an example of a [Sinatra](http://www.sinatrarb.com/) app listening to remote connections on port `3000`:\n\n```\nrequire 'sinatra'\n\nset :bind, '0.0.0.0'\nset :port, 3000\n\nget '/hi' do\n  \"Hello World!\"\nend\n```\n\nTo access your web server from your host machine you can ask Docker to map a random port on your host to port `3000` inside the container.\n\n```bash\ndocker run -it --name ruby -P bitnami/ruby:latest\n```\n\nRun `docker port` to determine the random port Docker assigned.\n\n```bash\n$ docker port ruby\n3000/tcp -> 0.0.0.0:32769\n```\n\nYou can also manually specify the port you want forwarded from your host to the container.\n\n```bash\ndocker run -it --name ruby -p 8080:3000 bitnami/ruby:latest\n```\n\nAccess your web server in the browser by navigating to [http://localhost:8080](http://localhost:8080/).\n\n# Linking\n\nIf you want to connect to your Ruby web server inside another container, you can use the linking system provided by Docker.\n\n## Serving your Ruby app through an nginx frontend\n\nWe may want to make our Ruby web server only accessible via an nginx web server. Doing so will allow us to setup more complex configuration, serve static assets using nginx, load balance to different Ruby instances, etc.\n\n### Step 1: Create a virtual host\n\nLet's create an nginx virtual host to reverse proxy to our Ruby container.\n\n```\nserver {\n    listen 0.0.0.0:80;\n    server_name yourapp.com;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header HOST $http_host;\n        proxy_set_header X-NginX-Proxy true;\n\n        # proxy_pass http://[your_ruby_container_link_alias]:3000;\n        proxy_pass http://yourapp:3000;\n        proxy_redirect off;\n    }\n}\n```\n\nNotice we've substituted the link alias name `yourapp`, we will use the same name when creating the link.\n\nCopy the virtual host above, saving the file somewhere on your host. We will mount it as a volume in our nginx container.\n\n### Step 2: Run the Ruby image with a specific name\n\nDocker's linking system uses container ids or names to reference containers. We can explicitly specify a name for our Ruby server to make it easier to connect to other containers.\n\n```\ndocker run -it --name ruby -v /path/to/app:/app bitnami/ruby:latest ruby script.rb\n```\n\nor using Docker Compose:\n\n```\nruby:\n  image: bitnami/ruby:latest\n  command: ruby script.rb\n  volumes:\n    - .:/app\n```\n\n### Step 3: Run the nginx image and link it to the Ruby server\n\nNow that we have our Ruby server running, we can create another container that links to it by giving Docker the `--link` option. This option takes the id or name of the container we want to link it to as well as a hostname to use inside the container, separated by a colon. For example, to have our Ruby server accessible in another container with `yourapp` as it's hostname we would pass `--link ruby:yourapp` to the Docker run command.\n\n```bash\ndocker run -it -v /path/to/vhost.conf:/bitnami/nginx/conf/vhosts/yourapp.conf \\\n  --link ruby:yourapp \\\n  bitnami/nginx:latest\n```\n\nor using Docker Compose:\n\n```\nnginx:\n  image: bitnami/nginx:latest\n  links:\n    - ruby:yourapp\n  volumes:\n    - /path/to/vhost.conf:/bitnami/nginx/conf/vhosts/yourapp.conf\n```\n\nWe started the nginx server, mounting the virtual host we created in [Step 1](#step-1-create-a-virtual-host), and created a link to the Ruby server with the alias `yourapp`.\n\n# Maintenance\n\n## Upgrade this image\n\nBitnami provides up-to-date versions of Ruby, including security patches, soon after they are made upstream. We recommend that you follow these steps to upgrade your container.\n\n### Step 1: Get the updated image\n\n```bash\ndocker pull bitnami/ruby:latest\n```\n\nor if you're using Docker Compose, update the value of the image property to `bitnami/ruby:latest`.\n\n### Step 2: Remove the currently running container\n\n```bash\ndocker rm -v ruby\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose rm -v ruby\n```\n\n### Step 3: Run the new image\n\nRe-create your container from the new image.\n\n```bash\ndocker run --name ruby bitnami/ruby:latest\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose start ruby\n```\n\n# Testing\n\nThis image is tested for expected runtime behavior, using the [Bats](https://github.com/sstephenson/bats) testing framework. You can run the tests on your machine using the `bats` command.\n\n```\nbats test.sh\n```\n\n# Notable Changes\n\n## 2.3.1-r0 (2016-05-11)\n- Commands are now executed as the `root` user. Use the `--user` argument to switch to another user or change to the required user using `sudo` to launch applications. Alternatively, as of Docker 1.10 User Namespaces are supported by the docker daemon. Refer to the [daemon user namespace options](https://docs.docker.com/engine/reference/commandline/daemon/#daemon-user-namespace-options) for more details.\n\n## 2.2.3-0-r02 (2015-09-30)\n\n- `/app` directory no longer exported as a volume. This caused problems when building on top of the image, since changes in the volume were not persisted between RUN commands. To keep the previous behavior (so that you can mount the volume in another container), create the container with the `-v /app` option.\n\n## 2.2.3-0-r01 (2015-08-26)\n\n- Permissions fixed so `bitnami` user can install gems without needing `sudo`.\n\n# Contributing\n\nWe'd love for you to contribute to this Docker image. You can request new features by creating an [issue](https://github.com/bitnami/bitnami-docker-ruby/issues), or submit a [pull request](https://github.com/bitnami/bitnami-docker-ruby/pulls) with your contribution.\n\n# Issues\n\nIf you encountered a problem running this container, you can file an [issue](https://github.com/bitnami/bitnami-docker-ruby/issues). For us to provide better support, be sure to include the following information in your issue:\n\n- Host OS and version\n- Docker version (`docker version`)\n- Output of `docker info`\n- Version of this container (`echo $BITNAMI_IMAGE_VERSION` inside the container)\n- The command you used to run the container, and any relevant output you saw (masking any sensitive information)\n\n# License\nCopyright (c) 2015-2016 Bitnami\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "dockerfile": "## BUILDING\n##   (from project root directory)\n##   $ docker build -t ruby-for-bitnami-bitnami-docker-ruby .\n##\n## RUNNING\n##   $ docker run -p 3000:3000 ruby-for-bitnami-bitnami-docker-ruby\n##\n## CONNECTING\n##   Lookup the IP of your active docker host using:\n##     $ docker-machine ip $(docker-machine active)\n##   Connect to the container at DOCKER_IP:3000\n##     replacing DOCKER_IP for the IP of your active docker host\n\nFROM gcr.io/stacksmith-images/ubuntu-buildpack:14.04-r10\n\nMAINTAINER Bitnami <containers@bitnami.com>\n\nENV STACKSMITH_STACK_ID=\"aq2un49\" \\\n    STACKSMITH_STACK_NAME=\"Ruby for bitnami/bitnami-docker-ruby\" \\\n    STACKSMITH_STACK_PRIVATE=\"1\"\n\nRUN bitnami-pkg install ruby-2.3.1-2 --checksum 041625b9f363a99b2e66f0209a759abe7106232e0fcc3a970958bf73d5a4d9b0\n\nENV PATH=/opt/bitnami/ruby/bin:$PATH\n\n## STACKSMITH-END: Modifications below this line will be unchanged when regenerating\n\nRUN bitnami-pkg install imagemagick-6.7.5-10-3 --checksum 617e85a42c80f58c568f9bc7337e24c03e35cf4c7c22640407a7e1e16880cf88\nRUN bitnami-pkg install mysql-libraries-10.1.13-0 --checksum 71ca428b619901123493503f8a99ccfa588e5afddd26e0d503a32cca1bc2a389\nRUN bitnami-pkg install postgresql-libraries-9.5.3-0 --checksum d6499811161e9e97acfc3e0132a016bc2edcfd85374c9b5002359429bd8ab698\n\nENV BITNAMI_APP_NAME=ruby \\\n    BITNAMI_IMAGE_VERSION=2.3.1-r3\n\nEXPOSE 3000\nWORKDIR /app\n\nCMD [\"irb\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      3000
    ],
    "volume": [],
    "run": [
      "bitnami-pkg install ruby-2.3.1-2 --checksum 041625b9f363a99b2e66f0209a759abe7106232e0fcc3a970958bf73d5a4d9b0",
      "bitnami-pkg install imagemagick-6.7.5-10-3 --checksum 617e85a42c80f58c568f9bc7337e24c03e35cf4c7c22640407a7e1e16880cf88",
      "bitnami-pkg install mysql-libraries-10.1.13-0 --checksum 71ca428b619901123493503f8a99ccfa588e5afddd26e0d503a32cca1bc2a389",
      "bitnami-pkg install postgresql-libraries-9.5.3-0 --checksum d6499811161e9e97acfc3e0132a016bc2edcfd85374c9b5002359429bd8ab698"
    ],
    "workdir": [
      "/app"
    ],
    "from": "gcr.io/stacksmith-images/ubuntu-buildpack:14.04-r10",
    "maintainer": "Bitnami <containers@bitnami.com>",
    "env": {
      "STACKSMITH_STACK_ID": "\"aq2un49\"",
      "": "",
      "STACKSMITH_STACK_NAME": "\"Ruby",
      "for": "bitnami/bitnami-docker-ruby\"",
      "STACKSMITH_STACK_PRIVATE": "\"1\"",
      "PATH": "/opt/bitnami/ruby/bin:$PATH",
      "BITNAMI_APP_NAME": "ruby",
      "BITNAMI_IMAGE_VERSION": "2.3.1-r3"
    },
    "cmd": "[\"irb\"]"
  },
  "source_repository_url": "https://github.com/bitnami/bitnami-docker-ruby.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/bitnami/bitnami-docker-ruby",
  "docker_repository": "bitnami/ruby",
  "docker_image": "bitnami/ruby",
  "parameters_schema": {
    "STACKSMITH_STACK_ID": {
      "default": "\"aq2un49\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "STACKSMITH_STACK_NAME": {
      "default": "\"Ruby",
      "type": "string",
      "mapping": "environment_variable"
    },
    "for": {
      "default": "bitnami/bitnami-docker-ruby\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "STACKSMITH_STACK_PRIVATE": {
      "default": "\"1\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/opt/bitnami/ruby/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_APP_NAME": {
      "default": "ruby",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_IMAGE_VERSION": {
      "default": "2.3.1-r3",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        3000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "bitnami/ruby",
  "revision": "development",
  "uris": [
    "https://hub.docker.com/r/bitnami/ruby",
    "https://hub.docker.com/v2/repositories/bitnami/ruby",
    "https://github.com/bitnami/bitnami-docker-ruby.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Ruby",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Image/Container Image/Docker Image"
  ],
  "info_url": "https://hub.docker.com/r/bitnami/ruby",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}