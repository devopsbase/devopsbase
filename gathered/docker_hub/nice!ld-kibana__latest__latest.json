{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/nice/ld-kibana",
    "repository_url": "https://hub.docker.com/v2/repositories/nice/ld-kibana",
    "tags_url": "https://hub.docker.com/v2/repositories/nice/ld-kibana/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/nice/ld-kibana/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/nice/ld-kibana/autobuild",
    "user": "nice",
    "name": "ld-kibana",
    "namespace": "nice",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 377,
    "last_updated": "2016-04-26T18:44:17.947307Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 17248811,
        "id": 949685,
        "repository": 329935,
        "creator": 370978,
        "last_updater": 192528,
        "last_updated": "2016-04-26T18:44:16.582336Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "nhsevidence/ld-mimir"
  },
  "name": "nice/ld-kibana Docker container",
  "description": "Kibana infrastructure component for NICE knowledge base project",
  "readme": "# Mimir, an environment for semantic content production\n\nThis is a component part of the [knowledge base quality standards project](https://github.com/nhsevidence/ld-kb-qs)\n\n# To develop against Mimir - \n\nDue to [inotify](https://github.com/c4milo/node-inotify) being a linux/gnu file system monitoring tool, if you are on OSX or Windows,\nyou should develop against this inside of nice/ld-docker-build.\n\nTo do this follow the below -\n\nNavigate to your clone of [ld-docker-build](https://github.com/nhsevidence/ld-docker-build).\n\n``` docker build -t mimir/build . ```\n\nNavigate to your clone of [ld-mimir](https://github.com/nhsevidence/ld-mimir)\n\n```\ndocker rm build; docker run -i -t --name build -p 8334:80 -p 8335:8335 -v $(pwd)/src/owldin:/src/owldin -v $(pwd)/src/owldin:/tmp -v $(pwd)/../ld-content:/git mimir/build\n```\n\nYou can now shell into the mimir/build container by running the following -\n\n```docker exec -it build bash``` and navigate to ```/src/owldin/``` \n\nExport the following Env variables \n\n```\nexport PROJECT_DIR=\"/git\"\nexport MIMIR_PORT=80\n\nexport ARTIFACTS_DIR=\"/artifacts\"\nexport CONTENT_DIR=\"/git\"\nexport DBNAME=\"nice\"\nexport ES_INDEX_NAME=\"kb\"\n\n```\n\nand then run ```./install.sh```\n\n# Uses components:\n* [git2prov](https://github.com/nhsevidence/ld-git2prov) (git to RDF provenance generator)\n* [freya](https://github.com/nhsevidence/ld-freya) (HTML and document generation, semantic annotation extractor)\n \n",
  "dockerfile": "FROM alpine:3.1\n\nENV KIBANA_VERSION 4.0.2\n\nRUN apk add --update nodejs curl && \\\n    curl -LO https://download.elastic.co/kibana/kibana/kibana-${KIBANA_VERSION}-linux-x64.tar.gz && \\\n    tar xzf /kibana-${KIBANA_VERSION}-linux-x64.tar.gz -C / && \\\n    rm /kibana-${KIBANA_VERSION}-linux-x64/node/bin/node && \\\n    rm /kibana-${KIBANA_VERSION}-linux-x64/node/bin/npm && \\\n    ln -s /usr/bin/node /kibana-${KIBANA_VERSION}-linux-x64/node/bin/node && \\\n    ln -s /usr/bin/npm /kibana-${KIBANA_VERSION}-linux-x64/node/bin/npm && \\\n    sed -i '/elasticsearch_url/s/localhost/elastic/' /kibana-${KIBANA_VERSION}-linux-x64/config/kibana.yml && \\\n    rm -rf /var/cache/apk/* /kibana-${KIBANA_VERSION}-linux-x64.tar.gz\n\nEXPOSE 5601\n\nCMD [\"/kibana-4.0.2-linux-x64/bin/kibana\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      5601
    ],
    "volume": [],
    "run": [
      "apk add --update nodejs curl &&     curl -LO https://download.elastic.co/kibana/kibana/kibana-${KIBANA_VERSION}-linux-x64.tar.gz &&     tar xzf /kibana-${KIBANA_VERSION}-linux-x64.tar.gz -C / &&     rm /kibana-${KIBANA_VERSION}-linux-x64/node/bin/node &&     rm /kibana-${KIBANA_VERSION}-linux-x64/node/bin/npm &&     ln -s /usr/bin/node /kibana-${KIBANA_VERSION}-linux-x64/node/bin/node &&     ln -s /usr/bin/npm /kibana-${KIBANA_VERSION}-linux-x64/node/bin/npm &&     sed -i '/elasticsearch_url/s/localhost/elastic/' /kibana-${KIBANA_VERSION}-linux-x64/config/kibana.yml &&     rm -rf /var/cache/apk/* /kibana-${KIBANA_VERSION}-linux-x64.tar.gz"
    ],
    "workdir": [],
    "from": "alpine:3.1",
    "env": {
      "KIBANA_VERSION": "4.0.2"
    },
    "cmd": "[\"/kibana-4.0.2-linux-x64/bin/kibana\"]"
  },
  "source_repository_url": "https://github.com/nhsevidence/ld-mimir.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/nhsevidence/ld-mimir",
  "docker_repository": "nice/ld-kibana",
  "docker_image": "nice/ld-kibana",
  "parameters_schema": {
    "KIBANA_VERSION": {
      "default": "4.0.2",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        5601
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "nice/ld-kibana",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/nice/ld-kibana",
    "https://hub.docker.com/v2/repositories/nice/ld-kibana",
    "https://github.com/nhsevidence/ld-mimir.git"
  ],
  "labels": [
    "Docker",
    "Type/Infrastructure"
  ],
  "info_url": "https://hub.docker.com/r/nice/ld-kibana",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}