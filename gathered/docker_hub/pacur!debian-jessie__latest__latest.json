{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/pacur/debian-jessie",
    "repository_url": "https://hub.docker.com/v2/repositories/pacur/debian-jessie",
    "tags_url": "https://hub.docker.com/v2/repositories/pacur/debian-jessie/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/pacur/debian-jessie/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/pacur/debian-jessie/autobuild",
    "user": "pacur",
    "name": "debian-jessie",
    "namespace": "pacur",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 533,
    "last_updated": "2016-08-13T21:00:50.526180Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 396786089,
        "id": 634619,
        "repository": 265932,
        "creator": 134427,
        "last_updater": 375188,
        "last_updated": "2016-08-13T21:00:50.026570Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "pacur/pacur"
  },
  "name": "pacur/debian-jessie Docker container",
  "description": "Pacur Debian Jessie",
  "readme": "[![pacur](https://raw.githubusercontent.com/pacur/pacur-artwork/master/pacur.png)](http://pacur.org)\n\n# pacur: simple packaging\n\n[![Docker Repository](https://img.shields.io/badge/docker-archlinux-1794d1.svg?style=flat \"Docker Repository\")](https://registry.hub.docker\n.com/u/pacur/archlinux/)\n\n\n[![Docker Repository](https://img.shields.io/badge/docker-centos--6-10233f.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/centos-6/)\n[![Docker Repository](https://img.shields.io/badge/docker-centos--7-10233f.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/centos-7/)\n\n\n[![Docker Repository](https://img.shields.io/badge/docker-debian--wheezy-d70a53.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/debian-wheezy/)\n[![Docker Repository](https://img.shields.io/badge/docker-debian--jessie-d70a53.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/debian-jessie/)\n\n\n[![Docker Repository](https://img.shields.io/badge/docker-fedora--21-294172.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/fedora-21/)\n[![Docker Repository](https://img.shields.io/badge/docker-fedora--22-294172.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/fedora-22/)\n[![Docker Repository](https://img.shields.io/badge/docker-fedora--23-294172.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/fedora-23/)\n[![Docker Repository](https://img.shields.io/badge/docker-fedora--24-294172.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/fedora-24/)\n\n\n[![Docker Repository](https://img.shields.io/badge/docker-ubuntu--precise-dd4814.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/ubuntu-precise/)\n[![Docker Repository](https://img.shields.io/badge/docker-ubuntu--trusty-dd4814.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/ubuntu-trusty/)\n[![Docker Repository](https://img.shields.io/badge/docker-ubuntu--xenial-dd4814.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/ubuntu-xenial/)\n[![Docker Repository](https://img.shields.io/badge/docker-ubuntu--yakkety-dd4814.svg?style=flat \"Docker Repository\")](https://registry.hub.docker.com/u/pacur/ubuntu-yakkety/)\n\nPacur allows building packages for multiple linux distributions with a\nconsistent package spec format. Currently `deb`, `rpm` and `pacman` packages\nare available for several linux distributions. Builds are done on Docker\ncontainers without needing to setup any virtual machines or install any\nsoftware other then Docker. All packages are built using a simple format that\nis similar to [PKGBUILD](https://wiki.archlinux.org/index.php/PKGBUILD) from\nArchLinux. Each distribution is different and will still require different\nbuild instructions but a consistent build process and format can be used for\nall builds. Docker only supports 64 bit containers, pacur can't be used to\nbuild packages 32 bit packages. Pacur will also create a `deb`, `rpm` and\n`pacman` signed repository that can be used on ArchLinux, CentOS, Fedora,\nDebian and Ubuntu to distribute the packages. A\n[tutorial](https://medium.com/@zachhuff386/pacur-tutorial-9848b774c84a)\non creating a project is aviaible on medium.\n\n### format\n\n```\nkey=\"example string\"\nkey=`example \"quoted\" string`\nkey=(\"list with one element\")\nkey=(\n    \"list with\"\n    \"multiple elements\"\n)\nkey=\"example ${variable} string\"\nkey:ubuntu=\"this will apply only to ubuntu builds\"\n```\n\n### builtin variables\n\n| key | value |\n| --- | ----- |\n| `${srcdir}` | `Source` directory where all sources are downloaded and extracted |\n| `${pkgdir}` | `Package` directory for the root of the package |\n\n### spec\n\n| key | type | value |\n| --- | ---- | ----- |\n| `targets` | `list` | List of build targets only used for projects. Prefix a `!` to ignore target. |\n| `pkgname` | `string` | Package name |\n| `pkgver` | `string` | Package version |\n| `pkgrel` | `string` | Package release number |\n| `pkgdesc` | `string` | Short package description |\n| `pkgdesclong` | `list` | List of lines for package description |\n| `maintainer` | `string` | Package maintainer |\n| `arch` | `string` | Package architecture, can be `all` or `amd64` |\n| `license` | `list` | List of licenses for packaged software |\n| `section` | `string` | Section for package. Built in sections available:<br> `admin`<br> `localization`<br> `mail`<br> `comm`<br> `math`<br> `database`<br> `misc`<br> `debug`<br> `net`<br> `news`<br> `devel`<br> `doc`<br> `editors`<br> `electronics`<br> `embedded`<br> `fonts`<br> `games`<br> `science`<br> `shells`<br> `sound`<br> `graphics`<br> `text`<br> `httpd`<br> `vcs`<br> `interpreters`<br> `video`<br> `web`<br> `kernel`<br> `x11`<br> `libdevel`<br> `libs` |\n| `priority` | `string` | Package priority, only used for debian packages |\n| `url` | `string` | Package url |\n| `depends` | `list` | List of package dependencies |\n| `optdepends` | `list` | List of package optional dependencies |\n| `makedepends` | `list` | List of package build dependencies |\n| `provides` | `list` | List of packages provided |\n| `conflicts` | `list` | List of packages conflicts |\n| `sources` | `list` | List of packages sources. Sources can be url or paths that are relative to the PKGBUILD |\n| `hashsums` | `list` | List of `md5`/`sha1`/`sha256`/`sha512` hex hashes for sources, hash type is determined by the length of the hash. Use `skip` to ignore hash check |\n| `backup` | `list` | List of config files that shouldn't be overwritten on upgrades |\n| `build` | `func` | Function to build the source, starts in srcdir |\n| `package` | `func` | Function to package the source into the pkgdir, starts in srcdir |\n| `preinst` | `func` | Function to run before installing |\n| `postinst` | `func` | Function to run after installing |\n| `prerm` | `func` | Function to run before removing |\n| `postrm` | `func` | Function to run after removing |\n\n### build targets\n\n| target | value |\n| ------ | ----- |\n| `archlinux` | All archlinux releases |\n| `centos` | All centos releases |\n| `debian` | All debian releases |\n| `fedora` | All fedora releases |\n| `ubuntu` | All ubuntu releases |\n| `centos-6` | Centos 6 |\n| `centos-7` | Centos 7 |\n| `debian-wheezy` | Debian wheezy |\n| `debian-jessie` | Debian jessie |\n| `fedora-21` | Fedora 21 |\n| `fedora-22` | Fedora 22 |\n| `fedora-23` | Fedora 23 |\n| `fedora-24` | Fedora 24 |\n| `ubuntu-precise` | Ubuntu precise |\n| `ubuntu-trusty` | Ubuntu trusty |\n| `ubuntu-xenial` | Ubuntu xenial |\n| `ubuntu-yakkety` | Ubuntu yakkety |\n\n### directives\n\n| directive | value |\n| --------- | ----- |\n| `apt` | All deb packages |\n| `pacman` | All pkg packages |\n| `yum` | All rpm packages |\n| `archlinux` | All archlinux releases |\n| `centos` | All centos releases |\n| `debian` | All debian releases |\n| `fedora` | All fedora releases |\n| `ubuntu` | All ubuntu releases |\n| `centos-6` | Centos 6 |\n| `centos-7` | Centos 7 |\n| `debian-wheezy` | Debian wheezy |\n| `debian-jessie` | Debian jessie |\n| `fedora-21` | Fedora 21 |\n| `fedora-22` | Fedora 22 |\n| `fedora-23` | Fedora 23 |\n| `fedora-24` | Fedora 24 |\n| `ubuntu-precise` | Ubuntu precise |\n| `ubuntu-trusty` | Ubuntu trusty |\n| `ubuntu-xenial` | Ubuntu xenial |\n| `ubuntu-yakkety` | Ubuntu yakkety |\n\nDirectives are used to specify variables that only apply to a limited set of\nbuild targets. All variables can use directives including user definied\nvariables. To use directives include the directive after a\nvariable seperated by a colon such as\n`pkgdesc:ubuntu=\"This description will only apply to Ubuntu packages\"`\nThe directives above are sorted lowest to highest priority.\n\n### example\n\nFirst create a directory for the PKGBUILD file. This directory should only\ncontain the PKGBUILD file and any other files needed such as patches. Then\ncreate a PKGBUILD the package directory. After creating the PKGBUILD build\nthe package with docker.\n\n```\n$ mkdir httpserver\n$ cd httpserver\n$ nano PKGBUILD\n$ docker run --rm -t -v `pwd`:/pacur pacur/ubuntu-trusty\n```\n\n```\ntargets=(\n    \"!centos-6\"\n    \"!fedora-21\"\n    \"!fedora-22\"\n    \"archlinux\"\n    \"centos\"\n    \"debian\"\n    \"fedora\"\n    \"ubuntu\"\n)\npkgname=\"httpserver\"\npkgver=\"1.0\"\npkgrel=\"1\"\npkgdesc=\"Http file server written with Go\"\npkgdesc:centos=\"Http file server written with Go for CentOS\"\npkgdesc:debian=\"Http file server written with Go for Debian\"\npkgdesc:fedora=\"Http file server written with Go for Fedora\"\npkgdesc:ubuntu=\"Http file server written with Go for Ubuntu\"\npkgdesclong=(\n    \"Quick http file server written with Go\"\n    \"using directory listing similar to apache\"\n)\nmaintainer=\"Example <example@pacur.org>\"\narch=\"all\"\nlicense=(\"GPLv3\")\nsection=\"utils\"\npriority=\"optional\"\nurl=\"https://github.com/pacur/${pkgname}\"\nsources=(\n    \"${url}/archive/${pkgver}.tar.gz\"\n)\nhashsums=(\n    \"3548e1263a931b27970e190f04b74623\"\n)\n\nbuild() {\n    mkdir -p \"go/src\"\n    export GOPATH=\"${srcdir}/go\"\n    mv \"${pkgname}-${pkgver}\" \"go/src\"\n    cd \"go/src/${pkgname}-${pkgver}\"\n    go get\n    go build -a\n}\n\npackage() {\n    cd \"${srcdir}/go/src/${pkgname}-${pkgver}\"\n    mkdir -p \"${pkgdir}/usr/bin\"\n    cp ${pkgname}-${pkgver} ${pkgdir}/usr/bin/${pkgname}\n}\n```\n\n### project example\n\nA project can be created with the cli tools which can be installed using\ngo get. The packages can be built and added to the repo. An example project is\navailable in the example directory. The `pull` command should be run before\nall builds to update the docker images used for builds.\n\n```\n$ go get github.com/pacur/pacur\n$ cd example\n$ pacur pull\n$ pacur project init\n$ pacur project build\n$ pacur project repo\n$ go get github.com/pacur/httpserver\n$ cd mirror\n$ httpserver --port 80\n```\n\nAfter the repo has been created and is hosted on a server the following\ncommands can be used to add the repo to the package manager for yum and apt.\nFor the debian repo the `jessie` should be replaced with the debian/ubuntu\nrelease name. The `pacur` repo name and filenames can be change to suite the\nname of your software.\n\n```\n$ nano /etc/pacman.conf\n[pacur]\nServer = http://HTTP_SERVER_IP/arch\n\n$ pacman-key --keyserver hkp://pgp.mit.edu -r KEYID\n$ pacman-key --lsign-key KEYID\n$ pacman -Sy\n$ pacman -S httpserver\n```\n\n```\n$ nano /etc/yum.repos.d/pacur.repo\n[pacur]\nname=Pacur Repository\nbaseurl=http://HTTP_SERVER_IP/yum/centos/7/\ngpgcheck=1\nenabled=1\n\n$ gpg --keyserver hkp://pgp.mit.edu --recv-keys KEYID\n$ gpg --armor --export KEYID > key.tmp; rpm --import key.tmp; rm -f key.tmp\n$ yum install httpserver\n```\n\n```\n$ nano /etc/apt/sources.list.d/pacur.list\ndeb http://HTTP_SERVER_IP/apt jessie main\n\n$ apt-key adv --keyserver hkp://pgp.mit.edu --recv KEYID\n$ apt-get update\n$ apt-get install httpserver\n```\n\n### signing\n\nPackages in the repository can also be signed by adding a `sign.key` in the\nproject directory. The signing key cannot use a passphrase. To export a key\nfirst get the key id then export the key with the commands below.\n\n```\n$ gpg --list-secret-keys\n$ gpg -a --export-secret-keys KEYID > sign.key\n```\n\n### generate key\n\nA pacur docker container is available to generate signing keys. A key can be\ngenerated by first pulling the genkey container then running the container in\nthe project directory. This will generate a `sign.key` and `sign.pub` the\npublic key will need to be uploaded to [pgp.mit.edu](https://pgp.mit.edu/)\n\n```\n$ docker pull pacur/genkey\n$ docker run --rm -v `pwd`:/pacur pacur/genkey First Last email@domain.com\n```\n",
  "dockerfile": "FROM debian:jessie\nMAINTAINER Pacur <contact@pacur.org>\n\nRUN apt-get --assume-yes update\nRUN apt-get --assume-yes upgrade\nRUN apt-get --assume-yes install build-essential reprepro rsync wget zip git bzr mercurial\n\nRUN wget https://storage.googleapis.com/golang/go1.6.3.linux-amd64.tar.gz\nRUN tar -C /usr/local -xf go1.6.3.linux-amd64.tar.gz\nRUN rm -f go1.6.3.linux-amd64.tar.gz\n\nENV GOPATH /go\nENV PATH /usr/local/go/bin:$PATH:/go/bin\n\nRUN go get github.com/pacur/pacur\n\nENTRYPOINT [\"pacur\"]\nCMD [\"build\", \"debian-jessie\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "apt-get --assume-yes update",
      "apt-get --assume-yes upgrade",
      "apt-get --assume-yes install build-essential reprepro rsync wget zip git bzr mercurial",
      "wget https://storage.googleapis.com/golang/go1.6.3.linux-amd64.tar.gz",
      "tar -C /usr/local -xf go1.6.3.linux-amd64.tar.gz",
      "rm -f go1.6.3.linux-amd64.tar.gz",
      "go get github.com/pacur/pacur"
    ],
    "workdir": [],
    "from": "debian:jessie",
    "maintainer": "Pacur <contact@pacur.org>",
    "env": {
      "GOPATH": "/go",
      "PATH": "/usr/local/go/bin:$PATH:/go/bin"
    },
    "entrypoint": "[\"pacur\"]",
    "cmd": "[\"build\", \"debian-jessie\"]"
  },
  "source_repository_url": "https://github.com/pacur/pacur.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/pacur/pacur",
  "docker_repository": "pacur/debian-jessie",
  "docker_image": "pacur/debian-jessie",
  "parameters_schema": {
    "GOPATH": {
      "default": "/go",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/usr/local/go/bin:$PATH:/go/bin",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "pacur/debian-jessie",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/pacur/debian-jessie",
    "https://hub.docker.com/v2/repositories/pacur/debian-jessie",
    "https://github.com/pacur/pacur.git"
  ],
  "labels": [
    "Docker",
    "Type/Infrastructure/Operating System/Linux/Debian"
  ],
  "info_url": "https://hub.docker.com/r/pacur/debian-jessie",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}