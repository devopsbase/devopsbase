{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/tomohiro/ruby",
    "repository_url": "https://hub.docker.com/v2/repositories/tomohiro/ruby",
    "tags_url": "https://hub.docker.com/v2/repositories/tomohiro/ruby/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/tomohiro/ruby/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/tomohiro/ruby/autobuild",
    "user": "tomohiro",
    "name": "ruby",
    "namespace": "tomohiro",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 86,
    "last_updated": "2016-09-20T06:44:33.066482Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 93853598,
        "id": 2770257,
        "repository": 652441,
        "creator": 1390,
        "last_updater": 1390,
        "last_updated": "2016-09-20T06:44:32.648577Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "Tomohiro/cluster"
  },
  "name": "tomohiro/ruby Docker container",
  "description": "Ruby onbuild images on Alpine Linux",
  "readme": "CoreOS cluster\n================================================================================\n\n\nRequirements\n--------------------------------------------------------------------------------\n\n- Ruby 2.2\n- Direnv\n- Terraform\n\n### Provider tokens\n\n- Atlas\n- Digital Ocean\n\n\nGetting Started\n--------------------------------------------------------------------------------\n\n### Create the `.envrc` to export environment variables\n\n```sh\n$ cp .envrc.example .envirc\n$ vi .envrc\n$ direnv allow\n```\n\n### Install dependency tools\n\nInstall the Digtal Ocean command-line tool:\n\n```sh\n$ bundle install --path vendor/bundle\n```\n\n### Configuration\n\nCreate a `user-data.yml`:\n\n```sh\n$ cp user-data.yml.example user-data.yml\n```\n\n### Development\n\nLaunch development machine:\n\n```sh\n$ vagrant up\n```\n\n\nDeploy CoreOS cluster to Digital Ocean\n--------------------------------------------------------------------------------\n\nCreate cluster:\n\n```sh\n$ terraform plan   # Check your plan\n$ terraform apply\n```\n\nLogin to a CoreOS server:\n\n```sh\n$ bundle exec tugboat core-X -u core -p 2222  # SSH port is 2222 in this example\n```\n\n\nConfiguration CoreOS\n--------------------------------------------------------------------------------\n\n### Configure `user-data.yml` or `cluster.tf`\n\nEdit the `user-data.yml`:\n\n```sh\n$ vi user-data.yml\n```\n\nEdit the `cluster.tf`:\n\n```sh\n$ vi cluster.tf\n```\n\n\n### Apply to the development\n\nUpload `user-data.yml` to instances:\n\n```sh\n$ vagrant provision\n```\n\nApply changes:\n\n```sh\n$ vagrant ssh\ncore@core-X ~$ sudo coreos-cloudinit --from-file /var/lib/coreos-vagrant/vagrantfile-user-data\n```\n\n\n### Apply to the production\n\n```sh\n$ terraform remote config -backend-config \"name=tomohiro/cluster\"\n$ terraform remote pull\n$ terraform plan\n$ terraform apply\n$ terraform remote push\n```\n",
  "dockerfile": "# https://github.com/docker-library/ruby/blob/master/2.3/onbuild/Dockerfile\nFROM          ruby:2.3-alpine\nMAINTAINER    Tomohiro TAIRA <tomohiro.t@gmail.com>\n\nRUN           apk add --no-cache git build-base libxml2-dev libxslt-dev sqlite-dev\n\n# Throw errors if Gemfile has been modified since Gemfile.lock\nRUN           bundle config --global frozen 1\n\n# Bundler build configuration\nRUN           bundle config --global build.nokogiri --use-system-libraries\nRUN           bundle config --global build.sqlite3  --use-system-libraries\n\nRUN           mkdir -p /usr/src/app\nWORKDIR       /usr/src/app\n\nONBUILD COPY  Gemfile /usr/src/app/\nONBUILD COPY  Gemfile.lock /usr/src/app/\nONBUILD RUN   bundle install\n\nONBUILD COPY  . /usr/src/app\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "          apk add --no-cache git build-base libxml2-dev libxslt-dev sqlite-dev",
      "          bundle config --global frozen 1",
      "          bundle config --global build.nokogiri --use-system-libraries",
      "          bundle config --global build.sqlite3  --use-system-libraries",
      "          mkdir -p /usr/src/app"
    ],
    "workdir": [
      "      /usr/src/app"
    ],
    "from": "         ruby:2.3-alpine",
    "maintainer": "   Tomohiro TAIRA <tomohiro.t@gmail.com>",
    "onbuild": "COPY  . /usr/src/app"
  },
  "source_repository_url": "https://github.com/Tomohiro/cluster.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/Tomohiro/cluster",
  "docker_repository": "tomohiro/ruby",
  "docker_image": "tomohiro/ruby",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "tomohiro/ruby",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/tomohiro/ruby",
    "https://hub.docker.com/v2/repositories/tomohiro/ruby",
    "https://github.com/Tomohiro/cluster.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Ruby",
    "Mode/Executable/Image",
    "Type/Devopsware/Build",
    "Type/Infrastructure/Operating System/Linux"
  ],
  "info_url": "https://hub.docker.com/r/tomohiro/ruby",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}