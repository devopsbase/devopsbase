{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/learninglayers/httpd",
    "repository_url": "https://hub.docker.com/v2/repositories/learninglayers/httpd",
    "tags_url": "https://hub.docker.com/v2/repositories/learninglayers/httpd/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/learninglayers/httpd/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/learninglayers/httpd/autobuild",
    "user": "learninglayers",
    "name": "httpd",
    "namespace": "learninglayers",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 363,
    "last_updated": "2015-11-16T11:17:23.145704Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 126340071,
        "id": 129377,
        "repository": 146563,
        "creator": 228033,
        "last_updater": 458792,
        "last_updated": "2015-10-31T22:49:02.046919Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "learning-layers/Layers-Dockerfiles"
  },
  "name": "learninglayers/httpd Docker container",
  "description": "",
  "readme": "# Layers-Dockerfiles\nThis repo contains all the basic Dockerfiles defining the individual Docker containers used in the Layers Box. The script `start.sh` deploys a Layers Box on any Docker-enabled system. The script `backup.sh` realizes a simple backup of all data containers being part of a Layers Box.\n\n# Setup\n1. clone the repository and install cocker-compose\n2. Fill in the URL the Box will be reachable on in common.env\n3. Create an ssl certificate for the host and put the certificate and key in the ./ssl folder. They have to be named HOSTNAME.key and HOSTNAME.pem\n4. Fill in the OIDC Variables in mobsos-query-visualization/QVS.env and mobsos-survers/SURVEYS.env\n\n# Starting the Layers Box\nRun ```./start.sh```\nThis will shut down all running services, if any are running and then restart all services.\nThis will also destroy all containers and recreate them, so services will get updates.\nA backup of the data volumes is automatically created with attic before the volumes are shut down and restored after containers are recreated.\nThese backups are stored in the directories of the respective services. Currently mysql-data/backup and openldap-data/backup\n\n# Stopping the Layers Box\nRun ```./stop.sh```\nThis shut make a backup of the data containers and shut down all containers\n\n# Restart/Update the Layers Box\nRun ```./restart.sh```\nAll services will be restarted and containers recreated.\n",
  "dockerfile": "FROM learninglayers/base\n\nMAINTAINER Yordan Manolov <manolov@dbis.rwth-aachen.de>\n\nENV SITEDIR /var/www/http\n\nRUN apt-get -y install \\\n                     apache2 \\\n                     apache2-utils \\\n                     php5 \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN mv /etc/apache2/apache2.conf /etc/apache2/apache2.conf.dist\nCOPY apache2.conf /etc/apache2/apache2.conf\n\n#COPY docker-php-ext-* /usr/local/bin/ \nCOPY apache2-foreground /usr/local/bin/\nRUN chmod +x /usr/local/bin/apache2-foreground\nWORKDIR /var/www/htmldocker-php-ext-install\n\nEXPOSE 80\n#CMD [\"/usr/sbin/apache2ctl\",\"-D\",\"FOREGROUND\"]\nCMD [\"apache2-foreground\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      80
    ],
    "volume": [],
    "run": [
      "apt-get -y install                      apache2                      apache2-utils                      php5     && rm -r /var/lib/apt/lists/*",
      "mv /etc/apache2/apache2.conf /etc/apache2/apache2.conf.dist",
      "chmod +x /usr/local/bin/apache2-foreground"
    ],
    "workdir": [
      "/var/www/htmldocker-php-ext-install"
    ],
    "from": "learninglayers/base",
    "maintainer": "Yordan Manolov <manolov@dbis.rwth-aachen.de>",
    "env": {
      "SITEDIR": "/var/www/http"
    },
    "copy": "apache2-foreground /usr/local/bin/",
    "cmd": "[\"apache2-foreground\"]"
  },
  "source_repository_url": "https://github.com/learning-layers/Layers-Dockerfiles.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/learning-layers/Layers-Dockerfiles",
  "docker_repository": "learninglayers/httpd",
  "docker_image": "learninglayers/httpd",
  "parameters_schema": {
    "SITEDIR": {
      "default": "/var/www/http",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "learninglayers/httpd",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/learninglayers/httpd",
    "https://hub.docker.com/v2/repositories/learninglayers/httpd",
    "https://github.com/learning-layers/Layers-Dockerfiles.git"
  ],
  "labels": [
    "Docker"
  ],
  "info_url": "https://hub.docker.com/r/learninglayers/httpd",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}