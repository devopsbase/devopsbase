{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/consol/sakuli-centos-xfce",
    "repository_url": "https://hub.docker.com/v2/repositories/consol/sakuli-centos-xfce",
    "tags_url": "https://hub.docker.com/v2/repositories/consol/sakuli-centos-xfce/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/consol/sakuli-centos-xfce/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/consol/sakuli-centos-xfce/autobuild",
    "user": "consol",
    "name": "sakuli-centos-xfce",
    "namespace": "consol",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 2,
    "pull_count": 1317,
    "last_updated": "2016-10-14T17:21:02.102807Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "dev",
        "full_size": 889708015,
        "id": 1164245,
        "repository": 330067,
        "creator": 284850,
        "last_updater": 59069,
        "last_updated": "2016-10-14T17:21:01.681477Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v0.9.3",
        "full_size": 852848936,
        "id": 2137570,
        "repository": 330067,
        "creator": 59069,
        "last_updater": 59069,
        "last_updated": "2016-07-22T13:39:44.235190Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.0.0",
        "full_size": 855671495,
        "id": 2186815,
        "repository": 330067,
        "creator": 59069,
        "last_updater": 59069,
        "last_updated": "2016-07-22T13:33:55.011004Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 855674460,
        "id": 950174,
        "repository": 330067,
        "creator": 258267,
        "last_updater": 59069,
        "last_updated": "2016-07-22T13:28:18.800321Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v0.9.2",
        "full_size": 840303033,
        "id": 1989953,
        "repository": 330067,
        "creator": 59069,
        "last_updater": 59069,
        "last_updated": "2016-07-22T13:22:52.862112Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.0.1",
        "full_size": 855674736,
        "id": 3286207,
        "repository": 330067,
        "creator": 59069,
        "last_updater": 59069,
        "last_updated": "2016-07-22T13:14:29.861413Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "ConSol/sakuli"
  },
  "name": "consol/sakuli-centos-xfce Docker container",
  "description": "Sakuli end-2-end testing and monitoring container based on CentOS and Xfce4.",
  "readme": "![sakuli-logo](./docs/pics/sakuli_logo_small.png)\n\n|branch  |build state|docs state| docker images state\n|--------|-----------|-----------|-----------|\n| `master` | [![Build Status](http://labs-build.consol.de/buildStatus/icon?job=Sakuli_perform_release)](http://labs-build.consol.de/view/Sakuli/job/Sakuli_perform_release/) | [![Documentation Status](https://readthedocs.io/projects/sakuli/badge/?version=stable)](http://sakuli.readthedocs.io/en/stable/) | `consol/sakuli-ubuntu-xfce`<br/> [![](https://images.microbadger.com/badges/version/consol/sakuli-ubuntu-xfce.svg)](https://hub.docker.com/r/consol/ubuntu-centos-xfce/)  [![](https://images.microbadger.com/badges/image/consol/sakuli-ubuntu-xfce.svg)](http://microbadger.com/images/consol/ubuntu-centos-xfce) <br/> `consol/sakuli-centos-xfce`<br/> [![](https://images.microbadger.com/badges/version/consol/sakuli-centos-xfce.svg)](https://hub.docker.com/r/consol/sakuli-centos-xfce/) [![](https://images.microbadger.com/badges/image/consol/sakuli-centos-xfce.svg)](http://microbadger.com/images/consol/sakuli-centos-xfce)\n| `dev` | [![Build Status](http://labs-build.consol.de/buildStatus/icon?job=Sakuli_CI)](http://labs-build.consol.de/view/Sakuli/job/Sakuli_CI/) | [![Documentation Status](https://readthedocs.io/projects/sakuli/badge/?version=dev)](http://sakuli.readthedocs.io/en/dev/) [![Documentation Status](https://readthedocs.io/projects/sakuli/badge/?version=latest)](http://sakuli.readthedocs.io/en/latest/) | `consol/sakuli-ubuntu-xfce:dev`<br/> [![](https://images.microbadger.com/badges/version/consol/sakuli-ubuntu-xfce:dev.svg)](https://hub.docker.com/r/consol/ubuntu-centos-xfce/)  [![](https://images.microbadger.com/badges/image/consol/sakuli-ubuntu-xfce:dev.svg)](http://microbadger.com/images/consol/ubuntu-centos-xfce) <br/> `consol/sakuli-centos-xfce:dev`<br/> [![](https://images.microbadger.com/badges/version/consol/sakuli-centos-xfce:dev.svg)](https://hub.docker.com/r/consol/sakuli-centos-xfce/) [![](https://images.microbadger.com/badges/image/consol/sakuli-centos-xfce:dev.svg)](http://microbadger.com/images/consol/sakuli-centos-xfce)\n\n*An end-to-end testing tool for web sites and common UIs with full Nagios integration*\n\n**-> [Download](http://labs.consol.de/sakuli/install/)**\n\n**TABLE OF CONTENTS**\n\n* [**Introduction**](#Introduction)\n    * [Concept of Sakuli](#concept-of-sakuli)\n    * [History](#history-of-sakuli)\n    * [Why Sakuli](#why-sakuli)\n* [**Resources**](#resources)\n    * [**Documentation**](./docs/index.md)\n    * [**Docker Images**](./docs/docker-containers.md)\n    * [Exampel projects](#example-projects-on-github)\n    * [Demo](#demo-virtual-machine)\n    * [Media](#media)\n    * [Events](#events)\n    * [Changelog](#changelog)\n    * [Help](#help)\n    * [Thanks](#thanks)\n\n\n\n# Introduction\n## Concept of Sakuli\n\n**Sakuli simulates user actions** on graphical user interfaces (web, fat client, citrix, â€¦), and provides the obtained information (runtime, result, screenshots) to third party (e.g. Nagios compatible monitoring) systems.\n\n**Sakuli** depends on **Java** and should run on most OS; **Windows**, **Ubuntu  Linux (14.04 LTS)** and **OpenSUSE 13.2** are currently proved.  \n\nThe **Sakuli** project brings together two Open-Source end-to-end testing tools which perfectly fit together: **Sahi** ([http://www.sahi.co.in/]([http://www.sahi.co.in/)) for **web-based tests** (by injecting JavaScript code into the browser), as well as the screenshot-based testing tool **Sikuli** ([http://sikulix.com/](http://sikulix.com/)), which allows the execution of **keyboard and mouse actions** on screen areas that have been defined by previously recorded screenshots and are recognized using the OpenCV engine.\n\nSakuli accesses both tools via its **Java API** and makes it possible to **use them simultaneously**. For example, web tests can be done very performant with Sahi (where a screenshot-based approach would be at best the second choice), whereas \"off-DOM\"-content can be catched with Sikuli. Whenever a web test comes into a situation which Sahi can't handle (e.g. a PIN dialogue for a smartcard login), use a Sikuli command. On the other hand, pure tests of fat client applications can be easily be setup by using only the Sikuli functions of Sakuli.\n\n![sakuli-api](./docs/pics/sakuli_api.jpg)\n\n## History of Sakuli\nFirst we only wanted to have the possibility to integrate Sahi web tests into Nagios. This was done with a simple VBscript wrapper (thus, only Windows...), which called Sahi with the correct parameters, and sent the results to Nagios via [NSCA](http://exchange.nagios.org/directory/Addons/Passive-Checks/NSCA--2D-Nagios-Service-Check-Acceptor/details). This brought Sahi tests into the well-known format of OK/WARNING/CRITICAL states in Nagios, including performance data of the test runtimes, which could be feeded into PNP4Nagios.\n\nBut soon it became clear that there is more than only \"web content\" to test. Flash and Java Applets for example are content which appear in the Document Object Model ([DOM](http://de.wikipedia.org/wiki/Document_Object_Model)) as a \"black box\", which can't be accessed by any web testing tool.\n\nSo we have looked around for a tool with a totally different approach to \"remote control\" the user interface: not by its content (like Sahi does with DOM), but by its appearance on the screen. **Sikuli** bridges this gap perfectly: it is able to control (click, type etc...) **everything the user can do on the screen**.\n\nTo have a Java application that uses the API of both tools on the one hand, and which uses a modern scripting language for the test definitions itself on the other hand (JavaScript), was the motivation to write Sakuli.\n\nTo avoid misunderstandings: \"Sakuli\" is a portmanteau, formed from the names of the tools \"*Sahi*\" and \"*Sikuli*\". Whenever we speak of \"**Sakuli**\", we are talking about everything that is written about these both tools.  \n\n## Why Sakuli?\nThere are already a variety of free end2end/automation tools on the market (Sahi, Selenium, WebInject, Sikuli, CasperJS, AutoIT , ...) , but - especially from the perspective of Nagios-based monitoring - each of them has at least one of the following drawbacks:\n\n* **Too specifically**: *pure* web testing tools can only deal with *pure* web content. Applets, Flash, dialogues generated by OS, browser dialogues etc. are invisible and a insurmountable hurdle for such tools.\n* **Too generic**: screen-based testing tools \"see\" everything the user sees. They are the best choice for GUI tests, but inappropriate for web tests, because each browser type has its own understanding of how to render and display a web page.\n* **Far from reality**: There are tools to test web applications on protocol level - but to know whether a web application is working or not requires a test from the user's perspective.\n* **Unflexible**: Hardly one of these tools brings the ability to integrate into other systems (like Nagios).\n\n\n\n# Resources\n\n## Example projects on GitHub\n * **[ConSol/sakuli-examples](https://github.com/ConSol/sakuli-examples)**\n * **[toschneck/sakuli-example-bakery-testing](https://github.com/toschneck/sakuli-example-bakery-testing)**\n * **[ConSol/sakuli-example-testautomation-day](https://github.com/ConSol/sakuli-example-testautomation-day)**\n\n## Demo virtual machine\n\n![d](./docs/pics/appliance_collage.jpg)\n\nUse this demo appliance to see all the features of Sakuli in action. *sakulidemo* contains OMD/Nagios with two Sakuli checks.  \n\n* **sakulidemo.ova v0.2**: Download the .ova file from [http://labs.consol.de/sakuli/demo](http://labs.consol.de/sakuli/demo) and import this machine into Virtualbox.\n\nUser accounts: *root/root* and *sakuli/sakuli*.\n\nIt is recommended to fix the VM's resolution to 1024x768px for this demo. In general Sakuli does not relies on any resolution limitation.\n\nDon't use this in production.\n\n## Media\n\n### YouTube\n\n#### Monitoring Minutes\n\nEpisode 9 of the ***ConSol Monitoring Minutes*** shows the main features of Sakuli in 15 minutes. The machine used in this video is an instance of our demo appliance (see above).   \n\n[End2End Monitoring mit Sakuli und Nagios - ConSol Monitoring Minutes 9](https://www.youtube.com/watch?v=S6NROEOYF6w)\n\n![youtube e2e monitoring](./docs/pics/monitoring_minutes_sakuli_300.png)\n\n#### End-2-End-Testing\n\n[Sakuli End-2-End-Testing - Lightning Talk - Agile Testing Meetup (June 2015)](https://www.youtube.com/watch?v=JjRGlkN8BKo)\n\n![youtube e2e testing](./docs/pics/youtube_e2e_testing_agile_testing_meetup.png)\n\n\n### Slides\n\n2016: [Containerized End-2-End-Testing (German) - JUG Saxony Days Dresden](http://www.slideshare.net/TobiasSchneck/containerized-end2end-testing-jug-saxony-day) (Tobias Schneck)\n\n2016: [Containerized End-2-End-Testing - ContainerDays 2016 Hamburg](https://speakerdeck.com/toschneck/containerized-end-2-end-testing-containerdays-2016-in-hamburg) (Tobias Schneck)\n\n2014: [End-to-end testing\nfor web sites and common UIs with full Nagios integration](https://rawgit.com/toschneck/presentation/sakuli-dev-day-presentation/index.html#/) (Tobias Schneck)\n\n\n\n## Publications\n8/2016: [heise Devloper: Testautomatisierung in Zeiten von Continuous Delivery](http://www.heise.de/developer/artikel/Testautomatisierung-in-Zeiten-von-Continuous-Delivery-3300566.html) (Christoph Deppisch / Tobias Schneck)\n\n8/2016: [Pressemitteilung:\nTestautomatisierung darf nicht bei Unit-Tests Halt machen ](https://www.consol.de/it-services/news/details/testautomatisierung-darf-nicht-bei-unit-tests-halt-machen-1/)\n\n2/2016: [Success Story: pbb Deutsche Pfandbriefbank: Monitoring with Sakuli](https://www.consol.com/fileadmin/pdf/news/success_stories/ConSol_SuccessStory_Monitoring-Sakuli_Pfandbriefbank_eng.pdf)\n\n2/2016: [IT Administrator](http://www.it-administrator.de): [\"Den Anwender simuliert\"](http://shop.heinemann-verlag.de/it-administrator/einzelhefte/139/ausgabe-februar-2016-it-support-und-troubleshooting) (Simon Meggle)\n\n5/2015: [heise Developer: End-to-End Application Monitoring mit Sakuli](http://www.heise.de/developer/meldung/End-to-End-Application-Monitoring-mit-Sakuli-2729493.html)\n\n2/2015: [IT Administrator](http://www.it-administrator.de): [End2End-Monitoring mit dem Open Source-Tool Sakuli](http://www.it-administrator.de/themen/netzwerkmanagement/fachartikel/179023.html) (Simon Meggle)\n\n## Events\n\n30 January - 3 February, 2017: [OOP 2017, Munich](http://www.oop-konferenz.de/) (Tobias Schneck)\n\n---\n\nNovember 16, 2016: [ContainerConf 2016, Mannheim](http://www.containerconf.de/) (Tobias Schneck)\n\nNovember 3, 2016: [Software QS-Tag 2016, Nuremberg](https://www.qs-tag.de) (Tobias Schneck)\n\nSeptember 30, 2016: [JUG Saxony Day, Dresden](http://www.jug-saxony-day.org/) (Tobias Schneck)\n\nAugust 31, 2016: [Herbstcampus 2016, Nuremberg](http://www.herbstcampus.de/programm.php) (Tobias Schneck)\n\nJuly 25, 2016: [JUG MÃ¼nchen](http://www.jugm.de/) (Tobias Schneck)\n\nJune 27, 2016 [Meetup during the ContainerDays, Hamburg](http://www.meetup.com/de-DE/Docker-Hamburg/events/229808506) (Tobias Schneck)\n\nMarch 8-10, 2016: [JavaLand, BrÃ¼hl](http://www.javaland.eu/de/home/) (Tobias Schneck)\n\nMarch 3, 2016: [Allianz Arena MÃ¼nchen](https://www.consol.de/von-monitoring-bis-managed-service/) (Simon Meggle)\n\nMarch 1, 2016: [Icinga Camp, Berlin](https://www.icinga.org/community/events/icinga-camp-berlin/) (Simon Meggle)\n\nJanuary 26, 2016: [Linux-Stamtisch MÃ¼nchen](https://www.xing.com/communities/groups/linux-stammtisch-muenchen-1057878) (Tobias Schneck)\n\n---\n\nOctober 24, 2015: [Ubucon Berlin](http://ubucon.de/2015/) (Simon Meggle)\n\nOctober 13, 2015: [Testing & Integration Day, Allianz Arena Munich](https://www.consol.de/testing-integration-day-mit-redhat/) (Tobias Schneck)\n\nJune 22, 2015: [Agile Testing Munich](http://www.meetup.com/de-DE/Agile-Testing-Munich/events/222659146/?eventId=222659146) (Tobias Schneck)\n\nMay 14, 2015: [OpenTechSummit](http://2015.opentechsummit.net/) (Simon Meggle)\n\nMarch 28, 2015: [LinuxTag Augsburg](https://www.luga.de/Aktionen/LIT-2015/) (Simon Meggle)\n\n\n## Changelog\n\n[Change Log](changelog.md)\n\n\n## Help\nIn case you have any questions or requests for help, feel free to get in contact with us!\nThe Sakuli team members are reachable on the email address **[sakuli@consol.de](mailto:sakuli@consol.de)**.\n\nThe guys behind Sakuli:\n\n<table>\n<tr>\n<td>\n**ConSol Software GmbH** <br/>\n*Franziskanerstr. 38, D-81669 MÃ¼nchen* <br/>\n*Tel. +49-89-45841-100, Fax +49-89-45841-111*<br/>\n*Homepage: http://www.consol.de E-Mail: [info@consol.de](info@consol.de)*\n</td>\n</tr>\n<table>\n\n## Thanks\n\n### Contributors\n\nAt this point we want to thank all contributors, which helped to move this great project by submitting code, writing documentation, or adapting other tools to play well together with Sakuli.\n\n* Tobias Schneck - Sakuli Team / Project Leader, Core Development\n* Simon Meggle - Sakuli Team / Project Leader, Monitoring Integration\n* Christoph Deppisch - Sakuli Team / Core Development\n* Lukas HÃ¶fer - Sakuli Team / Consultant\n* Sven Nierlein\n* Philip Griesbacher - Sakuli Go Starter\n* Thomas Rothenbacher\n\n(did we forget you? Please poke us):\n\n### Valued supporters\n\nVery special thanks to all customers which always nourish this project with new ideas and impulses and make it possible in the first place to give it back to the community as Open Source Software. Thumbs up!\n\n* LIDL Stiftung & Co. KG\n* Deutsche Pfandbriefbank AG\n",
  "dockerfile": "# This Dockerfile is used to build an sakuli image based on Centos\n\nFROM consol/centos-xfce-vnc:1.0.1\nMAINTAINER Tobias Schneck \"tobias.schneck@consol.de\"\nENV REFRESHED_AT 2016-06-03\n\nENV VNC_COL_DEPTH 24\nENV VNC_RESOLUTION 1280x1024\nENV VNC_PW sakuli\n\nENV SAKULI_DOWNLOAD_URL https://labs.consol.de/sakuli/install\nENV SAKULI_VERSION 1.1.0-SNAPSHOT\nENV SAKULI_HOME /root/sakuli/sakuli-v$SAKULI_VERSION\nENV SAKULI_TEST_SUITE /root/sakuli/example_test_suites/example_xfce\n\n### Install Sakuli\n##Install some native libaries\nRUN yum -y install \\\n    # opencv\n    opencv \\\n    # tesseract\n    http://repo.iotti.biz/CentOS/7/x86_64/leptonica-1.71-2.el7.lux.1.x86_64.rpm \\\n    http://repo.iotti.biz/CentOS/7/x86_64/tesseract-3.03-0.2.rc1.el7.lux.1.x86_64.rpm \\\n    # wmctrl\n    http://mirror.symnds.com/distributions/gf/el/7/gf/x86_64/wmctrl-1.07-17.gf.el7.x86_64.rpm \\\n    # xdotool\n    http://li.nux.ro/download/nux/dextop/el7/x86_64/xdotool-2.20110530.1-7.el7.nux.x86_64.rpm \\\n    http://li.nux.ro/download/nux/dextop/el7/x86_64/libxdo-2.20110530.1-7.el7.nux.x86_64.rpm\n## Install sakuli\nADD scripts/auto-install.xml /tmp/\nRUN wget --directory-prefix=/tmp $SAKULI_DOWNLOAD_URL/sakuli-v$SAKULI_VERSION-installer.jar \\\n    && java -jar /tmp/sakuli-v$SAKULI_VERSION-installer.jar /tmp/auto-install.xml \\\n    && rm -f sakuli*.jar auto-install.xml\n\n### Install apps for testing\nRUN yum -y install gedit gnome-calculator\n\n# xvnc server port, if $DISPLAY=:1 port will be 5901\nEXPOSE 5901\n# novnc web port\nEXPOSE 6901\n\nADD scripts/sakuli_startup.sh /root/scripts/\nRUN chmod +x /root/scripts/*.sh\n\n# startup script\nENTRYPOINT [\"/root/scripts/sakuli_startup.sh\"]\n# arguments for the sakuli_startup.sh script\nCMD [\"run $SAKULI_TEST_SUITE\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "scripts/auto-install.xml",
        "dest": "/tmp/"
      },
      {
        "source": "scripts/sakuli_startup.sh",
        "dest": "/root/scripts/"
      }
    ],
    "expose": [
      5901,
      6901
    ],
    "volume": [],
    "run": [
      "yum -y install     # opencv",
      "wget --directory-prefix=/tmp $SAKULI_DOWNLOAD_URL/sakuli-v$SAKULI_VERSION-installer.jar     && java -jar /tmp/sakuli-v$SAKULI_VERSION-installer.jar /tmp/auto-install.xml     && rm -f sakuli*.jar auto-install.xml",
      "yum -y install gedit gnome-calculator",
      "chmod +x /root/scripts/*.sh"
    ],
    "workdir": [],
    "from": "consol/centos-xfce-vnc:1.0.1",
    "maintainer": "Tobias Schneck \"tobias.schneck@consol.de\"",
    "env": {
      "REFRESHED_AT": "2016-06-03",
      "VNC_COL_DEPTH": "24",
      "VNC_RESOLUTION": "1280x1024",
      "VNC_PW": "sakuli",
      "SAKULI_DOWNLOAD_URL": "https://labs.consol.de/sakuli/install",
      "SAKULI_VERSION": "1.1.0-SNAPSHOT",
      "SAKULI_HOME": "/root/sakuli/sakuli-v$SAKULI_VERSION",
      "SAKULI_TEST_SUITE": "/root/sakuli/example_test_suites/example_xfce"
    },
    "entrypoint": "[\"/root/scripts/sakuli_startup.sh\"]",
    "cmd": "[\"run $SAKULI_TEST_SUITE\"]"
  },
  "source_repository_url": "https://github.com/ConSol/sakuli.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/ConSol/sakuli",
  "docker_repository": "consol/sakuli-centos-xfce",
  "docker_image": "consol/sakuli-centos-xfce",
  "parameters_schema": {
    "REFRESHED_AT": {
      "default": "2016-06-03",
      "type": "string",
      "mapping": "environment_variable"
    },
    "VNC_COL_DEPTH": {
      "default": "24",
      "type": "string",
      "mapping": "environment_variable"
    },
    "VNC_RESOLUTION": {
      "default": "1280x1024",
      "type": "string",
      "mapping": "environment_variable"
    },
    "VNC_PW": {
      "default": "sakuli",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SAKULI_DOWNLOAD_URL": {
      "default": "https://labs.consol.de/sakuli/install",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SAKULI_VERSION": {
      "default": "1.1.0-SNAPSHOT",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SAKULI_HOME": {
      "default": "/root/sakuli/sakuli-v$SAKULI_VERSION",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SAKULI_TEST_SUITE": {
      "default": "/root/sakuli/example_test_suites/example_xfce",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        5901,
        6901
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "consol/sakuli-centos-xfce",
  "revision": "dev",
  "uris": [
    "https://hub.docker.com/r/consol/sakuli-centos-xfce",
    "https://hub.docker.com/v2/repositories/consol/sakuli-centos-xfce",
    "https://github.com/ConSol/sakuli.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Test",
    "Type/Devopsware/Monitoring",
    "Type/Infrastructure/Operating System/Linux/CentOS"
  ],
  "info_url": "https://hub.docker.com/r/consol/sakuli-centos-xfce",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}