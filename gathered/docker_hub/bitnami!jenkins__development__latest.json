{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/bitnami/jenkins",
    "repository_url": "https://hub.docker.com/v2/repositories/bitnami/jenkins",
    "tags_url": "https://hub.docker.com/v2/repositories/bitnami/jenkins/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/bitnami/jenkins/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/bitnami/jenkins/autobuild",
    "user": "bitnami",
    "name": "jenkins",
    "namespace": "bitnami",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 154,
    "last_updated": "2016-10-17T11:08:04.367937Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "development",
        "full_size": 385614770,
        "id": 4272912,
        "repository": 850848,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-10-17T11:08:03.799357Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "_",
        "full_size": 385615311,
        "id": 5450493,
        "repository": 850848,
        "creator": 342683,
        "last_updater": 342683,
        "last_updated": "2016-10-17T08:27:38.209323Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "latest",
        "full_size": 385614702,
        "id": 4272972,
        "repository": 850848,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-10-12T08:31:48.824461Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.25-r0",
        "full_size": 385614699,
        "id": 5394885,
        "repository": 850848,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-10-12T08:26:21.613120Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.23-r1",
        "full_size": 387959048,
        "id": 5039383,
        "repository": 850848,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-23T20:47:09.832964Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.23-r0",
        "full_size": 386108928,
        "id": 4946775,
        "repository": 850848,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-20T12:08:12.743503Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.22-r0",
        "full_size": 386108832,
        "id": 4799935,
        "repository": 850848,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-12T16:45:53.835262Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.21-r1",
        "full_size": 269354436,
        "id": 4708324,
        "repository": 850848,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-07T08:29:07.972912Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.21-r0",
        "full_size": 267377954,
        "id": 4676222,
        "repository": 850848,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-05T14:04:06.327463Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.17-r0",
        "full_size": 267149850,
        "id": 4272942,
        "repository": 850848,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-08-11T10:25:55.039626Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "bitnami/bitnami-docker-jenkins"
  },
  "name": "bitnami/jenkins Docker container",
  "description": "Bitnami Docker Image for Jenkins",
  "readme": "[![CircleCI](https://circleci.com/gh/bitnami/bitnami-docker-jenkins/tree/master.svg?style=shield)](https://circleci.com/gh/bitnami/bitnami-docker-jenkins/tree/master)\n[![Docker Hub Automated Build](http://container.checkforupdates.com/badges/bitnami/jenkins)](https://hub.docker.com/r/bitnami/jenkins/)\n# What is Jenkins?\n\n> Jenkins is widely recognized as the most feature-rich CI available with easy configuration, continuous delivery and continuous integration support, easily test, build and stage your app, and more. It supports multiple SCM tools including CVS, Subversion and Git. It can execute Apache Ant and Apache Maven-based projects as well as arbitrary scripts.\n\nhttps://jenkins.io\n\n# Prerequisites\n\nTo run this application you need [Docker Engine](https://www.docker.com/products/docker-engine) >= `1.10.0`. [Docker Compose](https://www.docker.com/products/docker-compose) is recommended with a version `1.6.0` or later.\n\n# How to use this image\n\n## Using Docker Compose\n\nThe recommended way to run Jenkins is using Docker Compose using the following `docker-compose.yml` template:\n\n```yaml\nversion: '2'\nservices:\n  application:\n    image: 'bitnami/jenkins:latest'\n    ports:\n      - '80:8080'\n      - '443:8443'\n    volumes:\n      - 'jenkins_data:/bitnami/jenkins'\nvolumes:\n  jenkins_data:\n    driver: local\n```\n\nLaunch the containers using:\n\n```bash\n$ docker-compose up -d\n```\n\n## Using the Docker Command Line\n\nIf you want to run the application manually instead of using `docker-compose`, these are the basic steps you need to run:\n\n1. Create a network\n\n```bash\n$ docker network create jenkins-tier\n```\n\n2. Create volumes for Jenkins persistence and launch the container\n\n```bash\n$ docker volume create --name jenkins_data\n$ docker run -d --name jenkins -p 80:8080 -p 443:8443 \\\n  --net jenkins-tier \\\n  --volume jenkins_data:/bitnami/jenkins \\\n  bitnami/jenkins:latest\n```\n\nAccess your application at http://your-ip/\n\n## Persisting your application\n\nFor persistence of the Jenkins deployment, the above examples define a docker volume namely jenkins_data`. The Jenkins application state will persist as long as this volume is not removed.\n\nIf avoid inadvertent removal of this volume you can [mount a host directory as data volume](https://docs.docker.com/engine/userguide/containers/dockervolumes/#mount-a-host-directory-as-a-data-volume). Alternatively you can make use of volume plugins to host the volume data.\n\n### Mount host directories as data volumes with Docker Compose\n\nThe following `docker-compose.yml` template demonstrates the use of host directories as data volumes.\n\n```yaml\nversion: '2'\n\nservices:\n  jenkins:\n    image: bitnami/jenkins:latest\n    ports:\n      - '80:8080'\n      - '443:8443'\n    volumes:\n      - /path/to/jenkins-persistence:/bitnami/jenkins\n```\n\n### Mount host directories as data volumes using the Docker command line\n\n1. Create a network (if it does not exist)\n\n```bash\n$ docker network create jenkins-tier\n```\n\n2. Create the Jenkins the container with host volumes\n\n```bash\n$ docker run -d --name jenkins -p 80:8080 -p 443:8443 \\\n  --net jenkins-tier \\\n  --volume /path/to/jenkins-persistence:/bitnami/jenkins \\\n  bitnami/jenkins:latest\n```\n\n# Upgrading Jenkins\n\nWe recommend that you follow these steps to upgrade your container. We will cover here the upgrade of the Jenkins container.\n\nThe `bitnami/jenkins:latest` tag always points to the most recent release. To get the most recent release you can simple repull the `latest` tag from the Docker Hub with `docker pull bitnami/jenkins:latest`. However it is recommended to use [tagged versions](https://hub.docker.com/r/bitnami/jenkins/tags/).\n\nGet the updated image:\n\n```\n$ docker pull bitnami/jenkins:latest\n```\n\n## Using Docker Compose\n\n1. Stop the running Jenkins container\n\n```bash\n$ docker-compose stop jenkins\n```\n\n2. Remove the stopped container\n\n```bash\n$ docker-compose rm jenkins\n```\n\n3. Launch the updated Jenkins image\n\n```bash\n$ docker-compose start jenkins\n```\n\n## Using Docker command line\n\n1. Stop the running Jenkins container\n\n```bash\n$ docker stop jenkins\n```\n\n2. Remove the stopped container\n\n```bash\n$ docker rm jenkins\n```\n\n3. Launch the updated Jenkins image\n\n```bash\n$ docker run -d --name jenkins -p 80:8080 -p 443:8443 \\\n  --net jenkins-tier \\\n  --volume jenkins_data:/bitnami/jenkins \\\n  bitnami/jenkins:latest\n```\n\n> **NOTE**:\n>\n> The above command assumes that local docker volumes are in use. Edit the command according to your usage.\n\n# Configuration\n\n## Environment variables\n\nThe Jenkins instance can be customized by specifying environment variables on the first run. The following environment values are provided to custom Jenkins:\n\n- `JENKINS_USERNAME`: Jenkins admin username. Default: **user**\n- `JENKINS_PASSWORD`: Jenkins admin password. Default: **bitnami**\n\n### Specifying Environment variables using Docker Compose\n\n```yaml\nversion: '2'\n\nservices:\n  jenkins:\n    image: bitnami/jenkins:latest\n    ports:\n      - '80:8080'\n      - '443:8443'\n    environment:\n      - JENKINS_PASSWORD=my_password\n    volumes:\n      - jenkins_data:/bitnami/jenkins\n\nvolumes:\n  jenkins_data:\n    driver: local\n```\n\n### Specifying Environment variables on the Docker command line\n\n```bash\n$ docker run -d --name jenkins -p 80:8080 -p 443:8443 \\\n  --net jenkins-tier \\\n  --env JENKINS_PASSWORD=my_password \\\n  --volume jenkins_data:/bitnami/jenkins \\\n  bitnami/jenkins:latest\n```\n\n# Backing up your application\n\nTo backup your application data follow these steps:\n\n## Backing up using Docker Compose\n\n1. Stop the Jenkins container:\n\n```bash\n$ docker-compose stop jenkins\n```\n\n2. Copy the Jenkins data\n\n```bash\n$ docker cp $(docker-compose ps -q jenkins):/bitnami/jenkins/ /path/to/backups/jenkins/latest/\n```\n\n3. Start the Jenkins container\n\n```bash\n$ docker-compose start jenkins\n```\n\n## Backing up using the Docker command line\n\n1. Stop the Jenkins container:\n\n```bash\n$ docker stop jenkins\n```\n\n2. Copy the Jenkins data\n\n```bash\n$ docker cp jenkins:/bitnami/jenkins/ /path/to/backups/jenkins/latest/\n```\n\n3. Start the Jenkins container\n\n```bash\n$ docker start jenkins\n```\n\n# Restoring a backup\n\nTo restore your application using backed up data simply mount the folder with Jenkins in the container. See [persisting your application](#persisting-your-application) section for more info.\n\n# Contributing\n\nWe'd love for you to contribute to this container. You can request new features by creating an [issue](https://github.com/bitnami/bitnami-docker-jenkins/issues), or submit a [pull request](https://github.com/bitnami/bitnami-docker-jenkins/pulls) with your contribution.\n\n# Issues\n\nIf you encountered a problem running this container, you can file an [issue](https://github.com/bitnami/bitnami-docker-jenkins/issues). For us to provide better support, be sure to include the following information in your issue:\n\n- Host OS and version\n- Docker version (`docker version`)\n- Output of `docker info`\n- Version of this container (`echo $BITNAMI_IMAGE_VERSION` inside the container)\n- The command you used to run the container, and any relevant output you saw (masking any sensitive information)\n\n# License\n\nCopyright 2015-2016 Bitnami\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "dockerfile": "FROM gcr.io/stacksmith-images/ubuntu:14.04-r10\n\nMAINTAINER Bitnami <containers@bitnami.com>\n\nENV BITNAMI_APP_NAME=jenkins \\\n    BITNAMI_IMAGE_VERSION=2.25-r0 \\\n    PATH=/opt/bitnami/tomcat/bin:/opt/bitnami/git/bin:/opt/bitnami/java/bin:$PATH\n\n# Additional modules required\nRUN bitnami-pkg install java-1.8.0_101-0 --checksum 66b64f987634e1348141e0feac5581b14e63064ed7abbaf7ba5646e1908219f9\nRUN bitnami-pkg install tomcat-8.5.5-0 --checksum ba4f84698bca14250149482339d26618c92de0662da9d1b39ee34ceaf71cf670\nRUN bitnami-pkg install git-2.6.1-2 --checksum edc04dc263211f3ffdc953cb96e5e3e76293dbf7a97a075b0a6f04e048b773dd\n\n# Install jenkins\nRUN bitnami-pkg unpack jenkins-2.25-0 --checksum 55b0bf60a4a5eec681311c9509ca784405c2708f92e8427c994704f33e6b0974\n\nCOPY rootfs /\n\nVOLUME [\"/bitnami/jenkins\"]\n\nEXPOSE 8080 8443 50000\n\nENTRYPOINT [\"/app-entrypoint.sh\"]\n\nCMD [\"nami\", \"start\", \"--foreground\", \"tomcat\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      8080
    ],
    "volume": [
      "[\"/bitnami/jenkins\"]"
    ],
    "run": [
      "bitnami-pkg install java-1.8.0_101-0 --checksum 66b64f987634e1348141e0feac5581b14e63064ed7abbaf7ba5646e1908219f9",
      "bitnami-pkg install tomcat-8.5.5-0 --checksum ba4f84698bca14250149482339d26618c92de0662da9d1b39ee34ceaf71cf670",
      "bitnami-pkg install git-2.6.1-2 --checksum edc04dc263211f3ffdc953cb96e5e3e76293dbf7a97a075b0a6f04e048b773dd",
      "bitnami-pkg unpack jenkins-2.25-0 --checksum 55b0bf60a4a5eec681311c9509ca784405c2708f92e8427c994704f33e6b0974"
    ],
    "workdir": [],
    "from": "gcr.io/stacksmith-images/ubuntu:14.04-r10",
    "maintainer": "Bitnami <containers@bitnami.com>",
    "env": {
      "BITNAMI_APP_NAME": "jenkins",
      "": "",
      "BITNAMI_IMAGE_VERSION": "2.25-r0",
      "PATH": "/opt/bitnami/tomcat/bin:/opt/bitnami/git/bin:/opt/bitnami/java/bin:$PATH"
    },
    "copy": "rootfs /",
    "entrypoint": "[\"/app-entrypoint.sh\"]",
    "cmd": "[\"nami\", \"start\", \"--foreground\", \"tomcat\"]"
  },
  "source_repository_url": "git@github.com:bitnami/bitnami-docker-jenkins.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/bitnami/bitnami-docker-jenkins",
  "docker_repository": "bitnami/jenkins",
  "docker_image": "bitnami/jenkins",
  "parameters_schema": {
    "BITNAMI_APP_NAME": {
      "default": "jenkins",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_IMAGE_VERSION": {
      "default": "2.25-r0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/opt/bitnami/tomcat/bin:/opt/bitnami/git/bin:/opt/bitnami/java/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        8080
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "bitnami/jenkins",
  "revision": "development",
  "uris": [
    "https://hub.docker.com/r/bitnami/jenkins",
    "https://hub.docker.com/v2/repositories/bitnami/jenkins",
    "git@github.com:bitnami/bitnami-docker-jenkins.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Devopsware/Integration/Jenkins"
  ],
  "info_url": "https://hub.docker.com/r/bitnami/jenkins",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}