{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/dvhtn/wordpress-dev",
    "repository_url": "https://hub.docker.com/v2/repositories/dvhtn/wordpress-dev",
    "tags_url": "https://hub.docker.com/v2/repositories/dvhtn/wordpress-dev/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/dvhtn/wordpress-dev/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/dvhtn/wordpress-dev/autobuild",
    "user": "dvhtn",
    "name": "wordpress-dev",
    "namespace": "dvhtn",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 242,
    "last_updated": "2016-10-06T23:25:56.222320Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 187116074,
        "id": 3111538,
        "repository": 700472,
        "creator": 848111,
        "last_updater": 848111,
        "last_updated": "2016-10-06T23:25:54.901871Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "dvhtn/docker-wordpress-dev"
  },
  "name": "dvhtn/wordpress-dev Docker container",
  "description": "Adds developer tools to the official Wordpress image.",
  "readme": "# Wordpress Development\n\nBased off the `latest` [official Wordpress ](https://hub.docker.com/_/wordpress),\nthis Dockerfile just adds a few additional libraries for facilitating Wordpress\ntheme and plugin development:\n\n  * [xdebug](https://xdebug.org/) for easy remote debugging\n  * [wp-cli](https://wp-cli.org/) support\n\n## Getting Started\n\nLike the official Wordpress image, you can start a new docker container like\nthis (assuming you have a mysql container running named `project-mysql`):\n\n    docker run --link project-mysql:mysql -n project dvhtn/wordpress-dev:latest\n\nAn example [Docker Compose](https://docs.docker.com/compose/) configuration,\n`docker-compose.yml` is included to help get you up and running with a full\nstack (ie. wordpress and mysql). Simply copy it into your project's directory\nand run:\n\n    docker-compose up\n\nNote: in my case, due to docker permissions, the first time this is run can\noften fail. Simply restarting the docker containers a couple of times seems to\nresolve this.\n\nThis will, by default, start Wordpress on port `8000` and MySQL on port `8306`\non your Docker host, so you can visit `http://192.168.99.1:8000` (replace that\nIP with your Docker host's IP) to complete the installation.\n\nNow with the container running, you can easily execute wp-cli commands. For\nexample, if you wanted to install [WP Test](http://wptest.io) for testing out\nyour theme:\n\n    docker-compose exec --user www-data wordpress /bin/bash\n    wp plugin install wordpress-importer --activate\n    curl -OL https://raw.githubusercontent.com/manovotny/wptest/master/wptest.xml\n    wp import wptest.xml --authors=create\n",
  "dockerfile": "FROM wordpress:latest\nMAINTAINER Dave Heaton <dave@dvhtn.com>\n\n# install xdebug\nRUN pecl install -o -f xdebug\nRUN echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -iname xdebug.so|head -n1)\" > /usr/local/etc/php/conf.d/xdebug.ini && \\\n  echo \"xdebug.remote_enable=1\" >> /usr/local/etc/php/conf.d/xdebug.ini && \\\n  echo \"xdebug.remote_connect_back=1\" >> /usr/local/etc/php/conf.d/xdebug.ini\n\n# install wp-cli\nADD https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar /usr/local/bin/wp\nRUN chmod +rx /usr/local/bin/wp\n\n# install other utilities used by wp-cli\nRUN apt-get update \\\n  && apt-get install -y \\\n    less \\\n    mysql-client \\\n    nano \\\n  && rm -rf /var/lib/apt/lists/*\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar",
        "dest": "/usr/local/bin/wp"
      }
    ],
    "expose": [],
    "volume": [],
    "run": [
      "pecl install -o -f xdebug",
      "echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -iname xdebug.so|head -n1)\" > /usr/local/etc/php/conf.d/xdebug.ini &&   echo \"xdebug.remote_enable=1\" >> /usr/local/etc/php/conf.d/xdebug.ini &&   echo \"xdebug.remote_connect_back=1\" >> /usr/local/etc/php/conf.d/xdebug.ini",
      "chmod +rx /usr/local/bin/wp",
      "apt-get update   && apt-get install -y     less     mysql-client     nano   && rm -rf /var/lib/apt/lists/*"
    ],
    "workdir": [],
    "from": "wordpress:latest",
    "maintainer": "Dave Heaton <dave@dvhtn.com>"
  },
  "source_repository_url": "https://github.com/dvhtn/docker-wordpress-dev.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/dvhtn/docker-wordpress-dev",
  "docker_repository": "dvhtn/wordpress-dev",
  "docker_image": "dvhtn/wordpress-dev",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "dvhtn/wordpress-dev",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/dvhtn/wordpress-dev",
    "https://hub.docker.com/v2/repositories/dvhtn/wordpress-dev",
    "https://github.com/dvhtn/docker-wordpress-dev.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image"
  ],
  "info_url": "https://hub.docker.com/r/dvhtn/wordpress-dev",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}