{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/andreptb/oracle-java",
    "repository_url": "https://hub.docker.com/v2/repositories/andreptb/oracle-java",
    "tags_url": "https://hub.docker.com/v2/repositories/andreptb/oracle-java/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/andreptb/oracle-java/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/andreptb/oracle-java/autobuild",
    "user": "andreptb",
    "name": "oracle-java",
    "namespace": "andreptb",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 7,
    "pull_count": 4553,
    "last_updated": "2016-08-29T13:39:33.854953Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "7-alpine",
        "full_size": 57002890,
        "id": 2610734,
        "repository": 224333,
        "creator": 87066,
        "last_updater": 87066,
        "last_updated": "2016-08-29T13:39:33.396927Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.7.0_80-alpine",
        "full_size": 57002910,
        "id": 2611027,
        "repository": 224333,
        "creator": 87066,
        "last_updater": 87066,
        "last_updated": "2016-08-29T13:38:26.432804Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.6.0_45-alpine",
        "full_size": 60383411,
        "id": 2994038,
        "repository": 224333,
        "creator": 87066,
        "last_updater": 87066,
        "last_updated": "2016-08-29T13:37:01.889450Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6-alpine",
        "full_size": 60383427,
        "id": 2994025,
        "repository": 224333,
        "creator": 87066,
        "last_updater": 87066,
        "last_updated": "2016-08-29T13:35:33.351424Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.8.0_102-alpine",
        "full_size": 64022538,
        "id": 4558006,
        "repository": 224333,
        "creator": 87066,
        "last_updater": 87066,
        "last_updated": "2016-08-29T13:34:08.837050Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8-alpine",
        "full_size": 64022555,
        "id": 2610794,
        "repository": 224333,
        "creator": 87066,
        "last_updater": 87066,
        "last_updated": "2016-08-29T13:32:43.230631Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 493855539,
        "id": 190031,
        "repository": 224333,
        "creator": 87066,
        "last_updater": 87066,
        "last_updated": "2016-08-29T13:31:16.505211Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8",
        "full_size": 493855610,
        "id": 190029,
        "repository": 224333,
        "creator": 87066,
        "last_updater": 87066,
        "last_updated": "2016-08-29T13:26:44.159744Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.8.0_102",
        "full_size": 493856722,
        "id": 4557810,
        "repository": 224333,
        "creator": 87066,
        "last_updater": 87066,
        "last_updated": "2016-08-29T13:22:05.393877Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.8.0_91",
        "full_size": 493768574,
        "id": 2926551,
        "repository": 224333,
        "creator": 87066,
        "last_updater": 87066,
        "last_updated": "2016-05-06T19:13:26.018754Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      }
    ],
    "build_name": "andreptb/Dockerfiles"
  },
  "name": "andreptb/oracle-java Docker container",
  "description": "Debian Jessie based image with Oracle JDK installed, provides versions for Java 6, 7 and 8.",
  "readme": "# Supported tags and respective `Dockerfile` links\n\n-\t[`8`, `1.8.0_102`, `latest` (*oracle-java/jdk-8/Dockerfile*)](https://github.com/andreptb/Dockerfiles/blob/master/oracle-java/jdk-8/Dockerfile) [![](https://badge.imagelayers.io/andreptb/oracle-java:1.8.0_91.svg)](https://imagelayers.io/?images=andreptb/oracle-java:1.8.0_91 'Get your own badge on imagelayers.io')\n-\t[`8-alpine`, `1.8.0_102-alpine` (*oracle-java/alpine/jdk-8/Dockerfile*)](https://github.com/andreptb/Dockerfiles/blob/master/oracle-java/alpine/jdk-8/Dockerfile)\n[![](https://badge.imagelayers.io/andreptb/oracle-java:8-alpine.svg)](https://imagelayers.io/?images=andreptb/oracle-java:8-alpine 'Get your own badge on imagelayers.io')\n-\t[`7`, `1.7.0_80`  (*oracle-java/jdk-7/Dockerfile*)](https://github.com/andreptb/Dockerfiles/blob/master/oracle-java/jdk-7/Dockerfile) [![](https://badge.imagelayers.io/andreptb/oracle-java:1.7.0_80.svg)](https://imagelayers.io/?images=andreptb/oracle-java:1.7.0_80 'Get your own badge on imagelayers.io')\n-\t[`7-alpine`, `1.7.0_80-alpine`  (*oracle-java/alpine/jdk-7/Dockerfile*)](https://github.com/andreptb/Dockerfiles/blob/master/oracle-java/alpine/jdk-7/Dockerfile)\n[![](https://badge.imagelayers.io/andreptb/oracle-java:7-alpine.svg)](https://imagelayers.io/?images=andreptb/oracle-java:7-alpine 'Get your own badge on imagelayers.io')\n-\t[`6`, `1.6.0_45`  (*oracle-java/jdk-6/Dockerfile*)](https://github.com/andreptb/Dockerfiles/blob/master/oracle-java/jdk-6/Dockerfile) [![](https://badge.imagelayers.io/andreptb/oracle-java:1.6.0_45.svg)](https://imagelayers.io/?images=andreptb/oracle-java:1.6.0_45 'Get your own badge on imagelayers.io')\n-\t[`6-alpine`, `1.6.0_45-alpine`  (*oracle-java/jdk-6/Dockerfile*)](https://github.com/andreptb/Dockerfiles/blob/master/oracle-java/alpine/jdk-6/Dockerfile) [![](https://badge.imagelayers.io/andreptb/oracle-java:1.6.0_45-alpine.svg)](https://imagelayers.io/?images=andreptb/oracle-java:1.6.0_45-alpine 'Get your own badge on imagelayers.io')\n\n# What is Java?\n\nJava is a concurrent, class-based, object-oriented language specifically designed to have as few implementation dependencies as possible. It is intended to allow application developers to \"write once, run anywhere\", meaning that code that runs on one platform does not need to be recompiled to run on another.\n\nJava is a registered trademark of Oracle and/or its affiliates.\n\n> [wikipedia.org/wiki/Java_(programming_language)](http://en.wikipedia.org/wiki/Java_%28programming_language%29)\n\n![logo](https://raw.githubusercontent.com/docker-library/docs/master/java/logo.png)\n\n# How to use this image\n\n## Start a Java instance in your app\n\nThe most straightforward way to use this image is to use a Java container as both the build and runtime environment. In your `Dockerfile`, writing something along the lines of the following will compile and run your project:\n\n\tFROM andreptb/oracle-java:7\n\tCOPY . /data\n\tWORKDIR /data\n\tRUN javac Main.java\n\tCMD [\"java\", \"Main\"]\n\nYou can then run and build the Docker image:\n\n\tdocker build -t my-java-app .\n\tdocker run -it --rm --name my-running-app my-java-app\n\n## Compile your app inside the Docker container\n\nThere may be occasions where it is not appropriate to run your app inside a container. To compile, but not run your app inside the Docker instance, you can write something like:\n\n\tdocker run --rm -v \"$PWD\":/data -w /data java:7 javac Main.java\n\nThis will add your current directory as a volume to the container, set the working directory to the volume, and run the command `javac Main.java` which will tell Java to compile the code in `Main.java` and output the Java class file to `Main.class`.\n\n# What are the differences between this image and [library/java](https://github.com/dockerfile/java)?\n\n* Uses [dockerfile/debian:jessie](https://registry.hub.docker.com/_/debian/) instead of [Ubuntu](https://github.com/dockerfile/ubuntu).\n* Uses [Oracle JDK](http://www.oracle.com/technetwork/pt/java/javase/downloads/index.html) instead of [OpenJDK](http://openjdk.java.net/).\n* Installs [Java Cryptography Extension (JCE)](http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html).\n* Adds [Augeas](http://augeas.net/) configuration editing tool.\n* Adds [Groovy](http://www.groovy-lang.org/) script language tools.\n\n**Important:** [JCE](http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html) is not available for java 6 version.\n\n\n# Alpine image\n\nThis image is based on the popular [Alpine Linux project](http://alpinelinux.org), available in [the `alpine` official image](https://hub.docker.com/_/alpine). Alpine Linux is much smaller than most distribution base images (~5MB), and thus leads to much slimmer images in general.\n\nThis variant is highly recommended when final image size being as small as possible is desired. See [this Hacker News comment thread](https://news.ycombinator.com/item?id=10782897) for more discussion of the issues that might arise and some pro/con comparisons of using Alpine-based images.\n\nTo minimize image size, it's uncommon for additional related tools (such as `git` or `bash`) to be included in Alpine-based images. Using this image as a base, add the things you need in your own Dockerfile (see the [`alpine` image description](https://hub.docker.com/_/alpine/) for examples of how to install packages if you are unfamiliar).\n\n# License\n\nView [license information](http://www.oracle.com/technetwork/java/javase/terms/license/index.html) for the software contained in this image.\n\n# Supported Docker versions\n\nThis image is officially supported on Docker version 1.6.2.\n\n# Issues\n\nIf you have any problems with or questions about this image, please contact me through a [GitHub issue](https://github.com/andreptb/Dockerfiles/issues).\n",
  "dockerfile": "FROM alpine:3.4\n\nMAINTAINER Luciano Mores <luciano.mores@gmail.com>\n\nENV JAVA_VERSION=7  \\\n    JAVA_UPDATE=80 \\\n    JAVA_BUILD=15 \\\n    JAVA_HOME=\"/usr/lib/jvm/default-jvm\" \\\n    LANG=C.UTF-8 \\\n    GLIBC_VERSION=2.23-r3\n\nRUN apk upgrade --update && \\\n    apk add --no-cache --virtual=build-dependencies libstdc++ curl ca-certificates unzip && \\\n    for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -sSL https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done && \\\n    apk add --allow-untrusted /tmp/*.apk && \\\n    rm -v /tmp/*.apk && \\\n    ( /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true ) && \\\n    echo \"export LANG=C.UTF-8\" > /etc/profile.d/locale.sh && \\\n    /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib && \\\n    echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \\\n    curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/java.tar.gz \\\n        \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" && \\\n    curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/UnlimitedJCEPolicyJDK${JAVA_VERSION}.zip \\\n        \"http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/UnlimitedJCEPolicyJDK${JAVA_VERSION}.zip\" && \\\n    gunzip /tmp/java.tar.gz && \\\n    tar -C /tmp -xf /tmp/java.tar && \\\n    mkdir -p \"/usr/lib/jvm\" && \\\n    mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" && \\\n    ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" && \\\n    unzip -jo -d \"$JAVA_HOME/jre/lib/security\" \"/tmp/UnlimitedJCEPolicyJDK${JAVA_VERSION}.zip\" && \\\n    ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" && \\\n    apk del glibc-i18n && \\\n    rm -rf \"$JAVA_HOME/\"*src.zip \\\n           \"$JAVA_HOME/lib/missioncontrol\" \\\n           \"$JAVA_HOME/lib/visualvm\" \\\n           \"$JAVA_HOME/lib/\"*javafx* \\\n           \"$JAVA_HOME/jre/lib/plugin.jar\" \\\n           \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\" \\\n           \"$JAVA_HOME/jre/bin/javaws\" \\\n           \"$JAVA_HOME/jre/lib/javaws.jar\" \\\n           \"$JAVA_HOME/jre/lib/desktop\" \\\n           \"$JAVA_HOME/jre/plugin\" \\\n           \"$JAVA_HOME/jre/lib/\"deploy* \\\n           \"$JAVA_HOME/jre/lib/\"*javafx* \\\n           \"$JAVA_HOME/jre/lib/\"*jfx* \\\n           \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so \\\n           \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/libglass.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so \\\n           \"$JAVA_HOME/jre/bin/keytool\" \\\n           \"$JAVA_HOME/jre/bin/orbd\" \\\n           \"$JAVA_HOME/jre/bin/pack200\" \\\n           \"$JAVA_HOME/jre/bin/policytool\" \\\n           \"$JAVA_HOME/jre/bin/rmid\" \\\n           \"$JAVA_HOME/jre/bin/rmiregistry\" \\\n           \"$JAVA_HOME/jre/bin/servertool\" \\\n           \"$JAVA_HOME/jre/bin/tnameserv\" \\\n           \"$JAVA_HOME/jre/bin/unpack200\" \\\n           \"$JAVA_HOME/jre/lib/jfr.jar\" \\\n           \"$JAVA_HOME/jre/lib/jfr\" \\\n           \"$JAVA_HOME/jre/lib/oblique-fonts\" && \\\n    apk del build-dependencies && \\\n    rm -rf /tmp/* /var/cache/apk/*\n\n# Define working directory.\nWORKDIR /data\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "apk upgrade --update &&     apk add --no-cache --virtual=build-dependencies libstdc++ curl ca-certificates unzip &&     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -sSL https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done &&     apk add --allow-untrusted /tmp/*.apk &&     rm -v /tmp/*.apk &&     ( /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true ) &&     echo \"export LANG=C.UTF-8\" > /etc/profile.d/locale.sh &&     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib &&     echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf &&     curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/java.tar.gz         \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" &&     curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/UnlimitedJCEPolicyJDK${JAVA_VERSION}.zip         \"http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/UnlimitedJCEPolicyJDK${JAVA_VERSION}.zip\" &&     gunzip /tmp/java.tar.gz &&     tar -C /tmp -xf /tmp/java.tar &&     mkdir -p \"/usr/lib/jvm\" &&     mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" &&     ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" &&     unzip -jo -d \"$JAVA_HOME/jre/lib/security\" \"/tmp/UnlimitedJCEPolicyJDK${JAVA_VERSION}.zip\" &&     ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" &&     apk del glibc-i18n &&     rm -rf \"$JAVA_HOME/\"*src.zip            \"$JAVA_HOME/lib/missioncontrol\"            \"$JAVA_HOME/lib/visualvm\"            \"$JAVA_HOME/lib/\"*javafx*            \"$JAVA_HOME/jre/lib/plugin.jar\"            \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\"            \"$JAVA_HOME/jre/bin/javaws\"            \"$JAVA_HOME/jre/lib/javaws.jar\"            \"$JAVA_HOME/jre/lib/desktop\"            \"$JAVA_HOME/jre/plugin\"            \"$JAVA_HOME/jre/lib/\"deploy*            \"$JAVA_HOME/jre/lib/\"*javafx*            \"$JAVA_HOME/jre/lib/\"*jfx*            \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\"            \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so            \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\"            \"$JAVA_HOME/jre/lib/amd64/libglass.so\"            \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\"            \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so            \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so            \"$JAVA_HOME/jre/bin/keytool\"            \"$JAVA_HOME/jre/bin/orbd\"            \"$JAVA_HOME/jre/bin/pack200\"            \"$JAVA_HOME/jre/bin/policytool\"            \"$JAVA_HOME/jre/bin/rmid\"            \"$JAVA_HOME/jre/bin/rmiregistry\"            \"$JAVA_HOME/jre/bin/servertool\"            \"$JAVA_HOME/jre/bin/tnameserv\"            \"$JAVA_HOME/jre/bin/unpack200\"            \"$JAVA_HOME/jre/lib/jfr.jar\"            \"$JAVA_HOME/jre/lib/jfr\"            \"$JAVA_HOME/jre/lib/oblique-fonts\" &&     apk del build-dependencies &&     rm -rf /tmp/* /var/cache/apk/*"
    ],
    "workdir": [
      "/data"
    ],
    "from": "alpine:3.4",
    "maintainer": "Luciano Mores <luciano.mores@gmail.com>",
    "env": {
      "15": "",
      "80": "",
      "JAVA_VERSION": "7",
      "": "GLIBC_VERSION",
      "\"/usr/lib/jvm/default-jvm\"": "",
      "C.UTF-8": ""
    }
  },
  "source_repository_url": "https://github.com/andreptb/Dockerfiles.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/andreptb/Dockerfiles",
  "docker_repository": "andreptb/oracle-java",
  "docker_image": "andreptb/oracle-java",
  "parameters_schema": {
    "15": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "80": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JAVA_VERSION": {
      "default": "7",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "GLIBC_VERSION",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"/usr/lib/jvm/default-jvm\"": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "C.UTF-8": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "andreptb/oracle-java",
  "revision": "7-alpine",
  "uris": [
    "https://hub.docker.com/r/andreptb/oracle-java",
    "https://hub.docker.com/v2/repositories/andreptb/oracle-java",
    "https://github.com/andreptb/Dockerfiles.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Java",
    "Mode/Executable/Image",
    "Type/Infrastructure/Operating System/Linux/Debian"
  ],
  "info_url": "https://hub.docker.com/r/andreptb/oracle-java",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}