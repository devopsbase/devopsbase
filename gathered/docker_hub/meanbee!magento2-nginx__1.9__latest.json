{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/meanbee/magento2-nginx",
    "repository_url": "https://hub.docker.com/v2/repositories/meanbee/magento2-nginx",
    "tags_url": "https://hub.docker.com/v2/repositories/meanbee/magento2-nginx/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/meanbee/magento2-nginx/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/meanbee/magento2-nginx/autobuild",
    "user": "meanbee",
    "name": "magento2-nginx",
    "namespace": "meanbee",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 2,
    "pull_count": 531,
    "last_updated": "2016-10-12T17:11:10.169309Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "1.9",
        "full_size": 71178791,
        "id": 1991101,
        "repository": 525241,
        "creator": 144567,
        "last_updater": 144567,
        "last_updated": "2016-10-12T17:11:09.825188Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "meanbee/docker-magento2"
  },
  "name": "meanbee/magento2-nginx Docker container",
  "description": "A nginx container configured to run in tandem with another container running Magento 2 through FPM.",
  "readme": "# Magento 2 Docker\n\nA collection of Docker images for running Magento 2 through nginx and on the command line.\n\n## Quick Start\n\n    cp composer.env.sample composer.env\n    # ..put the correct tokens into composer.env\n    \n    mkdir magento\n\n    docker-compose run cli magento-installer\n    docker-compose up -d\n    docker-compose restart\n\n## Configuration\n\nConfiguration is driven through environment variables.  A comprehensive list of the environment variables used can be found in each `Dockerfile` and the commands in each `bin/` directory.\n\n* `PHP_MEMORY_LIMIT` - The memory limit to be set in the `php.ini`\n* `MAGENTO_RUN_MODE` - Valid values, as defined in `Magento\\Framework\\App\\State`: `developer`, `production`, `default`.\n* `MAGENTO_ROOT` - The directory to which Magento should be installed (defaults to `/var/www/magento`)\n* `COMPOSER_GITHUB_TOKEN` - Your [GitHub OAuth token](https://getcomposer.org/doc/articles/troubleshooting.md#api-rate-limit-and-oauth-tokens), should it be needed\n* `COMPOSER_MAGENTO_USERNAME` - Your Magento Connect public authentication key ([how to get](http://devdocs.magento.com/guides/v2.0/install-gde/prereq/connect-auth.html))\n* `COMPOSER_MAGENTO_PASSWORD` - Your Magento Connect private authentication key\n* `DEBUG` - Toggles tracing in the bash commands when exectued; nothing to do with Magento`\n* `PHP_ENABLE_XDEBUG` - When set to `true` it will include the Xdebug ini file as part of the PHP configuration, turning it on. It's recommended to only switch this on when you need it as it will slow down the application.\n* `UPDATE_UID_GID` - If this is set to \"true\" then the uid and gid of `www-data` will be modified in the container to match the values on the mounted folders.  This seems to be necessary to work around virtualbox issues on OSX.\n\nA sample `docker-compose.yml` is provided in this repository.\n\n## CLI Usage\n\nA number of commands are baked into the image and are available on the `$PATH`. These are:\n\n* `magento-command` - Provides a user-safe wrapper around the `bin/magento` command.\n* `magento-installer` - Installs and configures Magento into the directory defined in the `$MAGENTO_ROOT` environment variable.\n\nIt's recommended that you mount an external folder to `/root/.composer/cache`, otherwise you'll be waiting all day for Magento to download every time the container is booted.\n\nCLI commands can be triggered by running:\n\n    docker-compose run cli magento-installer\n\nShell access to a CLI container can be triggered by running:\n\n    docker-compose run cli bash\n\n## Implementation Notes\n\n* In order to achieve a sane environment for executing commands in, a `docker-environment` script is included as the `ENTRYPOINT` in the container.\n\n## Credits\n\nThanks to [Mark Shust](https://twitter.com/markshust) for his work on [docker-magento2-php](https://github.com/mageinferno/docker-magento2-php) that was used as a basis for this implementation.  You solved a lot of the problems so I didn't need to!\n",
  "dockerfile": "FROM nginx:1.9\n\nMAINTAINER Nick Jones <nick@nicksays.co.uk>\n\nADD etc/vhost.conf /etc/nginx/conf.d/default.conf\nADD bin/* /usr/local/bin/\n\nENV FPM_HOST fpm\nENV FPM_PORT 9000\nENV VIRTUAL_HOST magento.docker\nENV MAGENTO_ROOT /var/www/magento\nENV MAGENTO_RUN_MODE developer\nENV DEBUG false\n\nENTRYPOINT [\"/usr/local/bin/docker-environment\"]\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "etc/vhost.conf",
        "dest": "/etc/nginx/conf.d/default.conf"
      },
      {
        "source": "bin/*",
        "dest": "/usr/local/bin/"
      }
    ],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": [],
    "from": "nginx:1.9",
    "maintainer": "Nick Jones <nick@nicksays.co.uk>",
    "env": {
      "FPM_HOST": "fpm",
      "FPM_PORT": "9000",
      "VIRTUAL_HOST": "magento.docker",
      "MAGENTO_ROOT": "/var/www/magento",
      "MAGENTO_RUN_MODE": "developer",
      "DEBUG": "false"
    },
    "entrypoint": "[\"/usr/local/bin/docker-environment\"]",
    "cmd": "[\"nginx\", \"-g\", \"daemon off;\"]"
  },
  "source_repository_url": "https://github.com/meanbee/docker-magento2.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/meanbee/docker-magento2",
  "docker_repository": "meanbee/magento2-nginx",
  "docker_image": "meanbee/magento2-nginx",
  "parameters_schema": {
    "FPM_HOST": {
      "default": "fpm",
      "type": "string",
      "mapping": "environment_variable"
    },
    "FPM_PORT": {
      "default": "9000",
      "type": "string",
      "mapping": "environment_variable"
    },
    "VIRTUAL_HOST": {
      "default": "magento.docker",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MAGENTO_ROOT": {
      "default": "/var/www/magento",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MAGENTO_RUN_MODE": {
      "default": "developer",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DEBUG": {
      "default": "false",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "meanbee/magento2-nginx",
  "revision": "1.9",
  "uris": [
    "https://hub.docker.com/r/meanbee/magento2-nginx",
    "https://hub.docker.com/v2/repositories/meanbee/magento2-nginx",
    "https://github.com/meanbee/docker-magento2.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Web Server/Nginx"
  ],
  "info_url": "https://hub.docker.com/r/meanbee/magento2-nginx",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}