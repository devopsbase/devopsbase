{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/puzzle/ose3-rails",
    "repository_url": "https://hub.docker.com/v2/repositories/puzzle/ose3-rails",
    "tags_url": "https://hub.docker.com/v2/repositories/puzzle/ose3-rails/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/puzzle/ose3-rails/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/puzzle/ose3-rails/autobuild",
    "user": "puzzle",
    "name": "ose3-rails",
    "namespace": "puzzle",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 75,
    "last_updated": "2016-10-07T08:43:04.004629Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "npm-frontends",
        "full_size": 273971904,
        "id": 5254384,
        "repository": 747331,
        "creator": 536212,
        "last_updater": 536212,
        "last_updated": "2016-10-07T08:43:03.406885Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 273964634,
        "id": 3448472,
        "repository": 747331,
        "creator": 536212,
        "last_updater": 536212,
        "last_updated": "2016-10-05T13:48:46.634647Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "puzzle/ose3-rails"
  },
  "name": "puzzle/ose3-rails Docker container",
  "description": "openshift 3 image for ruby on rails applications with apache2 and passenger",
  "readme": "# ose3-rails\n\nOpenshift-dockerimage for Ruby on Rails applications with Apache2 and mod_passenger.\n\nThis image is based on centos/ruby-22-centos7: https://github.com/sclorg/s2i-ruby-container/tree/master/2.2\n\n## Preparations\n\nGo to the project root. Decide which project name to use\n\nproject=<PROJECT-NAME>\n\nCreate an OpenShift project and apply the JSON template to it:\n\n```\noc new-project $project\noc process -f ose3_project_templates/build_base_image.json | oc create -n $project -f -\n```\n\nThis will create all necessary resources and policyBindings in order for other projects to use its built images. It will also automatically start building the image, which can then be referenced by your other projects that want to use it.\n\n\n## Usage\n\nTo use this generic image you simply have to create a Dockerfile in the wanted project and write the following line into it:\n\n`FROM puzzle/ose3-rails`\n\nand then reference the image in your BuildConfig spec:\n\n```\nspec:\n...\n  strategy:\n    type: Docker\n    dockerStrategy:\n      from:\n        kind: ImageStreamTag\n        namespace: <PROJECT-NAME>\n        name: 'ose3-rails:latest'\n      forcePull: true\n```\n\n## Development\n\nSee [Development](DEVELOPMENT.md)\n",
  "dockerfile": "FROM centos/ruby-22-centos7\n\n# ABOUT\n# A Rails/webpack frontend image.\n#\n# If a frontend/package.json is found,\n#\n#   * node and npm will get installed\n#   * the dependencies from said package.json are installed\n#   * the frontend is built via `npm build TODO`\n#   * the assets at frontend/dist are moved to public/\n#\n# This image is based on a S2I image but used in standard 'docker build'\n# fashion. This is done by triggering $STI_SCRIPTS_PATH/assemble while\n# building.\n\nUSER root\n\nLABEL io.k8s.description=\"Platform for building and running Rails Application within Apache Passenger\" \\\n      io.k8s.display-name=\"Apache 2.4 with Ruby 2.2\" \\\n      io.openshift.expose-services=\"8080:http\" \\\n      io.openshift.tags=\"builder,ruby,ruby22,httpd\"\n\n# SLOW STUFF\n# Slow operations, kept at top of the Dockerfile so they're cached for most changes.\n\n# Install Apache httpd24.\nRUN yum update -y && \\\n    INSTALL_PKGS=\"httpd httpd-devel apr-devel apr-util-devel sqlite3\" && \\\n    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \\\n    yum clean all -y\n\n# Install passenger.\nRUN /bin/bash -c \"gem install passenger --no-ri --no-rdoc && \\\n    export PATH=$PATH:/opt/rh/rh-ruby22/root/usr/local/bin && \\\n    passenger-install-apache2-module --auto --languages ruby && \\\n    passenger-config validate-install \" # bogus comment to invalidate cache\n\n# CONFIGURATION\n\n### Apache\n# Disable digest_module.\nRUN sed -i \"s/LoadModule auth_digest_module/#LoadModule auth_digest_module/\" /etc/httpd/conf.modules.d/00-base.conf\nENV APACHE_RUN_USER 1001\nENV APACHE_PID_FILE /opt/app-root/httpd.pid\n# TODO Why do we do this? I suspect it's because of the OpenShift PID hack for apache.\nRUN mkdir -p /opt/app-root/httpd/pid\n\n### Passenger\n# Add a symlink to the installed passenger gem\n# so we do not depend on the minor version installed.\nRUN ln -s /opt/rh/rh-ruby22/root/usr/local/share/gems/gems/passenger-5.* /opt/passenger\n\n### Rails\nENV RAILS_ENV=production \\\n  RAILS_ROOT=/opt/app-root/src\n\n### Add configuration files.\nADD /contrib/bin $STI_SCRIPTS_PATH\nADD /contrib/etc/httpd /etc/httpd\nADD /contrib/usr/local/lib /usr/local/lib\n\n# PERMISSIONS\n\n# TODO Why do we do this? Check with the fix-permissions call in $STI_SCRIPTS_PATH/assemble.\nRUN chgrp -R 0 ./ && \\\n    chmod -R g+rw ./ && \\\n    find ./ -type d -exec chmod g+x {} + && \\\n    chown -R 1001:0 ./\n\n# TODO Why do we do this? Check with the fix-permissions call in $STI_SCRIPTS_PATH/assemble.\nRUN chmod -R a+rwX /opt/app-root/httpd/pid && \\\n    chmod +x $STI_SCRIPTS_PATH/run-httpd.sh\n\n# Workaround for base image: Do not install gems from development and test environments\n# See https://github.com/sclorg/rhscl-dockerfiles/issues/26\nENV BUNDLE_WITHOUT=development:test\n\n# DEPENDENCIES\n# Add dependency declarations only, install dependencies.\n# Doing this before adding the rest of the source ensures that as long\n# as neither Gemfile nor Gemfile.lock change, Docker will keep the installed\n# bundle in the cache.\n\nONBUILD USER root\n\n# NPM: Add package.json, typings.json if present, install node if needed\nONBUILD ADD ./frontend/package.json ./frontend/typings.json /tmp/src/frontend/\nONBUILD RUN $STI_SCRIPTS_PATH/install-node.sh\nONBUILD RUN chown -R 1001 /tmp/src/\nONBUILD USER 1001\n# NPM: Install packages\nONBUILD RUN $STI_SCRIPTS_PATH/install-npm-packages.sh\n\n# Ruby: Add Gemfile, install the needed gems.\nONBUILD USER root\nONBUILD ADD ./Gemfile ./Gemfile.lock /tmp/src/\nONBUILD RUN chown -R 1001 /tmp/src/\nONBUILD USER 1001\nONBUILD RUN DISABLE_ASSET_COMPILATION=true $STI_SCRIPTS_PATH/assemble\n\n# SOURCES\n# Add the rest of the source.\nONBUILD USER root\nONBUILD ADD . /tmp/src/\nONBUILD RUN chown -R 1001 /tmp/src/\nONBUILD USER 1001\n# Ruby: This time, `assemble` will take advantage of the cached gems,\n# speeding up most builds.\nONBUILD RUN $STI_SCRIPTS_PATH/assemble\n# NPM: Build frontend.\nONBUILD RUN $STI_SCRIPTS_PATH/build-frontend.sh\n\nUSER 1001\n\n# ENTRYPOINT\n\nCMD $STI_SCRIPTS_PATH/run-httpd.sh\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "/contrib/bin",
        "dest": "$STI_SCRIPTS_PATH"
      },
      {
        "source": "/contrib/etc/httpd",
        "dest": "/etc/httpd"
      },
      {
        "source": "/contrib/usr/local/lib",
        "dest": "/usr/local/lib"
      }
    ],
    "expose": [],
    "volume": [],
    "run": [
      "yum update -y &&     INSTALL_PKGS=\"httpd httpd-devel apr-devel apr-util-devel sqlite3\" &&     yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS &&     yum clean all -y",
      "/bin/bash -c \"gem install passenger --no-ri --no-rdoc &&     export PATH=$PATH:/opt/rh/rh-ruby22/root/usr/local/bin &&     passenger-install-apache2-module --auto --languages ruby &&     passenger-config validate-install \" # bogus comment to invalidate cache",
      "sed -i \"s/LoadModule auth_digest_module/#LoadModule auth_digest_module/\" /etc/httpd/conf.modules.d/00-base.conf",
      "mkdir -p /opt/app-root/httpd/pid",
      "ln -s /opt/rh/rh-ruby22/root/usr/local/share/gems/gems/passenger-5.* /opt/passenger",
      "chgrp -R 0 ./ &&     chmod -R g+rw ./ &&     find ./ -type d -exec chmod g+x {} + &&     chown -R 1001:0 ./",
      "chmod -R a+rwX /opt/app-root/httpd/pid &&     chmod +x $STI_SCRIPTS_PATH/run-httpd.sh"
    ],
    "workdir": [],
    "from": "centos/ruby-22-centos7",
    "user": "1001",
    "label": "io.k8s.description=\"Platform for building and running Rails Application within Apache Passenger\"       io.k8s.display-name=\"Apache 2.4 with Ruby 2.2\"       io.openshift.expose-services=\"8080:http\"       io.openshift.tags=\"builder,ruby,ruby22,httpd\"",
    "env": {
      "APACHE_RUN_USER": "1001",
      "APACHE_PID_FILE": "/opt/app-root/httpd.pid",
      "RAILS_ENV": "production",
      "": "",
      "RAILS_ROOT": "/opt/app-root/src",
      "BUNDLE_WITHOUT": "development:test"
    },
    "onbuild": "RUN $STI_SCRIPTS_PATH/build-frontend.sh",
    "cmd": "$STI_SCRIPTS_PATH/run-httpd.sh"
  },
  "source_repository_url": "https://github.com/puzzle/ose3-rails.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/puzzle/ose3-rails",
  "docker_repository": "puzzle/ose3-rails",
  "docker_image": "puzzle/ose3-rails",
  "parameters_schema": {
    "APACHE_RUN_USER": {
      "default": "1001",
      "type": "string",
      "mapping": "environment_variable"
    },
    "APACHE_PID_FILE": {
      "default": "/opt/app-root/httpd.pid",
      "type": "string",
      "mapping": "environment_variable"
    },
    "RAILS_ENV": {
      "default": "production",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "RAILS_ROOT": {
      "default": "/opt/app-root/src",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BUNDLE_WITHOUT": {
      "default": "development:test",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "puzzle/ose3-rails",
  "revision": "npm-frontends",
  "uris": [
    "https://hub.docker.com/r/puzzle/ose3-rails",
    "https://hub.docker.com/v2/repositories/puzzle/ose3-rails",
    "https://github.com/puzzle/ose3-rails.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Ruby",
    "Mode/Executable/Image",
    "Style/Virtualization Level/Application",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Web Server/Apache HTTP Server"
  ],
  "info_url": "https://hub.docker.com/r/puzzle/ose3-rails",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}