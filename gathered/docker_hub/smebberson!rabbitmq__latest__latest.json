{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/smebberson/rabbitmq",
    "repository_url": "https://hub.docker.com/v2/repositories/smebberson/rabbitmq",
    "tags_url": "https://hub.docker.com/v2/repositories/smebberson/rabbitmq/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/smebberson/rabbitmq/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/smebberson/rabbitmq/autobuild",
    "user": "smebberson",
    "name": "rabbitmq",
    "namespace": "smebberson",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 64,
    "last_updated": "2015-04-21T03:25:30.477645Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 149872005,
        "id": 88723,
        "repository": 141482,
        "creator": 64893,
        "last_updater": 64893,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "smebberson/docker-ubuntu-base"
  },
  "name": "smebberson/rabbitmq Docker container",
  "description": "An Ubuntu 14.04 based image, featuring s6 process management and RabbitMQ.",
  "readme": "rabbitmq\n======\n\nAn image for using (RabbitMQ)[https://www.rabbitmq.com/] within containers.\n\n[It's built from my Ubuntu-based Docker image (with s6)](https://registry.hub.docker.com/u/smebberson/ubuntu-base/).\n\nUsage\n-----\n\nTo use this image include `FROM smebberson/rabbitmq` at the top of your `Dockerfile`. Inheriting from `smebberson/ubuntu-base` provides you with the ability to easily start your rabbitmq server using [s6][s6]. s6 will also keep it running for you, restarting it when it crashes.\n\nWhen you run this container, s6 will automatically start your RabbitMQ server and make sure it stays running for you.\n\n### Configurations\n\nYou can configure the following settings in your Dockerfile:\n\n```\n# set username and password for default user login to access RabbitMQ\nENV RABBITMQ_USER={username} RABBITMQ_PASS={password}\n\n# set paths for RabbitMQ data file if you like to persist the data\nENV RABBITMQ_LOG_BASE /data/log\nENV RABBITMQ_MNESIA_BASE /data/mnesia\n\n# Define mount points.\nVOLUME [\"/data/log\", \"/data/mnesia\"]\n\n# Define working directory.\nWORKDIR /data\n\n# Set permission for the /data (The server is set up to run as system user rabbitmq)\nRUN chown -R rabbitmq:rabbitmq /data\n\n```\n\n**Please note:** If ```RABBITMQ_USER``` and ```RABBITMQ_PASS``` environment variable is not set, it will use the default RabbitMQ user logins which use ```guest``` as the username and password.\n\n### RabbitMQ Management Plugin\n\nYou can access the mangement UI admin via http://server-name:15672. See above for login details.\nFor more info see (RabbitMQ documentations)[https://www.rabbitmq.com/management.html].\n\n### Run RabbitMQ server\n\nYou can start up your RabbitMQ server using the following command:\n\n```\ndocker run -d -p 5672:5672 -p 15672:15672 smebberson/rabbitmq\n```\n\n### Run RabbitMQ server with persistent shared directories\n\n```\ndocker run -d -p 5672:5672 -p 15672:15672 -v <log-dir>:/data/log -v <data-dir>:/data/mnesia smebberson/rabbitmq\n```\n\n**Please note:** To utilise the persistent shared directories, please make sure you have included the ```VOLUME``` command in your Dockerfile and environment variables as defined in the Configurations defined above.\n\n[s6]: http://www.skarnet.org/software/s6/\n",
  "dockerfile": "# DOCKER-VERSION 1.0.0\n\nFROM smebberson/ubuntu-base\nMAINTAINER Scott Mebberson <scott@scottmebberson.com>\n\n# Install RabbitMQ\nRUN \\\n  curl https://www.rabbitmq.com/rabbitmq-signing-key-public.asc | apt-key add - && \\\n  echo \"deb http://www.rabbitmq.com/debian/ testing main\" > /etc/apt/sources.list.d/rabbitmq.list && \\\n  apt-get update && \\\n  DEBIAN_FRONTEND=noninteractive apt-get install -y rabbitmq-server && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  rabbitmq-plugins enable rabbitmq_management --offline\n\n# Add the files\nADD root /\n\n# Expose ports for AMQP protocol and rabbitmq management plugin respectively\nEXPOSE 5672 15672\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "root",
        "dest": "/"
      }
    ],
    "expose": [
      5672
    ],
    "volume": [],
    "run": [
      "  curl https://www.rabbitmq.com/rabbitmq-signing-key-public.asc | apt-key add - &&   echo \"deb http://www.rabbitmq.com/debian/ testing main\" > /etc/apt/sources.list.d/rabbitmq.list &&   apt-get update &&   DEBIAN_FRONTEND=noninteractive apt-get install -y rabbitmq-server &&   rm -rf /var/lib/apt/lists/* &&   rabbitmq-plugins enable rabbitmq_management --offline"
    ],
    "workdir": [],
    "from": "smebberson/ubuntu-base",
    "maintainer": "Scott Mebberson <scott@scottmebberson.com>"
  },
  "source_repository_url": "https://github.com/smebberson/docker-ubuntu-base.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/smebberson/docker-ubuntu-base",
  "docker_repository": "smebberson/rabbitmq",
  "docker_image": "smebberson/rabbitmq",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        5672
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "smebberson/rabbitmq",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/smebberson/rabbitmq",
    "https://hub.docker.com/v2/repositories/smebberson/rabbitmq",
    "https://github.com/smebberson/docker-ubuntu-base.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image",
    "Type/Infrastructure/Operating System/Linux/Ubuntu",
    "Type/Middleware/Messaging/RabbitMQ"
  ],
  "info_url": "https://hub.docker.com/r/smebberson/rabbitmq",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}