{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/_/mongo-express",
    "repository_url": "https://hub.docker.com/v2/repositories/library/mongo-express",
    "tags_url": "https://hub.docker.com/v2/repositories/library/mongo-express/tags",
    "user": "library",
    "name": "mongo-express",
    "namespace": "library",
    "status": 1,
    "is_private": false,
    "is_automated": false,
    "star_count": 68,
    "pull_count": 160842,
    "last_updated": "2016-09-16T17:27:18.243409Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "0.31.0",
        "full_size": 98818693,
        "id": 4443304,
        "repository": 622150,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-09-16T17:27:17.574484Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 98818693,
        "id": 2636117,
        "repository": 622150,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-09-16T16:53:11.922619Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "0.31",
        "full_size": 98818693,
        "id": 4443306,
        "repository": 622150,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-09-16T16:53:09.291228Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "0.30",
        "full_size": 96838114,
        "id": 2561518,
        "repository": 622150,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-05-31T21:00:00.276327Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "0.30.59",
        "full_size": 96838114,
        "id": 3144937,
        "repository": 622150,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-05-31T20:59:20.505965Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "0.30.55",
        "full_size": 96720153,
        "id": 3034392,
        "repository": 622150,
        "creator": 2215,
        "last_updater": 2215,
        "last_updated": "2016-05-16T17:01:27.101789Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "0.30.54",
        "full_size": 96752613,
        "id": 2903858,
        "repository": 622150,
        "creator": 2215,
        "last_updater": 2215,
        "last_updated": "2016-05-06T19:14:50.643768Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "0.30.52",
        "full_size": 96470690,
        "id": 2797534,
        "repository": 622150,
        "creator": 2215,
        "last_updater": 2215,
        "last_updated": "2016-04-26T17:46:16.557672Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "0.30.48",
        "full_size": 96445838,
        "id": 2712674,
        "repository": 622150,
        "creator": 2215,
        "last_updater": 2215,
        "last_updated": "2016-04-19T18:13:28.401097Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "0.30.47",
        "full_size": 96427842,
        "id": 2696605,
        "repository": 622150,
        "creator": 2215,
        "last_updater": 2215,
        "last_updated": "2016-04-18T16:39:10.012575Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ]
  },
  "docker_image": "mongo-express",
  "name": "mongo-express Docker container",
  "description": "Web-based MongoDB admin interface, written with Node.js and express",
  "readme": "# Supported tags and respective `Dockerfile` links\n\n-\t[`0.31.0`, `0.31`, `latest` (*Dockerfile*)](https://github.com/mongo-express/mongo-express-docker/blob/8307e91473be1b6849e89acc4d347eec0116293a/Dockerfile)\n\nFor more information about this image and its history, please see [the relevant manifest file (`library/mongo-express`)](https://github.com/docker-library/official-images/blob/master/library/mongo-express). This image is updated via [pull requests to the `docker-library/official-images` GitHub repo](https://github.com/docker-library/official-images/pulls?q=label%3Alibrary%2Fmongo-express).\n\nFor detailed information about the virtual/transfer sizes and individual layers of each of the above supported tags, please see [the `repos/mongo-express/tag-details.md` file](https://github.com/docker-library/repo-info/blob/master/repos/mongo-express/tag-details.md) in [the `docker-library/repo-info` GitHub repo](https://github.com/docker-library/repo-info).\n\n# What is mongo-express?\n\nmongo-express is a web-based MongoDB admin interface written in Node.js, Express.js, and Bootstrap3.\n\n> [github.com/mongo-express/mongo-express](https://github.com/mongo-express/mongo-express)\n\n![logo](https://raw.githubusercontent.com/docker-library/docs/b9077663f53d2a5f3ce3ce52c9249d4b0c684fd9/mongo-express/logo.png)\n\n# How to use this image\n\n```console\n$ docker run --link some_mongo_container:mongo -p 8081:8081 mongo-express\n```\n\nThen you can hit `http://localhost:8081` or `http://host-ip:8081` in your browser.\n\n## Security Notice\n\nJSON documents are parsed through a javascript virtual machine, so the web interface can be used for executing malicious javascript on a server.\n\n**mongo-express should only be used privately for development purposes.**\n\n# Configuration\n\nEnvironment vairables are passed to the `run` command for configuring a mongo-express container.\n\n\tName                            | Default         | Description\n\t--------------------------------|-----------------|------------\n\tME_CONFIG_BASICAUTH_USERNAME    | ''              | mongo-express web username\n\tME_CONFIG_BASICAUTH_PASSWORD    | ''              | mongo-express web password\n\tME_CONFIG_MONGODB_ENABLE_ADMIN  | 'true'          | Enable admin access to all databases. Send strings: `\"true\"` or `\"false\"`\n\tME_CONFIG_MONGODB_ADMINUSERNAME | ''              | MongoDB admin username\n\tME_CONFIG_MONGODB_ADMINPASSWORD | ''              | MongoDB admin password\n\tME_CONFIG_MONGODB_PORT          | 27017           | MongoDB port\n\tME_CONFIG_MONGODB_SERVER        | 'mongo'         | MongoDB container name\n\tME_CONFIG_OPTIONS_EDITORTHEME   | 'default'       | mongo-express editor color theme, [more here](http://codemirror.net/demo/theme.html)\n\tME_CONFIG_REQUEST_SIZE          | '100kb'         | Maximum payload size. CRUD operations above this size will fail in [body-parser](https://www.npmjs.com/package/body-parser).\n\tME_CONFIG_SITE_BASEURL          | '/'             | Set the baseUrl to ease mounting at a subdirectory. Remember to include a leading and trailing slash.\n\tME_CONFIG_SITE_COOKIESECRET     | 'cookiesecret'  | String used by [cookie-parser middleware](https://www.npmjs.com/package/cookie-parser) to sign cookies.\n\tME_CONFIG_SITE_SESSIONSECRET    | 'sessionsecret' | String used to sign the session ID cookie by [express-session middleware](https://www.npmjs.com/package/express-session).\n\tME_CONFIG_SITE_SSL_ENABLED      | 'false'         | Enable SSL.\n\tME_CONFIG_SITE_SSL_CRT_PATH     | ''              | SSL certificate file.\n\tME_CONFIG_SITE_SSL_KEY_PATH     | ''              | SSL key file.\n\nThe following are only needed if `ME_CONFIG_MONGODB_ENABLE_ADMIN` is **\"false\"**\n\n\tName                            | Default         | Description\n\t--------------------------------|-----------------|------------\n\tME_CONFIG_MONGODB_AUTH_DATABASE | 'db'            | Database name\n\tME_CONFIG_MONGODB_AUTH_USERNAME | 'admin'         | Database username\n\tME_CONFIG_MONGODB_AUTH_PASSWORD | 'pass'          | Database password\n\n## Example\n\n```console\n$ docker run -it --rm \\\n    --name mongo-express \\\n    --link web_db_1:mongo \\\n    -p 8081:8081 \\\n    -e ME_CONFIG_OPTIONS_EDITORTHEME=\"ambiance\" \\\n    -e ME_CONFIG_BASICAUTH_USERNAME=\"user\" \\\n    -e ME_CONFIG_BASICAUTH_PASSWORD=\"fairly long password\" \\\n    mongo-express\n```\n\nThis example links to a container name typical of `docker-compose`, changes the editor's color theme, and enables basic authentication.\n\n# Supported Docker versions\n\nThis image is officially supported on Docker version 1.12.2.\n\nSupport for older versions (down to 1.6) is provided on a best-effort basis.\n\nPlease see [the Docker installation documentation](https://docs.docker.com/installation/) for details on how to upgrade your Docker daemon.\n\n# User Feedback\n\n## Issues\n\nIf you have any problems with or questions about this image, please contact us through a [GitHub issue](https://github.com/mongo-express/mongo-express-docker/issues). If the issue is related to a CVE, please check for [a `cve-tracker` issue on the `official-images` repository first](https://github.com/docker-library/official-images/issues?q=label%3Acve-tracker).\n\nYou can also reach many of the official image maintainers via the `#docker-library` IRC channel on [Freenode](https://freenode.net).\n\n## Contributing\n\nYou are invited to contribute new features, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.\n\nBefore you start to code, we recommend discussing your plans through a [GitHub issue](https://github.com/mongo-express/mongo-express-docker/issues), especially for more ambitious contributions. This gives other contributors a chance to point you in the right direction, give you feedback on your design, and help you find out if someone else is working on the same thing.\n\n## Documentation\n\nDocumentation for this image is stored in the [`mongo-express/` directory](https://github.com/docker-library/docs/tree/master/mongo-express) of the [`docker-library/docs` GitHub repo](https://github.com/docker-library/docs). Be sure to familiarize yourself with the [repository's `README.md` file](https://github.com/docker-library/docs/blob/master/README.md) before attempting a pull request.",
  "type": "docker",
  "docker_name": "mongo-express",
  "revision": "0.31.0",
  "uris": [
    "https://hub.docker.com/r/_/mongo-express",
    "https://hub.docker.com/v2/repositories/library/mongo-express"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/JavaScript/Node.js",
    "Type/Devopsware/IDE/Web-based",
    "Type/Middleware/Data Store/Document-oriented/MongoDB"
  ],
  "info_url": "https://hub.docker.com/r/_/mongo-express",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}