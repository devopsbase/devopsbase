{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/udacity/haproxy-consul",
    "repository_url": "https://hub.docker.com/v2/repositories/udacity/haproxy-consul",
    "tags_url": "https://hub.docker.com/v2/repositories/udacity/haproxy-consul/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/udacity/haproxy-consul/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/udacity/haproxy-consul/autobuild",
    "user": "udacity",
    "name": "haproxy-consul",
    "namespace": "udacity",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 1552,
    "last_updated": "2016-09-23T01:33:18.754712Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "947a459",
        "full_size": 11848253,
        "id": 5018891,
        "repository": 293000,
        "creator": 349782,
        "last_updater": 349782,
        "last_updated": "2016-09-23T01:33:17.533235Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "latest",
        "full_size": 11847723,
        "id": 769468,
        "repository": 293000,
        "creator": 284055,
        "last_updater": 281457,
        "last_updated": "2016-09-23T01:33:10.149749Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3a79197",
        "full_size": 10226580,
        "id": 3828079,
        "repository": 293000,
        "creator": 349782,
        "last_updater": 349782,
        "last_updated": "2016-07-13T19:50:44.101198Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "latest-debug",
        "full_size": 82786671,
        "id": 3814187,
        "repository": 293000,
        "creator": 284055,
        "last_updater": 284055,
        "last_updated": "2016-07-13T05:04:50.455473Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "1.6.6_0.15.0",
        "full_size": 8384349,
        "id": 3806846,
        "repository": 293000,
        "creator": 281457,
        "last_updater": 349782,
        "last_updated": "2016-07-12T18:30:05.113288Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "test",
        "full_size": 11563409,
        "id": 2152982,
        "repository": 293000,
        "creator": 284055,
        "last_updater": 284055,
        "last_updated": "2016-02-29T23:08:51.048846Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.6.2_0.13.0",
        "full_size": 11563434,
        "id": 2150530,
        "repository": 293000,
        "creator": 281457,
        "last_updater": 281457,
        "last_updated": "2016-02-29T19:15:57.765564Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.6.2_0.10.0",
        "full_size": 9708905,
        "id": 1638138,
        "repository": 293000,
        "creator": 495201,
        "last_updater": 428663,
        "last_updated": "2015-12-29T22:56:01.457069Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.6.2",
        "full_size": 9708918,
        "id": 1637134,
        "repository": 293000,
        "creator": 349782,
        "last_updater": 428663,
        "last_updated": "2015-12-29T20:14:04.825855Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "udacity/haproxy-consul"
  },
  "name": "udacity/haproxy-consul Docker container",
  "description": "Dynamic haproxy configuration using consul packed into a Docker container",
  "readme": "# haproxy-consul\n\n### Udacity Note\n*This image includes haproxy built with debug symbols and SLZ instead of zlib*\n\nDynamic haproxy configuration using consul packed into a Docker container that weighs 28MB.\n\n<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc/generate-toc again -->\n**Table of Contents**\n\n- [haproxy-consul](#haproxy-consul)\n- [Overview](#overview)\n    - [How it works](#how-it-works)\n    - [Building](#building)\n    - [Running](#running)\n        - [Modes](#modes)\n            - [consul Configuration](#consul-configuration)\n            - [Marathon Configuration](#marathon-configuration)\n        - [Usage](#usage)\n    - [Options](#options)\n        - [SSL Termination](#ssl-termination)\n- [License](#license)\n\n<!-- markdown-toc end -->\n\n# Overview\n\nThis project combines [Alpine Linux](https://www.alpinelinux.org), [consul template](https://github.com/hashicorp/consul-template), and [haproxy](http://haproxy.org)\nto create a proxy that forwards traffic to apps registered in Marathon and forwarded with [marathon-consul](https://github.com/CiscoCloud/marathon-consul).\n\n## How it works\n\nFirst, you must set up a wildcard dns (using something like CloudFlare or [xip.io](http://xip.io)). This means that if your domain is `example.com`, any request to  a `<name>.example.com` will resolve to the IP of your haproxy container.\n\nInside the haproxy container, a header match is used to map `<application>.example.com` to the service registered in consul under `application`.\n\n## Building\n\n```\ndocker build -t haproxy .\n```\n\n## Running\n\n### Modes\n\nhaproxy-consul can run in two different modes: forwarding either consul services\n(the default) or Marathon apps. This behavior is controlled by the\n`HAPROXY_MODE` variable, which should be set to `consul` or\n`marathon`.\n\n#### Reload configuration\n\nIt's possible to reload the HA proxy configuration without restarting the container itself.\n`docker exec -it <container_id> bash reload.sh`\n\n#### consul Configuration\n\nWhen `HAPROXY_MODE` is set to `consul`, haproxy-consul uses consul service names\nto set subdomains. No other configuration is required.\n\n#### Marathon Configuration\n\nWhen `HAPROXY_MODE` is set to `marathon`, haproxy-consul assumes that there will\nbe app information in the `marathon` prefix of the Consul KV store. It was\nwritten to work with the information provided by\n[marathon-consul](https://github.com/CiscoCloud/marathon-consul).\n\nBy default, haproxy will forward all Marathon-assigned ports. So if you specify\nthat your application should own port 10000 in the \"ports\" member of the app\nJSON, haproxy will open port 10000 to direct traffic to your app. This works\nwith auto-assigned ports (ports set to 0), as well. This is all automatic, you\ndon't need to think about it other than to pull the ports from Marathon.\n\nHowever, if you want HTTP load balancing using the host header, you need a\nspecify the following labels on your app:\n\n```\n{\n    \"id\": \"hello-rails\",\n    \"cmd\": \"cd hello && bundle install && bundle exec unicorn -p $PORT\",\n    \"mem\": 100,\n    \"cpus\": 1.0,\n    \"instances\": 1,\n    \"uris\": [\n        \"http://downloads.mesosphere.com/tutorials/RailsHello.tgz\"\n    ],\n    \"env\": {\n        \"RAILS_ENV\": \"production\"\n    },\n    \"ports\": [10000],\n    \"labels\": {\n        \"HAPROXY_HTTP\": \"true\",\n        \"HTTP_PORT_IDX_0_NAME\": \"hello_rails\",\n    }\n}\n```\n\nIn this example (available at [`examples/rails.json`](examples/rails.json)), the\nhello-rails application is assigned port 10000. This is different from the\nservice or host port of the app; it is a global value that Marathon tracks. This\nmeans that haproxy-consul will forward all TCP traffic to port 10000 to the app\nworkers.\n\nWhen `HAPROXY_HTTP` is set to true and `HTTP_PORT_IDX_0_NAME` is set to a\nDNS-valid name Haproxy will forward all HTTP traffic with the host header (the\nname specified plus [`HAPROXY_DOMAIN`](#options)) to the app workers. This\nextends to as many ports as you'd care to give it in the form\n`HTTP_PORT_IDX_{port_number}_NAME`.\n\nThis particular app results in something like the following haproxy\nconfiguration:\n\n```\nglobal\n    maxconn 256\n    debug\n\ndefaults\n    mode tcp\n    timeout connect 5000ms\n    timeout client 50000ms\n    timeout server 50000ms\n\n# HTTP services\nfrontend www\n    mode http\n    bind *:80\n\n    # files ACLs\n    acl host_hello_rails hdr(host) -i hello_rails.haproxy.service.consul\n    use_backend hello_rails_backend if host_hello_rails\n\n# files backends\nbackend hello_rails_backend\n    mode http\n    server 1.2.3.4:49165 # TASK_RUNNING\n\n# TCP services\nlisten hello-rails_10000\n    mode tcp\n    bind *:10000\n    server task_id 1.2.3.4:41965 # TASK_RUNNING\n```\n\n### Usage\n\nIf you don't want to configure wildcard dns, you can use xip.io. In this example, we are going to assume that the IP of your server is `180.19.20.21`, then all domains in `180.19.20.21.xip.io` will forward to your host.\n\nStart the container as follows:\n\n```\ndocker run --net=host --name=haproxy -d -e HAPROXY_DOMAIN=180.19.20.21.xip.io asteris/haproxy-consul\n```\n\nIf you have wildcard DNS set up for your company (say at `*.mycompany.com`) use the following:\n\n```\ndocker run --net=host --name=haproxy -d -e HAPROXY_DOMAIN=mycompany.com asteris/haproxy-consul\n```\n\nNow that it is set up, connect to an app:\n\n```\ncurl -L http://myapp.mycompany.com\n```\n\nOr if you do not have a wildcard DNS:\n\n```\ncurl -L http://myapp.180.19.20.21.xip.io\n```\n\n## Options\n\nIf you want to override the config and template files, mount a volume and set the `CONSUL_CONFIG` environment variable before launch. In docker this can be accomplished with the `-e` option:\n\n```\ndocker run -v /host/config:/my_config -e CONSUL_CONFIG=/my_config -net=host --name=haproxy -d -e HAPROXY_DOMAIN=mycompany.com asteris/haproxy-consul\n```\n\nIf you need to have a root CA added so you can connect to Consul over SSL, mount\na directory containing your root CA at `/usr/local/share/ca-certificates/`.\n\nConfigure using the following environment variables:\n\nVariable | Description | Default\n---------|-------------|---------\n`HAPROXY_DOMAIN` | The domain to match against | `haproxy.service.consul` (for `app.haproxy.service.consul`).\n`HAPROXY_MODE` | forward consul service or Marathon apps | `consul` (`marathon` also available, as described [above](#modes))\n`HAPROXY_USESSL` | Enable the SSL frontend (see [below](#ssl-termination)) | `false`\n`HAPROXY_STATS` | Enable Statistics UI on port 1936 (see [below](#ssl-termination)) | `false`\n`HAPROXY_STATS_TITLE` | Change Statistics Title (see [below](#ssl-termination)) | `false`\n`HAPROXY_STATS_URI` | Change Statistics URI (see [below](#ssl-termination)) | `false`\n\nconsul-template variables:\n\nVariable | Description | Default\n---------|-------------|---------\n`CONSUL_TEMPLATE` | Location of consul-template bin | `/usr/local/bin/consul-template`\n`CONSUL_CONNECT`  | The consul connection | `consul.service.consul:8500`\n`CONSUL_CONFIG`   | File/directory for consul-template config | `/consul-template/config.d`\n`CONSUL_LOGLEVEL` | Valid values are \"debug\", \"info\", \"warn\", and \"err\". | `debug`\n`CONSUL_TOKEN`    | The [Consul API token](http://www.consul.io/docs/internals/acl.html) |\n\nconsul KV variables:\n\nVariable | Description | Default\n---------|-------------|---------\n`service/haproxy/maxconn` | maximum connections | 256\n`service/haproxy/timeouts/connect` | connect timeout | 5000ms\n`service/haproxy/timeouts/client` | client timeout | 50000ms\n`service/haproxy/timeouts/server` | server timeout | 50000ms\n\n### SSL Termination\n\nIf you wish to configure HAproxy to terminate incoming SSL connections, you must set the environment variable `HAPROXY_USESSL=true`, and mount your SSL certificate at `/haproxy/ssl.crt` - this file should contain both the SSL certificate and the private key to use (with no passphrase), in PEM format. You should also include any intermediate certificates in this bundle.\n\nIf you do not provide an SSL certificate at container runtime, a self-signed certificate will be generated for the value of `*.HAPROXY_DOMAIN`.\n\nFor example:\n```\ndocker run -v /etc/ssl/wildcard.example.com.pem:/haproxy/ssl.crt -e HAPROXY_USESSL=true -e HAPROXY_DOMAIN=example.com --net=host --name=haproxy haproxy-consul\n```\n\nYou can also force that all incoming connections are redirected to HTTPS, by setting `HAPROXY_USESSL=force`.\n\nSSL termination is currently only available in 'consul' mode.\n\n# License\n\nReleased under an Apache 2.0 License. See LICENSE\n",
  "dockerfile": "FROM alpine:3.4\n\nMAINTAINER Steven Borrelli <steve@aster.is>\n\nENV CONSUL_TEMPLATE_VERSION=0.15.0\nENV HAPROXY_VERSION=1.6.6\n\nADD install-haproxy.sh /tmp/install-haproxy.sh\n\nRUN apk add --update wget zip && \\\n    # install deployed packages\n    apk add libnl3 bash ca-certificates && \\\n    # install dumb-init\n    wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.1.1/dumb-init_1.1.1_amd64 && \\\n    chmod +x /usr/local/bin/dumb-init && \\\n    # install haproxy\n    /tmp/install-haproxy.sh && \\\n    # install consul-template\n    wget https://releases.hashicorp.com/consul-template/${CONSUL_TEMPLATE_VERSION}/consul-template_${CONSUL_TEMPLATE_VERSION}_linux_amd64.zip && \\\n    unzip consul-template_${CONSUL_TEMPLATE_VERSION}_linux_amd64.zip  && \\\n    mv consul-template /usr/local/bin/consul-template && \\\n    rm -rf consul-template_${CONSUL_TEMPLATE_VERSION}_linux_amd64.zip && \\\n    # cleanup\n    apk del wget zip && \\\n    rm -rf /var/cache/apk/*\n\nRUN mkdir -p /haproxy /consul-template/config.d /consul-template/template.d\nADD config/ /consul-template/config.d/\nADD template/ /consul-template/template.d/\n\nADD reload.sh /reload.sh\nADD launch.sh /launch.sh\n\nCMD [\"/launch.sh\"]\n\n### Udacity Image Metadata\nCOPY Dockerfile /Dockerfile\n\nARG udacity_name\nARG udacity_version\nARG udacity_git_url\nARG udacity_git_sha\nARG udacity_build_id\nARG udacity_build_timestamp\nARG udacity_build_origin\n\nLABEL com.udacity.name=\"$udacity_name\" \\\n      com.udacity.version=\"$udacity_version\" \\\n      com.udacity.git.url=\"$udacity_git_url\" \\\n      com.udacity.git.sha=\"$udacity_git_sha\" \\\n      com.udacity.build.id=\"$udacity_build_id\" \\\n      com.udacity.build.timestamp=\"$udacity_build_timestamp\" \\\n      com.udacity.build.origin=\"$udacity_build_origin\" \\\n      com.udacity.dockerfile=\"/Dockerfile\" \\\n      com.udacity.api.packages=\"apk info -vv\"\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "install-haproxy.sh",
        "dest": "/tmp/install-haproxy.sh"
      },
      {
        "source": "config/",
        "dest": "/consul-template/config.d/"
      },
      {
        "source": "template/",
        "dest": "/consul-template/template.d/"
      },
      {
        "source": "reload.sh",
        "dest": "/reload.sh"
      },
      {
        "source": "launch.sh",
        "dest": "/launch.sh"
      }
    ],
    "expose": [],
    "volume": [],
    "run": [
      "apk add --update wget zip &&     # install deployed packages",
      "mkdir -p /haproxy /consul-template/config.d /consul-template/template.d"
    ],
    "workdir": [],
    "from": "alpine:3.4",
    "maintainer": "Steven Borrelli <steve@aster.is>",
    "env": {
      "CONSUL_TEMPLATE_VERSION": "0.15.0",
      "HAPROXY_VERSION": "1.6.6"
    },
    "cmd": "[\"/launch.sh\"]",
    "copy": "Dockerfile /Dockerfile",
    "arg": "udacity_build_origin",
    "label": "com.udacity.name=\"$udacity_name\"       com.udacity.version=\"$udacity_version\"       com.udacity.git.url=\"$udacity_git_url\"       com.udacity.git.sha=\"$udacity_git_sha\"       com.udacity.build.id=\"$udacity_build_id\"       com.udacity.build.timestamp=\"$udacity_build_timestamp\"       com.udacity.build.origin=\"$udacity_build_origin\"       com.udacity.dockerfile=\"/Dockerfile\"       com.udacity.api.packages=\"apk info -vv\""
  },
  "source_repository_url": "https://github.com/udacity/haproxy-consul.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/udacity/haproxy-consul",
  "docker_repository": "udacity/haproxy-consul",
  "docker_image": "udacity/haproxy-consul",
  "parameters_schema": {
    "CONSUL_TEMPLATE_VERSION": {
      "default": "0.15.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "HAPROXY_VERSION": {
      "default": "1.6.6",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "udacity/haproxy-consul",
  "revision": "947a459",
  "uris": [
    "https://hub.docker.com/r/udacity/haproxy-consul",
    "https://hub.docker.com/v2/repositories/udacity/haproxy-consul",
    "https://github.com/udacity/haproxy-consul.git"
  ],
  "labels": [
    "Docker",
    "Binding/Region/North America/US",
    "Mode/Executable/Image/VM Image/AMI",
    "Type/Devopsware/Orchestration/Consul",
    "Type/Middleware/Proxy/HAProxy"
  ],
  "info_url": "https://hub.docker.com/r/udacity/haproxy-consul",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}