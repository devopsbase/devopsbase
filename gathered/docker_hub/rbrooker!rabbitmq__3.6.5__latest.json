{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/rbrooker/rabbitmq",
    "repository_url": "https://hub.docker.com/v2/repositories/rbrooker/rabbitmq",
    "tags_url": "https://hub.docker.com/v2/repositories/rbrooker/rabbitmq/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/rbrooker/rabbitmq/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/rbrooker/rabbitmq/autobuild",
    "user": "rbrooker",
    "name": "rabbitmq",
    "namespace": "rbrooker",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 365,
    "last_updated": "2016-08-30T14:50:54.851336Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "3.6.5",
        "full_size": 116501732,
        "id": 4580635,
        "repository": 204312,
        "creator": 254830,
        "last_updater": 254830,
        "last_updated": "2016-08-30T14:50:54.461278Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 116501658,
        "id": 4164640,
        "repository": 204312,
        "creator": 254830,
        "last_updater": 254830,
        "last_updated": "2016-08-30T14:38:56.691975Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.6.4-1",
        "full_size": 124032169,
        "id": 4164589,
        "repository": 204312,
        "creator": 254830,
        "last_updater": 254830,
        "last_updated": "2016-08-04T18:36:52.422606Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.5.7",
        "full_size": 114240444,
        "id": 3711298,
        "repository": 204312,
        "creator": 254830,
        "last_updater": 254830,
        "last_updated": "2016-07-05T21:13:29.090633Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.6.1",
        "full_size": 78195109,
        "id": 3037396,
        "repository": 204312,
        "creator": 254830,
        "last_updater": 254830,
        "last_updated": "2016-05-16T20:13:19.112270Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      }
    ],
    "build_name": "cognition/rbrooker-rabbitmq"
  },
  "name": "rbrooker/rabbitmq Docker container",
  "description": "RabbitMQ v 3.6.5-1 with SSL, Shovel, Federation, Clustering, and access to RabbitMQ configuration",
  "readme": "RabbitMQ\n=====================\n\nI created this project because the other RabbitMQ Docker containers (at the time I started this) didn't have any fine grained control or the ability to add plugins, and adjust the configuration away from default. \n\nI have populated the variables with defaults values, some I left alone, whereas on others I have altered based on bias, and due to figuring out in my own experimentation, and reading several blogs/articles etc. on the subject. \n\nPlease see the wiki for details and sample installations \n\n\n### RabbitMQ v 3.6.4-1 and Erlang-NOX 1:18.3-1\n* [RabbitMQ Project](http://www.rabbitmq.com/download.html)\n* [Erlang Solutions](https://www.erlang-solutions.com/resources/download.html)\n\nOptional\n* SSL\n* Shovel\n* Federation\n\n\n### Basic Usage\n-----\n```\ndocker run -d -it \\\n    --hostname=bunny.hop  \\\n    --name=rabbit  \\\n    -p 5672:5672 -p 15672:15672 -p 5671:5671 \\ \n    -e SSL=\"false\" \\\n    rbrooker/rabbitmq:latest\n\n```\n### Notes about SSL \nI used the SSL Cert creation from http://www.rabbitmq.com/ssl.html\n\nPlease remember to mount to your own volumes with your own keys the ones I'm using are dummy self signed\nI suggest make a docker volume to store your certificates\n```\ndocker volume create --name my-cert-volume\ndocker run -v my-cert-volume:/server --name cert-container ubuntu /bin/true \ndocker cp certs/* cert-container:/server/ \ndocker volume inspect my-cert-volume | grep Mountpoint\n# from the information found in the above -- most likely similar\nsudo ls /var/lib/docker/volumes/my-cert-volume/_data/\n```\n\n## Start run/create an instance \n```\ndocker run -d -it \\\n   --volumes-from cert-container:ro \\\n   --hostname=bunny.hop  \\\n   --name=rabbit  \\\n   -p 5672:5672 -p 15672:15672 -p 5671:5671 \\ \n   -e SSL=\"true\"\\\n  rbrooker/rabbitmq:latest\n```\n###  \nSee the [Wiki](https://github.com/cognition/rbrooker-rabbitmq/wiki) for more advanced details. \n\n\n```\ngit clone https://github.com/cognition/rbrooker-rabbitmq my-rabbitmq \ncd my-rabbitmq\ngit branch my-secrets-branch\ngit checkout my-secrets-branch\ncp ../my-cacert.pem testca/cacert.pem\ncp ../my-server-cert.pem server/cert.pem\ncp ../my-server-key.pem server/key.pem \ndocker build -t my-rabbitmq:0 -t my-rabbitmq . \n\n```\n\n\nUsage with a Cluster \n---------------------\n\npull the docker-compose.yml file, and run:  \n```docker-compose up ```\n\nSee the [Wiki Clustering](https://github.com/cognition/rbrooker-rabbitmq/wiki/Clustering) \n\n\n\nCommon Gatachas\n---------------\n\n``` SSL=0 ``` should be ```SSL=\"false\" ```\n``` SSL=1 ``` should be ```SSL=\"true\" ```\n\nCert directory structure:     \n/server/cacert.pem     \n/server/cert.pem    \n/server/key.pem   \n\n\n\nMaintained by  \n-------------\n\nRamon Brooker <rbrooker@aetherealmind.com>\n\n\n[![GetBadges Game](https://cognition-rbrooker-rabbitmq.getbadges.io/shield/company/cognition-rbrooker-rabbitmq/user/5992)](https://cognition-rbrooker-rabbitmq.getbadges.io/?ref=shield-player)\n\n\n \n",
  "dockerfile": "FROM ubuntu\nMAINTAINER Ramon Brooker <rbrooker@aetherealmind.com>\n\nENV DEBIAN_FRONTEND noninteractive\nENV RABBITMQ_VERSION=\"3.6.4-1\" ERLANG_VERSION=\"1:18.3-1\"\n\n# for setting\nLABEL rabbit_version.major=\"3.6\" \\\n      rabbit_version.minor=\"3.6.4-1\" \\\n      erlang_version=\"1:18.3-1\"\n\n\n# IPv6 Env have been removed untill the support for IPv6 is stable in Erlang\n# Environmental Values, sporting defauls, but allowing for configuration at run\nENV AMQP_IP_LISTEN=\"0.0.0.0\" AMQP_TCP_PORT=\"5672\" USER=\"admin\" PASSWORD=\"admin\" DEFAULT_VHOST=\"/\" DEFAULT_USER_TAG=\"['administrator']\" AUTH_BACKENDS=\"[rabbit_auth_backend_internal,rabbitmq_auth_mechanism_ssl]\" AUTH_MECHANISMS=\"['PLAIN','AMQPLAIN','EXTERNAL'] LOG_LEVEL=\"{connection,error},{channel,warning},{federation,warning}\"\n\nENV FEDERATION=1 SHOVEL=0\n\nENV CLUSTER_AGENT=0 MASTER_NAME='bigwig' NODE_TYPE=\"disc\" MASTER=1 HEARTBEAT=\"600\" FRAME_MAX=\"131072\" HANDSHAKE_TIMEOUT=\"10000\"\n\nENV CHANNEL_MAX=\"128\" EXPIRES=\"36000\" MESSAGE_TTL=\"36000\" INITIAL_MAX_FRAME=\"4096\"\n\nENV SSL=\"false\" SSL_AMQP_IP_LISTEN=\"0.0.0.0\" SSL_CERT_LOGIN_FROM=\"common_name\" SSL_CIPHER=\"[{rsa,aes_256_cbc,sha256}]\" SSL_HANDSHAKE_TIMEOUT=\"5000\" SSL_TCP_PORT=\"5671\" SSL_VERSION=\"['tlsv1.2']\" KEYFILE=\"/server/key.pem\" CACERTFILE=\"/server/cacert.pem\" CERTFILE=\"/server/cert.pem\" REVERSE_DNS_LOOKUPS=\"false\" FAIL_IF_NO_PEER_CERT=\"true\"  NUM_SSL_ACCEPTORS=\"1\" NUM_TCP_ACCEPTORS=\"10\"\n\nENV VM_MEM_HIGHT_WATERMARK=\"0.5\" VM_MEM_HIGHT_WATERMARK_PAGING_RATIO=\"0.6\" NET_TICKTIME=\"120\" CLUSTER_KEEPALIVE_INTERVAL=\"10000\" CLUSTER_PARTITION_HANDLING=\"autoheal\" DISK_FREE_LIMIT_MEM_RELATIVE=\"1.0\" ERLANG_KERNEL_PORT_MAX=\"44010\" ERLANG_KERNEL_PORT_MIN=\"44001\"\n\nENV MANAGEMENT_IP=\"0.0.0.0\" MANAGEMENT_PORT=\"15672\" MEM_MONITOR_INTERVAL=\"2500\" HTTP_ACCESS_LOG_PATH=\"/logs/access.log\" LOAD_DEFINITIONS=\"nil\"\n\n# to allow updates to be installed\nRUN echo exit 1 > /usr/sbin/policy-rc.d; chmod +x /usr/sbin/policy-rc.d\n\n# Install Updates, and other needed prgms\nRUN apt-get update ; apt-get -y install logrotate wget apt-utils apt-transport-https adduser init-system-helpers socat; apt-get -y upgrade\n\n\n# Install RabbitMQ\n\nRUN wget -O-  https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | apt-key add -\nRUN wget -O-  https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | apt-key add -\nRUN echo \"deb http://www.rabbitmq.com/debian/ testing main\" | tee /etc/apt/sources.list.d/rabbitmq.list\nRUN echo \"deb https://packages.erlang-solutions.com/ubuntu/ xenial contrib\" | tee /etc/apt/sources.list.d/erlang.list\n# Ensure APT installs from the proper repos\nADD preferences /etc/apt/preferences\nRUN apt-get update; apt-get install -y rabbitmq-server=$RABBITMQ_VERSION erlang-nox=$ERLANG_VERSION\n\n# clean extra-files\nRUN  apt-get autoremove -y ; apt-get clean && rm -rf /var/lib/apt/lists/*\n\nENV ERLANG_COOKIE=\"BAI0VA7ROHXEOQUASH6AIRAGHE9NOH0EOQUAECIE\"\n\nADD server/ /\n\nADD src/ /\nRUN  /set-time.sh\n\n\nVOLUME [\"/etc/rabbitmq\",\"/var/log/rabbitmq\",\"/server\",\"/var/lib/rabbitmq\",\"/logs\",\"/custom_config\"]\n\nEXPOSE 5671 5672 15672 44001-44010\n\nCMD [\"/run.sh\"]\n\n\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "preferences",
        "dest": "/etc/apt/preferences"
      },
      {
        "source": "server/",
        "dest": "/"
      },
      {
        "source": "src/",
        "dest": "/"
      }
    ],
    "expose": [
      5671
    ],
    "volume": [
      "[\"/etc/rabbitmq\",\"/var/log/rabbitmq\",\"/server\",\"/var/lib/rabbitmq\",\"/logs\",\"/custom_config\"]"
    ],
    "run": [
      "echo exit 1 > /usr/sbin/policy-rc.d; chmod +x /usr/sbin/policy-rc.d",
      "apt-get update ; apt-get -y install logrotate wget apt-utils apt-transport-https adduser init-system-helpers socat; apt-get -y upgrade",
      "wget -O-  https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | apt-key add -",
      "wget -O-  https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | apt-key add -",
      "echo \"deb http://www.rabbitmq.com/debian/ testing main\" | tee /etc/apt/sources.list.d/rabbitmq.list",
      "echo \"deb https://packages.erlang-solutions.com/ubuntu/ xenial contrib\" | tee /etc/apt/sources.list.d/erlang.list",
      "apt-get update; apt-get install -y rabbitmq-server=$RABBITMQ_VERSION erlang-nox=$ERLANG_VERSION",
      " apt-get autoremove -y ; apt-get clean && rm -rf /var/lib/apt/lists/*",
      " /set-time.sh"
    ],
    "workdir": [],
    "from": "ubuntu",
    "maintainer": "Ramon Brooker <rbrooker@aetherealmind.com>",
    "env": {
      "DEBIAN_FRONTEND": "noninteractive",
      "RABBITMQ_VERSION": "\"3.6.4-1\"",
      "ERLANG_VERSION": "\"1:18.3-1\"",
      "AMQP_IP_LISTEN": "\"0.0.0.0\"",
      "AMQP_TCP_PORT": "\"5672\"",
      "USER": "\"admin\"",
      "PASSWORD": "\"admin\"",
      "DEFAULT_VHOST": "\"/\"",
      "DEFAULT_USER_TAG": "\"['administrator']\"",
      "AUTH_BACKENDS": "\"[rabbit_auth_backend_internal,rabbitmq_auth_mechanism_ssl]\"",
      "AUTH_MECHANISMS": "\"['PLAIN','AMQPLAIN','EXTERNAL']",
      "LOG_LEVEL": "\"{connection,error},{channel,warning},{federation,warning}\"",
      "FEDERATION": "1",
      "SHOVEL": "0",
      "CLUSTER_AGENT": "0",
      "MASTER_NAME": "'bigwig'",
      "NODE_TYPE": "\"disc\"",
      "MASTER": "1",
      "HEARTBEAT": "\"600\"",
      "FRAME_MAX": "\"131072\"",
      "HANDSHAKE_TIMEOUT": "\"10000\"",
      "CHANNEL_MAX": "\"128\"",
      "EXPIRES": "\"36000\"",
      "MESSAGE_TTL": "\"36000\"",
      "INITIAL_MAX_FRAME": "\"4096\"",
      "SSL": "\"false\"",
      "SSL_AMQP_IP_LISTEN": "\"0.0.0.0\"",
      "SSL_CERT_LOGIN_FROM": "\"common_name\"",
      "SSL_CIPHER": "\"[{rsa,aes_256_cbc,sha256}]\"",
      "SSL_HANDSHAKE_TIMEOUT": "\"5000\"",
      "SSL_TCP_PORT": "\"5671\"",
      "SSL_VERSION": "\"['tlsv1.2']\"",
      "KEYFILE": "\"/server/key.pem\"",
      "CACERTFILE": "\"/server/cacert.pem\"",
      "CERTFILE": "\"/server/cert.pem\"",
      "REVERSE_DNS_LOOKUPS": "\"false\"",
      "FAIL_IF_NO_PEER_CERT": "\"true\"",
      "": "NUM_SSL_ACCEPTORS",
      "\"1\"": "NUM_TCP_ACCEPTORS",
      "VM_MEM_HIGHT_WATERMARK": "\"0.5\"",
      "VM_MEM_HIGHT_WATERMARK_PAGING_RATIO": "\"0.6\"",
      "NET_TICKTIME": "\"120\"",
      "CLUSTER_KEEPALIVE_INTERVAL": "\"10000\"",
      "CLUSTER_PARTITION_HANDLING": "\"autoheal\"",
      "DISK_FREE_LIMIT_MEM_RELATIVE": "\"1.0\"",
      "ERLANG_KERNEL_PORT_MAX": "\"44010\"",
      "ERLANG_KERNEL_PORT_MIN": "\"44001\"",
      "MANAGEMENT_IP": "\"0.0.0.0\"",
      "MANAGEMENT_PORT": "\"15672\"",
      "MEM_MONITOR_INTERVAL": "\"2500\"",
      "HTTP_ACCESS_LOG_PATH": "\"/logs/access.log\"",
      "LOAD_DEFINITIONS": "\"nil\"",
      "ERLANG_COOKIE": "\"BAI0VA7ROHXEOQUASH6AIRAGHE9NOH0EOQUAECIE\""
    },
    "label": "rabbit_version.major=\"3.6\"       rabbit_version.minor=\"3.6.4-1\"       erlang_version=\"1:18.3-1\"",
    "cmd": "[\"/run.sh\"]"
  },
  "source_repository_url": "https://github.com/cognition/rbrooker-rabbitmq.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/cognition/rbrooker-rabbitmq",
  "docker_repository": "rbrooker/rabbitmq",
  "docker_image": "rbrooker/rabbitmq",
  "parameters_schema": {
    "DEBIAN_FRONTEND": {
      "default": "noninteractive",
      "type": "string",
      "mapping": "environment_variable"
    },
    "RABBITMQ_VERSION": {
      "default": "\"3.6.4-1\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ERLANG_VERSION": {
      "default": "\"1:18.3-1\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "AMQP_IP_LISTEN": {
      "default": "\"0.0.0.0\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "AMQP_TCP_PORT": {
      "default": "\"5672\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "USER": {
      "default": "\"admin\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PASSWORD": {
      "default": "\"admin\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DEFAULT_VHOST": {
      "default": "\"/\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DEFAULT_USER_TAG": {
      "default": "\"['administrator']\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "AUTH_BACKENDS": {
      "default": "\"[rabbit_auth_backend_internal,rabbitmq_auth_mechanism_ssl]\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "AUTH_MECHANISMS": {
      "default": "\"['PLAIN','AMQPLAIN','EXTERNAL']",
      "type": "string",
      "mapping": "environment_variable"
    },
    "LOG_LEVEL": {
      "default": "\"{connection,error},{channel,warning},{federation,warning}\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "FEDERATION": {
      "default": "1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SHOVEL": {
      "default": "0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "CLUSTER_AGENT": {
      "default": "0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MASTER_NAME": {
      "default": "'bigwig'",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NODE_TYPE": {
      "default": "\"disc\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MASTER": {
      "default": "1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "HEARTBEAT": {
      "default": "\"600\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "FRAME_MAX": {
      "default": "\"131072\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "HANDSHAKE_TIMEOUT": {
      "default": "\"10000\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "CHANNEL_MAX": {
      "default": "\"128\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "EXPIRES": {
      "default": "\"36000\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MESSAGE_TTL": {
      "default": "\"36000\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "INITIAL_MAX_FRAME": {
      "default": "\"4096\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SSL": {
      "default": "\"false\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SSL_AMQP_IP_LISTEN": {
      "default": "\"0.0.0.0\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SSL_CERT_LOGIN_FROM": {
      "default": "\"common_name\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SSL_CIPHER": {
      "default": "\"[{rsa,aes_256_cbc,sha256}]\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SSL_HANDSHAKE_TIMEOUT": {
      "default": "\"5000\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SSL_TCP_PORT": {
      "default": "\"5671\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SSL_VERSION": {
      "default": "\"['tlsv1.2']\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "KEYFILE": {
      "default": "\"/server/key.pem\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "CACERTFILE": {
      "default": "\"/server/cacert.pem\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "CERTFILE": {
      "default": "\"/server/cert.pem\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "REVERSE_DNS_LOOKUPS": {
      "default": "\"false\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "FAIL_IF_NO_PEER_CERT": {
      "default": "\"true\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "NUM_SSL_ACCEPTORS",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"1\"": {
      "default": "NUM_TCP_ACCEPTORS",
      "type": "string",
      "mapping": "environment_variable"
    },
    "VM_MEM_HIGHT_WATERMARK": {
      "default": "\"0.5\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "VM_MEM_HIGHT_WATERMARK_PAGING_RATIO": {
      "default": "\"0.6\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NET_TICKTIME": {
      "default": "\"120\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "CLUSTER_KEEPALIVE_INTERVAL": {
      "default": "\"10000\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "CLUSTER_PARTITION_HANDLING": {
      "default": "\"autoheal\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DISK_FREE_LIMIT_MEM_RELATIVE": {
      "default": "\"1.0\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ERLANG_KERNEL_PORT_MAX": {
      "default": "\"44010\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ERLANG_KERNEL_PORT_MIN": {
      "default": "\"44001\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MANAGEMENT_IP": {
      "default": "\"0.0.0.0\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MANAGEMENT_PORT": {
      "default": "\"15672\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MEM_MONITOR_INTERVAL": {
      "default": "\"2500\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "HTTP_ACCESS_LOG_PATH": {
      "default": "\"/logs/access.log\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "LOAD_DEFINITIONS": {
      "default": "\"nil\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ERLANG_COOKIE": {
      "default": "\"BAI0VA7ROHXEOQUASH6AIRAGHE9NOH0EOQUAECIE\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        5671
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "rbrooker/rabbitmq",
  "revision": "3.6.5",
  "uris": [
    "https://hub.docker.com/r/rbrooker/rabbitmq",
    "https://hub.docker.com/v2/repositories/rbrooker/rabbitmq",
    "https://github.com/cognition/rbrooker-rabbitmq.git"
  ],
  "labels": [
    "Docker",
    "Binding/Region/North America/US",
    "Type/Devopsware/Orchestration/Cluster-based",
    "Type/Middleware/Messaging/RabbitMQ"
  ],
  "info_url": "https://hub.docker.com/r/rbrooker/rabbitmq",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}