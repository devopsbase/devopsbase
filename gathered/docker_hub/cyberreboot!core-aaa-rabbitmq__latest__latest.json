{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/cyberreboot/core-aaa-rabbitmq",
    "repository_url": "https://hub.docker.com/v2/repositories/cyberreboot/core-aaa-rabbitmq",
    "tags_url": "https://hub.docker.com/v2/repositories/cyberreboot/core-aaa-rabbitmq/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/cyberreboot/core-aaa-rabbitmq/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/cyberreboot/core-aaa-rabbitmq/autobuild",
    "user": "cyberreboot",
    "name": "core-aaa-rabbitmq",
    "namespace": "cyberreboot",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 600,
    "last_updated": "2016-10-11T17:28:52.411378Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 86575216,
        "id": 3683286,
        "repository": 779626,
        "creator": 294177,
        "last_updater": 294177,
        "last_updated": "2016-10-11T17:28:52.155617Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "CyberReboot/vent"
  },
  "name": "cyberreboot/core-aaa-rabbitmq Docker container",
  "description": "rabbitmq",
  "readme": "vent\n====\n\n> Network Visibility (an anagram)\n\n[![CircleCI](https://circleci.com/gh/CyberReboot/vent.svg?style=shield)](https://circleci.com/gh/CyberReboot/vent)\n[![Documentation Status](https://readthedocs.org/projects/vent/badge/?version=latest)](http://vent.readthedocs.io/en/latest/?badge=latest)\n[![GitHub Release](https://badge.fury.io/gh/cyberreboot%2Fvent.svg)](https://github.com/CyberReboot/vent/releases)\n[![codecov](https://codecov.io/gh/CyberReboot/vent/branch/master/graph/badge.svg)](https://codecov.io/gh/CyberReboot/vent)\n[![Code Issues](https://www.quantifiedcode.com/api/v1/project/ffe3b2d6a9254b98a12de6b3273676b3/badge.svg)](https://www.quantifiedcode.com/app/project/ffe3b2d6a9254b98a12de6b3273676b3)\n[![Github Release Downloads](https://img.shields.io/github/downloads/cyberreboot/vent/total.svg?maxAge=2592000)](https://github.com/CyberReboot/vent/releases)\n\n            '.,\n              'b      *\n               '$    #.\n                $:   #:\n                *#  @):\n                :@,@):   ,.**:'\n      ,         :@@*: ..**'\n       '#o.    .:(@'.@*\"'\n          'bq,..:,@@*'   ,*\n          ,p$q8,:@)'  .p*'\n         '    '@@Pp@@*'\n               Y7'.'\n              :@):.\n             .:@:'.\n           .::(@:. \n                       _   \n      __   _____ _ __ | |_ \n      \\ \\ / / _ \\ '_ \\| __|\n       \\ V /  __/ | | | |_ \n        \\_/ \\___|_| |_|\\__|\n\noverview\n====\nvent is a lightweight, self-contained virtual appliance designed to serve as a general platform for analyzing network traffic. built with some basic functionality, vent serves as a user-friendly slate to build custom `plugins` on to perform user-defined processing on incoming network data. vent supports any filetype, but only processes one based on the types of plugins installed for that instance of vent.\n\nsimply create your `plugins`, point vent to them & install them, and drop a file in vent to begin processing!\n\ndownload pre-compiled ISO\n====\n\n[releases](https://github.com/CyberReboot/vent/releases)\n\n\nbuild the ISO\n====\n\n### build dependencies\n\n```\ndocker\nmake\nzip\n```\n\n### getting the bits\n\n```\ngit clone --recursive https://github.com/CyberReboot/vent.git\ncd vent\n```\n\n### building\n\n```\nmake\n```\n\neasy ways to build a VM out of the ISO\n====\n\nwith docker-machine cli:\n\n```\n# in a terminal from the path where the ISO file is (usually inside of the vent directory)\npython -m SimpleHTTPServer\n\n# from another terminal while the previous command is still running, execute the\n# following, with optional additional arguments prior to the last vent in the command\ndocker-machine create -d virtualbox --virtualbox-boot2docker-url http://localhost:8000/vent.iso vent\n# other options to customize the size of the vm are available as well:\n# --virtualbox-cpu-count \"1\"\n# --virtualbox-disk-size \"20000\"\n# --virtualbox-memory \"1024\"\n\n# finally once the previous command is finished, execute this for the vent user interface\ndocker-machine ssh vent\n```\n\nof course traditional ways of deploying an ISO work as well, including VMWare, OpenStack, and booting from it to install on bare metal.  a couple of things to note: it will automatically install and provision the disk and then restart when done.  vent runs in RAM, so changes need to be made under `/var/lib/docker` or `/var/lib/boot2docker` as those are persistent (see boot2docker [documentation](https://github.com/boot2docker/boot2docker/blob/master/README.md) for more information).  it's possible that `vent-management` won't automatically get added and run, if you run `docker ps` and it's not running, execute `sudo /vent/custom`.\n\ngetting started\n====\n\nfrom within the vent interface (once SSH'd in) first `build` the core.  it might take a little while to download and compile everything. `note` - you must build core before building any `plugins`, `collectors`, or `visualization`. core provides essential services needed to build/start other services.\n\nonce it's built you're ready to start the `core` from the `mode` menu option.\n\nafter starting, you should be able to go into `system info` and see that everything is running as expected.  once that looks good, you're ready to copy up pcaps.  that's it!\n\ncopy up new pcaps\n====\n\ninstall the `vent` script locally first:\n```\nsudo make install\n```\n\nif using docker-machine cli to provision:\n\n```\n# from the directory that contains your pcaps\n# optionally add an argument of the name for vent in\n#     docker-machine if you called it something other than vent\ncd /path/where/pcaps/are/\nvent\n```\n\nif deploying as a self-configured machine (VMWare, OpenStack, bare metal, etc.):\n\n```\n# from the directory that contains your pcaps\n# optionally add an argument of the name/ip for vent on your network\ncd vent\ncp vent-generic /usr/local/bin/vent\ncd /path/where/pcaps/are/\nvent\n```\n\notherwise edit the `ssh` and `scp` lines in `vent` specific to docker-machine and change to suit your needs\n\ncopy up new templates and plugins\n====\n\nif using docker-machine cli to provision:\n\n```\ndocker-machine scp modes.template vent:/var/lib/docker/data/templates/modes.template\n```\n\nif using boot2docker cli to provision (DEPRECATED):\n\n```\nscp -r -i ~/.ssh/id_boot2docker -P 2022 modes.template docker@localhost:/var/lib/docker/data/templates/modes.template\n```\n\nif deploying as a self-configured machine (VMWare, OpenStack, bare metal, etc.):\n\n```\nscp modes.template docker@vent:/var/lib/docker/data/templates/modes.template\n```\n\ndocumentation\n====\n\n- [Docs](https://github.com/CyberReboot/vent/tree/master/docs)\n- [Diagrams](https://github.com/CyberReboot/vent/tree/master/docs/images)\n\ncontributing to vent\n====\n\nWant to contribute?  Awesome!  Issue a pull request or see more details [here](https://github.com/CyberReboot/vent/blob/master/CONTRIBUTING.md).\n\nFAQ\n====\n\n**Q**: What are the credentials to login if I don't use certificates/keys?\n\n**A**: docker/tcuser\n\n**Q**: I went into the shell and did a `docker ps` but no containers are running, how do I get it working again?\n\n**A**: Execute `docker rm vent-management; sudo /vent/custom`, if that doesn't work, restart the machine.\n\n**Q**: I'm not running DHCP, how do I statically set the IP Address?\n\n**A**: For a quick and dirty solution (doesn't survive reboot):\n\n```\nifconfig eth0 192.168.99.101 netmask 255.255.255.0 broadcast 192.168.99.255 up\nip route add default via 192.168.99.1\n```\n\nAdditionally if you need to set DNS, add the following to `/etc/resolv.conf`:\n\n```\nnameserver 8.8.8.8\n```\n\nFor a more permanent solution look at the [docs](https://github.com/boot2docker/boot2docker) for boot2docker\n",
  "dockerfile": "FROM rabbitmq:3-management\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": [],
    "from": "rabbitmq:3-management"
  },
  "source_repository_url": "https://github.com/CyberReboot/vent.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/CyberReboot/vent",
  "docker_repository": "cyberreboot/core-aaa-rabbitmq",
  "docker_image": "cyberreboot/core-aaa-rabbitmq",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "cyberreboot/core-aaa-rabbitmq",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/cyberreboot/core-aaa-rabbitmq",
    "https://hub.docker.com/v2/repositories/cyberreboot/core-aaa-rabbitmq",
    "https://github.com/CyberReboot/vent.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Messaging/RabbitMQ"
  ],
  "info_url": "https://hub.docker.com/r/cyberreboot/core-aaa-rabbitmq",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}