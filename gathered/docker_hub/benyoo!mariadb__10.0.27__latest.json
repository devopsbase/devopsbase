{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/benyoo/mariadb",
    "repository_url": "https://hub.docker.com/v2/repositories/benyoo/mariadb",
    "tags_url": "https://hub.docker.com/v2/repositories/benyoo/mariadb/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/benyoo/mariadb/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/benyoo/mariadb/autobuild",
    "user": "benyoo",
    "name": "mariadb",
    "namespace": "benyoo",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 3928,
    "last_updated": "2016-10-15T03:33:08.742798Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "10.0.27",
        "full_size": 215113306,
        "id": 4675859,
        "repository": 857902,
        "creator": 513417,
        "last_updater": 513417,
        "last_updated": "2016-10-15T03:33:08.370090Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "10.1.14",
        "full_size": 61299418,
        "id": 4330026,
        "repository": 857902,
        "creator": 513417,
        "last_updater": 513417,
        "last_updated": "2016-10-15T03:28:55.196326Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 61299473,
        "id": 4330116,
        "repository": 857902,
        "creator": 513417,
        "last_updater": 513417,
        "last_updated": "2016-10-15T03:26:04.845212Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "10.1",
        "full_size": 216775045,
        "id": 4665039,
        "repository": 857902,
        "creator": 513417,
        "last_updater": 513417,
        "last_updated": "2016-09-04T13:16:17.540101Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      }
    ],
    "build_name": "xiaoyawl/docker-mariadb"
  },
  "name": "benyoo/mariadb Docker container",
  "description": "Alpine MariaDb run in docker",
  "readme": "# docker-mariadb\n\n# Docker 安装\n```bash\ncurl -Lks https://get.docker.com/ | sh\n```\n\n# 快速启动\n```bash\ncurl -Lks http://git.onekey.sh/lookback/docker-mariadb/raw/master/docker-compose.yml -o docker-compose.yml\ndocker-compose up -d\n```\n\n# docker-compose 安装\n```bash\ncurl -L https://github.com/docker/compose/releases/download/1.8.0-rc2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n```\n\n## 可用变量说明\n\n| 变量名 | 默认值 | 描述 |\n| -------- | ------------- | ----------- |\n| PORT | 3306 | Specify the MySQL Service Port |\n| TUKUDB_ENGINE | |选择是否启用tokuDB存储引擎 |\n| MAX_CONNECTIONS | 100 | Specified the maximum of parallel connections allowed to use the service |\n| MYSQL_ROOT_PASSWORD | | If set, the root password will be set to this password (only if data-dir was non existent on startup) |\n| MYSQL_DATABASE | | If set, this database will be created (only if data-dir was non existent on startup) |\n| MYSQL_USER | | If set, this user will be created (only if data-dir was no existent on startup) |\n| MYSQL_PASSWORD | | If set, this $MYSQL_USER will be created with this password |\n| LOG_BIN | | Base filename for binary logs (will enable binary logs) |\n| LOG_BIN_INDEX | | Location of the log-bin index file |\n| MAX_ALLOWED_PACKET | 16M | The maximum size of one packet |\n| QUERY_CACHE_SIZE | 16M | The amount of memory allocated for caching query results |\n| INNODB_LOG_FILE_SIZE | 48M | Size in bytes of each log file in the log group |\n| QUERY_CACHE_TYPE | 1 | Set the query cache type 0=OFF, 1=ON, 2=DEMAND |\n| SYNC_BINLOG | 0 | Controls the number of binary log commit groups to collect before synchronizing the binary log to disk. When sync_binlog=0, the binary log is never synchronized to disk, and when sync_binlog is set to a value greater than 0 this number of binary log commit groups is periodically synchronized to disk. When sync_binlog=1, all transactions are synchronized to the binary log before they are committed |\n| INNODB_BUFFER_POOL_SIZE | 128M | The size in bytes of the buffer pool, the memory area where InnoDB caches table and index data |\n| INNODB_FLUSH_METHOD | | Defines the method used to flush data to the InnoDB data files and log files, which can affect I/O throughput. [O_DIRECT O_DSYNC O_DIRECT] http://blog.csdn.net/jiao_fuyou/article/details/16113403 |\n| INNODB_OLD_BLOCKS_TIME | 1000 | Non-zero values protect against the buffer pool being filled up by data that is referenced only for a brief period, such as during a full table scan. Increasing this value offers more protection against full table scans interfering with data cached in the buffer pool. |\n| INNODB_FLUSH_LOG_AT_TRX_COMMIT | 1 | Controls the balance between strict ACID compliance for commit operations, and higher performance that is possible when commit-related I/O operations are rearranged and done in batches. You can achieve better performance by changing the default value, but then you can lose up to a second of transactions in a crash. |\n\n### Galera specific settings\n\n| 变量名 | 默认值 | 描述 |\n| -------- | ------------- | ----------- |\n| GALERA | | If set the galera extension will be enabled |\n| CLUSTER_NAME | | Unique Name that identified the Galera Cluster |\n| NODE_NAME | | Unique Node name that identified this node instance |\n| CLUSTER_ADDRESS | | gcomm:// style resource identifier that provides topology information about the Galera Cluster |\n| REPLICATION_PASSWORD | | Password for the replication user which will be needed to allow state transfers using xtrabackupv2 method |\n\n## Running MariaDB in Standalone Mode\n\n```bash\ndocker run -i -t --rm \\\n-e TIMEZONE=Asia/Shanghai \\\n-e MYSQL_ROOT_PASSWORD=securepassword \\\nbenyoo/mariadb:10.1.14\n```\n## Running MariaDB in Galera Cluster Mode\n\nFor known limitations have a look at https://mariadb.com/kb/en/mariadb/mariadb-galera-cluster-known-limitations\n\n\n### Initializing a new cluster\n\n```bash\ndocker run -i -t --rm \\\n-e TIMEZONE=Asia/Shanghai \\\n-e MYSQL_ROOT_PASSWORD=test \\\n-e REPLICATION_PASSWORD=test \\\n-e GALERA=On \\\n-e NODE_NAME=node1 \\\n-e CLUSTER_NAME=test \\\n-e CLUSTER_ADDRESS=gcomm://ipOrHost1,ipOrHost2,ipOrHost3 \\\nbenyoo/mariadb:10.1.14 --wsrep-new-cluster\n```\n\n### Joining a node to the cluster\n\n```bash\ndocker run -i -t --rm \\\n-e TIMEZONE=Asia/Shanghai \\\n-e MYSQL_ROOT_PASSWORD=test \\\n-e REPLICATION_PASSWORD=test \\\n-e GALERA=On \\\n-e NODE_NAME=node2 \\\n-e CLUSTER_NAME=test \\\n-e CLUSTER_ADDRESS=gcomm://ipOrHost1,ipOrHost2,ipOrHost3 \\\nbenyoo/mariadb:10.1.14\n```\n\nPlease note: if you don't specify the timezone the server will run with UTC time\n\n## Recover strategies\n\nTo fix a split brain in a failed cluster make sure that only one node remains in the cluster and run\n\n`SET GLOBAL wsrep_provider_options='pc.bootstrap=true';`\n\nFor more information about recovering a galera cluster have a look at https://www.percona.com/blog/2014/09/01/galera-replication-how-to-recover-a-pxc-cluster/\n",
  "dockerfile": "FROM benyoo/alpine:3.4.20160812\nMAINTAINER from www.dwhd.org by lookback (mondeolove@gmail.com)\n\nENV DATA_DIR=/data/mariadb\n\nRUN set -x && \\\n\t[ ! -d \"$(dirname ${DATA_DIR})\" ] && mkdir -p $(dirname ${DATA_DIR}) && \\\n\taddgroup -S mysql && adduser -S -h ${DATA_DIR} -s /sbin/nologin -G mysql mysql && \\\n\tapk --update --no-cache upgrade && \\\n\tapk add --update --no-cache 'su-exec>=0.2' socat rsync xtrabackup lsof jemalloc-dev nmap mariadb mariadb-client && \\\n\t/bin/rm -rf /etc/my.cnf{,.d} /var/cache/apk/*\n\n#ENV PATH=${INSTALL_DIR}/bin:$PATH \\\nENV TERM=linux \\\n\tMAX_CONNECTIONS=100 \\\n\tPORT1=3306 PORT2=4444 PORT3=4567 PORT4=4568 \\\n\tMAX_ALLOWED_PACKET=16M \\\n\tQUERY_CACHE_SIZE=16M \\\n\tQUERY_CACHE_TYPE=1 \\\n\tINNODB_BUFFER_POOL_SIZE=128M \\\n\tINNODB_LOG_FILE_SIZE=48M \\\n\tINNODB_FLUSH_METHOD= \\\n\tINNODB_OLD_BLOCKS_TIME=1000 \\\n\tINNODB_FLUSH_LOG_AT_TRX_COMMIT=1 \\\n\tSYNC_BINLOG=0\n\nADD etc /etc/mysql\nADD entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh && \\\n\tsed -i 's/\\r$//g' /entrypoint.sh /etc/mysql/my.cnf /etc/mysql/my.cnf.d/* && \\\n\tmkdir -p /var/lib/mysql && \\\n\tchown -R mysql.mysql /var/lib/mysql /etc/mysql\n\nVOLUME [\"$DATA_DIR\"]\nEXPOSE $PORT1 $PORT2 $PORT3 $PORT4\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"mysqld\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "etc",
        "dest": "/etc/mysql"
      },
      {
        "source": "entrypoint.sh",
        "dest": "/entrypoint.sh"
      }
    ],
    "expose": [
      "$PORT1 $PORT2 $PORT3 $PORT4"
    ],
    "volume": [
      "[\"$DATA_DIR\"]"
    ],
    "run": [
      "set -x && \t[ ! -d \"$(dirname ${DATA_DIR})\" ] && mkdir -p $(dirname ${DATA_DIR}) && \taddgroup -S mysql && adduser -S -h ${DATA_DIR} -s /sbin/nologin -G mysql mysql && \tapk --update --no-cache upgrade && \tapk add --update --no-cache 'su-exec>=0.2' socat rsync xtrabackup lsof jemalloc-dev nmap mariadb mariadb-client && \t/bin/rm -rf /etc/my.cnf{,.d} /var/cache/apk/*",
      "chmod +x /entrypoint.sh && \tsed -i 's/\\r$//g' /entrypoint.sh /etc/mysql/my.cnf /etc/mysql/my.cnf.d/* && \tmkdir -p /var/lib/mysql && \tchown -R mysql.mysql /var/lib/mysql /etc/mysql"
    ],
    "workdir": [],
    "from": "benyoo/alpine:3.4.20160812",
    "maintainer": "from www.dwhd.org by lookback (mondeolove@gmail.com)",
    "env": {
      "DATA_DIR": "/data/mariadb"
    },
    "entrypoint": "[\"/entrypoint.sh\"]",
    "cmd": "[\"mysqld\"]"
  },
  "source_repository_url": "https://github.com/xiaoyawl/docker-mariadb.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/xiaoyawl/docker-mariadb",
  "docker_repository": "benyoo/mariadb",
  "docker_image": "benyoo/mariadb",
  "parameters_schema": {
    "DATA_DIR": {
      "default": "/data/mariadb",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        "$PORT1 $PORT2 $PORT3 $PORT4"
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "benyoo/mariadb",
  "revision": "10.0.27",
  "uris": [
    "https://hub.docker.com/r/benyoo/mariadb",
    "https://hub.docker.com/v2/repositories/benyoo/mariadb",
    "https://github.com/xiaoyawl/docker-mariadb.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Data Store/Relational/MariaDB"
  ],
  "info_url": "https://hub.docker.com/r/benyoo/mariadb",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}