{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/sameersbn/redis",
    "repository_url": "https://hub.docker.com/v2/repositories/sameersbn/redis",
    "tags_url": "https://hub.docker.com/v2/repositories/sameersbn/redis/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/sameersbn/redis/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/sameersbn/redis/autobuild",
    "user": "sameersbn",
    "name": "redis",
    "namespace": "sameersbn",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 36,
    "pull_count": 1551818,
    "last_updated": "2016-10-16T13:44:01.592893Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 69104630,
        "id": 35371,
        "repository": 14781,
        "creator": 3263,
        "last_updater": 3263,
        "last_updated": "2016-10-16T13:44:01.223912Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "sameersbn/docker-redis"
  },
  "name": "sameersbn/redis Docker container",
  "description": "",
  "readme": "[![Circle CI](https://circleci.com/gh/sameersbn/docker-redis.svg?style=shield)](https://circleci.com/gh/sameersbn/docker-redis) [![Docker Repository on Quay.io](https://quay.io/repository/sameersbn/redis/status \"Docker Repository on Quay.io\")](https://quay.io/repository/sameersbn/redis)\n\n# sameersbn/redis\n\n- [Introduction](#introduction)\n  - [Contributing](#contributing)\n  - [Issues](#issues)\n- [Getting started](#getting-started)\n  - [Installation](#installation)\n  - [Quickstart](#quickstart)\n  - [Command-line arguments](#command-line-arguments)\n  - [Persistence](#persistence)\n  - [Authentication](#authentication)\n  - [Logs](#logs)\n- [Maintenance](#maintenance)\n  - [Upgrading](#upgrading)\n  - [Shell Access](#shell-access)\n\n# Introduction\n\n`Dockerfile` to create a [Docker](https://www.docker.com/) container image for [Redis](http://redis.io/).\n\nRedis is an open source, BSD licensed, advanced key-value cache and store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets, sorted sets, bitmaps and hyperloglogs.\n\n## Contributing\n\nIf you find this image useful here's how you can help:\n\n- Send a pull request with your awesome features and bug fixes\n- Help users resolve their [issues](../../issues?q=is%3Aopen+is%3Aissue).\n- Support the development of this image with a [donation](http://www.damagehead.com/donate/)\n\n## Issues\n\nBefore reporting your issue please try updating Docker to the latest version and check if it resolves the issue. Refer to the Docker [installation guide](https://docs.docker.com/installation) for instructions.\n\nSELinux users should try disabling SELinux using the command `setenforce 0` to see if it resolves the issue.\n\nIf the above recommendations do not help then [report your issue](../../issues/new) along with the following information:\n\n- Output of the `docker version` and `docker info` commands\n- The `docker run` command or `docker-compose.yml` used to start the image. Mask out the sensitive bits.\n- Please state if you are using [Boot2Docker](http://www.boot2docker.io), [VirtualBox](https://www.virtualbox.org), etc.\n\n# Getting started\n\n## Installation\n\nAutomated builds of the image are available on [Dockerhub](https://hub.docker.com/r/sameersbn/redis) and is the recommended method of installation.\n\n> **Note**: Builds are also available on [Quay.io](https://quay.io/repository/sameersbn/redis)\n\n```bash\ndocker pull sameersbn/redis:latest\n```\n\nAlternatively you can build the image yourself.\n\n```bash\ndocker build -t sameersbn/redis github.com/sameersbn/docker-redis\n```\n\n## Quickstart\n\nStart Redis using:\n\n```bash\ndocker run --name redis -d --restart=always \\\n  --publish 6379:6379 \\\n  --volume /srv/docker/redis:/var/lib/redis \\\n  sameersbn/redis:latest\n```\n\n*Alternatively, you can use the sample [docker-compose.yml](docker-compose.yml) file to start the container using [Docker Compose](https://docs.docker.com/compose/)*\n\n## Command-line arguments\n\nYou can customize the launch command of Redis server by specifying arguments to `redis-server` on the `docker run` command. For example the following command will enable the Append Only File persistence mode:\n\n```bash\ndocker run --name redis -d --restart=always \\\n  --publish 6379:6379 \\\n  --volume /srv/docker/redis:/var/lib/redis \\\n  sameersbn/redis:latest --appendonly yes\n```\n\nPlease refer to http://redis.io/topics/config for further details.\n\n## Persistence\n\nFor Redis to preserve its state across container shutdown and startup you should mount a volume at `/var/lib/redis`.\n\n> *The [Quickstart](#quickstart) command already mounts a volume for persistence.*\n\nSELinux users should update the security context of the host mountpoint so that it plays nicely with Docker:\n\n```bash\nmkdir -p /srv/docker/redis\nchcon -Rt svirt_sandbox_file_t /srv/docker/redis\n```\n\n## Authentication\n\nTo secure your Redis server with a password, specify the password in the `REDIS_PASSWORD` variable while starting the container.\n\n```bash\ndocker run --name redis -d --restart=always \\\n  --publish 6379:6379 \\\n  --env 'REDIS_PASSWORD=redispassword' \\\n  --volume /srv/docker/redis:/var/lib/redis \\\n  sameersbn/redis:latest\n```\n\nClients connecting to the Redis server will now have to authenticate themselves with the password `redispassword`.\n\nAlternatively, the same can also be achieved using the [Command-line arguments](#command-line-arguments) feature to specify the `--requirepass` argument.\n\n## Logs\n\nBy default the Redis server logs are sent to the standard output. Using the [Command-line arguments](#command-line-arguments) feature you can configure the Redis server to send the log output to a file using the `--logfile` argument:\n\n```bash\ndocker run --name redis -d --restart=always \\\n  --publish 6379:6379 \\\n  --volume /srv/docker/redis:/var/lib/redis \\\n  sameersbn/redis:latest --logfile /var/log/redis/redis-server.log\n```\n\nTo access the Redis logs you can use `docker exec`. For example:\n\n```bash\ndocker exec -it redis tail -f /var/log/redis/redis-server.log\n```\n\n# Maintenance\n\n## Upgrading\n\nTo upgrade to newer releases:\n\n  1. Download the updated Docker image:\n\n  ```bash\n  docker pull sameersbn/redis:latest\n  ```\n\n  2. Stop the currently running image:\n\n  ```bash\n  docker stop redis\n  ```\n\n  3. Remove the stopped container\n\n  ```bash\n  docker rm -v redis\n  ```\n\n  4. Start the updated image\n\n  ```bash\n  docker run --name redis -d \\\n    [OPTIONS] \\\n    sameersbn/redis:latest\n  ```\n\n## Shell Access\n\nFor debugging and maintenance purposes you may want access the containers shell. If you are using Docker version `1.3.0` or higher you can access a running containers shell by starting `bash` using `docker exec`:\n\n```bash\ndocker exec -it redis bash\n```\n",
  "dockerfile": "FROM sameersbn/ubuntu:14.04.20161014\nMAINTAINER sameer@damagehead.com\n\nENV REDIS_USER=redis \\\n    REDIS_DATA_DIR=/var/lib/redis \\\n    REDIS_LOG_DIR=/var/log/redis\n\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y redis-server \\\n && sed 's/^daemonize yes/daemonize no/' -i /etc/redis/redis.conf \\\n && sed 's/^bind 127.0.0.1/bind 0.0.0.0/' -i /etc/redis/redis.conf \\\n && sed 's/^# unixsocket /unixsocket /' -i /etc/redis/redis.conf \\\n && sed 's/^# unixsocketperm 755/unixsocketperm 777/' -i /etc/redis/redis.conf \\\n && sed '/^logfile/d' -i /etc/redis/redis.conf \\\n && rm -rf /var/lib/apt/lists/*\n\nCOPY entrypoint.sh /sbin/entrypoint.sh\nRUN chmod 755 /sbin/entrypoint.sh\n\nEXPOSE 6379/tcp\nVOLUME [\"${REDIS_DATA_DIR}\"]\nENTRYPOINT [\"/sbin/entrypoint.sh\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      6379
    ],
    "volume": [
      "[\"${REDIS_DATA_DIR}\"]"
    ],
    "run": [
      "apt-get update  && DEBIAN_FRONTEND=noninteractive apt-get install -y redis-server  && sed 's/^daemonize yes/daemonize no/' -i /etc/redis/redis.conf  && sed 's/^bind 127.0.0.1/bind 0.0.0.0/' -i /etc/redis/redis.conf  && sed 's/^# unixsocket /unixsocket /' -i /etc/redis/redis.conf  && sed 's/^# unixsocketperm 755/unixsocketperm 777/' -i /etc/redis/redis.conf  && sed '/^logfile/d' -i /etc/redis/redis.conf  && rm -rf /var/lib/apt/lists/*",
      "chmod 755 /sbin/entrypoint.sh"
    ],
    "workdir": [],
    "from": "sameersbn/ubuntu:14.04.20161014",
    "maintainer": "sameer@damagehead.com",
    "env": {
      "REDIS_USER": "redis",
      "": "",
      "REDIS_DATA_DIR": "/var/lib/redis",
      "REDIS_LOG_DIR": "/var/log/redis"
    },
    "copy": "entrypoint.sh /sbin/entrypoint.sh",
    "entrypoint": "[\"/sbin/entrypoint.sh\"]"
  },
  "source_repository_url": "git://github.com/sameersbn/docker-redis.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/sameersbn/docker-redis",
  "docker_repository": "sameersbn/redis",
  "docker_image": "sameersbn/redis",
  "parameters_schema": {
    "REDIS_USER": {
      "default": "redis",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "REDIS_DATA_DIR": {
      "default": "/var/lib/redis",
      "type": "string",
      "mapping": "environment_variable"
    },
    "REDIS_LOG_DIR": {
      "default": "/var/log/redis",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        6379
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "sameersbn/redis",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/sameersbn/redis",
    "https://hub.docker.com/v2/repositories/sameersbn/redis",
    "git://github.com/sameersbn/docker-redis.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Data Store/Key-Value/Redis"
  ],
  "info_url": "https://hub.docker.com/r/sameersbn/redis",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}