{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/yellowblackandwhite/alpine-kibana",
    "repository_url": "https://hub.docker.com/v2/repositories/yellowblackandwhite/alpine-kibana",
    "tags_url": "https://hub.docker.com/v2/repositories/yellowblackandwhite/alpine-kibana/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/yellowblackandwhite/alpine-kibana/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/yellowblackandwhite/alpine-kibana/autobuild",
    "user": "yellowblackandwhite",
    "name": "alpine-kibana",
    "namespace": "yellowblackandwhite",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 532,
    "last_updated": "2016-09-28T12:45:32.909067Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 46868703,
        "id": 3156241,
        "repository": 707024,
        "creator": 284579,
        "last_updater": 284579,
        "last_updated": "2016-09-28T12:45:31.884455Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "yellowblackwhite/docker-images"
  },
  "name": "yellowblackandwhite/alpine-kibana Docker container",
  "description": "Kibana in docker container",
  "readme": null,
  "dockerfile": "FROM yellowblackandwhite/alpine-base\nMAINTAINER Pavel Litvinenko <gerasim13@gmail.com>\nUSER root\n# Set environment variables\nENV KIBANA_VERSION 4.5.1\nENV PKG_NAME kibana\nENV PKG_PLATFORM linux-x64\nENV KIBANA_PKG $PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM\nENV KIBANA_CONFIG /opt/$PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM/config/kibana.yml\nENV KIBANA_URL https://download.elastic.co/$PKG_NAME/$PKG_NAME/$KIBANA_PKG.tar.gz\nENV ELASTICSEARCH_HOST elasticsearch\nENV PATH /opt/kibana/bin:$PATH\n# Download Kibana\nRUN apk update \\\n    && apk add ca-certificates curl nodejs \\\n    && mkdir -p /opt \\\n    && curl -o /tmp/$KIBANA_PKG.tar.gz $KIBANA_URL \\\n    && tar -xvzf /tmp/$KIBANA_PKG.tar.gz -C /opt/ \\\n    && ln -s /opt/$KIBANA_PKG /opt/$PKG_NAME \\\n    && sed -ri \"s!^(\\#\\s*)?(elasticsearch\\.url:).*!\\2 'http://elasticsearch:9200'!\" $KIBANA_CONFIG \\\n    && grep -q 'elasticsearch:9200' $KIBANA_CONFIG \\\n    && rm -rf /tmp/*.tar.gz /var/cache/apk/* /opt/$KIBANA_PKG/node/ \\\n    && mkdir -p /opt/$KIBANA_PKG/node/bin/ \\\n    && ln -s $(which node) /opt/$PKG_NAME/node/bin/node \\\n    && chown -R 1000:1000 /opt/$PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM\n# Expose\n# Working directory\nEXPOSE 5601\nCOPY entrypoint.sh /\nUSER alpine\nWORKDIR [\"/opt/$KIBANA_PKG\"]\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"kibana\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      5601
    ],
    "volume": [],
    "run": [
      "apk update     && apk add ca-certificates curl nodejs     && mkdir -p /opt     && curl -o /tmp/$KIBANA_PKG.tar.gz $KIBANA_URL     && tar -xvzf /tmp/$KIBANA_PKG.tar.gz -C /opt/     && ln -s /opt/$KIBANA_PKG /opt/$PKG_NAME     && sed -ri \"s!^(\\#\\s*)?(elasticsearch\\.url:).*!\\2 'http://elasticsearch:9200'!\" $KIBANA_CONFIG     && grep -q 'elasticsearch:9200' $KIBANA_CONFIG     && rm -rf /tmp/*.tar.gz /var/cache/apk/* /opt/$KIBANA_PKG/node/     && mkdir -p /opt/$KIBANA_PKG/node/bin/     && ln -s $(which node) /opt/$PKG_NAME/node/bin/node     && chown -R 1000:1000 /opt/$PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM"
    ],
    "workdir": [
      "[\"/opt/$KIBANA_PKG\"]"
    ],
    "from": "yellowblackandwhite/alpine-base",
    "maintainer": "Pavel Litvinenko <gerasim13@gmail.com>",
    "user": "alpine",
    "env": {
      "KIBANA_VERSION": "4.5.1",
      "PKG_NAME": "kibana",
      "PKG_PLATFORM": "linux-x64",
      "KIBANA_PKG": "$PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM",
      "KIBANA_CONFIG": "/opt/$PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM/config/kibana.yml",
      "KIBANA_URL": "https://download.elastic.co/$PKG_NAME/$PKG_NAME/$KIBANA_PKG.tar.gz",
      "ELASTICSEARCH_HOST": "elasticsearch",
      "PATH": "/opt/kibana/bin:$PATH"
    },
    "copy": "entrypoint.sh /",
    "entrypoint": "[\"/entrypoint.sh\"]",
    "cmd": "[\"kibana\"]"
  },
  "source_repository_url": "git@bitbucket.org:yellowblackwhite/docker-images.git",
  "source_repository_type": "git",
  "source_repository_provider": "bitbucket",
  "source_repository_web_url": "https://bitbucket.org/yellowblackwhite/docker-images",
  "docker_repository": "yellowblackandwhite/alpine-kibana",
  "docker_image": "yellowblackandwhite/alpine-kibana",
  "parameters_schema": {
    "KIBANA_VERSION": {
      "default": "4.5.1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PKG_NAME": {
      "default": "kibana",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PKG_PLATFORM": {
      "default": "linux-x64",
      "type": "string",
      "mapping": "environment_variable"
    },
    "KIBANA_PKG": {
      "default": "$PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM",
      "type": "string",
      "mapping": "environment_variable"
    },
    "KIBANA_CONFIG": {
      "default": "/opt/$PKG_NAME-$KIBANA_VERSION-$PKG_PLATFORM/config/kibana.yml",
      "type": "string",
      "mapping": "environment_variable"
    },
    "KIBANA_URL": {
      "default": "https://download.elastic.co/$PKG_NAME/$PKG_NAME/$KIBANA_PKG.tar.gz",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ELASTICSEARCH_HOST": {
      "default": "elasticsearch",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/opt/kibana/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        5601
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "yellowblackandwhite/alpine-kibana",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/yellowblackandwhite/alpine-kibana",
    "https://hub.docker.com/v2/repositories/yellowblackandwhite/alpine-kibana",
    "git@bitbucket.org:yellowblackwhite/docker-images.git"
  ],
  "labels": [
    "Docker"
  ],
  "info_url": "https://hub.docker.com/r/yellowblackandwhite/alpine-kibana",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}