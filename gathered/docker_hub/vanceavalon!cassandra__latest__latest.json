{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/vanceavalon/cassandra",
    "repository_url": "https://hub.docker.com/v2/repositories/vanceavalon/cassandra",
    "tags_url": "https://hub.docker.com/v2/repositories/vanceavalon/cassandra/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/vanceavalon/cassandra/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/vanceavalon/cassandra/autobuild",
    "user": "vanceavalon",
    "name": "cassandra",
    "namespace": "vanceavalon",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 50,
    "last_updated": "2015-11-14T00:53:02.272627Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 608654457,
        "id": 137722,
        "repository": 110378,
        "creator": 179917,
        "last_updater": 179917,
        "last_updated": "2015-11-14T00:53:07.677798Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "vanceavalon/cassandra"
  },
  "name": "vanceavalon/cassandra Docker container",
  "description": "",
  "readme": "cassandra\n=========\nHow to use:\n\nThis repo is designed to set up a Cassandra (1.2) cluster in a virtual CoreOS environment using Docker and etcd.\n\nHow does it work?\n==========\n\nMaking sure you have at least a 3 node cluster, submit and start the CassandraSeed.Service file in fleet. This will create a docker container with a cassandra instance assuming the role of a seed, and will then push this information to etcd (details in start-seed.sh). After that, submit and start, with fleet, a cassnode@*.service file***. This will set up a container with a cassandra node configured to grab from etcd the IP of the cassandra cluster seed, and will then join the cluster with that information. \n\nYou can either pull this repo and build the dockerfile locally, but the service files will pull the repo on each run regardless. I will try to keep both sources the same so you don't have to keep pulling different repos with minor differences\n\n[Public Docker Build](https://registry.hub.docker.com/u/vanceavalon/cassandra/)\n\n***Make sure that you copy and rename the cassnode@*.service file to whichever node number you need, presumably starting at cassnode@1.service. \n",
  "dockerfile": "FROM jamesdbloom/docker-java7-maven\n\n#Install Cassandra\nRUN git clone https://github.com/vanceavalon/cassandra.git\nRUN cd cassandra && bash install-cassandra.sh\n\n#Make Persisted host directory\nRUN mkdir /mountedvol     \nWORKDIR /local/git/cassandra\nEXPOSE 9160 9142 7000 7001\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      9160
    ],
    "volume": [],
    "run": [
      "git clone https://github.com/vanceavalon/cassandra.git",
      "cd cassandra && bash install-cassandra.sh",
      "mkdir /mountedvol     "
    ],
    "workdir": [
      "/local/git/cassandra"
    ],
    "from": "jamesdbloom/docker-java7-maven"
  },
  "source_repository_url": "https://github.com/vanceavalon/cassandra.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/vanceavalon/cassandra",
  "docker_repository": "vanceavalon/cassandra",
  "docker_image": "vanceavalon/cassandra",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        9160
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "vanceavalon/cassandra",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/vanceavalon/cassandra",
    "https://hub.docker.com/v2/repositories/vanceavalon/cassandra",
    "https://github.com/vanceavalon/cassandra.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Data Store/Key-Value/Cassandra"
  ],
  "info_url": "https://hub.docker.com/r/vanceavalon/cassandra",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}