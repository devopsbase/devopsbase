{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/million12/nginx",
    "repository_url": "https://hub.docker.com/v2/repositories/million12/nginx",
    "tags_url": "https://hub.docker.com/v2/repositories/million12/nginx/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/million12/nginx/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/million12/nginx/autobuild",
    "user": "million12",
    "name": "nginx",
    "namespace": "million12",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 8,
    "pull_count": 4855,
    "last_updated": "2016-10-09T12:48:45.935647Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "v0.5.0",
        "full_size": 102996485,
        "id": 2364268,
        "repository": 54547,
        "creator": 22393,
        "last_updater": 22393,
        "last_updated": "2016-10-09T12:48:45.522688Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v0.4.0",
        "full_size": 136933507,
        "id": 2364270,
        "repository": 54547,
        "creator": 22393,
        "last_updater": 22393,
        "last_updated": "2016-09-05T10:23:53.700592Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 136965365,
        "id": 41877,
        "repository": 54547,
        "creator": 22393,
        "last_updater": 22393,
        "last_updated": "2016-09-05T10:23:51.755648Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "million12/docker-nginx"
  },
  "name": "million12/nginx Docker container",
  "description": "Nginx: extensible, nicely tuned for better performance.",
  "readme": "# Nginx docker container\n[![Circle CI](https://circleci.com/gh/million12/docker-nginx.svg?style=svg)](https://circleci.com/gh/million12/docker-nginx)\n\nThis is a [million12/nginx](https://registry.hub.docker.com/u/million12/nginx/) docker container with Nginx web server, nicely tuned for a better performance.\n\n# Features\n\n##### - HTTP/2 support\n\n##### - directory structure\n```\n/data/www # meant to contain web content\n/data/conf/nginx/ # extra Nginx configs to customise its settings (read more below)\n```\nThe container will re-create the above structure in case it's missing (i.e. when using empty external /data volume container).\n\n##### - default vhost\n\nDefault *catch-all* vhost might be generated for you if you set `NGINX_GENERATE_DEFAULT_VHOST=true`. It will serve the content from `/data/www/default` location.\n\n##### - dummy SSL certificates\n\nThe default *catch-all* vhost is configured to work on HTTPS as well.\n\n##### - internal HTTP/HTTPS proxy (if requested)\n\nSet `SET_INTERNAL_PROXY_ON_PORT` and/or `SET_INTERNAL_HTTPS_PROXY_ON_PORT` to have internal transparent proxy on specified port. Useful when working with [BrowserSync](http://www.browsersync.io/) using `--proxy` option.\n\n##### - error logging\n\nNginx `error_log` is set to `stderr` and therefore Nginx log is available only via `docker logs [contaienr]`, together with supervisor logs.\n\nThis is probably best approach if you'd like to source your logs from outside the container (e.g. via `docker logs` or CoreOS `journald') and you don't want to worry about logging and log management inside your container.\n\n##### - graceful reload after config change\n\nFolders `/etc/nginx/` and `/data/conf/nginx/` are monitored for any config changes and, when they happen, Nginx is gracefully reloaded.\n\n##### - Nginx status page\n\nNginx status page is configured under `/nginx_status` URL on the default vhost. Also see `STATUS_PAGE_ALLOWED_IP` env variable described below.\nEample output:  \n\t\n\tActive connections: 1 \n\tserver accepts handled requests\n\t11475 11475 13566 \n\tReading: 0 Writing: 1 Waiting: 0\n\n\n## Usage\n\n```\ndocker run -d --name=web -p=80:80 -p=443:443 -e \"NGINX_GENERATE_DEFAULT_VHOST=true\" million12/nginx\n```\n\nWith data container:  \n```\ndocker run -d --name=web-data -v /data busybox\ndocker run -d --name=web --volumes-from=web-data -p=80:80 -e \"NGINX_GENERATE_DEFAULT_VHOST=true\" million12/nginx\n```\n\nAfter that you can see the default vhost content (something like: '*default vhost # created on [timestamp]*') when you open http://CONTAINER_IP:PORT/ in the browser.\n\n\n## Customise\n\nModify Nginx global configuration (http {} context) by adding configs in following locations:  \n```\n/etc/nginx/nginx.d/*.conf\n/data/conf/nginx/nginx.d/*.conf\n\n/etc/nginx/addon.d/*.conf\n/data/conf/nginx/addon.d/*.conf\n```\n\nAdd vhosts by placing their configs in following locations:  \n```\n/etc/nginx/hosts.d/*.conf\n/data/conf/nginx/hosts.d/*.conf\n```\n\nExtra configs to include inside vhost.conf, in *server {}* context (already included in the default vhost):  \n```\ninclude     /etc/nginx/conf.d/default-*.conf;\ninclude     /data/conf/nginx/conf.d/default-*.conf;\n```\n\n\n## ENV variables\n\n**NGINX_GENERATE_DEFAULT_VHOST**  \nDefault: `NGINX_GENERATE_DEFAULT_VHOST=false`  \nExample: `NGINX_GENERATE_DEFAULT_VHOST=true`  \nWhen set to `true`, dummy default (*catch-all*) Nginx vhost config file will be generated in `/etc/nginx/hosts.d/default.conf`.  \nUse it if you need it, for example to test that your Nginx is working correctly AND/OR if you don't create default vhost config for your app but you still want some dummy catch-all vhost.\n\n**SET_INTERNAL_PROXY_ON_PORT**  \nDefault: `SET_INTERNAL_PROXY_ON_PORT=null`  \nExample: `SET_INTERNAL_PROXY_ON_PORT=3000`  \nConfigure additional proxy listening on `SET_INTERNAL_PROXY_ON_PORT` port.  \nThis might be useful during development, when container's ports are exposed outside under different ones. Because of different reasons you might want to access the project **inside** the container under the same port number as the one exposed outside. This is particularly handy for running inside the container e.g. integration tests or working with [BrowserSync](http://www.browsersync.io/) using `--proxy` option.\n\n**SET_INTERNAL_HTTPS_PROXY_ON_PORT**  \nDefault: `SET_INTERNAL_HTTPS_PROXY_ON_PORT=null`  \nExample: `SET_INTERNAL_HTTPS_PROXY_ON_PORT=3000`  \nSimilar to `SET_INTERNAL_PROXY_ON_PORT`, but the proxy then listens with SSL support and proxies the request to HTTPS as well. Note: if you use both, `SET_INTERNAL_PROXY_ON_PORT` and `SET_INTERNAL_HTTPS_PROXY_ON_PORT` options (to have HTTP and HTTPS support), you of course need to use two different port numbers.\n\n**STATUS_PAGE_ALLOWED_IP**  \nDefault: `STATUS_PAGE_ALLOWED_IP=127.0.0.1`  \nExample: `STATUS_PAGE_ALLOWED_IP=10.1.1.0/16`  \nConfigure ip address that would be allowed to see nginx status page on `/nginx_status` URL.  \n**NOTE**: if `NGINX_GENERATE_DEFAULT_VHOST=false` (which is the default setting), you'll need to add:\n```\ninclude     /etc/nginx/conf.d/stub-status.conf;\n```\nto your own/custom vhost file (which you surely create for your application). Add it to the `server {}` context, this will define the `/nginx_status` location.\n\n\n## Authors\n\nAuthor: Marcin Ryzycki (<marcin@m12.io>)  \nAuthor: Przemyslaw Ozgo (<linux@ozgo.info>)\n\n---\n\n**Sponsored by [Prototype Brewery](http://prototypebrewery.io/)** - the new prototyping tool for building highly-interactive prototypes of your website or web app. Built on top of [Neos CMS](https://www.neos.io/) and [Zurb Foundation](http://foundation.zurb.com/) framework.\n",
  "dockerfile": "FROM million12/centos-supervisor:latest\nMAINTAINER Marcin Ryzycki marcin@m12.io, Przemyslaw Ozgo linux@ozgo.info\n\nADD container-files/etc/yum.repos.d/nginx.repo /etc/yum.repos.d/\n\nRUN \\\n  yum install -y nginx && \\\n  yum clean all && \\\n\n  `# Rename nginx:nginx user/group to www:www, also set uid:gid to 80:80 (just to make it nice)` \\\n  groupmod --gid 80 --new-name www nginx && \\\n  usermod --uid 80 --home /data/www --gid 80 --login www --shell /bin/bash --comment www nginx && \\\n\n  `# Clean-up /etc/nginx/ directory from all not needed stuff...` \\\n  rm -rf /etc/nginx/*.d /etc/nginx/*_params && \\\n\n  `# Prepare dummy SSL certificates` \\\n  mkdir -p /etc/nginx/ssl && \\\n  openssl genrsa -out /etc/nginx/ssl/dummy.key 2048 && \\\n  openssl req -new -key /etc/nginx/ssl/dummy.key -out /etc/nginx/ssl/dummy.csr -subj \"/C=GB/L=London/O=Company Ltd/CN=docker\" && \\\n  openssl x509 -req -days 3650 -in /etc/nginx/ssl/dummy.csr -signkey /etc/nginx/ssl/dummy.key -out /etc/nginx/ssl/dummy.crt\n\nADD container-files /\n\nENV \\\n  NGINX_GENERATE_DEFAULT_VHOST=false \\\n  STATUS_PAGE_ALLOWED_IP=127.0.0.1\n\nEXPOSE 80 443\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "container-files/etc/yum.repos.d/nginx.repo",
        "dest": "/etc/yum.repos.d/"
      },
      {
        "source": "container-files",
        "dest": "/"
      }
    ],
    "expose": [
      80
    ],
    "volume": [],
    "run": [
      "  yum install -y nginx &&   yum clean all && "
    ],
    "workdir": [],
    "from": "million12/centos-supervisor:latest",
    "maintainer": "Marcin Ryzycki marcin@m12.io, Przemyslaw Ozgo linux@ozgo.info",
    "env": {
      "": "",
      "NGINX_GENERATE_DEFAULT_VHOST": "false",
      "STATUS_PAGE_ALLOWED_IP": "127.0.0.1"
    }
  },
  "source_repository_url": "https://github.com/million12/docker-nginx.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/million12/docker-nginx",
  "docker_repository": "million12/nginx",
  "docker_image": "million12/nginx",
  "parameters_schema": {
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NGINX_GENERATE_DEFAULT_VHOST": {
      "default": "false",
      "type": "string",
      "mapping": "environment_variable"
    },
    "STATUS_PAGE_ALLOWED_IP": {
      "default": "127.0.0.1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "million12/nginx",
  "revision": "v0.5.0",
  "uris": [
    "https://hub.docker.com/r/million12/nginx",
    "https://hub.docker.com/v2/repositories/million12/nginx",
    "https://github.com/million12/docker-nginx.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Web Server/Nginx"
  ],
  "info_url": "https://hub.docker.com/r/million12/nginx",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}