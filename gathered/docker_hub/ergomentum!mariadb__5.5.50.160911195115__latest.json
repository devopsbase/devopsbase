{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/ergomentum/mariadb",
    "repository_url": "https://hub.docker.com/v2/repositories/ergomentum/mariadb",
    "tags_url": "https://hub.docker.com/v2/repositories/ergomentum/mariadb/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/ergomentum/mariadb/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/ergomentum/mariadb/autobuild",
    "user": "ergomentum",
    "name": "mariadb",
    "namespace": "ergomentum",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 82,
    "last_updated": "2016-09-11T19:53:53.753437Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "5.5.50.160911195115",
        "full_size": 111965878,
        "id": 4785726,
        "repository": 547618,
        "creator": 156549,
        "last_updater": 156549,
        "last_updated": "2016-09-11T19:53:53.352927Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 111965480,
        "id": 2120932,
        "repository": 547618,
        "creator": 156549,
        "last_updater": 156549,
        "last_updated": "2016-09-11T19:50:23.365136Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.5.50.160828183141",
        "full_size": 111965094,
        "id": 4548513,
        "repository": 547618,
        "creator": 156549,
        "last_updater": 156549,
        "last_updated": "2016-08-28T18:36:17.773752Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.5.50.160828000342",
        "full_size": 142189647,
        "id": 4544083,
        "repository": 547618,
        "creator": 156549,
        "last_updater": 156549,
        "last_updated": "2016-08-28T00:06:14.350470Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.5.47.160807162036",
        "full_size": 104858507,
        "id": 4202052,
        "repository": 547618,
        "creator": 156549,
        "last_updater": 156549,
        "last_updated": "2016-08-07T16:23:21.812298Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.5.47.160720170845",
        "full_size": 149762612,
        "id": 3926709,
        "repository": 547618,
        "creator": 156549,
        "last_updater": 156549,
        "last_updated": "2016-07-20T17:11:04.293827Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.5.47.160412180415",
        "full_size": 155858836,
        "id": 2630472,
        "repository": 547618,
        "creator": 156549,
        "last_updater": 156549,
        "last_updated": "2016-04-12T18:06:20.674520Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "5.5.44.160313130246",
        "full_size": 152707621,
        "id": 2291448,
        "repository": 547618,
        "creator": 156549,
        "last_updater": 156549,
        "last_updated": "2016-03-13T13:06:13.564082Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "5.5.44.160225204758",
        "full_size": 152700696,
        "id": 2120957,
        "repository": 547618,
        "creator": 156549,
        "last_updater": 156549,
        "last_updated": "2016-02-25T20:53:57.857953Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "ergomentum/mariadb"
  },
  "name": "ergomentum/mariadb Docker container",
  "description": "Ergomentum MariaDB",
  "readme": "[![Docker Image Stars](https://img.shields.io/docker/stars/ergomentum/mariadb.svg)](\n  https://hub.docker.com/r/ergomentum/mariadb/)\n[![Docker Image Pulls](https://img.shields.io/docker/pulls/ergomentum/mariadb.svg)](\n  https://hub.docker.com/r/ergomentum/mariadb/)\n\n# Ergomentum MariaDB\nProvides a [MariaDB](https://mariadb.org/) image based on the [Ergomentum CentOS image](\nhttps://hub.docker.com/r/ergomentum/centos/).\n\nMariaDB can be considered as a drop-in replacement for [MySQL](http://www.mysql.com/).\n\nSince a database deals inevitably with data persistence whereas container are feasible stateless we have to [manage](\nhttps://docs.docker.com/engine/userguide/containers/dockervolumes/) this. The recommended approach for this are [named\nvolumes](https://docs.docker.com/engine/reference/commandline/volume_create/).\n\nBecause \"multiple containers writing to a single shared volume can cause data corruption\"\n<sup>[[1]](#sharedvolumes)</sup> each data container should not be used by more than one database container. Using more\nthan one databases you have to made the trade-off between one database container with multiple databases vs. multiple\ndatabase containers with one database each. The former needs lowest resources but violates the tightly coupling of the\ncontainers. The later ensures the tightly coupling but multiplies the resource requirements. This image supports both\nscenarios.\n\nAnother decision is how to initialize your databases. You must at least provide the MySQL `root` user password as an\n[environment variable](#environment-variables) starting a container from this image the first time (assuming an empty\ndirectory `/var/lib/mysql` for the database files). You may create a MySQL non root user at the same time and initialize\na database with additional environment variables. If you use your database container for more than one database you have\nto start your database container one time for each database. Finally you may want to restart your database container one\nmore time skipping the MySQL `root` password in the environment variables for security reasons.\n\nAdditionally you can place any number of SQL files in the volume `/docker-entrypoint-initdb.d` to initialize your\ndatabase. Each filename must end with `.sql` [Each statement must be on a single line.](\nhttps://mariadb.com/kb/en/mariadb/server-system-variables/#init_file) Or you can connect with the MySQL `root` user to\nthe running database container to initialize additional databases.\n\nTo backup your database you have to options:\n* Physical backup\n* Logical backup\n\nFor a physical backup you have top stop your database service to ensure a consistent state for all database files. Then\nyou can copy all files from `/var/lib/mysql`.\n\nFor a [logical backup](#backup) you leave your database service running and run commands below.\n\n_Notice:_ There is no chance to do a hot backup like [Percona XtraBackup](\nhttps://www.percona.com/software/mysql-database/percona-xtrabackup) running only one process per container.\n\n## Volumes\n<dl>\n  <dt><code>/docker-entrypoint-initdb.d</code></dt>\n  <dd>Files for database initialization (see above).</dd>\n</dl>\n\n## Environment Variables\n_Warning:_ Keep in mind \"that all environment variables originating from Docker within a container are made available\nto any container that links to it. This could have serious security implications if sensitive data is stored in them.\"\n<sup>[[2]](#dockerlinks)</sup>\nAs a consequence it is strictly recommended to prefer a [user defined network](\nhttps://docs.docker.com/engine/userguide/networking/dockernetworks/#user-defined-networks) to [legacy container links](\nhttps://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/) for maximum isolation.\n\n<dl>\n  <dt><code>MYSQL_ROOT_PASSWORD</code></dt>\n  <dd>Mandatory to start the database container first time with an empty directory <code>/var/lib/mysql</code>.</dd>\n\n  <dt><code>MYSQL_DATABASE</code></dt>\n  <dd>Optional database name used to create a new database if not exists. If not set <code>MYSQL_USER</code> will be\n  used as default.</dd>\n\n  <dt><code>MYSQL_USER</code></dt>\n  <dd>Optional database user used to create a new database.</dd>\n\n  <dt><code>MYSQL_PASSWORD</code></dt>\n  <dd>Mandatory if <code>MYSQL_USER</code> is set.</dd>\n</dl>\n\n## Exposed Ports\n<dl>\n  <dt><code>3306</code></dt>\n  <dd>The MySQL default port.</dd>\n</dl>\n\n## Usage\nIs is not necessary to use this image as base image. Simply create a container from it.\n\n### Create a named volume to store database files\nIt's recommended to store store database files in a named volume.\n\n```bash\ndocker \\\n  volume \\\n  create \\\n  --name mydbdata\n```\n\n### Start daemonized MySQL server with public port binding creating no new databases\n```bash\ndocker \\\n  volume \\\n  create \\\n  --name mydbdata\ndocker \\\n  run \\\n  -d \\\n  -e MYSQL_ROOT_PASSWORD=secret \\\n  -p 3306:3306 \\\n  -v mydbdata:/var/lib/mysql \\\n  ergomentum/mariadb\n```\n\nThis allows you to connect with any mysql client to initialize the database:\n\n<pre>\nmysql -h<var>ip_of_your_docker_host</var> -uroot -psecret\n</pre>\n\n### Start daemonized MySQL server with custom network to be used from another container\n```bash\ndocker \\\n  volume \\\n  create \\\n  --name mydbdata\ndocker \\\n  network \\\n  create \\\n  --driver bridge \\\n  mynetwork\ndocker \\\n  run \\\n  -d \\\n  -e MYSQL_ROOT_PASSWORD=secret \\\n  -p 3306:3306 \\\n  -v mydbdata:/var/lib/mysql \\\n  --net=mynetwork \\\n  --name=mydbservice \\\n  ergomentum/mariadb\ndocker \\\n  run \\\n  --rm \\\n  -ti \\\n  --net=mynetwork \\\n  ergomentum/mariadb\n```\n\n_Notice:_ There is no [container linking](\nhttps://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/) used. There are no environment\nvariable from the database container exposed. You must know the credentials to connect to the database container.\n\n### Get inside a running database container\n```bash\ndocker \\\n  volume \\\n  create \\\n  --name mydbdata\ndocker \\\n  run \\\n  -d \\\n  -e MYSQL_ROOT_PASSWORD=secret \\\n  -p 3306:3306 \\\n  -v mydbdata:/var/lib/mysql \\\n  --name=mydbservice \\\n  ergomentum/mariadb\ndocker \\\n  exec \\\n  -it \\\n  mydbservice \\\n  bash\n```\n\n### View Logs\n```bash\ndocker \\\n  volume \\\n  create \\\n  --name mydbdata\ndocker \\\n  run \\\n  -d \\\n  -e MYSQL_ROOT_PASSWORD=secret \\\n  -p 3306:3306 \\\n  -v mydbdata:/var/lib/mysql \\\n  --name=mydbservice \\\n  ergomentum/mariadb\ndocker \\\n  logs \\\n  mydbservice\n```\n\n### Backup\n```bash\ndocker \\\n  volume \\\n  create \\\n  --name mydbdata\ndocker \\\n  network \\\n  create \\\n  --driver bridge \\\n  mynetwork\ndocker \\\n  run \\\n  -d \\\n  -e MYSQL_ROOT_PASSWORD=secret \\\n  -p 3306:3306 \\\n  -v mydbdata:/var/lib/mysql \\\n  --net=mynetwork \\\n  --name=mydbservice \\\n  ergomentum/mariadb\ndocker \\\n  run \\\n  --rm \\\n  -it \\\n  --net=mynetwork \\\n  ergomentum/mariadb\nmysqldump -hmydbservice -uroot -psecret --single-transaction --all-databases \\\n> \"mydbservice_$(date -u +'%y-%m-%d_%H-%M-%S').sql\"\n```\n\n### Restore\n```bash\ndocker \\\n  stop \\\n  mydbservice\ndocker \\\n  run \\\n  -d \\\n  -e MYSQL_ROOT_PASSWORD=secret \\\n  --net=mynetwork \\\n  --name=mydbservice2 \\\n  ergomentum/mariadb\ndocker \\\n  run \\\n  --rm \\\n  -i \\\n  --net=mynetwork \\\n  ergomentum/mariadb\nmysql -hmydbservice2 -uroot -psecret < *.sql\n```\n\n## Contributing\nTo contribute a feature or a bugfix please open a [pull request](https://github.com/ergomentum/mariadb/pulls) on\n[GitHub](https://github.com/ergomentum/mariadb/).\n\nSee [CONTRIBUTING](https://github.com/ergomentum/mariadb/blob/master/CONTRIBUTING.md) for details.\n\n## License\nSee the [LICENSE](https://github.com/ergomentum/mariadb/blob/master/LICENSE.md) file for license\nrights and limitations (Apache License, Version 2.0).\n\n## References\n<a id=\"sharedvolumes\">1</a>.\nhttps://docs.docker.com/engine/userguide/containers/dockervolumes/#important-tips-on-using-shared-volumes\n\n<a id=\"dockerlinks\">2</a>.\nhttps://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/\n",
  "dockerfile": "FROM ergomentum/centos:7.2.160911182133\n\nMAINTAINER \\\n  Ergomentum <build@ergomentum.org>\n\nLABEL \\\n  vendor=\"Ergomentum\" \\\n  license=\"Apache 2.0\"\n\nRUN \\\n  # Workaround for https://bugzilla.redhat.com/show_bug.cgi?id=1213602\n  touch /var/lib/rpm/* && \\\n  yum install mariadb-server && \\\n  yum clean all && \\\n  install -d '/docker-entrypoint-initdb.d' -o mysql -g mysql && \\\n  echo -e 'skip-host-cache\\nskip-name-resolve\\nlocal-infile=0' | \\\n  awk '{ print } $1 == \"[mysqld]\" && c == 0 { c = 1; system(\"cat\") }' \\\n  /etc/my.cnf > /etc/my.cnf.tmp && \\\n  mv /etc/my.cnf{.tmp,} && \\\n  rm -f /var/log/mariadb/mariadb.log && \\\n  ln -s /dev/stderr /var/log/mariadb/mariadb.log\n\nVOLUME \\\n  [\"/docker-entrypoint-initdb.d\"]\n\nCOPY \\\n  entrypoint.sh /\n\nENTRYPOINT \\\n  [\"/entrypoint.sh\"]\n\nUSER \\\n  mysql\n\nEXPOSE \\\n  3306\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      3306
    ],
    "volume": [
      "  [\"/docker-entrypoint-initdb.d\"]"
    ],
    "run": [
      "  # Workaround for https://bugzilla.redhat.com/show_bug.cgi?id=1213602"
    ],
    "workdir": [],
    "from": "ergomentum/centos:7.2.160911182133",
    "maintainer": "  Ergomentum <build@ergomentum.org>",
    "label": "  vendor=\"Ergomentum\"   license=\"Apache 2.0\"",
    "copy": "  entrypoint.sh /",
    "entrypoint": "  [\"/entrypoint.sh\"]",
    "user": "  mysql"
  },
  "source_repository_url": "https://github.com/ergomentum/mariadb.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/ergomentum/mariadb",
  "docker_repository": "ergomentum/mariadb",
  "docker_image": "ergomentum/mariadb",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        3306
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "ergomentum/mariadb",
  "revision": "5.5.50.160911195115",
  "uris": [
    "https://hub.docker.com/r/ergomentum/mariadb",
    "https://hub.docker.com/v2/repositories/ergomentum/mariadb",
    "https://github.com/ergomentum/mariadb.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Data Store/Relational/MariaDB"
  ],
  "info_url": "https://hub.docker.com/r/ergomentum/mariadb",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}