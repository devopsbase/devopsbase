{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/ubuntudesign/django-app",
    "repository_url": "https://hub.docker.com/v2/repositories/ubuntudesign/django-app",
    "tags_url": "https://hub.docker.com/v2/repositories/ubuntudesign/django-app/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/ubuntudesign/django-app/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/ubuntudesign/django-app/autobuild",
    "user": "ubuntudesign",
    "name": "django-app",
    "namespace": "ubuntudesign",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 80,
    "last_updated": "2016-08-25T10:54:44.804092Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "v1.0.8",
        "full_size": 271866840,
        "id": 4504049,
        "repository": 757634,
        "creator": 144725,
        "last_updater": 144725,
        "last_updated": "2016-08-25T10:54:44.282924Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 271866950,
        "id": 3525579,
        "repository": 757634,
        "creator": 144725,
        "last_updater": 144725,
        "last_updated": "2016-08-25T10:49:28.825685Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.0.7",
        "full_size": 271866606,
        "id": 4503401,
        "repository": 757634,
        "creator": 144725,
        "last_updater": 144725,
        "last_updated": "2016-08-25T10:07:24.009085Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.0.6",
        "full_size": 261184274,
        "id": 3804244,
        "repository": 757634,
        "creator": 144725,
        "last_updater": 144725,
        "last_updated": "2016-07-12T15:51:17.889860Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.0.5",
        "full_size": 261184196,
        "id": 3802438,
        "repository": 757634,
        "creator": 144725,
        "last_updater": 144725,
        "last_updated": "2016-07-12T14:26:50.453708Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.0.4",
        "full_size": 261184142,
        "id": 3783625,
        "repository": 757634,
        "creator": 144725,
        "last_updater": 144725,
        "last_updated": "2016-07-11T15:42:27.840927Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.0.3",
        "full_size": 261177146,
        "id": 3700742,
        "repository": 757634,
        "creator": 144725,
        "last_updater": 144725,
        "last_updated": "2016-07-05T09:52:00.209416Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.0.2",
        "full_size": 261177169,
        "id": 3691978,
        "repository": 757634,
        "creator": 144725,
        "last_updater": 144725,
        "last_updated": "2016-07-04T14:07:59.031892Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.0.1",
        "full_size": 262810447,
        "id": 3527599,
        "repository": 757634,
        "creator": 144725,
        "last_updater": 144725,
        "last_updated": "2016-06-22T01:35:03.550023Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.0.0",
        "full_size": 262810445,
        "id": 3525583,
        "repository": 757634,
        "creator": 144725,
        "last_updater": 144725,
        "last_updated": "2016-06-21T22:19:49.696595Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "ubuntudesign/docker-django-app"
  },
  "name": "ubuntudesign/django-app Docker container",
  "description": "An image for running the webteam's Django apps.",
  "readme": "# ubuntudesign/django-app docker image\n\nA docker image for running Django projects in local development, where they correspond to the expected format.\n\n## Project format\n\nThis image is meant for running Django projects which:\n\n- Define all required dependencies in `./requirements.txt`\n- Are compatible with Python 2 (python 3 support on its way)\n\n## Usage\n\nBy default, the image will install any requirements from `/app/requirements.txt` then run the standard Django development server from `/app` on the `$PORT` port (default `8000`) inside the container.\n\n### Basic usage\n\nFor the most basic usage, run the following from your application directory:\n\n``` bash\n$ docker run -ti --volume `pwd`:/app --publish 8000:8000 ubuntudesign/django-app\n```\n\nThis will mount your application directory at `/app` inside the container, install requirements from `/app/requirements.txt`, run the Django development server with `manage.py runserver 0.0.0.0:8000` and link that port in the container to port `8000` on the host machine.\n\nAll being well, your application should now be available at <localhost:8000>.\n\n### Other manage.py commands\n\nAny arguments after the `ubuntudesign/django-app` will be passed to `manage.py`. So, for example, adding `shell` will run a Django shell:\n\n``` bash\n$ docker run -ti --volume `pwd`:/app ubuntudesign/django-app shell\n```\n\nOr passing `help` will display the help for `manage.py`.\n\n### Saving dependencies\n\nThe above command works but will install requirements from scratch every time it's run. To avoid this, create a named data volume for the installed python packages like so:\n\n``` bash\n$ docker run -ti \\\n         --volume `pwd`:/app \\\n         --volume dependencies:/usr/local/lib/python2.7/site-packages \\\n         --publish 8000:8000 \\\n         ubuntudesign/django-app\n```\n\nThe first time you run the above command it will save the python packages into the a data volume called `dependencies`. On subsequent runs it will load the same data volume, and only re-install requirements if the `requirements` directory has been updated.\n\n### docker-compose.yml\n\n[docker-compose](https://docs.docker.com/compose/) provides a standard way of\ndefining docker services for a project within a `docker-compose.yml` file.\n\nA standard `docker-compose.yml` for the `django-app` image:\n\n``` yaml\n# docker-compose.yml\n\nwebapp:\n    image: ubuntudesign/django-app::v1.0.8\n    volumes:\n      - \"dependencies:/usr/local/lib/python2.7/site-packages\"\n      - .:/app\n    ports:\n      - \"8000:8000\"\n```\n\n### Adding a database\n\nFor Django apps which require a database (most do), the `django-app` image will look for a host called `db`, and if it exists it will wait for a response on port `5432` before running any commands.\n\nNote: All this image does is check if the `db:5432` connection exists. It's up to you to [configure your Django app](https://docs.djangoproject.com/en/1.9/ref/settings/#databases) to actually use this database connection.\n\nBy default, if no arguments are passed after `docker ubuntudesign/django-app`, upon finding a database it will first run `manage.py migrate --noinput` before running the development server.\n\nHere's an example of a `docker-compose.yml` with a PostgreSQL database:\n\n``` yaml\n# docker-compose.yml\n\nwebapp:\n  image: ubuntudesign/django-app:v1.0.8\n  volumes:\n    - \"dependencies:/usr/local/lib/python2.7/site-packages\"\n    - .:/app\n  ports:\n    - \"8000:8000\"\n  links:\n    - db\n\ndb:\n  image: postgres\n```\n\n### Customisation\n\nThe container can be customised by overriding any of the following environment variables:\n\n- `REQUIREMENTS_PATH`: The path to the requirements file from which to install dependencies (default: `requirements.txt`)\n- `DB_HOST`: The hostname on which to look for a database connection (default: `db`)\n- `DB_PORT`: The port on which to look for a database connection (default: `5432`)\n\nE.g., to run a Django app with a requirements file at `dev-requirements.txt`, and connect to a database called `postgres_db`:\n\n``` bash\ndocker run -ti \\\n       --env REQUIREMENTS_PATH=dev-requiremnts.txt \\\n       --env DB_HOST=postgres_db \\\n       --volume `pwd`:/app \\\n       --volume dependencies:/usr/local/lib/python2.7/site-packages \\\n       --publish 8000:8000 \\\n       ubuntudesign/django-app\n```\n",
  "dockerfile": "FROM python:2.7\n\n# Expect to find application in /app\nWORKDIR /app\n\n# Expect to find the entrypoint script at /entrypoint\nENTRYPOINT [\"/entrypoint\"]\n\n# Default config for database service\nENV DB_HOST=\"db\" DB_PORT=\"5432\"\n\n# Debug tools\nRUN pip install ipdb\n\n# Default config for where we expect to find requirements\nENV REQUIREMENTS_PATH=\"requirements.txt\"\n\n# Persist the requirements data\nENV MODULES_DIR=\"/usr/local/lib/python2.7/site-packages\"\nVOLUME [$MODULES_DIR]\n\n# Add binaries to image\nADD entrypoint /entrypoint\nADD bin /bin/\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "entrypoint",
        "dest": "/entrypoint"
      },
      {
        "source": "bin",
        "dest": "/bin/"
      }
    ],
    "expose": [],
    "volume": [
      "[$MODULES_DIR]"
    ],
    "run": [
      "pip install ipdb"
    ],
    "workdir": [
      "/app"
    ],
    "from": "python:2.7",
    "entrypoint": "[\"/entrypoint\"]",
    "env": {
      "DB_HOST": "\"db\"",
      "DB_PORT": "\"5432\"",
      "REQUIREMENTS_PATH": "\"requirements.txt\"",
      "MODULES_DIR": "\"/usr/local/lib/python2.7/site-packages\""
    }
  },
  "source_repository_url": "https://github.com/ubuntudesign/docker-django-app.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/ubuntudesign/docker-django-app",
  "docker_repository": "ubuntudesign/django-app",
  "docker_image": "ubuntudesign/django-app",
  "parameters_schema": {
    "DB_HOST": {
      "default": "\"db\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DB_PORT": {
      "default": "\"5432\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "REQUIREMENTS_PATH": {
      "default": "\"requirements.txt\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MODULES_DIR": {
      "default": "\"/usr/local/lib/python2.7/site-packages\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "ubuntudesign/django-app",
  "revision": "v1.0.8",
  "uris": [
    "https://hub.docker.com/r/ubuntudesign/django-app",
    "https://hub.docker.com/v2/repositories/ubuntudesign/django-app",
    "https://github.com/ubuntudesign/docker-django-app.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Python",
    "Mode/Executable/Image",
    "Type/Infrastructure/Operating System/Linux/Ubuntu"
  ],
  "info_url": "https://hub.docker.com/r/ubuntudesign/django-app",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}