{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/linuxserver/couchpotato",
    "repository_url": "https://hub.docker.com/v2/repositories/linuxserver/couchpotato",
    "tags_url": "https://hub.docker.com/v2/repositories/linuxserver/couchpotato/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/linuxserver/couchpotato/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/linuxserver/couchpotato/autobuild",
    "user": "linuxserver",
    "name": "couchpotato",
    "namespace": "linuxserver",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 117,
    "pull_count": 1150787,
    "last_updated": "2016-10-15T10:23:53.734462Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 45836509,
        "id": 217292,
        "repository": 200775,
        "creator": 299852,
        "last_updater": 299852,
        "last_updated": "2016-10-15T10:23:53.376406Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "linuxserver/couchpotato"
  },
  "name": "linuxserver/couchpotato Docker container",
  "description": "A CouchPotato container, brought to you by LinuxServer.io. ",
  "readme": "[linuxserverurl]: https://linuxserver.io\n[forumurl]: https://forum.linuxserver.io\n[ircurl]: https://www.linuxserver.io/irc/\n[podcasturl]: https://www.linuxserver.io/podcast/\n\n[![linuxserver.io](https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png)][linuxserverurl]\n\nThe [LinuxServer.io][linuxserverurl] team brings you another container release featuring easy user mapping and community support. Find us for support at:\n* [forum.linuxserver.io][forumurl]\n* [IRC][ircurl] on freenode at `#linuxserver.io`\n* [Podcast][podcasturl] covers everything to do with getting the most from your Linux Server plus a focus on all things Docker and containerisation!\n\n# linuxserver/couchpotato\n\n\n[![](https://images.microbadger.com/badges/image/linuxserver/couchpotato.svg)](http://microbadger.com/images/linuxserver/couchpotato \"Get your own image badge on microbadger.com\")[![Docker Pulls](https://img.shields.io/docker/pulls/linuxserver/couchpotato.svg)][hub][![Docker Stars](https://img.shields.io/docker/stars/linuxserver/couchpotato.svg)][hub][![Build Status](http://jenkins.linuxserver.io:8080/buildStatus/icon?job=Dockers/LinuxServer.io/linuxserver-couchpotato)](http://jenkins.linuxserver.io:8080/job/Dockers/job/LinuxServer.io/job/linuxserver-couchpotato/)\n[hub]: https://hub.docker.com/r/linuxserver/couchpotato/\n\n[CouchPotato](https://couchpota.to) is an automatic NZB and torrent downloader. You can keep a \"movies I want\" list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.\n\n[![couchpotato](https://couchpota.to/media/images/full.png)][couchurl]\n[couchurl]: https://couchpota.to/\n\n## Usage\n\n```\ndocker create \\\n\t--name=couchpotato \\\n\t-v <path to data>:/config \\\n\t-v <path to data>:/downloads \\\n\t-v <path to data>:/movies \\\n\t-e PGID=<gid> -e PUID=<uid>  \\\n\t-e TZ=<timezone> \\\n\t-p 5050:5050 \\\n\tlinuxserver/couchpotato\n```\n\n**Parameters**\n\n* `-p 5050` - the port(s)\n* `-v /config` - Couchpotato Application Data\n* `-v /downloads` - Downloads Folder\n* `-v /movies` - Movie Share\n* `-e PGID` for for GroupID - see below for explanation\n* `-e PUID` for for UserID - see below for explanation\n* `-e TZ` for timezone information, eg Europe/London\n\nIt is based on alpine-linux with S6 overlay, for shell access whilst the container is running do `docker exec -it couchpotato /bin/bash`.\n\n### User / Group Identifiers\n\nSometimes when using data volumes (`-v` flags) permissions issues can arise between the host OS and the container. We avoid this issue by allowing you to specify the user `PUID` and group `PGID`. Ensure the data volume directory on the host is owned by the same user you specify and it will \"just work\" â„¢.\n\nIn this instance `PUID=1001` and `PGID=1001`. To find yours use `id user` as below:\n\n```\n  $ id <dockeruser>\n    uid=1001(dockeruser) gid=1001(dockergroup) groups=1001(dockergroup)\n```\n\n## Setting up the application\nAccess the webui at `<your-ip>:5050`, for more information check out [CouchPotato](https://couchpota.to).\n\n## Info\n\n* To monitor the logs of the container in realtime `docker logs -f couchpotato`.\n\n## Version Log\n\n+ **30.09.16:** Fix umask.\n+ **09.09.16:** Add layer badges to README\n+ **27.08.16:** Add badges to README\n+ **08.08.16:** Rebase to alpine linux\n+ **12.11.15:** Misc Code Cleanup\n+ **02.10.15:** Change to python baseimage. \n+ **28.07.15:** Updated to latest baseimage (for testing), and a fix to autoupdate. \n",
  "dockerfile": "FROM lsiobase/alpine.python\nMAINTAINER sparklyballs\n\n# set python to use utf-8 rather than ascii.\nENV PYTHONIOENCODING=\"UTF-8\"\n\n# add local files\nCOPY root/ /\n\n# ports and volumes\nEXPOSE 5050\nWORKDIR /app/couchpotato\nVOLUME /config /downloads /movies\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      5050
    ],
    "volume": [
      "/config /downloads /movies"
    ],
    "run": [],
    "workdir": [
      "/app/couchpotato"
    ],
    "from": "lsiobase/alpine.python",
    "maintainer": "sparklyballs",
    "env": {
      "PYTHONIOENCODING": "\"UTF-8\""
    },
    "copy": "root/ /"
  },
  "source_repository_url": "https://github.com/linuxserver/couchpotato.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/linuxserver/couchpotato",
  "docker_repository": "linuxserver/couchpotato",
  "docker_image": "linuxserver/couchpotato",
  "parameters_schema": {
    "PYTHONIOENCODING": {
      "default": "\"UTF-8\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        5050
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "linuxserver/couchpotato",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/linuxserver/couchpotato",
    "https://hub.docker.com/v2/repositories/linuxserver/couchpotato",
    "https://github.com/linuxserver/couchpotato.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Type/Infrastructure/Operating System/Linux"
  ],
  "info_url": "https://hub.docker.com/r/linuxserver/couchpotato",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}