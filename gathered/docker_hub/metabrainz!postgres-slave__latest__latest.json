{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/metabrainz/postgres-slave",
    "repository_url": "https://hub.docker.com/v2/repositories/metabrainz/postgres-slave",
    "tags_url": "https://hub.docker.com/v2/repositories/metabrainz/postgres-slave/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/metabrainz/postgres-slave/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/metabrainz/postgres-slave/autobuild",
    "user": "metabrainz",
    "name": "postgres-slave",
    "namespace": "metabrainz",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 59,
    "last_updated": "2016-10-15T01:39:02.240194Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 244745113,
        "id": 4951814,
        "repository": 928561,
        "creator": 934688,
        "last_updater": 934688,
        "last_updated": "2016-10-15T01:38:06.642019Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "metabrainz/docker-postgres"
  },
  "name": "metabrainz/postgres-slave Docker container",
  "description": "Production postgres slave image",
  "readme": "# docker-postgres\n\nMetaBrainz postgres + pgbouncer container.\n\nRunning `make` produces three images:\n * `metabrainz/haproxy-pgbouncer-readonly`\n * `metabrainz/postgres-master`\n * `metabrainz/postgres-slave`\n",
  "dockerfile": "FROM metabrainz/postgres-base\n\n# These services should not be started until data is copied from the master.\nRUN touch \\\n    /etc/service/pgbouncer/down \\\n    /etc/service/postgres/down\n\nRUN mkdir -p /var/tmp/pg_archive && \\\n    chown -R postgres:postgres /var/tmp/pg_archive\n\nCOPY consul-template.conf rsyncd.secrets.ctmpl rsyncd.conf.ctmpl /etc/\nCOPY pg_hba.conf postgresql.conf.ctmpl /etc/postgresql/\nCOPY recovery.conf.ctmpl /var/lib/postgresql/data/\nCOPY rsyncd.service /etc/service/rsyncd/run\n\nVOLUME [\"/var/tmp/pg_archive\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [
      "[\"/var/tmp/pg_archive\"]"
    ],
    "run": [
      "touch     /etc/service/pgbouncer/down     /etc/service/postgres/down",
      "mkdir -p /var/tmp/pg_archive &&     chown -R postgres:postgres /var/tmp/pg_archive"
    ],
    "workdir": [],
    "from": "metabrainz/postgres-base",
    "copy": "rsyncd.service /etc/service/rsyncd/run"
  },
  "source_repository_url": "https://github.com/metabrainz/docker-postgres.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/metabrainz/docker-postgres",
  "docker_repository": "metabrainz/postgres-slave",
  "docker_image": "metabrainz/postgres-slave",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "metabrainz/postgres-slave",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/metabrainz/postgres-slave",
    "https://hub.docker.com/v2/repositories/metabrainz/postgres-slave",
    "https://github.com/metabrainz/docker-postgres.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Data Store/Relational/PostgreSQL"
  ],
  "info_url": "https://hub.docker.com/r/metabrainz/postgres-slave",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}