{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/unidata/tomcat-docker",
    "repository_url": "https://hub.docker.com/v2/repositories/unidata/tomcat-docker",
    "tags_url": "https://hub.docker.com/v2/repositories/unidata/tomcat-docker/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/unidata/tomcat-docker/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/unidata/tomcat-docker/autobuild",
    "user": "unidata",
    "name": "tomcat-docker",
    "namespace": "unidata",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 186,
    "last_updated": "2016-10-14T20:06:52.926171Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "8",
        "full_size": 168654258,
        "id": 4806102,
        "repository": 907838,
        "creator": 210021,
        "last_updater": 210021,
        "last_updated": "2016-10-14T20:06:52.602654Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 168654213,
        "id": 4773040,
        "repository": 907838,
        "creator": 210021,
        "last_updater": 210021,
        "last_updated": "2016-10-14T19:57:39.444693Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "Unidata/tomcat-docker"
  },
  "name": "unidata/tomcat-docker Docker container",
  "description": "Security-hardened Tomcat Docker container.",
  "readme": "# Unidata Tomcat Docker\n\n[![Travis Status](https://travis-ci.org/Unidata/tomcat-docker.svg?branch=master)](https://travis-ci.org/Unidata/tomcat-docker)\n\nThis repository contains files necessary to build and run a security hardened Tomcat Docker container, based off of the canonical [Tomcat base image](https://hub.docker.com/_/tomcat/). The Unidata Tomcat Docker images associated with this repository are [available on Docker Hub](https://hub.docker.com/r/unidata/tomcat-docker/).\n\n## Security Hardening Measures\n\nThis Tomcat container was security hardened according to [OWASP recommendations](https://www.owasp.org/index.php/Securing_tomcat). Specifically,\n\n- Eliminated default Tomcat web applications\n- Run Tomcat with unprivileged user `tomcat`\n- All files in `CATALINA_HOME` are owned by user `tomcat`\n- Files in `CATALINA_HOME/conf` are read only (`400`) by user `tomcat`\n- Files in `CATALINA_HOME/logs` are write only (`300`) by user `tomcat`\n- Server version information is obscured to user\n- Stack traces are not returned to user\n- Container-wide `umask` of `007`\n\n## Versions\n\n- `unidata/tomcat-docker:8` based off of [canonical Tomcat 8 container](https://hub.docker.com/_/tomcat/) (`tomcat:jre8`).\n\n## HTTP Over SSL\n\nThis Tomcat container can support HTTP over SSL. For example, generate a self-signed certificate with `openssl` (or better yet, obtain a real certificate from a certificate authority):\n\n```bash\nopenssl req -new -newkey rsa:4096 -days 3650 -nodes -x509 -subj \\\n    \"/C=US/ST=Colorado/L=Boulder/O=Unidata/CN=tomcat.example.com\" -keyout \\\n    ./ssl.key -out ./ssl.crt\n```\n\nThen augment the `server.xml` from this repository with this additional XML snippet for [Tomcat SSL capability](https://tomcat.apache.org/tomcat-8.0-doc/ssl-howto.html):\n\n```xml\n<Connector port=\"8443\"\n       maxThreads=\"150\"\n       enableLookups=\"false\"\n       disableUploadTimeout=\"true\"\n       acceptCount=\"100\"\n       scheme=\"https\"\n       secure=\"true\"\n       SSLEnabled=\"true\"\n       SSLCertificateFile=\"${catalina.base}/conf/ssl.crt\"\n       SSLCertificateKeyFile=\"${catalina.base}/conf/ssl.key\" />\n```\n\nMount over the existing `server.xml` and add the SSL certificate and private key with:\n\n```bash\ndocker run -it -d  -p 80:8080 -p 443:8443 \\\n    -v /path/to/server.xml:/usr/local/tomcat/conf/server.xml \\\n    -v /path/to/ssl.crt:/usr/local/tomcat/conf/ssl.crt \\\n    -v /path/to/ssl.key:/usr/local/tomcat/conf/ssl.key \\\n    unidata/tomcat-docker:8\n```\n\nor if using `docker-compose` the `docker-compose.yml` will look like:\n\n```yaml\nunidata-tomcat:\n  image: unidata/tomcat-docker:8\n  ports:\n    - \"80:8080\"\n    - \"443:8443\"\n  volumes:\n    - /path/to/ssl.crt:/usr/local/tomcat/conf/ssl.crt\n    - /path/to/ssl.key:/usr/local/tomcat/conf/ssl.key\n    - /path/to/server.xml:/usr/local/tomcat/conf/server.xml\n```\n",
  "dockerfile": "###\n# Dockerfile for Unidata Tomcat.\n###\n\nFROM tomcat:jre8\n\n###\n# Usual maintenance\n###\n\nRUN apt-get update && apt-get install -y zip\n###\n# Tomcat User\n###\n\nRUN groupadd -r tomcat && \\\n\tuseradd -g tomcat -d ${CATALINA_HOME} -s /sbin/nologin \\\n  -c \"Tomcat user\" tomcat\n\n###\n# Eliminate default web applications\n###\n\nRUN rm -rf ${CATALINA_HOME}/webapps/* && \\\n    rm -rf ${CATALINA_HOME}/server/webapps/* \n\nWORKDIR ${CATALINA_HOME}/lib\n\n###\n# Obscuring server info\n###\n\nRUN mkdir -p org/apache/catalina/util/ && \\\n    unzip -j catalina.jar org/apache/catalina/util/ServerInfo.properties \\\n    -d org/apache/catalina/util/\nRUN sed -i 's/server.info=.*/server.info=Apache Tomcat/g' \\\n    org/apache/catalina/util/ServerInfo.properties\nRUN zip -ur catalina.jar org/apache/catalina/util/ServerInfo.properties\nRUN rm -rf org\n\nWORKDIR ${CATALINA_HOME}\n\nRUN sed -i 's/<Connector/<Connector server=\"Apache\"/g' \\\n    ${CATALINA_HOME}/conf/server.xml\n\n###\n# Capture stack traces to non-existent file\n###\n\nCOPY error-page.xml.snippet ${CATALINA_HOME}\n\nRUN sed -i '$d' ${CATALINA_HOME}/conf/web.xml && \\\n    cat error-page.xml.snippet >> ${CATALINA_HOME}/conf/web.xml && \\\n    rm error-page.xml.snippet\n\n###\n# Setting restrictive umask container-wide\n###\n\nRUN echo \"session optional pam_umask.so\" >> /etc/pam.d/common-session\nRUN sed -i 's/UMASK.*022/UMASK           007/g' /etc/login.defs\n\n###\n# Change CATALINA_HOME ownership to tomcat user and tomcat group\n# Restrict permissions on conf and log directories\n###\n\nRUN chown -R tomcat:tomcat ${CATALINA_HOME} && \\\n    chmod 400 ${CATALINA_HOME}/conf/* && \\\n    chmod 300 ${CATALINA_HOME}/logs/.\n\n###\n# gosu is a non-optimal way to deal with the mismatches between Unix user and\n# group IDs inside versus outside the container resulting in permission\n# headaches when writing to directory outside the container.\n###\n\n# Installation instructions copy/pasted from https://github.com/tianon/gosu\n# minus ca-certificates which we are inheriting from parent container\nENV GOSU_VERSION 1.9\nRUN set -x \\\n    && apt-get update && apt-get install -y --no-install-recommends wget && rm -rf /var/lib/apt/lists/* \\\n    && dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \\\n    && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n    && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n    && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n    && chmod +x /usr/local/bin/gosu \\\n    && gosu nobody true \\\n    && apt-get purge -y --auto-remove wget\n\nCOPY entrypoint.sh /\n\nRUN chmod +x /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\n###\n# Start container\n###\n\nCMD [\"catalina.sh\", \"run\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "apt-get update && apt-get install -y zip",
      "groupadd -r tomcat && \tuseradd -g tomcat -d ${CATALINA_HOME} -s /sbin/nologin   -c \"Tomcat user\" tomcat",
      "rm -rf ${CATALINA_HOME}/webapps/* &&     rm -rf ${CATALINA_HOME}/server/webapps/* ",
      "mkdir -p org/apache/catalina/util/ &&     unzip -j catalina.jar org/apache/catalina/util/ServerInfo.properties     -d org/apache/catalina/util/",
      "sed -i 's/server.info=.*/server.info=Apache Tomcat/g'     org/apache/catalina/util/ServerInfo.properties",
      "zip -ur catalina.jar org/apache/catalina/util/ServerInfo.properties",
      "rm -rf org",
      "sed -i 's/<Connector/<Connector server=\"Apache\"/g'     ${CATALINA_HOME}/conf/server.xml",
      "sed -i '$d' ${CATALINA_HOME}/conf/web.xml &&     cat error-page.xml.snippet >> ${CATALINA_HOME}/conf/web.xml &&     rm error-page.xml.snippet",
      "echo \"session optional pam_umask.so\" >> /etc/pam.d/common-session",
      "sed -i 's/UMASK.*022/UMASK           007/g' /etc/login.defs",
      "chown -R tomcat:tomcat ${CATALINA_HOME} &&     chmod 400 ${CATALINA_HOME}/conf/* &&     chmod 300 ${CATALINA_HOME}/logs/.",
      "set -x     && apt-get update && apt-get install -y --no-install-recommends wget && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"     && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"     && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"     && export GNUPGHOME=\"$(mktemp -d)\"     && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc     && chmod +x /usr/local/bin/gosu     && gosu nobody true     && apt-get purge -y --auto-remove wget",
      "chmod +x /entrypoint.sh"
    ],
    "workdir": [
      "${CATALINA_HOME}/lib",
      "${CATALINA_HOME}"
    ],
    "from": "tomcat:jre8",
    "copy": "entrypoint.sh /",
    "env": {
      "GOSU_VERSION": "1.9"
    },
    "entrypoint": "[\"/entrypoint.sh\"]",
    "cmd": "[\"catalina.sh\", \"run\"]"
  },
  "source_repository_url": "https://github.com/Unidata/tomcat-docker.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/Unidata/tomcat-docker",
  "docker_repository": "unidata/tomcat-docker",
  "docker_image": "unidata/tomcat-docker",
  "parameters_schema": {
    "GOSU_VERSION": {
      "default": "1.9",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "unidata/tomcat-docker",
  "revision": "8",
  "uris": [
    "https://hub.docker.com/r/unidata/tomcat-docker",
    "https://hub.docker.com/v2/repositories/unidata/tomcat-docker",
    "https://github.com/Unidata/tomcat-docker.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Application Server/Tomcat"
  ],
  "info_url": "https://hub.docker.com/r/unidata/tomcat-docker",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}