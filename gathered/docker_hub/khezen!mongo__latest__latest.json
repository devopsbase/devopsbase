{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/khezen/mongo",
    "repository_url": "https://hub.docker.com/v2/repositories/khezen/mongo",
    "tags_url": "https://hub.docker.com/v2/repositories/khezen/mongo/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/khezen/mongo/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/khezen/mongo/autobuild",
    "user": "khezen",
    "name": "mongo",
    "namespace": "khezen",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 1408,
    "last_updated": "2016-10-15T12:46:47.702070Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 129832151,
        "id": 5172704,
        "repository": 950860,
        "creator": 418416,
        "last_updater": 418416,
        "last_updated": "2016-10-15T12:46:47.427915Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.2.9",
        "full_size": 129832151,
        "id": 5172703,
        "repository": 950860,
        "creator": 418416,
        "last_updater": 418416,
        "last_updated": "2016-10-15T12:46:46.104454Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.2",
        "full_size": 129832151,
        "id": 5172701,
        "repository": 950860,
        "creator": 418416,
        "last_updater": 418416,
        "last_updated": "2016-10-15T12:46:44.753051Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3",
        "full_size": 129832151,
        "id": 5172700,
        "repository": 950860,
        "creator": 418416,
        "last_updater": 418416,
        "last_updated": "2016-10-15T12:46:43.287449Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "Khezen/docker-mongo"
  },
  "name": "khezen/mongo Docker container",
  "description": "MongoDB Docker image including RocksDB storage engine and support for sharded cluster.",
  "readme": "[![](https://images.microbadger.com/badges/image/khezen/mongo.svg)](https://microbadger.com/images/khezen/mongo \"Get your own image badge on microbadger.com\")\n# Supported tags and respective `Dockerfile` links\n\n* `3.2.9`, `3.2`, `3`, `latest` [(3.2/Dockerfile)](https://github.com/Khezen/docker-mongo/blob/v3.2/Dockerfile)\n\n---\n# How To Use\n## docker engine\n```\ndocker run -d -p 27017:27017 -e db_user=test -e db_pwd=test -e database=mongo khezen/mongo:latest   \n```   \n\n## docker-compose\n```\nversion: '2'\nservices:\n    mongod1:\n        image: khezen/mongo:3.2\n        environment:\n            rs_name: rs\n            storage_engine: rocksdb\n        volumes:\n             - /srv/mongo/mongod1:/data/db\n        ports:\n             - \"27017:27017\"\n        network_mode: bridge\n        restart: always\n\n```\n---\n# Environment Variables\n\n## General\n\n##### storage_engine | *wiredTiger*\nDefine the storage engine you want to plug to your mongod server. [mmapv1](https://docs.mongodb.com/manual/core/mmapv1/), [WiredTiger](http://www.WiredTiger.com/) or [RocksDB](http://RocksDB.org/).\n\n##### auth | *n*\nTo enable authentication, set to **y**.\n\n##### admin_user | *admin*\nYou need have a user with **root** permissions, manager of the **admin** database ever present.\n\n##### admin_pwd | *changeme*\nThe password of the **admin_user** above.\n\n##### database\nCreate a new database with this name, the **db_user** and **db_pwd** will be the owner of this database.\n\n##### db_user | *user*\nThe user that manage the **database** above - don't have admin permissions.\n\n##### db_pwd | *changeme*\nThe password of the **db_user** above.\n\n##### dbpath | */data/db*\nThe path that store all data, this setting is useful for *Docker volumes*\n\n##### oplog_size\nDefine the size of [Oplog](https://docs.mongodb.org/manual/tutorial/change-oplog-size/), in megabytes, for example, set **50** to be *50MB*.\n\n## Replica Set\n##### rs_name\nDefine the name of the replica set on which you want this server to be attached.\n\n##### master | *$HOSTNAME*\nDefine the host of the master during replica set init.\n\n##### slaves\nDefine the *host:port* members you want to add to a replica set from its master. See example below:\n\n*(I am using ip adresses in this example but usually you want to use logical names instead)*\n```\nversion: '2'\nservices:\n\n    mongod1:\n        image: khezen/mongo:3\n        environment:\n            rs_name: rs\n            storage_engine: rocksdb\n        volumes:\n             - /srv/mongo/mongod1:/data/db\n        ports:\n             - \"27017:27017\"\n        networks:\n            rs_net:\n                ipv4_address: 172.16.238.11\n        restart: always\n\n    mongod2:\n        image: khezen/mongo:3\n        environment:\n            rs_name: rs\n            storage_engine: rocksdb\n        volumes:\n             - /srv/mongo/mongod2:/data/db\n        ports:\n             - \"27018:27017\"\n        networks:\n            rs_net:\n                ipv4_address: 172.16.238.12\n        restart: always\n\n    mongod3:\n        image: khezen/mongo:3\n        environment:\n            rs_name: rs\n            storage_engine: rocksdb\n            master: 172.16.238.13\n            slaves: 172.16.238.11 172.16.238.12    \n        volumes:\n             - /srv/mongo/mongod3:/data/db\n        ports:\n             - \"27019:27017\"\n        networks:\n            rs_net:\n                ipv4_address: 172.16.238.13\n        restart: always\n\nnetworks:\n  rs_net:\n    driver: bridge\n    ipam:\n        driver: default\n        config:\n        - subnet: 172.16.238.0/24\n          gateway: 172.16.238.1\n```\n\n##### arbitrers\nDefine the *host:port* arbitrers you want to add to a replica set from its master. See example below:\n\n*(I am using ip adresses in this example but usually you want to use logical names instead)*\n```\nversion: '2'\nservices:\n\n    mongod1:\n        image: khezen/mongo:3\n        environment:\n            rs_name: rs\n            storage_engine: rocksdb\n        volumes:\n             - /srv/mongo/mongod1:/data/db\n        ports:\n             - \"27017:27017\"\n        networks:\n            rs_net:\n                ipv4_address: 172.16.238.11\n        restart: always\n\n    mongod2:\n        image: khezen/mongo:3\n        environment:\n            rs_name: rs\n            storage_engine: rocksdb\n        volumes:\n             - /srv/mongo/mongod2:/data/db\n        ports:\n             - \"27018:27017\"\n        networks:\n            rs_net:\n                ipv4_address: 172.16.238.12\n        restart: always\n\n    mongod3:\n        image: khezen/mongo:3\n        environment:\n            rs_name: rs\n            storage_engine: rocksdb\n            master: 172.16.238.13\n            slaves: 172.16.238.11\n            arbitrers: 172.16.238.12\n        volumes:\n             - /srv/mongo/mongod3:/data/db\n        ports:\n             - \"27019:27017\"\n        networks:\n            rs_net:\n                ipv4_address: 172.16.238.13\n        restart: always\n\nnetworks:\n  rs_net:\n    driver: bridge\n    ipam:\n        driver: default\n        config:\n        - subnet: 172.16.238.0/24\n          gateway: 172.16.238.1\n```\n\n##### slaveOk | *y*\n*y* means you can read from slaves.\n\n## Sharded Cluster\n\n##### shardsvr | *n*\n*y* means mongod is a shard by adding --shardsvr option. \n\n##### configsvr | *n*\n*y* means mongod is launched as a config server by adding --configsvr option.\n\n##### config_servers\nStart a mongos instance instead of a mongod and define the *rsname/host:port* configsrv attached to it.\n\n##### shards\nDefine the *rsname/host:port* shards you want to add to a cluster. if *database* env variable is specified then sharding is automatically enabled for it.\nSee example below:\n\n*(I am using ip adresses in this example but usually you want to use logical names instead)*\n```\nversion: '2'\nservices:\n\n    # SHARD 1\n\n    shard1_replica1:\n        image: khezen/mongo:3\n        environment:\n            rs_name: shard1\n            shardsvr: y\n        volumes:\n             - /srv/mongo/shard1/replica1:/data/db\n        ports:\n             - \"27011:27017\"\n        networks:\n            mongo_cluster_net:\n                ipv4_address: 172.16.239.11\n        restart: always\n\n    shard1_replica2:\n        image: khezen/mongo:3\n        environment:\n            rs_name: shard1\n            shardsvr: y\n        volumes:\n             - /srv/mongo/shard1/replica2:/data/db\n        ports:\n             - \"27012:27017\"\n        networks:\n            mongo_cluster_net:\n                ipv4_address: 172.16.239.12\n        restart: always\n\n    shard1_replica3:\n        image: khezen/mongo:3\n        environment:\n            rs_name: shard1\n            shardsvr: y\n            master: 172.16.239.13\n            slaves: 172.16.239.11 172.16.239.12    \n        volumes:\n             - /srv/mongo/shard1/replica3:/data/db\n        ports:\n             - \"27013:27017\"\n        networks:\n            mongo_cluster_net:\n                ipv4_address: 172.16.239.13\n        restart: always\n\n    # SHARD 2\n\n    shard2_replica1:\n        image: khezen/mongo:3\n        environment:\n            rs_name: shard2\n            shardsvr: y\n        volumes:\n             - /srv/mongo/shard2/replica1:/data/db\n        ports:\n             - \"27021:27017\"\n        networks:\n            mongo_cluster_net:\n                ipv4_address: 172.16.239.21\n        restart: always\n\n    shard2_replica2:\n        image: khezen/mongo:3\n        environment:\n            rs_name: shard2\n            shardsvr: y\n        volumes:\n             - /srv/mongo/shard2/replica2:/data/db\n        ports:\n             - \"27022:27017\"\n        networks:\n            mongo_cluster_net:\n                ipv4_address: 172.16.239.22\n        restart: always\n\n    shard2_replica3:\n        image: khezen/mongo:3\n        environment:\n            rs_name: shard2\n            shardsvr: y\n            master: 172.16.239.23\n            slaves: 172.16.239.21 172.16.239.22    \n        volumes:\n             - /srv/mongo/shard2/replica3:/data/db\n        ports:\n             - \"27023:27017\"\n        networks:\n            mongo_cluster_net:\n                ipv4_address: 172.16.239.23\n        restart: always\n\n    # CONFIG SVRS\n\n    configsvr1:\n        image: khezen/mongo:3\n        environment:\n            rs_name: configsvr\n            configsvr: y \n        volumes:\n             - /srv/mongo/configsvr/replica1:/data/db\n        ports:\n             - \"27101:27017\"\n        networks:\n            mongo_cluster_net:\n                ipv4_address: 172.16.239.101\n        restart: always\n\n    configsvr2:\n        image: khezen/mongo:3\n        environment:\n            rs_name: configsvr\n            configsvr: y   \n        volumes:\n             - /srv/mongo/configsvr/replica2:/data/db\n        ports:\n             - \"27102:27017\"\n        networks:\n            mongo_cluster_net:\n                ipv4_address: 172.16.239.102\n        restart: always\n\n    configsvr3:\n        image: khezen/mongo:3\n        environment:\n            rs_name: configsvr\n            configsvr: y\n            master: 172.16.239.103\n            slaves: 172.16.239.101 172.16.239.102\n        volumes:\n             - /srv/mongo/configsvr/replica3:/data/db\n        ports:\n             - \"27103:27017\"\n        networks:\n            mongo_cluster_net:\n                ipv4_address: 172.16.239.103\n        restart: always\n\n    # MONGOS\n\n    mongos1:\n        image: khezen/mongo:3\n        environment:\n            config_servers: configsvr/172.16.239.103:27017\n            shards: shard1/172.16.239.13 shard2/172.16.239.23\n        ports:\n             - \"27201:27017\"\n        networks:\n            mongo_cluster_net:\n                ipv4_address: 172.16.239.201\n        restart: always\n\nnetworks:\n  mongo_cluster_net:\n    driver: bridge\n    ipam:\n        driver: default\n        config:\n        - subnet: 172.16.239.0/24\n          gateway: 172.16.239.1\n```\n---\n\nInspired by [mongo-rocks](https://github.com/jadsonlourenco/docker-mongo-rocks) from [jadsonlourenco](https://twitter.com/jadsonlourenco)\nand  [mongo-rocks](https://github.com/structuresound/docker-mongo-rocks) from [Chroma](https://github.com/structuresound)\n",
  "dockerfile": "FROM debian:jessie\n\nMAINTAINER Guillaume Simonneau <simonneaug@gmail.com>\n\n# miscellaneous\nRUN apt-get update \\\n&&  apt-get install -y build-essential git binutils \\\n\n# RocksDB\n&&  apt-get update \\\n&&  apt-get install -y libbz2-dev libsnappy-dev zlib1g-dev libzlcore-dev \\\n\n&&  git clone https://github.com/facebook/rocksdb.git \\\n&&  cd rocksdb \\\n&&  git checkout tags/v4.9 \\\n&&  CXXFLAGS=\"-flto -Os -s\" make -j$(nproc) shared_lib \\\n&&  make install \\\n\n# MongoDB\n&&  apt-get update \\\n&&  apt-get install -y scons \\\n&&  git clone https://github.com/mongodb-partners/mongo-rocks.git /mongo-rocks \\\n&&  cd /mongo-rocks \\\n&&  git checkout tags/r3.2.9 \\\n&&  git clone https://github.com/mongodb/mongo.git /mongo \\\n&&  cd /mongo \\\n&&  git checkout tags/r3.2.9 \\\n&&  mkdir -p src/mongo/db/modules/ \\\n&&  ln -sf /mongo-rocks src/mongo/db/modules/rocks \\\n&&  CXXFLAGS=\"-flto -Os -s\" scons CPPPATH=/usr/local/include LIBPATH=/usr/local/lib -j$(nproc) --release --prefix=/usr --opt core  install \\\n\n# purge\n&&  strip /usr/bin/mongo \\\n&&  strip /usr/bin/mongod \\\n&&  strip /usr/bin/mongos \\\n&&  apt-get -y --purge autoremove build-essential git scons binutils \\\n&&  rm -rf /rocksdb \\\n&&  rm -rf /mongo-rocks \\\n&&  rm -rf /mongo \\\n&&  rm -f /usr/bin/mongoperf \\\n&&  rm -f /usr/local/lib/librocksdb.a\n\n# configuration and startup\nENV auth=\"no\" \\\n    admin_user=\"admin\" \\\n    admin_pwd=\"changeme\" \\\n    dbpath=\"/data/db\" \\\n    db_user=\"user\" \\\n    db_pwd=\"changeme\" \\\n    rs_name=\"\" \\\n    storage_engine=\"rocksdb\" \\\n    shard=\"no\"\n\nCOPY ./set_auth.sh /\nCOPY ./entrypoint.sh /\nRUN chmod +x /entrypoint.sh && chmod +x /set_auth.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "apt-get update &&  apt-get install -y build-essential git binutils ",
      "chmod +x /entrypoint.sh && chmod +x /set_auth.sh"
    ],
    "workdir": [],
    "from": "debian:jessie",
    "maintainer": "Guillaume Simonneau <simonneaug@gmail.com>",
    "env": {
      "auth": "\"no\"",
      "": "",
      "admin_user": "\"admin\"",
      "admin_pwd": "\"changeme\"",
      "dbpath": "\"/data/db\"",
      "db_user": "\"user\"",
      "db_pwd": "\"changeme\"",
      "rs_name": "\"\"",
      "storage_engine": "\"rocksdb\"",
      "shard": "\"no\""
    },
    "copy": "./entrypoint.sh /",
    "entrypoint": "[\"/entrypoint.sh\"]"
  },
  "source_repository_url": "https://github.com/Khezen/docker-mongo.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/Khezen/docker-mongo",
  "docker_repository": "khezen/mongo",
  "docker_image": "khezen/mongo",
  "parameters_schema": {
    "auth": {
      "default": "\"no\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "admin_user": {
      "default": "\"admin\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "admin_pwd": {
      "default": "\"changeme\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "dbpath": {
      "default": "\"/data/db\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "db_user": {
      "default": "\"user\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "db_pwd": {
      "default": "\"changeme\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "rs_name": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "storage_engine": {
      "default": "\"rocksdb\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "shard": {
      "default": "\"no\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "khezen/mongo",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/khezen/mongo",
    "https://hub.docker.com/v2/repositories/khezen/mongo",
    "https://github.com/Khezen/docker-mongo.git"
  ],
  "labels": [
    "Docker",
    "Binding/Region/North America/US",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Devopsware/Orchestration/Cluster-based",
    "Type/Middleware/Data Store/Document-oriented/MongoDB"
  ],
  "info_url": "https://hub.docker.com/r/khezen/mongo",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}