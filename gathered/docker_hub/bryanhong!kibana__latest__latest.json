{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/bryanhong/kibana",
    "repository_url": "https://hub.docker.com/v2/repositories/bryanhong/kibana",
    "tags_url": "https://hub.docker.com/v2/repositories/bryanhong/kibana/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/bryanhong/kibana/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/bryanhong/kibana/autobuild",
    "user": "bryanhong",
    "name": "kibana",
    "namespace": "bryanhong",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 53,
    "last_updated": "2016-10-13T21:22:44.063797Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 121497982,
        "id": 2836637,
        "repository": 661697,
        "creator": 110885,
        "last_updater": 110885,
        "last_updated": "2016-10-13T21:22:43.468183Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "bryanhong/docker-kibana"
  },
  "name": "bryanhong/kibana Docker container",
  "description": "Kibana",
  "readme": "docker-kibana\n==\n\nKibana in a container\n\n>Kibana is an open source analytics and visualization platform designed to work with Elasticsearch. You use Kibana to search, view, and interact with data stored in Elasticsearch indices. You can easily perform advanced data analysis and visualize your data in a variety of charts, tables, and maps. [elastic.co](https://www.elastic.co/products/kibana)\n\nQuickstart\n--\n\nThe following command will run kibana, if you want to customize or build the container locally, skip to [Building the Container](#building-the-container) below\n\n```\ndocker run                                                 \\\n  --detach=true                                            \\\n  --log-driver=syslog                                      \\\n  --name=\"kibana\"                                          \\\n  --restart=always                                         \\\n  --publish 5601:5601                                      \\\n  --env ELASTICSEARCH_URL=\"http://node1.example.com:9200\"  \\\n  bryanhong/kibana:latest\n```\n\n### Runtime flags explained\n\n```\n--detach=true\n```  \nrun the container in the background  \n```\n--log-driver=syslog\n```  \nsend logs to syslog on the Docker host  (requires Docker 1.6 or higher)  \n```\n--name=\"kibana\"\n```  \nname of the container  \n```\n--restart=always\n```  \nautomatically start the container when the Docker daemon starts  \n```\n--publish 5601:5601\n```  \nDocker host port : mapped port in the container (Kibana WebUI)  \n```\n--env ELASTICSEARCH_URL=\"http://node1.example.com:9200\"\n```\nURL to Elasticsearch API endpoint \n\n\nGetting Started\n--\nOnce your Kibana container is up and running you should be able to point a web browser to port 5601 of your Docker host and access the WebUI. A good reference for getting started can be found [here](https://www.elastic.co/guide/en/kibana/current/getting-started.html)\n\nBuilding the container\n--\n\nIf you want to make modifications to the image or simply see how things work, check out this repository:\n\n```\ngit clone https://github.com/bryanhong/docker-kibana.git\n```\n\n### Commands and variables\n\n* ```vars```: Variables for Docker registry and the application\n* ```build.sh```: Build the Docker image locally\n* ```run.sh```: Starts the Docker container, if the image hasn't been built locally, it is fetched from the repository set in vars\n* ```push.sh```: Pushes the latest locally built image to the repository set in vars\n* ```shell.sh```: get a shell within the container\n\n### How this image/container works\n\n**Data**  \nKibana saves state (dashboards, visualizations, settings...) information within Elasticsearch in an index named .kibana. The Kibana container can be treated as ephemeral. If you want to move your dashboards to another Elasticsearch cluster, you can export state in Settings > Objects > Export Everything, assuming the same index and schema exist on the destination cluster.\n\n**Networking**  \nBy default (in vars), Docker will map port 5601 on the Docker host to port 5601 within the container where Kibana listens by default. You can change the external listening port in vars to map to any port you like.\n\n**Security**  \n* **WebUI (port 5601)**  \nKibana does not support authentication or authorization nor does it support the concept of a user. It'll be up to you to devise a way to grant/prevent access to the WebUI if necessary in your deployment.\n\n### Usage\n\n#### Configure the container\n\n1. Configure application specific variables in ```vars```\n\n#### Build the image\n\n1. Run ```./build.sh```\n\n#### Start the container\n\n1. Run ```./run.sh```\n \n#### Pushing your image to the registry\n\nIf you're happy with your container and ready to share with others, push your image up to a [Docker registry](https://docs.docker.com/docker-hub/) and save any other changes you've made so the image can be easily changed or rebuilt in the future.\n\n1. Authenticate to the Docker Registry ```docker login```\n2. Run ```./push.sh```\n3. Log into your Docker hub account and add a description, etc.\n\n> NOTE: If your image will be used FROM other containers you might want to use ```./push.sh flatten``` to consolidate the AUFS layers into a single layer. Keep in mind, you may lose Dockerfile attributes when your image is flattened.\n",
  "dockerfile": "# Copyright 2016 Bryan J. Hong\n# \n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n# \n#     http://www.apache.org/licenses/LICENSE-2.0\n# \n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:14.04\n\nMAINTAINER bryan@turbojets.net\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Add Elastic repository\nRUN echo \"deb http://packages.elastic.co/kibana/4.5/debian stable main\" \\\n > /etc/apt/sources.list.d/elastic.list \\\n && apt-key adv --keyserver pgp.mit.edu --recv-keys D88E42B4\n\n# Update APT repository and install Kibana\nRUN apt-get -q update \\\n && apt-get -y install kibana\n\n# Install configs\nCOPY assets/kibana.yml.sh /opt/kibana.yml.sh\n\n# Install Startup script\nCOPY assets/startup.sh /opt/startup.sh\n\n# Execute Startup script when container starts\nENTRYPOINT [ \"/opt/startup.sh\" ]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "echo \"deb http://packages.elastic.co/kibana/4.5/debian stable main\"  > /etc/apt/sources.list.d/elastic.list  && apt-key adv --keyserver pgp.mit.edu --recv-keys D88E42B4",
      "apt-get -q update  && apt-get -y install kibana"
    ],
    "workdir": [],
    "from": "ubuntu:14.04",
    "maintainer": "bryan@turbojets.net",
    "env": {
      "DEBIAN_FRONTEND": "noninteractive"
    },
    "copy": "assets/startup.sh /opt/startup.sh",
    "entrypoint": "[ \"/opt/startup.sh\" ]"
  },
  "source_repository_url": "https://github.com/bryanhong/docker-kibana.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/bryanhong/docker-kibana",
  "docker_repository": "bryanhong/kibana",
  "docker_image": "bryanhong/kibana",
  "parameters_schema": {
    "DEBIAN_FRONTEND": {
      "default": "noninteractive",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "bryanhong/kibana",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/bryanhong/kibana",
    "https://hub.docker.com/v2/repositories/bryanhong/kibana",
    "https://github.com/bryanhong/docker-kibana.git"
  ],
  "labels": [
    "Docker"
  ],
  "info_url": "https://hub.docker.com/r/bryanhong/kibana",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}