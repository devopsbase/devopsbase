{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/ansible/centos7-ansible",
    "repository_url": "https://hub.docker.com/v2/repositories/ansible/centos7-ansible",
    "tags_url": "https://hub.docker.com/v2/repositories/ansible/centos7-ansible/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/ansible/centos7-ansible/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/ansible/centos7-ansible/autobuild",
    "user": "ansible",
    "name": "centos7-ansible",
    "namespace": "ansible",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 89,
    "pull_count": 164418,
    "last_updated": "2016-10-17T07:32:33.730050Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "devel",
        "full_size": 211182913,
        "id": 61460,
        "repository": 59562,
        "creator": 18214,
        "last_updater": 18214,
        "last_updated": "2016-10-17T07:32:30.625728Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.8",
        "full_size": 211183453,
        "id": 61456,
        "repository": 59562,
        "creator": 18214,
        "last_updater": 18214,
        "last_updated": "2016-10-17T07:29:06.477448Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.7",
        "full_size": 151526412,
        "id": 61453,
        "repository": 59562,
        "creator": 18214,
        "last_updater": 18214,
        "last_updated": "2016-10-17T07:25:58.581955Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "stable",
        "full_size": 151526168,
        "id": 61467,
        "repository": 59562,
        "creator": 18214,
        "last_updater": 18214,
        "last_updated": "2016-10-17T07:23:16.326556Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 211183454,
        "id": 61469,
        "repository": 59562,
        "creator": 18214,
        "last_updater": 18214,
        "last_updated": "2016-10-17T07:20:39.496579Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "master",
        "full_size": 279155408,
        "id": 61464,
        "repository": 59562,
        "creator": 18214,
        "last_updater": 110883,
        "last_updated": "2015-11-14T16:20:26.792391Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "ansible/ansible-docker-base"
  },
  "name": "ansible/centos7-ansible Docker container",
  "description": "Ansible on Centos7",
  "readme": "THESE IMAGES HAVE BEEN DEPRECATED\n=================================\n\nAnsible no longer maintains images in Dockerhub directly. There are\nseveral Ansible images on Dockerhub that are maintained by members of\nthe Ansible community, which you can find with the [following search](https://hub.docker.com/search/?q=ansible&page=1&isAutomated=0&isOfficial=0&pullCount=1&starCount=0)\n\n\nAnsible-Docker-Base\n===================\n\nThese are base docker images that include Ansible.  \n\nAnsible, Inc maintains these images so that people can easily build docker images from ansible playbooks.\n\nWhile Ansible modules can help you deploy container images (and also prepare host dependencies to be able to run containers), this document is about how to use ansible to efficiently describe and build them as well.\n\nObtaining these Images from DockerHub\n=====================================\n\nAnsible, Inc content on DockerHub lives at https://registry.hub.docker.com/u/ansible/\n\nThere are base images available currently for CentOS 7 and Ubuntu 14.04 LTS, using both the latest\nstable version of Ansible as well as development branch snapshots.\n\nBuilding Your Own Container Based on an Ansible Image\n=====================================================\n\nBy specifying a Dockerfile, it is easy to describe a container image primarily defined by an ansible-playbook, using a very minimal Dockerfile.\n\nTake a look at [this Dockerfile](https://github.com/ansible/ansible-docker-base/blob/master/examples/webserver-simple/Dockerfile) for a sample of what one looks like.\n\nTo build this image, simply cd into the directory that contains the Dockerfile and run:\n\n    docker build -t webserver_simple .\n    \nThis will produce an image tagged \"webserver_simple\" based on the Ansible playbook run.  [Here's the playbook that defines the configuration](https://github.com/ansible/ansible-docker-base/blob/master/examples/webserver-simple/ansible/site.yml).\n\nYour own content will probably be kept in it's own git repos.  You may wish to connect your repositories containing Ansible+Docker playbooks to DockerHub, to trigger automatic rebuilds of your container\nimages when your underlying ansible playbooks, or the applications they might embed, change.\n\nSelecting Versions of Ansible\n=============================\n\nThe DockerFile shown above selected the latest CentOS tag of Ansible's Docker images.  The first line of the DockerFile can be changed to select another base operating system or Ansible version should you wish to use a different OS or different Ansible version.\n\nThe following options are available:\n\n    FROM ansible/centos7-ansible:stable\n    FROM ansible/centos7-ansible:devel\n    FROM ansible/ubuntu14.04-ansible:stable\n    FROM ansible/ubuntu14.04-ansible:devel\n    \nAnsible images on DockerHub will be updated periodically.\n\nJumping Docker Content with Ansible Galaxy\n==========================================\n\nWhile Ansible provides 240+ modules for managing various aspects of IT components and is a great starting point for describing your applications, [Ansible Galaxy](http://galaxy.ansible.com) provides complete automation for deploying a very large number of popular apps and takes this to the next level.\n\nTo use existing ansible-role content within Docker, simply switch into a playbook directory and download the roles.  For example, to configure the ELK stack:\n\n    mkdir roles/\n    cd roles/\n    ansible-galaxy install bakhti.elk\n   \nAnd then leverage the role content in the playbook:\n\n    - hosts: localhost\n      roles:\n        - bakhti.elk\n\nSo, a 3 line playbook then brings up an entire ELK stack in a container image :)\n\nDeploying Your Ansible-Built Docker Containers with Ansible\n===========================================================\n\nOnce available on a registry, images can be deployed using the [Ansible Docker Module](http://docs.ansible.com/docker_module.html).  This can be a lightweight\nway to specify what containers should run on which hosts.\n\nHere's a minimal example of running a Tomcat container on all of your hosts:\n\n    - hosts: web\n      sudo: yes\n      tasks:\n        - name: run tomcat servers\n          docker: image=my-tomcat command=\"service tomcat6 start\" ports=8080\n\nReplace the \"image\" parameter with the name of the image above in your registry.\n\nFor more information, consult the [Ansible Docker module documentation](http://docs.ansible.com/docker_module.html)\n\nAs your needs grow more detailed and you wish to specify different containers for different hosts, \nyou might have a list called \"run_containers\" defined per Ansible host group, saying which containers to run on each host.  This can allow ansible to be used as a lightweight cloud, all without any additional moving parts.\n\nRebuilding Automatically when the Ansible Image Updates\n=======================================================\n\nIf you are using a Docker Hub automated build to build your images you can set\nyour image to rebuild whenever the base ansible image (hosted by Ansible, Inc) is updated:\n\n1. Go to the docker hub page for your repository.\n2. In the sidebar labeled \"Settings\", find the entry marked \"Repository Links\"\n3. On the \"Repository Links\" page, enter the Ansible repository you are layering\n   your image on top of.  For instance, if you are using the\n   ubuntu14.04-ansible repository, enter ansible/ubuntu14.04-ansible\n   into the \"Repository Name\" box and click \"Add\".\n4. Docker hub will now automatically rebuild your image whenever that ansible\n   repository has a new build.\n   \nQuestions?\n==========\n\nIf you'd like to talk about Ansible+Docker, stop by the [ansible-project mailing list](https://groups.google.com/forum/#!forum/ansible-project) or #ansible on irc.freenode.net for IRC.\n\n\n",
  "dockerfile": "# Latest version of centos\nFROM centos:centos7\nMAINTAINER Toshio Kuratomi <tkuratomi@ansible.com>\nRUN yum clean all && \\\n    yum -y install epel-release && \\\n    yum -y install PyYAML python-jinja2 python-httplib2 python-keyczar python-paramiko python-setuptools git python-pip\nRUN mkdir /etc/ansible/\nRUN echo '[local]\\nlocalhost\\n' > /etc/ansible/hosts\nRUN mkdir /opt/ansible/\nRUN git clone http://github.com/ansible/ansible.git /opt/ansible/ansible\nWORKDIR /opt/ansible/ansible\nRUN git submodule update --init\nENV PATH /opt/ansible/ansible/bin:/bin:/usr/bin:/sbin:/usr/sbin\nENV PYTHONPATH /opt/ansible/ansible/lib\nENV ANSIBLE_LIBRARY /opt/ansible/ansible/library\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "yum clean all &&     yum -y install epel-release &&     yum -y install PyYAML python-jinja2 python-httplib2 python-keyczar python-paramiko python-setuptools git python-pip",
      "mkdir /etc/ansible/",
      "echo '[local]\\nlocalhost\\n' > /etc/ansible/hosts",
      "mkdir /opt/ansible/",
      "git clone http://github.com/ansible/ansible.git /opt/ansible/ansible",
      "git submodule update --init"
    ],
    "workdir": [
      "/opt/ansible/ansible"
    ],
    "from": "centos:centos7",
    "maintainer": "Toshio Kuratomi <tkuratomi@ansible.com>",
    "env": {
      "PATH": "/opt/ansible/ansible/bin:/bin:/usr/bin:/sbin:/usr/sbin",
      "PYTHONPATH": "/opt/ansible/ansible/lib",
      "ANSIBLE_LIBRARY": "/opt/ansible/ansible/library"
    }
  },
  "source_repository_url": "https://github.com/ansible/ansible-docker-base.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/ansible/ansible-docker-base",
  "docker_repository": "ansible/centos7-ansible",
  "docker_image": "ansible/centos7-ansible",
  "parameters_schema": {
    "PATH": {
      "default": "/opt/ansible/ansible/bin:/bin:/usr/bin:/sbin:/usr/sbin",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PYTHONPATH": {
      "default": "/opt/ansible/ansible/lib",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ANSIBLE_LIBRARY": {
      "default": "/opt/ansible/ansible/library",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "ansible/centos7-ansible",
  "revision": "devel",
  "uris": [
    "https://hub.docker.com/r/ansible/centos7-ansible",
    "https://hub.docker.com/v2/repositories/ansible/centos7-ansible",
    "https://github.com/ansible/ansible-docker-base.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Deployment/Ansible",
    "Type/Infrastructure/Operating System/Linux/CentOS"
  ],
  "info_url": "https://hub.docker.com/r/ansible/centos7-ansible",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}