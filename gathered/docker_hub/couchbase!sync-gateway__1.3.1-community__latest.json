{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/couchbase/sync-gateway",
    "repository_url": "https://hub.docker.com/v2/repositories/couchbase/sync-gateway",
    "tags_url": "https://hub.docker.com/v2/repositories/couchbase/sync-gateway/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/couchbase/sync-gateway/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/couchbase/sync-gateway/autobuild",
    "user": "couchbase",
    "name": "sync-gateway",
    "namespace": "couchbase",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 18,
    "pull_count": 81172,
    "last_updated": "2016-10-03T18:41:04.100640Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "1.3.1-community",
        "full_size": 110654656,
        "id": 5014602,
        "repository": 188654,
        "creator": 65946,
        "last_updater": 65946,
        "last_updated": "2016-10-03T18:41:02.220804Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.3.1-enterprise",
        "full_size": 110654187,
        "id": 5014715,
        "repository": 188654,
        "creator": 65946,
        "last_updater": 65946,
        "last_updated": "2016-10-03T18:37:16.792517Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 110654102,
        "id": 218088,
        "repository": 188654,
        "creator": 65946,
        "last_updater": 65946,
        "last_updated": "2016-10-03T18:37:11.214555Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.3.0-enterprise",
        "full_size": 110483888,
        "id": 4168793,
        "repository": 188654,
        "creator": 65946,
        "last_updater": 65946,
        "last_updated": "2016-09-22T21:55:06.877979Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.3.0-community",
        "full_size": 146095418,
        "id": 4168750,
        "repository": 188654,
        "creator": 65946,
        "last_updater": 65946,
        "last_updated": "2016-08-22T23:33:12.117451Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.2.1",
        "full_size": 449013751,
        "id": 3001990,
        "repository": 188654,
        "creator": 65946,
        "last_updater": 65946,
        "last_updated": "2016-05-12T21:47:19.954590Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "1.2.0",
        "full_size": 473703470,
        "id": 2033903,
        "repository": 188654,
        "creator": 65946,
        "last_updater": 65946,
        "last_updated": "2016-02-17T18:37:04.494202Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.2.0-rc1",
        "full_size": 419213723,
        "id": 1815122,
        "repository": 188654,
        "creator": 301242,
        "last_updater": 301242,
        "last_updated": "2016-01-25T16:53:04.606544Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.2.0-rc0",
        "full_size": 414971773,
        "id": 1815121,
        "repository": 188654,
        "creator": 301242,
        "last_updater": 301242,
        "last_updated": "2016-01-25T16:53:03.291085Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.1.1",
        "full_size": 365232626,
        "id": 1580950,
        "repository": 188654,
        "creator": 301242,
        "last_updater": 301242,
        "last_updated": "2015-12-17T18:24:29.300450Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "couchbase/docker"
  },
  "name": "couchbase/sync-gateway Docker container",
  "description": " Docker container for Couchbase Sync Gateway",
  "readme": "\nSync Gateway is REST API server that allows Couchbase Lite mobile databases to synchronize data. It can also be used as a standalone data storage system.\n\nFor more information, see the [Couchbase Mobile Overview](http://developer.couchbase.com/mobile).\n\n## Quickstart\n\n```\n$ docker run -p 4984:4984 -d couchbase-sync-gateway\n```\n\nNOTE: until the official docker image is approved, use the staging repository via:\n\n```\n$ docker run -p 4984:4984 -d couchbase/sync-gateway\n```\n\nAt this point you should be able to run a curl request against the running Sync Gateway on the port 4984 public port:\n\n```\n$ curl http://localhost:4984\n\n{\"couchdb\":\"Welcome\",\"vendor\":{\"name\":\"Couchbase Sync Gateway\",\"version\":1.3},\"version\":\"Couchbase Sync Gateway/1.3.0(274;8c3ee28)\"}\n```\n\n> **Note:** if you are running on OSX using docker-machine, you will need to use the IP address of the running docker machine rather than localhost (eg, http://192.168.99.100)\n\nYou can view the Sync Gateway logs via the `docker logs` command:\n\n```\n$ docker logs container-id\n2016-08-04T17:53:44.513Z Enabling logging: [HTTP+]\n2016-08-04T17:53:44.513Z ==== Couchbase Sync Gateway/1.3.0(274;8c3ee28) ====\n2016-08-04T17:53:44.513Z requestedSoftFDLimit < currentSoftFdLimit (5000 < 1048576) no action needed\netc ...\n```\n\n> **Note:** replace `container-id` above with the actual running container id (ie, `9d004a24a4d1`), which you can find by running `docker ps | grep sync_gateway`.\n\n## Accessing the Sync Gateway Admin port from the container\n\nBy default, the port 4985, which is the Sync Gateway Admin port, is only accessible via localhost. This means that it's only accessible *from within the container*.\n\nTo access it from within the container, you can get a bash shell on the running container and then use curl to connect to the admin port as follows:\n\n```\n$ docker exec -ti container-id bash\n```\n\n> **Note:** replace `container-id` above with the actual running container id (ie, `9d004a24a4d1`), which you can find by running `docker ps | grep sync_gateway`.\n\nFrom the container shell (indicated by the `#` prompt), you can use `curl` to make requests against the running Sync Gateway by running:\n\n```\n# curl http://localhost:4985\n\n{\"ADMIN\":true,\"couchdb\":\"Welcome\",\"vendor\":{\"name\":\"Couchbase Sync Gateway\",\"version\":1.3},\"version\":\"Couchbase Sync Gateway/1.3.0(274;8c3ee28)\"}\n```\n\n## Exposing accessing to the SyncGateway Admin port to the host\n\nIf you need to expose port 4985 to the host machine, you can do so with the following steps.\n\nYou may want to stop any currently running Sync Gateway containers with `docker stop container-id`.\n\nStart a container with these arguments:\n\n```\n$ docker run -p 4984-4985:4984-4985 -d couchbase-sync-gateway -adminInterface :4985 /etc/sync_gateway/config.json\n```\n\nNow, from the *host* machine, you should be able to run a curl request against the admin port of 4985:\n\n```\n$ curl http://localhost:4985\n\n{\"ADMIN\":true,\"couchdb\":\"Welcome\",\"vendor\":{\"name\":\"Couchbase Sync Gateway\",\"version\":1.3},\"version\":\"Couchbase Sync Gateway/1.3.0(274;8c3ee28)\"}\n```\n\n> **Note:** if you are running on OSX using docker-machine, you will need to use the IP address of the running docker machine rather than localhost (eg, http://192.168.99.100)\n\n## Customizing Sync Gateway configuration\n\n### Using a Docker volume\n\nPrepare the Sync Gateway configuration file on your local machine:\n\n```\n$ cd /tmp\n$ wget https://raw.githubusercontent.com/couchbase/sync_gateway/master/examples/basic-walrus-bucket.json\n$ mv basic-walrus-bucket.json my-sg-config.json\n$ vi my-sg-config.json  # make edits\n```\n\nRun Sync Gateway and use that configuration file:\n\n```\n$ docker run -p 4984:4984 -d -v /tmp:/tmp/config couchbase-sync-gateway /tmp/config/my-sg-config.json\n```\n\n> **Note:** If you are running on OSX using docker-machine, you will need to either use a directory under `/Users` instead of `/tmp`, or run `docker-machine ssh` and run the commands from within the docker-machine Linux VM.\n\n### Using a URL\n\nSync Gateway can also load it's configuration directly from a URL.  \n\nFirst upload a configuration file to a publicly available hosting site of your choice (Amazon S3, Github, etc)\n\nThen start Sync Gateway and give it the URL to the raw JSON data:\n\n```\n$ docker run -p 4984:4984 -d couchbase-sync-gateway https://raw.githubusercontent.com/couchbase/sync_gateway/master/examples/basic-walrus-bucket.json\n```\n\n## Using a volume to persist data across container instances\n\nSync Gateway uses an in-memory storage backend by default, called [Walrus](https://www.ihasabucket.com/), which has the ability to store snapshots of it's memory contents to disk. *This should never be used in production*, and is included for development purposes.\n\nThe default configuration file used by the Sync Gateway Docker container saves Walrus memory snapshots of it's data in the `/opt/couchbase-sync-gateway/data` directory inside the container.  If you want to persist this data *across container instances*, you just need to launch the container with a volume that mounts a local directory on your host, for example, your `/tmp` directory.\n\n```\n$ docker run -p 4984:4984 -d -v /tmp:/opt/couchbase-sync-gateway/data couchbase-sync-gateway \n```\n\nYou can verify it worked by looking in your `/tmp` directory on your host, and you will see a `.walrus` memory snapshot file.\n\n```\n$ ls /tmp/*.walrus\n\ndb.walrus\n```\n\n> **Note:** if you are running on OSX using docker-machine, you will need to either use a directory under `/User` instead of `/tmp`, or run `docker-machine ssh` and run the commands from within the docker-machine Linux VM.\n\nIf you add data to a Sync Gateway in a container instance, then stop that container instance and start a new one and mount the volume where the memory snapshots were stored, you should see data from the earlier container instance.\n\n> **WARNING:** if you have multiple container instances trying to write memory snapshots to the same files on the same volumes, it will corrupt the memory snapshots.\n\n## Running with Couchbase Server\n\nCreate a docker network called `couchbase`.\n\n```\n$ docker network create --driver bridge couchbase \n```\n\nRun Couchbase Server in a docker container, and put it in the `couchbase` network.\n\n```\n$ docker run --net=couchbase -d --name couchbase-server -p 8091-8094:8091-8094 -p 11210:11210 couchbase\n```\n\nNow go to the Couchbase Server Admin UI on [http://localhost:8091](http://localhost:8091) (on OSX, replace localhost with the docker machine host IP) and go through the Setup Wizard.  See [Couchbase Server on Dockerhub](https://hub.docker.com/r/couchbase/server/) for more info.\n\nCreate a `/tmp/my-sg-config.json` file on your host machine, with the following:\n\n```\n{\n  \"log\": [\"*\"],\n  \"databases\": {\n    \"db\": {\n      \"server\": \"http://couchbase-server:8091\",\n      \"bucket\": \"default\",\n      \"users\": { \"GUEST\": { \"disabled\": false, \"admin_channels\": [\"*\"] } }\n    }\n  }\n}\n```\n\nStart a Sync Gateway container in the `couchbase` network and use the `/tmp/my-sg-config.json` file:\n\n```\n$ docker run --net=couchbase -p 4984:4984 -d -v /tmp:/tmp/config couchbase-sync-gateway /tmp/my-sg-config.json\n```\n\nVerify that Sync Gateway started by running `docker logs container-id` and trying to run a curl request against it:\n\n```\n$ curl http://localhost:4984\n```\n\n## Using sgcollect_info\n\nThis section only applies if you need to run the `sgcollect_info` tool to collect Sync Gateway diagnostics for Sync Gateway running in a docker container. In order to collect the logs you will need to do the following workaround:\n\n```\n$ docker logs container-id > /tmp/sync_gateway.log 2>&1\n$ docker exec container-id mkdir -p /var/log/sync_gateway/\n$ docker cp /tmp/sync_gateway.log contaner-id:/var/log/sync_gateway/sync_gateway_error.log\n```\n\nOnce that is done, you can run `sgcollect_info` via:\n\n```\n$ docker exec container-id /opt/couchbase-sync-gateway/tools/sgcollect_info --help\n```\n\n## Support\n\n[Couchbase Forums](https://forums.couchbase.com/)\n\n## Licensing\n\nSync Gateway comes in 2 Editions: Enterprise Edition and Community Edition. You can find details on the differences between the 2 and licensing details on the [Sync Gateway Editions](http://developer.couchbase.com/documentation/server/4.5/introduction/editions.html) page.\n\n-\tEnterprise Edition -- free for development, testing and POCs. Requires a paid subscription for production deployment. Please refer to the [subscribe](http://www.couchbase.com/subscriptions-and-support) page for details on enterprise edition agreements.\n\n-\tCommunity Edition -- free for unrestricted use for community users.",
  "dockerfile": "FROM centos:centos7\n\nMAINTAINER Couchbase Docker Team <docker@couchbase.com>\n\nENV PATH $PATH:/opt/couchbase-sync-gateway/bin\n\n# Install dependencies:\n#  wget: for downloading Sync Gateway package installer\nRUN yum -y update && \\\n    yum install -y \\\n    wget && \\\n    yum clean all\n\n# Install Sync Gateway\nRUN wget http://packages.couchbase.com/releases/couchbase-sync-gateway/1.3.1/couchbase-sync-gateway-community_1.3.1-16_x86_64.rpm && \\\n    rpm -i couchbase-sync-gateway-community_1.3.1-16_x86_64.rpm && \\\n    rm couchbase-sync-gateway-community_1.3.1-16_x86_64.rpm\n\n# Create directory where the default config stores memory snapshots to disk\nRUN mkdir /opt/couchbase-sync-gateway/data\n\n# copy the default config into the container\nCOPY config/sync_gateway_config.json /etc/sync_gateway/config.json\n\n# Invoke the sync_gateway executable by default\nENTRYPOINT [\"sync_gateway\"]\n\n# If user doesn't specify any args, use the default config\nCMD [\"/etc/sync_gateway/config.json\"]\n\n# Expose ports\n#  port 4984: public port\nEXPOSE 4984\n\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      4984
    ],
    "volume": [],
    "run": [
      "yum -y update &&     yum install -y     wget &&     yum clean all",
      "wget http://packages.couchbase.com/releases/couchbase-sync-gateway/1.3.1/couchbase-sync-gateway-community_1.3.1-16_x86_64.rpm &&     rpm -i couchbase-sync-gateway-community_1.3.1-16_x86_64.rpm &&     rm couchbase-sync-gateway-community_1.3.1-16_x86_64.rpm",
      "mkdir /opt/couchbase-sync-gateway/data"
    ],
    "workdir": [],
    "from": "centos:centos7",
    "maintainer": "Couchbase Docker Team <docker@couchbase.com>",
    "env": {
      "PATH": "$PATH:/opt/couchbase-sync-gateway/bin"
    },
    "copy": "config/sync_gateway_config.json /etc/sync_gateway/config.json",
    "entrypoint": "[\"sync_gateway\"]",
    "cmd": "[\"/etc/sync_gateway/config.json\"]"
  },
  "source_repository_url": "https://github.com/couchbase/docker.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/couchbase/docker",
  "docker_repository": "couchbase/sync-gateway",
  "docker_image": "couchbase/sync-gateway",
  "parameters_schema": {
    "PATH": {
      "default": "$PATH:/opt/couchbase-sync-gateway/bin",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        4984
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "couchbase/sync-gateway",
  "revision": "1.3.1-community",
  "uris": [
    "https://hub.docker.com/r/couchbase/sync-gateway",
    "https://hub.docker.com/v2/repositories/couchbase/sync-gateway",
    "https://github.com/couchbase/docker.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Data Store/Document-oriented/Couchbase",
    "Type/Middleware/Data Store/Document-oriented/HBase"
  ],
  "info_url": "https://hub.docker.com/r/couchbase/sync-gateway",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}