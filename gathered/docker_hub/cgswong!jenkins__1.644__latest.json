{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/cgswong/jenkins",
    "repository_url": "https://hub.docker.com/v2/repositories/cgswong/jenkins",
    "tags_url": "https://hub.docker.com/v2/repositories/cgswong/jenkins/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/cgswong/jenkins/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/cgswong/jenkins/autobuild",
    "user": "cgswong",
    "name": "jenkins",
    "namespace": "cgswong",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 1094,
    "last_updated": "2016-03-19T04:00:18.494872Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "1.644",
        "full_size": 151027837,
        "id": 1788931,
        "repository": 70991,
        "creator": 28802,
        "last_updater": 28802,
        "last_updated": "2016-03-19T04:00:17.726793Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "latest",
        "full_size": 152052036,
        "id": 58450,
        "repository": 70991,
        "creator": 28802,
        "last_updater": 28802,
        "last_updated": "2016-03-19T03:59:31.393312Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.625",
        "full_size": 150244822,
        "id": 1503453,
        "repository": 70991,
        "creator": 28802,
        "last_updater": 28802,
        "last_updated": "2016-03-19T03:58:46.239026Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.647",
        "full_size": 150721723,
        "id": 1973161,
        "repository": 70991,
        "creator": 28802,
        "last_updater": 28802,
        "last_updated": "2016-03-19T03:58:02.178654Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.639",
        "full_size": 150965111,
        "id": 1503456,
        "repository": 70991,
        "creator": 28802,
        "last_updater": 28802,
        "last_updated": "2016-03-19T03:57:13.707175Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.626",
        "full_size": 150246169,
        "id": 1124095,
        "repository": 70991,
        "creator": 28802,
        "last_updater": 28802,
        "last_updated": "2016-03-19T03:56:28.974498Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.632",
        "full_size": 150572222,
        "id": 1124091,
        "repository": 70991,
        "creator": 28802,
        "last_updater": 28802,
        "last_updated": "2016-03-19T03:55:32.214195Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.634",
        "full_size": 150670792,
        "id": 1179962,
        "repository": 70991,
        "creator": 28802,
        "last_updater": 28802,
        "last_updated": "2016-03-19T03:55:27.339846Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.653",
        "full_size": 152052044,
        "id": 2362928,
        "repository": 70991,
        "creator": 28802,
        "last_updater": 28802,
        "last_updated": "2016-03-19T03:55:26.324091Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "cgswong/docker-jenkins"
  },
  "name": "cgswong/jenkins Docker container",
  "description": "Jenkins CI server",
  "readme": "# Jenkins Docker image\n\nThe [Jenkins Continuous Integration and Delivery server](http://jenkins-ci.org/) based on Alpine Linux image with Oracle JDK 8.\n\n<img src=\"http://jenkins-ci.org/sites/default/files/jenkins_logo.png\"/>\n\n# Usage\nSimple invocation:\n\n```console\ndocker run -d --publish 8080:8080 cgswong/jenkins\n```\n\nThe volume `/var/lib/jenkins` stores plugins, data and configuration. This can be mounted for further customization and/or data backup.\nYou will probably want to make that a persistent volume (recommended):\n\n## Backing up data\nTreat the `/var/lib/jenkins` directory as you would a database, i.e. make sure you do backups to keep your important data safe. You can use `docker cp $PWD:/var/lib/jenkins` to extract the data.\n\n# Attaching build executors\nYou can run builds on the master (out of the box) but if you want to attach build slave servers: make sure you map the port `--publish 50000:50000` which will be used when you connect a slave agent. A good example Docker build container is [Maestrodev](https://registry.hub.docker.com/u/maestrodev/build-agent), it has lots of good tools installed.\n\n# Passing parameters\nYou might need to customize the JVM running Jenkins, typically to pass system properties or tweak heap memory settings. Just pass these as parameters on the command line per normal:\n\n```console\ndocker run --name jenkins --publish 8080:8080 cgswong/jenkins -Dhudson.footerURL=http://mycompany.com\n```\n\nThe same goes for passing Jenkins launcher parameters:\n\n```console\ndocker run --name jenkins --publish 8080:8080 cgswong/jenkins --version\n```\n\nThis will dump Jenkins version, just like when you run Jenkins as an executable war.\n\n# Plugins\nThis image comes with the following useful plugins installed:\n\n- greenballs\n- credentials\n- ssh-credentials\n- ssh-agent\n- git-client\n- git\n- github\n- github-api\n- ghprb\n- github-oauth\n- scm-api\n- postbuild-task\n",
  "dockerfile": "# Docker file to create Jenkins container.\n\nFROM cgswong/java:orajre8\nMAINTAINER Stuart Wong <cgs.wong@gmail.com>\n\n# Setup environment\nENV JENKINS_VERSION 1.644\nENV JENKINS_USER jenkins\nENV JENKINS_GROUP jenkins\nENV JENKINS_HOME /opt/jenkins\nENV JENKINS_VOL /var/lib/jenkins\n\n# Install software\nRUN apk update &&\\\n    apk upgrade &&\\\n    mkdir -p $JENKINS_HOME $JENKINS_VOL/plugins $JAVA_BASE &&\\\n    curl -sSL http://mirrors.jenkins-ci.org/war/${JENKINS_VERSION}/jenkins.war --output ${JENKINS_HOME}/jenkins.war &&\\\n    addgroup ${JENKINS_GROUP} &&\\\n    adduser -h ${JENKINS_HOME} -D -s /bin/bash -G ${JENKINS_GROUP} ${JENKINS_USER} &&\\\n    chown -R ${JENKINS_USER}:${JENKINS_GROUP} ${JENKINS_HOME} ${JENKINS_VOL} &&\\\n    for plugins in credentials ssh-credentials ssh-agent ssh-slaves git-client git github github-api github-oauth ghprb scm-api postbuild-task greenballs; do  curl -sSL http://updates.jenkins-ci.org/latest/${plugins}.hpi --output $JENKINS_VOL/${plugins}.hpi; done\n\n\n# Listen for main web interface (8080/tcp) and attached slave agents (50000/tcp)\nEXPOSE 8080 50000\n\n# Expose volumes\nVOLUME [\"${JENKINS_VOL}\"]\n\nCOPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\n\nUSER ${JENKINS_USER}\n\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nCMD [\"\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      8080
    ],
    "volume": [
      "[\"${JENKINS_VOL}\"]"
    ],
    "run": [
      "apk update &&    apk upgrade &&    mkdir -p $JENKINS_HOME $JENKINS_VOL/plugins $JAVA_BASE &&    curl -sSL http://mirrors.jenkins-ci.org/war/${JENKINS_VERSION}/jenkins.war --output ${JENKINS_HOME}/jenkins.war &&    addgroup ${JENKINS_GROUP} &&    adduser -h ${JENKINS_HOME} -D -s /bin/bash -G ${JENKINS_GROUP} ${JENKINS_USER} &&    chown -R ${JENKINS_USER}:${JENKINS_GROUP} ${JENKINS_HOME} ${JENKINS_VOL} &&    for plugins in credentials ssh-credentials ssh-agent ssh-slaves git-client git github github-api github-oauth ghprb scm-api postbuild-task greenballs; do  curl -sSL http://updates.jenkins-ci.org/latest/${plugins}.hpi --output $JENKINS_VOL/${plugins}.hpi; done"
    ],
    "workdir": [],
    "from": "cgswong/java:orajre8",
    "maintainer": "Stuart Wong <cgs.wong@gmail.com>",
    "env": {
      "JENKINS_VERSION": "1.644",
      "JENKINS_USER": "jenkins",
      "JENKINS_GROUP": "jenkins",
      "JENKINS_HOME": "/opt/jenkins",
      "JENKINS_VOL": "/var/lib/jenkins"
    },
    "copy": "docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh",
    "user": "${JENKINS_USER}",
    "entrypoint": "[\"/usr/local/bin/docker-entrypoint.sh\"]",
    "cmd": "[\"\"]"
  },
  "source_repository_url": "https://github.com/cgswong/docker-jenkins.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/cgswong/docker-jenkins",
  "docker_repository": "cgswong/jenkins",
  "docker_image": "cgswong/jenkins",
  "parameters_schema": {
    "JENKINS_VERSION": {
      "default": "1.644",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_USER": {
      "default": "jenkins",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_GROUP": {
      "default": "jenkins",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_HOME": {
      "default": "/opt/jenkins",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_VOL": {
      "default": "/var/lib/jenkins",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        8080
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "cgswong/jenkins",
  "revision": "1.644",
  "uris": [
    "https://hub.docker.com/r/cgswong/jenkins",
    "https://hub.docker.com/v2/repositories/cgswong/jenkins",
    "https://github.com/cgswong/docker-jenkins.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Integration/Jenkins"
  ],
  "info_url": "https://hub.docker.com/r/cgswong/jenkins",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}