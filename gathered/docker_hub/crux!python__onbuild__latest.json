{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/crux/python",
    "repository_url": "https://hub.docker.com/v2/repositories/crux/python",
    "tags_url": "https://hub.docker.com/v2/repositories/crux/python/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/crux/python/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/crux/python/autobuild",
    "user": "crux",
    "name": "python",
    "namespace": "crux",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 439,
    "last_updated": "2016-06-02T02:23:42.251442Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "onbuild",
        "full_size": 155720136,
        "id": 838431,
        "repository": 309661,
        "creator": 10801,
        "last_updater": 24968,
        "last_updated": "2016-06-02T02:23:41.900659Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 155720136,
        "id": 837509,
        "repository": 309661,
        "creator": 10801,
        "last_updater": 24968,
        "last_updated": "2016-06-02T02:21:42.425295Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "cruxlinux/python"
  },
  "name": "crux/python Docker container",
  "description": "CRUX Linux Docker Image for Python",
  "readme": "CRUX Python Image\n=================\n\nA Docker image based on [crux](https://index.docker.io/u/_/crux) for developing and running Python Apps.\n\nFeatures:\n\n-   python\n-   setuptools\n-   pip\n-   git\n-   mercurial\n\nReady to run your Python apps!\n\nUsage\n-----\n\nPython Interpreter:\n\n    docker run -i -t crux/python\n\nAs a Base Image:\n\nA `onbuild` tag is provided that uses `ONBUILD` triggers which you can use as a base image for a standard python application. This assumes your source tree has two top-level source files:\n\n-   `requirements.txt`\n-   `setup.py`\n\nExample `Dockerfile`:\n\n    FROM crux/python:onbuild\n\n    CMD [\"myapp\"]\n",
  "dockerfile": "FROM crux/python:latest\nMAINTAINER James Mills <prologic@shortcircuitnet.au>\n\nONBUILD COPY requirements.txt /tmp/requirements.txt\nONBUILD RUN pip install -r /tmp/requirements.txt && rm /tmp/requirements.txt\n\nONBUILD WORKDIR /app\nONBUILD COPY . /app/\nONBUILD RUN pip install .\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": [],
    "from": "crux/python:latest",
    "maintainer": "James Mills <prologic@shortcircuitnet.au>",
    "onbuild": "RUN pip install ."
  },
  "source_repository_url": "https://github.com/cruxlinux/python.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/cruxlinux/python",
  "docker_repository": "crux/python",
  "docker_image": "crux/python",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "crux/python",
  "revision": "onbuild",
  "uris": [
    "https://hub.docker.com/r/crux/python",
    "https://hub.docker.com/v2/repositories/crux/python",
    "https://github.com/cruxlinux/python.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Python",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Infrastructure/Operating System/Linux/CRUX"
  ],
  "info_url": "https://hub.docker.com/r/crux/python",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}