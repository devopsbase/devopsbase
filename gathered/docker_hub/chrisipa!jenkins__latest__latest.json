{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/chrisipa/jenkins",
    "repository_url": "https://hub.docker.com/v2/repositories/chrisipa/jenkins",
    "tags_url": "https://hub.docker.com/v2/repositories/chrisipa/jenkins/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/chrisipa/jenkins/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/chrisipa/jenkins/autobuild",
    "user": "chrisipa",
    "name": "jenkins",
    "namespace": "chrisipa",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 155,
    "last_updated": "2016-09-16T22:52:52.140211Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 401691224,
        "id": 1763774,
        "repository": 487028,
        "creator": 342045,
        "last_updater": 342045,
        "last_updated": "2016-09-16T22:27:17.661058Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "chrisipa/docker-jenkins"
  },
  "name": "chrisipa/jenkins Docker container",
  "description": "Jenkins docker image with Oracle JDK8, JCE and Maven3 preinstalled.",
  "readme": "docker-jenkins\n==============\n\nJenkins docker image with useful tools for Java development with Maven builds.\n\n# Description\nThis Jenkins docker image contains the following software components:\n\n - [Oracle JDK 8](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)\n - [Apache Maven 3](https://maven.apache.org/download.cgi)\n - [Apache Tomcat 7](https://tomcat.apache.org/index.html)\n - [Jenkins](https://jenkins-ci.org/)\n\n\n## Ports\nThese Jenkins ports are exposed:\n\n  - 8080 (GUI)\n  - 50000 (Build agents)\n\n\n# How to run the container\n\n## Using docker\n\n### Example 1: Evaluation usage without persistent data\n\nRun Jenkins container with this command:\n  ```\n  docker run --rm -p 8080:8080 chrisipa/jenkins\n  ```\n\n### Example 2: Production usage with mounted volume and context path\n\nRun Jenkins container with this command:\n  ```\ndocker run -d --name jenkins -p 8080:8080 -p 50000:50000 -v /opt/docker/jenkins:/opt/jenkins chrisipa/jenkins\n  ```\n\n## Advanced topics\n\n### Use your own SSL certificates\n\nSee parent image: [chrisipa/tomcat](https://github.com/chrisipa/docker-tomcat#use-your-own-ssl-certificates)\n\n### Accept self signed SSL certificates from Jenkins JRE\n\nSee parent image: [chrisipa/java](https://github.com/chrisipa/docker-java#accept-self-signed-ssl-certificates-from-jre)\n",
  "dockerfile": "FROM chrisipa/tomcat\nMAINTAINER Christoph Papke <info@papke.it>\n\n# set environment variables for program versions\nENV JENKINS_VERSION 1.650\nENV JENKINS_CHECKSUM 70016ac250ac680107e69964c0dc688d\nENV JENKINS_HOME /opt/jenkins\n\n# install additinal packages\nRUN apt-get update && \\\n    apt-get install -y git && \\\n    apt-get clean\n\n# copy context.xml to conf folder\nCOPY context.xml $CATALINA_HOME/conf/context.xml\n\n# copy index.jsp to ROOT webapp folder\nCOPY index.jsp $TOMCAT_WEBAPPS_FOLDER/ROOT/index.jsp\n\n# change to webapps folder\nWORKDIR $TOMCAT_WEBAPPS_FOLDER\n\n# download and extract jenkins to webapps folder\nRUN wget http://ftp.halifax.rwth-aachen.de/jenkins/war/$JENKINS_VERSION/jenkins.war && \\\n    echo \"$JENKINS_CHECKSUM jenkins.war\" | md5sum -c && \\  \n    unzip jenkins.war -d jenkins && \\     \n    rm -f jenkins.war\n\n# expose port\nEXPOSE 50000\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      50000
    ],
    "volume": [],
    "run": [
      "apt-get update &&     apt-get install -y git &&     apt-get clean",
      "wget http://ftp.halifax.rwth-aachen.de/jenkins/war/$JENKINS_VERSION/jenkins.war &&     echo \"$JENKINS_CHECKSUM jenkins.war\" | md5sum -c && \\  "
    ],
    "workdir": [
      "$TOMCAT_WEBAPPS_FOLDER"
    ],
    "from": "chrisipa/tomcat",
    "maintainer": "Christoph Papke <info@papke.it>",
    "env": {
      "JENKINS_VERSION": "1.650",
      "JENKINS_CHECKSUM": "70016ac250ac680107e69964c0dc688d",
      "JENKINS_HOME": "/opt/jenkins"
    },
    "copy": "index.jsp $TOMCAT_WEBAPPS_FOLDER/ROOT/index.jsp"
  },
  "source_repository_url": "https://github.com/chrisipa/docker-jenkins.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/chrisipa/docker-jenkins",
  "docker_repository": "chrisipa/jenkins",
  "docker_image": "chrisipa/jenkins",
  "parameters_schema": {
    "JENKINS_VERSION": {
      "default": "1.650",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_CHECKSUM": {
      "default": "70016ac250ac680107e69964c0dc688d",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_HOME": {
      "default": "/opt/jenkins",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        50000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "chrisipa/jenkins",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/chrisipa/jenkins",
    "https://hub.docker.com/v2/repositories/chrisipa/jenkins",
    "https://github.com/chrisipa/docker-jenkins.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Java",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Devopsware/Build/Java/Maven",
    "Type/Devopsware/Integration/Jenkins"
  ],
  "info_url": "https://hub.docker.com/r/chrisipa/jenkins",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}