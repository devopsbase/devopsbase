{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/oskarhane/docker-wordpress-nginx-ssh",
    "repository_url": "https://hub.docker.com/v2/repositories/oskarhane/docker-wordpress-nginx-ssh",
    "tags_url": "https://hub.docker.com/v2/repositories/oskarhane/docker-wordpress-nginx-ssh/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/oskarhane/docker-wordpress-nginx-ssh/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/oskarhane/docker-wordpress-nginx-ssh/autobuild",
    "user": "oskarhane",
    "name": "docker-wordpress-nginx-ssh",
    "namespace": "oskarhane",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 38,
    "pull_count": 3827,
    "last_updated": "2015-10-20T04:55:06.555594Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 203546035,
        "id": 11112,
        "repository": 11224,
        "creator": 14118,
        "last_updater": 14118,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "oskarhane/docker-wordpress-nginx-ssh"
  },
  "name": "oskarhane/docker-wordpress-nginx-ssh Docker container",
  "description": "A Dockerfile that installs the latest wordpress, nginx, php-apc, php-fpm and opens. Now with memcached caching straight from NGiNX!",
  "readme": "# docker-wordpress-nginx-ssh\r\n\r\nA Dockerfile that installs the latest wordpress, memcached, nginx, php-apc, php-fpm and openssh.  \r\n**Now with memcached caching straight from NGiNX!**\r\n\r\nThis is a modified fork from [eugeneware](https://github.com/eugeneware/docker-wordpress-nginx). Most credits should go to him.\r\n\r\n## Usage\r\n\r\nTo spawn a new instance of wordpress:\r\n\r\n    $ sudo docker run -p 80 -p 22 -d -t oskarhane/docker-wordpress-nginx-ssh\r\n\r\nYou'll see an ID output like: `d404cc2fa27b`\r\n\r\nThis command returns the container ID, which you can use to find the external port you can use to access Wordpress from your host machine:\r\n\r\n    $ docker port <container-id> 80\r\n\r\nYou can the visit the following URL in a browser on your host machine to get started:\r\n\r\n    http://127.0.0.1:<port>\r\n\r\nTo enable memcached caching straight from NGiNX, goto WP-FFPC settings page and press the save button. Thats it.\r\n\r\n\r\nTo get the SSH user `wordpress`'s password so you can login and edit files, check the top of the docker container logs for it.\r\n\r\n    $ docker logs <container-id>",
  "dockerfile": "FROM ubuntu\nMAINTAINER Eugene Ware <eugene@noblesamurai.com>\nRUN echo \"deb http://archive.ubuntu.com/ubuntu precise main universe\" > /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get -y upgrade\n\n# Keep upstart from complaining\nRUN dpkg-divert --local --rename --add /sbin/initctl\nRUN ln -sf /bin/true /sbin/initctl\nRUN mkdir /var/run/sshd\n\n# Basic Requirements\nRUN apt-get -y install memcached mysql-server mysql-client nginx php5-fpm php5-mysql php-apc pwgen python-setuptools curl git unzip openssh-server openssl\n\n# Wordpress Requirements\nRUN apt-get -y install php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-memcached php5-ming php5-ps php5-pspell php5-recode php5-snmp php5-sqlite php5-tidy php5-xmlrpc php5-xsl\n\n# mysql config\nRUN sed -i -e\"s/^bind-address\\s*=\\s*127.0.0.1/bind-address = 0.0.0.0/\" /etc/mysql/my.cnf\n\n# nginx config\nRUN sed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf\nRUN sed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 100m/\" /etc/nginx/nginx.conf\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\n\n# php-fpm config\nRUN sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php5/fpm/php.ini\nRUN sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php5/fpm/php.ini\nRUN sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php5/fpm/php-fpm.conf\nRUN find /etc/php5/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\;\n\n# nginx site conf\nADD ./nginx-site.conf /etc/nginx/sites-available/default\n\n# Supervisor Config\nRUN /usr/bin/easy_install supervisor\nADD ./supervisord.conf /etc/supervisord.conf\n\n#Add system user for Wordpress\nRUN useradd -m -d /home/wordpress -p $(openssl passwd -1 'temp') -G sudo -s /bin/bash wordpress \nRUN ln -s /usr/share/nginx/www /home/wordpress/www\n\n# SSH security, turn off root login\nRUN sed -i -e \"s/PermitRootLogin\\syes/PermitRootLogin no/g\" /etc/ssh/sshd_config\n\n# Install Wordpress\nADD http://wordpress.org/latest.tar.gz /usr/share/nginx/latest.tar.gz\nRUN cd /usr/share/nginx/ && tar xvf latest.tar.gz && rm latest.tar.gz\nRUN mv /usr/share/nginx/www/5* /usr/share/nginx/wordpress\nRUN rm -rf /usr/share/nginx/www\nRUN mv /usr/share/nginx/wordpress /usr/share/nginx/www\nRUN chown -R wordpress:www-data /usr/share/nginx/www\nRUN chmod -R 775 /usr/share/nginx/www\n\n# Wordpress Initialization and Startup Script\nADD ./start.sh /start.sh\nRUN chmod 755 /start.sh\n\n# private expose\nEXPOSE 80\nEXPOSE 22\n\nCMD [\"/bin/bash\", \"/start.sh\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "./nginx-site.conf",
        "dest": "/etc/nginx/sites-available/default"
      },
      {
        "source": "./supervisord.conf",
        "dest": "/etc/supervisord.conf"
      },
      {
        "source": "http://wordpress.org/latest.tar.gz",
        "dest": "/usr/share/nginx/latest.tar.gz"
      },
      {
        "source": "./start.sh",
        "dest": "/start.sh"
      }
    ],
    "expose": [
      80,
      22
    ],
    "volume": [],
    "run": [
      "echo \"deb http://archive.ubuntu.com/ubuntu precise main universe\" > /etc/apt/sources.list",
      "apt-get update",
      "apt-get -y upgrade",
      "dpkg-divert --local --rename --add /sbin/initctl",
      "ln -sf /bin/true /sbin/initctl",
      "mkdir /var/run/sshd",
      "apt-get -y install memcached mysql-server mysql-client nginx php5-fpm php5-mysql php-apc pwgen python-setuptools curl git unzip openssh-server openssl",
      "apt-get -y install php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-memcached php5-ming php5-ps php5-pspell php5-recode php5-snmp php5-sqlite php5-tidy php5-xmlrpc php5-xsl",
      "sed -i -e\"s/^bind-address\\s*=\\s*127.0.0.1/bind-address = 0.0.0.0/\" /etc/mysql/my.cnf",
      "sed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf",
      "sed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 100m/\" /etc/nginx/nginx.conf",
      "echo \"daemon off;\" >> /etc/nginx/nginx.conf",
      "sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php5/fpm/php.ini",
      "sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php5/fpm/php.ini",
      "sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php5/fpm/php-fpm.conf",
      "find /etc/php5/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\;",
      "/usr/bin/easy_install supervisor",
      "useradd -m -d /home/wordpress -p $(openssl passwd -1 'temp') -G sudo -s /bin/bash wordpress ",
      "ln -s /usr/share/nginx/www /home/wordpress/www",
      "sed -i -e \"s/PermitRootLogin\\syes/PermitRootLogin no/g\" /etc/ssh/sshd_config",
      "cd /usr/share/nginx/ && tar xvf latest.tar.gz && rm latest.tar.gz",
      "mv /usr/share/nginx/www/5* /usr/share/nginx/wordpress",
      "rm -rf /usr/share/nginx/www",
      "mv /usr/share/nginx/wordpress /usr/share/nginx/www",
      "chown -R wordpress:www-data /usr/share/nginx/www",
      "chmod -R 775 /usr/share/nginx/www",
      "chmod 755 /start.sh"
    ],
    "workdir": [],
    "from": "ubuntu",
    "maintainer": "Eugene Ware <eugene@noblesamurai.com>",
    "cmd": "[\"/bin/bash\", \"/start.sh\"]"
  },
  "source_repository_url": "git://github.com/oskarhane/docker-wordpress-nginx-ssh.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/oskarhane/docker-wordpress-nginx-ssh",
  "docker_repository": "oskarhane/docker-wordpress-nginx-ssh",
  "docker_image": "oskarhane/docker-wordpress-nginx-ssh",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        80,
        22
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "oskarhane/docker-wordpress-nginx-ssh",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/oskarhane/docker-wordpress-nginx-ssh",
    "https://hub.docker.com/v2/repositories/oskarhane/docker-wordpress-nginx-ssh",
    "git://github.com/oskarhane/docker-wordpress-nginx-ssh.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Mode/Executable/Script/Dockerfile",
    "Type/Devopsware/Test",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Runtime/PHP",
    "Type/Middleware/Web Server/Nginx",
    "Type/Middleware/Cache/Memcached"
  ],
  "info_url": "https://hub.docker.com/r/oskarhane/docker-wordpress-nginx-ssh",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}