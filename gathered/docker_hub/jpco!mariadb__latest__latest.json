{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/jpco/mariadb",
    "repository_url": "https://hub.docker.com/v2/repositories/jpco/mariadb",
    "tags_url": "https://hub.docker.com/v2/repositories/jpco/mariadb/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/jpco/mariadb/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/jpco/mariadb/autobuild",
    "user": "jpco",
    "name": "mariadb",
    "namespace": "jpco",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 39,
    "last_updated": "2016-09-23T19:59:41.907837Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 120232194,
        "id": 3787252,
        "repository": 793263,
        "creator": 898054,
        "last_updater": 898054,
        "last_updated": "2016-09-23T19:56:51.360909Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "armv7hf",
        "full_size": 120026966,
        "id": 3787517,
        "repository": 793263,
        "creator": 898054,
        "last_updater": 898054,
        "last_updated": "2016-09-20T02:04:16.360789Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "jpco/docker-mariadb"
  },
  "name": "jpco/mariadb Docker container",
  "description": "Mariadb, so I can have it on my raspberry",
  "readme": "# Mariadb\n---\nMade because I needed a Mariadb docker for my raspberry on armv7hf.  \n\nThe Dockerfile is based on the afficial mariadb, but using debian default repos.\nThe entrypoint is also copied from the original.",
  "dockerfile": "FROM debian:jessie\n\nMAINTAINER  J.P.C. Oudeman\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql && useradd -r -g mysql mysql\n\n# add gosu for easy step-down from root\nENV GOSU_VERSION 1.9\nRUN set -x \\\n    && apt-get update && apt-get install -y --no-install-recommends ca-certificates wget \\\n    && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n    && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n    && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n    && chmod +x /usr/local/bin/gosu \\\n    && gosu nobody true \\\n    && apt-get purge -y --auto-remove ca-certificates wget\n\nRUN mkdir /docker-entrypoint-initdb.d\n\n# install \"pwgen\" for randomizing passwords\nRUN apt-get update && apt-get install -y pwgen\n\nENV MARIADB_MAJOR 10.0\nENV MARIADB_VERSION 10.0.26+maria-1~jessie\n\n# the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n# also, we set debconf keys to make APT a little quieter\nRUN { \\\n        echo mariadb-server-$MARIADB_MAJOR mysql-server/root_password password 'unused'; \\\n        echo mariadb-server-$MARIADB_MAJOR mysql-server/root_password_again password 'unused'; \\\n    } | debconf-set-selections \\\n    && apt-get update \\\n    && apt-get install -y \\\n        mariadb-server \\\n# percona-xtrabackup is installed at the same time so that `mysql-common` is only installed once from just mariadb repos\n        percona-xtrabackup \\\n        socat \\\n    && rm -rf /var/lib/apt/lists/* \\\n# comment out any \"user\" entires in the MySQL config (\"docker-entrypoint.sh\" or \"--user\" will handle user switching)\n    && sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/* \\\n# purge and re-create /var/lib/mysql with appropriate ownership\n    && rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql /var/run/mysqld \\\n    && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n# ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\n    && chmod 777 /var/run/mysqld\n\n# comment out a few problematic configuration values\n# don't reverse lookup hostnames, they are usually another container\nRUN sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/my.cnf \\\n    && echo 'skip-host-cache\\nskip-name-resolve' | awk '{ print } $1 == \"[mysqld]\" && c == 0 { c = 1; system(\"cat\") }' /etc/mysql/my.cnf > /tmp/my.cnf \\\n    && mv /tmp/my.cnf /etc/mysql/my.cnf\n\n# Cleanup\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nVOLUME /var/lib/mysql\n\nCOPY assets/bin/entrypoint.sh /usr/local/bin/\nRUN chmod +x usr/local/bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]\n\nEXPOSE 3306\nCMD [\"mysqld\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      3306
    ],
    "volume": [
      "/var/lib/mysql"
    ],
    "run": [
      "groupadd -r mysql && useradd -r -g mysql mysql",
      "set -x     && apt-get update && apt-get install -y --no-install-recommends ca-certificates wget     && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"     && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"     && export GNUPGHOME=\"$(mktemp -d)\"     && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc     && chmod +x /usr/local/bin/gosu     && gosu nobody true     && apt-get purge -y --auto-remove ca-certificates wget",
      "mkdir /docker-entrypoint-initdb.d",
      "apt-get update && apt-get install -y pwgen",
      "{         echo mariadb-server-$MARIADB_MAJOR mysql-server/root_password password 'unused';         echo mariadb-server-$MARIADB_MAJOR mysql-server/root_password_again password 'unused';     } | debconf-set-selections     && apt-get update     && apt-get install -y         mariadb-server # percona-xtrabackup is installed at the same time so that `mysql-common` is only installed once from just mariadb repos",
      "sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/my.cnf     && echo 'skip-host-cache\\nskip-name-resolve' | awk '{ print } $1 == \"[mysqld]\" && c == 0 { c = 1; system(\"cat\") }' /etc/mysql/my.cnf > /tmp/my.cnf     && mv /tmp/my.cnf /etc/mysql/my.cnf",
      "apt-get clean",
      "rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*",
      "chmod +x usr/local/bin/entrypoint.sh"
    ],
    "workdir": [],
    "from": "debian:jessie",
    "maintainer": " J.P.C. Oudeman",
    "env": {
      "GOSU_VERSION": "1.9",
      "MARIADB_MAJOR": "10.0",
      "MARIADB_VERSION": "10.0.26+maria-1~jessie"
    },
    "copy": "assets/bin/entrypoint.sh /usr/local/bin/",
    "entrypoint": "[\"entrypoint.sh\"]",
    "cmd": "[\"mysqld\"]"
  },
  "source_repository_url": "git@bitbucket.org:JPCO/docker-mariadb.git",
  "source_repository_type": "git",
  "source_repository_provider": "bitbucket",
  "source_repository_web_url": "https://bitbucket.org/JPCO/docker-mariadb",
  "docker_repository": "jpco/mariadb",
  "docker_image": "jpco/mariadb",
  "parameters_schema": {
    "GOSU_VERSION": {
      "default": "1.9",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MARIADB_MAJOR": {
      "default": "10.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MARIADB_VERSION": {
      "default": "10.0.26+maria-1~jessie",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        3306
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "jpco/mariadb",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/jpco/mariadb",
    "https://hub.docker.com/v2/repositories/jpco/mariadb",
    "git@bitbucket.org:JPCO/docker-mariadb.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Data Store/Relational/MariaDB"
  ],
  "info_url": "https://hub.docker.com/r/jpco/mariadb",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}