{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/alim/alpine-rails",
    "repository_url": "https://hub.docker.com/v2/repositories/alim/alpine-rails",
    "tags_url": "https://hub.docker.com/v2/repositories/alim/alpine-rails/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/alim/alpine-rails/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/alim/alpine-rails/autobuild",
    "user": "alim",
    "name": "alpine-rails",
    "namespace": "alim",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 58,
    "last_updated": "2016-02-16T01:03:21.087846Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 211066686,
        "id": 2010020,
        "repository": 529501,
        "creator": 250805,
        "last_updater": 250805,
        "last_updated": "2016-02-16T01:03:19.664482Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "alim/alpine-rails"
  },
  "name": "alim/alpine-rails Docker container",
  "description": "A lightweight version of a Rails container running on an Alpine Linux based Ruby container.",
  "readme": "# Introduction\n\nThis Docker container image build is designed to produce a lightweight\nRuby-on-Rails Docker container. It's based on an Alpine Linux version of\nthe official Ruby container. The resulting container image should be about\nhalf the size of the official Rails container. The Dockerfile sets up the\nnecessary libraries needed to install Rails and its dependencies, but *does not*\nactually install Rails. It is designed to be used as a parent Docker file\nfor your Rails application.  This approach keeps the container smaller and\nwill only bundling in the Ruby Gems specified by your Rails application.\n\n# Usage\n\nThe steps for using this container are as follows:\n\n1. Create a Dockerfile in the root directory of your Rails application\n2. Either build the container locally our part of a Docker Hub automated build sequence.\n3. Run the container with the appropriate environment variables needed for your application.\n\n# Examples\n\nExample Dockerfiles that can be included in your Rails application are shown\nbelow:\n\nTBD\n",
  "dockerfile": "FROM ruby:2.3-alpine\nMAINTAINER Andy Lim <alim@nspartners.com>\n\nENV BUILD_PACKAGES=\"curl-dev ruby-dev build-base bash\" \\\n    DEV_PACKAGES=\"zlib-dev libxml2-dev libxslt-dev tzdata yaml-dev sqlite-dev postgresql-dev mysql-dev\" \\\n    RUBY_PACKAGES=\"ruby-json yaml nodejs\"\n\n# Update and install base packages and nokogiri gem that requires a\n# native compilation\nRUN apk update && \\\n    apk upgrade && \\\n    apk add --update\\\n    $BUILD_PACKAGES \\\n    $DEV_PACKAGES \\\n    $RUBY_PACKAGES && \\\n    rm -rf /var/cache/apk/* && \\\n    mkdir -p /usr/src/app\n\n# Copy the app into the working directory. This assumes your Gemfile\n# is in the root directory and includes your version of Rails that you\n# want to run.\nONBUILD WORKDIR /usr/src/app\nONBUILD COPY . /usr/src/app\nONBUILD EXPOSE 3000\nONBUILD RUN bundle config build.nokogiri --use-system-libraries && \\\n            bundle install && \\\n            bundle clean\n\nCMD [\"rails\", \"server\", \"-b\", \"0.0.0.0\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "apk update &&     apk upgrade &&     apk add --update    $BUILD_PACKAGES     $DEV_PACKAGES     $RUBY_PACKAGES &&     rm -rf /var/cache/apk/* &&     mkdir -p /usr/src/app"
    ],
    "workdir": [],
    "from": "ruby:2.3-alpine",
    "maintainer": "Andy Lim <alim@nspartners.com>",
    "env": {
      "BUILD_PACKAGES": "\"curl-dev",
      "ruby-dev": "build-base",
      "bash\"": "",
      "": "",
      "\"zlib-dev": "libxml2-dev",
      "libxslt-dev": "tzdata",
      "yaml-dev": "sqlite-dev",
      "postgresql-dev": "mysql-dev\"",
      "RUBY_PACKAGES": "\"ruby-json",
      "yaml": "nodejs\""
    },
    "onbuild": "RUN bundle config build.nokogiri --use-system-libraries &&             bundle install &&             bundle clean",
    "cmd": "[\"rails\", \"server\", \"-b\", \"0.0.0.0\"]"
  },
  "source_repository_url": "https://github.com/alim/alpine-rails.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/alim/alpine-rails",
  "docker_repository": "alim/alpine-rails",
  "docker_image": "alim/alpine-rails",
  "parameters_schema": {
    "BUILD_PACKAGES": {
      "default": "\"curl-dev",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ruby-dev": {
      "default": "build-base",
      "type": "string",
      "mapping": "environment_variable"
    },
    "bash\"": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"zlib-dev": {
      "default": "libxml2-dev",
      "type": "string",
      "mapping": "environment_variable"
    },
    "libxslt-dev": {
      "default": "tzdata",
      "type": "string",
      "mapping": "environment_variable"
    },
    "yaml-dev": {
      "default": "sqlite-dev",
      "type": "string",
      "mapping": "environment_variable"
    },
    "postgresql-dev": {
      "default": "mysql-dev\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "RUBY_PACKAGES": {
      "default": "\"ruby-json",
      "type": "string",
      "mapping": "environment_variable"
    },
    "yaml": {
      "default": "nodejs\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "alim/alpine-rails",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/alim/alpine-rails",
    "https://hub.docker.com/v2/repositories/alim/alpine-rails",
    "https://github.com/alim/alpine-rails.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Ruby",
    "Type/Infrastructure/Operating System/Linux"
  ],
  "info_url": "https://hub.docker.com/r/alim/alpine-rails",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}