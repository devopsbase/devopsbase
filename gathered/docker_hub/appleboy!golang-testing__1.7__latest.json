{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/appleboy/golang-testing",
    "repository_url": "https://hub.docker.com/v2/repositories/appleboy/golang-testing",
    "tags_url": "https://hub.docker.com/v2/repositories/appleboy/golang-testing/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/appleboy/golang-testing/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/appleboy/golang-testing/autobuild",
    "user": "appleboy",
    "name": "golang-testing",
    "namespace": "appleboy",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 1582,
    "last_updated": "2016-09-09T07:05:48.761329Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "1.7",
        "full_size": 125104801,
        "id": 4335299,
        "repository": 816470,
        "creator": 26508,
        "last_updater": 26508,
        "last_updated": "2016-09-09T07:05:48.226822Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.7.1",
        "full_size": 125104746,
        "id": 4755495,
        "repository": 816470,
        "creator": 26508,
        "last_updater": 26508,
        "last_updated": "2016-09-09T07:02:56.973602Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.5.4",
        "full_size": 120636055,
        "id": 4335270,
        "repository": 816470,
        "creator": 26508,
        "last_updater": 26508,
        "last_updated": "2016-09-09T07:00:50.399119Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 125104673,
        "id": 3977331,
        "repository": 816470,
        "creator": 26508,
        "last_updater": 26508,
        "last_updated": "2016-09-09T06:58:54.221238Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.6.3",
        "full_size": 124939692,
        "id": 4335282,
        "repository": 816470,
        "creator": 26508,
        "last_updater": 26508,
        "last_updated": "2016-09-09T06:56:58.065310Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "appleboy/golang-testing"
  },
  "name": "appleboy/golang-testing Docker container",
  "description": "Docker for golang testing.",
  "readme": "# golang-testing\n\n![Golang Testing](https://farm2.staticflickr.com/1622/24407557644_36087ca6de.jpg)\n\n**Docker image includes golang coverage tools for testing.**\n\n[![Build Status](https://travis-ci.org/appleboy/golang-testing.svg?branch=master)](https://travis-ci.org/appleboy/golang-testing) [![codecov](https://codecov.io/gh/appleboy/golang-testing/branch/master/graph/badge.svg)](https://codecov.io/gh/appleboy/golang-testing) [![Go Report Card](https://goreportcard.com/badge/github.com/appleboy/golang-testing)](https://goreportcard.com/report/github.com/appleboy/golang-testing)\n\n## Feature\n\nThe docker images includes the following `golang` tools.\n\n* [x] [go-junit-report](https://github.com/jstemmer/go-junit-report) Convert go test output to junit xml\n* [x] [gocov](https://github.com/axw/gocov/gocov) Coverage testing tool\n* [x] [gocov-xml](https://github.com/AlekSi/gocov-xml) XML (Cobertura) export\n* [x] [golint](https://github.com/golang/lint/golint) This is a linter for Go source code.\n* [x] [glide](https://github.com/Masterminds/glide) Package Management for Golang\n* [x] [cloc](https://github.com/AlDanial/cloc) Count Lines of Code.\n\n## Install\n\nCopy `coverage.sh` to `/usr/local/bin/coverage` and change permission.\n\n```\n$ curl -fsSL https://raw.githubusercontent.com/appleboy/golang-testing/master/coverage.sh /usr/local/bin/coverage\n$ chmod +x /usr/local/bin/coverage\n```\n\n## Usage\n\ncoverage tool document:\n\n```\nGenerate test coverage statistics for Go packages.\n\n  -- Command Flag --\n  -h | --help                    Display this help and exit\n  -m | --mode                    Set coverage mode. default is \"set\" (set|count|atomic)\n  -d | --dir                     Set store coverage folder (default is \".cover\")\n\n  -- Command Action --\n  tool                           Install go dependency tools like gocov or golint.\n  testing                        Run go testing for all packages\n  coverage                       Generate coverage report for all packages\n  junit                          Generate coverage xml report for junit plugin\n  lint                           Generate Lint report for all packages\n  vet                            Generate Vet report for all packages\n  cloc                           Generate Count Lines of Code report for all files\n  all                            Execute coverage、junit、lint、vet and cloc report\n\nContribute and source at https://github.com/appleboy/golang-testing\n```\n\n## Run with docker\n\nPull the latest [golang-testing](https://hub.docker.com/r/appleboy/golang-testing/) docker image.\n\n```\n$ docker pull appleboy/golang-testing\n```\n\n### docker command\n\nRun testing in single docker command.\n\n```\n$ export PROJECT_PATH=/go/src/github.com/appleboy/golang-testing\n$ docker run --rm \\\n    -v $(PWD):$PROJECT_PATH \\\n    -w=$PROJECT_PATH \\\n    appleboy/golang-testing \\\n    sh -c \"coverage all\"\n```\n\nChange `PROJECT_PATH` variable. Replace `github.com/appleboy/golang-testing` with your github path.\n\n### docker-compose command\n\nPlease see [docker/docker-compose.yml](./docker/docker-compose.yml) example file. Run the following command.\n\n```\n$ export PROJECT_PATH=/go/src/github.com/appleboy/golang-testing\n$ docker-compose -f docker/docker-compose.yml run golang-testing \\\n  sh -c \"coverage all\"\n```\n\n## Demo\n\n```\n$ git clone https://github.com/appleboy/golang-testing.git\n$ cd golang-testing\n$ export PROJECT_PATH=/go/src/github.com/appleboy/golang-testing\n$ docker run --rm \\\n    -v $(PWD):$(PROJECT_PATH) \\\n    -w=$(PROJECT_PATH) \\\n    appleboy/golang-testing \\\n    sh -c \"make update && coverage all\"\n# or docker-compose command\n$ docker-compose -f docker/docker-compose.yml \\\n    run golang-testing\n```\n\n## Screenshot\n\n![Testing](./screenshot/screen.png)\n",
  "dockerfile": "FROM golang:1.7-alpine\n\nMAINTAINER Bo-Yi Wu <appleboy.tw@gmail.com>\n\nRUN apk update \\\n  && apk add git make curl perl bash && rm -rf /var/cache/apk/*\n\n# install glide package management.\nRUN curl https://glide.sh/get | sh\n\n# install golang tools\nRUN go get -u github.com/jstemmer/go-junit-report\nRUN go get -u github.com/axw/gocov/gocov\nRUN go get -u github.com/AlekSi/gocov-xml\nRUN go get -u github.com/golang/lint/golint\n\n# install cloc tool\nRUN curl https://raw.githubusercontent.com/AlDanial/cloc/master/cloc -o /usr/bin/cloc \\\n  && chmod 755 /usr/bin/cloc\n\nADD coverage.sh /usr/bin/coverage\n\nWORKDIR $GOPATH\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "coverage.sh",
        "dest": "/usr/bin/coverage"
      }
    ],
    "expose": [],
    "volume": [],
    "run": [
      "apk update   && apk add git make curl perl bash && rm -rf /var/cache/apk/*",
      "curl https://glide.sh/get | sh",
      "go get -u github.com/jstemmer/go-junit-report",
      "go get -u github.com/axw/gocov/gocov",
      "go get -u github.com/AlekSi/gocov-xml",
      "go get -u github.com/golang/lint/golint",
      "curl https://raw.githubusercontent.com/AlDanial/cloc/master/cloc -o /usr/bin/cloc   && chmod 755 /usr/bin/cloc"
    ],
    "workdir": [
      "$GOPATH"
    ],
    "from": "golang:1.7-alpine",
    "maintainer": "Bo-Yi Wu <appleboy.tw@gmail.com>"
  },
  "source_repository_url": "https://github.com/appleboy/golang-testing.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/appleboy/golang-testing",
  "docker_repository": "appleboy/golang-testing",
  "docker_image": "appleboy/golang-testing",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "appleboy/golang-testing",
  "revision": "1.7",
  "uris": [
    "https://hub.docker.com/r/appleboy/golang-testing",
    "https://hub.docker.com/v2/repositories/appleboy/golang-testing",
    "https://github.com/appleboy/golang-testing.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Golang",
    "Type/Devopsware/Test"
  ],
  "info_url": "https://hub.docker.com/r/appleboy/golang-testing",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}