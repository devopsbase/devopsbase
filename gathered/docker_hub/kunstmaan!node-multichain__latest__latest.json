{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/kunstmaan/node-multichain",
    "repository_url": "https://hub.docker.com/v2/repositories/kunstmaan/node-multichain",
    "tags_url": "https://hub.docker.com/v2/repositories/kunstmaan/node-multichain/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/kunstmaan/node-multichain/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/kunstmaan/node-multichain/autobuild",
    "user": "kunstmaan",
    "name": "node-multichain",
    "namespace": "kunstmaan",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 1342,
    "last_updated": "2016-08-11T22:15:50.611427Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 62658556,
        "id": 1642984,
        "repository": 463575,
        "creator": 313528,
        "last_updater": 541757,
        "last_updated": "2016-08-11T22:15:49.987297Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "Kunstmaan/docker-multichain"
  },
  "name": "kunstmaan/node-multichain Docker container",
  "description": "Multichain node that connects to kunstmaan/master-multichain",
  "readme": "# docker-multichain\n\nThis is the repository for the kunstmaan/*-multichain docker images.\n\n## Images\n\n* [kunstmaan/base-multichain](https://hub.docker.com/r/kunstmaan/base-multichain/): A base Ubuntu with the latest Multichain deamon installed\n* [kunstmaan/master-multichain](https://hub.docker.com/r/kunstmaan/master-multichain/): Based on the \"base\" image running a master node, creates a blockchain and runs it. *Important: only for development since any node can connect, anyone can administer and the RPC interface is open to all.*\n* [kunstmaan/node-multichain](https://hub.docker.com/r/kunstmaan/node-multichain/): Based on the same \"base\" image and connects to the master node\n* [kunstmaan/explorer-multichain](https://hub.docker.com/r/kunstmaan/explorer-multichain/): A node with the Multichain explorer installed\n\n## Running the cluster\n\nUse this [docker-compose.yml](https://github.com/Kunstmaan/docker-multichain/blob/master/docker-compose.yml) and run:\n\n```\nsudo docker-compose up\n```\n\n\n## Persisting your chain\n\nAdd a volume\n\n<somewhere>:/root/.multichain\n\n## Configuration\n\n### Masternode\n\nTo configure your chain, we use environment variables.\n\n#### Required\n\n* CHAINNAME: DockerChain\n* NETWORK_PORT: 7447       # also expose this port!\n* RPC_PORT: 8000           # also expose this port!\n* RPC_USER: multichainrpc\n* RPC_PASSWORD: 79pgKQusiH3VDVpyzsM6e3kRz6gWNctAwgJvymG3iiuz\n* RPC_ALLOW_IP: 0.0.0.0/0.0.0.0\n\n#### Optional\n\n* PARAM_<something descriptive>='<variable>|<value>' e.g: `PARAM_TARGET_BLOCK_SIZE='target-block-time|15'`\n\nThese variables can be set:\n\n```\n# Basic chain parameters\n\nchain-protocol = multichain             # Chain protocol: multichain (permissions, native assets) or bitcoin\nchain-is-testnet = false                # Content of the 'testnet' field of API responses, for compatibility.\ntarget-block-time = 15                  # Target time between blocks (transaction confirmation delay), seconds. (5 - 86400)\nmaximum-block-size = 1000000            # Maximum block size in bytes. (1000 - 1000000000)\n\n# Global permissions\n\nanyone-can-connect = false              # Anyone can connect, i.e. a publicly readable blockchain.\nanyone-can-send = false                 # Anyone can send, i.e. transaction signing not restricted by address.\nanyone-can-receive = false              # Anyone can receive, i.e. transaction outputs not restricted by address.\nanyone-can-issue = false                # Anyone can issue new native assets.\nanyone-can-mine = false                 # Anyone can mine blocks (confirm transactions).\nanyone-can-activate = false             # Anyone can grant or revoke connect, send and receive permissions.\nanyone-can-admin = false                # Anyone can grant or revoke all permissions.\nallow-p2sh-outputs = true               # Allow pay-to-scripthash (P2SH) scripts, often used for multisig.\nallow-multisig-outputs = true           # Allow bare multisignature scripts, rarely used but still supported.\n\n# Consensus requirements\n\nsetup-first-blocks = 60                 # Length of initial setup phase in blocks, in which mining-diversity,\n                                        # admin-consensus-* and mining-requires-peers are not applied. (1 - 31536000)\nmining-diversity = 0.3                  # Miners must wait <mining-diversity>*<active miners> between blocks. (0 - 1)\nadmin-consensus-admin = 0.5             # <admin-consensus-admin>*<active admins> needed to change admin perms. (0 - 1)\nadmin-consensus-activate = 0.5          # <admin-consensus-activate>*<active admins> to change activate perms. (0 - 1)\nadmin-consensus-mine = 0.5              # <admin-consensus-mine>*<active admins> to change mining permissions. (0 - 1)\nadmin-consensus-issue = 0.0             # <admin-consensus-issue>*<active admins> to change issue permissions. (0 - 1)\nmining-requires-peers = true            # Default for whether nodes only mine blocks if connected to other nodes.\n\n# Native blockchain currency (likely not required)\n\ninitial-block-reward = 0                # Initial block mining reward in raw native currency units. (0 - 1000000000000000000)\nfirst-block-reward = -1                 # Different mining reward for first block only, ignored if negative. (-1 - 1000000000000000000)\nreward-halving-interval = 52560000      # Interval for halving of mining rewards, in blocks. (60 - 4294967295)\nreward-spendable-delay = 1              # Delay before mining reward can be spent, in blocks. (1 - 100000)\nminimum-per-output = 0                  # Minimum native currency per output (anti-dust), in raw units.\n                                        # If set to -1, this is calculated from minimum-relay-fee. (-1 - 1000000000)\nmaximum-per-output = 100000000000000    # Maximum native currency per output, in raw units. (0 - 1000000000000000000)\nminimum-relay-fee = 0                   # Minimum transaction fee, in raw units of native currency. (0 - 1000000000)\nnative-currency-multiple = 100000000    # Number of raw units of native currency per display unit. (0 - 1000000000)\n\n# Advanced mining parameters\n\nskip-pow-check = false                  # Skip checking whether block hashes demonstrate proof of work.\npow-minimum-bits = 16                   # Initial and minimum proof of work difficulty, in leading zero bits. (1 - 32)\ntarget-adjust-freq = 86400              # Interval between proof of work difficulty adjustments, in seconds. (3600 - 4294967295)\nallow-min-difficulty-blocks = false     # Allow lower difficulty blocks if none after 2*<target-block-time>.\n\n# Standard transaction definitions\n\nonly-accept-std-txs = true              # Only accept and relay transactions which qualify as 'standard'.\nmax-std-tx-size = 100000                # Maximum size of standard transactions, in bytes. (1024 - 10000000)\nmax-std-op-return-size = 4096           # Maximum size of OP_RETURN metadata in standard transactions, in bytes. (0 - 8388608)\nmax-std-op-drops-count = 5              # Maximum number of OP_DROPs per output in standard transactions. (0 - 100)\nmax-std-element-size = 600              # Maximum size of data elements in standard transactions, in bytes. (128 - 32768)\n```\n\n### Slavenode\n\nTo configure your chain, we use environment variables.\n\n#### Required\n\n* CHAINNAME: DockerChain\n* NETWORK_PORT: 7447       # also expose this port!\n* RPC_PORT: 8000           # also expose this port!\n* RPC_USER: multichainrpc\n* RPC_PASSWORD: 79pgKQusiH3VDVpyzsM6e3kRz6gWNctAwgJvymG3iiuz\n* RPC_ALLOW_IP: 0.0.0.0/0.0.0.0\n* MASTERNODE: masternode   # IP address of the master node, or a docker compose link. Don't forget the links section!\n",
  "dockerfile": "FROM kunstmaan/base-multichain\nMAINTAINER Roderik van der Veer\n\nADD ./runchain.sh /root/runchain.sh\nRUN chmod a+x /root/runchain.sh\n\nCMD [\"/bin/bash\", \"/root/runchain.sh\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "./runchain.sh",
        "dest": "/root/runchain.sh"
      }
    ],
    "expose": [],
    "volume": [],
    "run": [
      "chmod a+x /root/runchain.sh"
    ],
    "workdir": [],
    "from": "kunstmaan/base-multichain",
    "maintainer": "Roderik van der Veer",
    "cmd": "[\"/bin/bash\", \"/root/runchain.sh\"]"
  },
  "source_repository_url": "git@github.com:Kunstmaan/docker-multichain.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/Kunstmaan/docker-multichain",
  "docker_repository": "kunstmaan/node-multichain",
  "docker_image": "kunstmaan/node-multichain",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "kunstmaan/node-multichain",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/kunstmaan/node-multichain",
    "https://hub.docker.com/v2/repositories/kunstmaan/node-multichain",
    "git@github.com:Kunstmaan/docker-multichain.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/JavaScript/Node.js"
  ],
  "info_url": "https://hub.docker.com/r/kunstmaan/node-multichain",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}