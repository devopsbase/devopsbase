{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/levino/mongo-express",
    "repository_url": "https://hub.docker.com/v2/repositories/levino/mongo-express",
    "tags_url": "https://hub.docker.com/v2/repositories/levino/mongo-express/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/levino/mongo-express/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/levino/mongo-express/autobuild",
    "user": "levino",
    "name": "mongo-express",
    "namespace": "levino",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 124,
    "last_updated": "2016-01-04T12:30:54.534787Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 70705537,
        "id": 1654118,
        "repository": 466752,
        "creator": 382606,
        "last_updater": 382606,
        "last_updated": "2016-01-04T12:30:52.665450Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "Levino/mongo-express"
  },
  "name": "levino/mongo-express Docker container",
  "description": "Mongo express which respects environment variables for everything. Tutum style.",
  "readme": "### mongo-express\n\nA dockerized [mongo-express](https://github.com/andzdroid/mongo-express) for managing a MongoDB database in the browser.\n\n### How to run this container\n\n\tdocker run -it --rm \\\n\t\t--link NAME_OF_MONGODB_CONTAINER:mongo \\\n\t\tknickers/mongo-express\n\n`--link` is the key here, where you link your MongoDB container into the mongo-express container.\n\n#### Additional configuration Options\n\nEnvironment variables can be passed to the `run` command for configuring your mongo-express container\n\n\tName                            | Default   | Description\n\t--------------------------------|-----------|------------\n\tME_CONFIG_BASICAUTH_USERNAME    | ''        | mongo-express web console username\n\tME_CONFIG_BASICAUTH_PASSWORD    | ''        | mongo-express web console password\n\tME_CONFIG_MONGODB_ADMINUSERNAME | ''        | MongoDB admin username\n\tME_CONFIG_MONGODB_ADMINPASSWORD | ''        | MongoDB admin password\n\tME_CONFIG_MONGODB_PORT          | 27017     | MongoDB port\n\tME_CONFIG_MONGODB_SERVER        | 'mongo'   | MongoDB container name\n\tME_CONFIG_OPTIONS_EDITORTHEME   | 'default' | mongo-express editor color theme, [more here](http://codemirror.net/demo/theme.html)\n\tME_CONFIG_REQUEST_SIZE          | '100kb'   | Maximum payload size. CRUD operations above this size will fail in [body-parser](https://www.npmjs.com/package/body-parser).\n\n#### Example\n\n\tdocker run -it --rm \\\n\t\t--name mongo-express \\\n\t\t--link web_db_1:mongo \\\n\t\t-e ME_CONFIG_OPTIONS_EDITORTHEME=\"ambiance\" \\\n\t\tknickers/mongo-express\n\nThis container can be accessed at `http://localhost:8081`, or `http://mongo-express.docker:8081` if you have [tianon/rawdns](https://github.com/tianon/rawdns) running.\n\n### Note from the mongo-express developers:\n\n> JSON documents are parsed through a javascript virtual machine, so the web interface can be used for executing malicious javascript on a server.\n\n> **mongo-express should only be used privately for development purposes.**\n",
  "dockerfile": "FROM node:0.12-slim\n\nENV TINI_VERSION 0.5.0\nRUN set -x \\\n\t&& apt-get update && apt-get install -y ca-certificates curl \\\n\t\t--no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& curl -fSL \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini\" -o /usr/local/bin/tini \\\n\t&& chmod +x /usr/local/bin/tini \\\n\t&& tini -h \\\n\t&& apt-get purge --auto-remove -y ca-certificates curl\n\nENV MONGO_EXPRESS 0.28.4\n\nRUN npm install mongo-express@$MONGO_EXPRESS\n\nWORKDIR /node_modules/mongo-express\n\nCOPY config.js config.js\n\nENV ME_CONFIG_EDITORTHEME=\"default\"\nENV ME_CONFIG_MONGODB_SERVER=\"mongo\"\nENV ME_CONFIG_BASICAUTH_USERNAME=\"\"\nENV ME_CONFIG_BASICAUTH_PASSWORD=\"\"\nENV ME_CONFIG_PORT=8081\nENV ME_CONFIG_MONGODB_ADMIN_MODE=\"true\"\n\nEXPOSE 8081\nCMD [\"tini\", \"--\", \"node\", \"app\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      8081
    ],
    "volume": [],
    "run": [
      "set -x \t&& apt-get update && apt-get install -y ca-certificates curl \t\t--no-install-recommends \t&& rm -rf /var/lib/apt/lists/* \t&& curl -fSL \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini\" -o /usr/local/bin/tini \t&& chmod +x /usr/local/bin/tini \t&& tini -h \t&& apt-get purge --auto-remove -y ca-certificates curl",
      "npm install mongo-express@$MONGO_EXPRESS"
    ],
    "workdir": [
      "/node_modules/mongo-express"
    ],
    "from": "node:0.12-slim",
    "env": {
      "TINI_VERSION": "0.5.0",
      "MONGO_EXPRESS": "0.28.4",
      "ME_CONFIG_EDITORTHEME": "\"default\"",
      "ME_CONFIG_MONGODB_SERVER": "\"mongo\"",
      "ME_CONFIG_BASICAUTH_USERNAME": "\"\"",
      "ME_CONFIG_BASICAUTH_PASSWORD": "\"\"",
      "ME_CONFIG_PORT": "8081",
      "ME_CONFIG_MONGODB_ADMIN_MODE": "\"true\""
    },
    "copy": "config.js config.js",
    "cmd": "[\"tini\", \"--\", \"node\", \"app\"]"
  },
  "source_repository_url": "https://github.com/Levino/mongo-express.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/Levino/mongo-express",
  "docker_repository": "levino/mongo-express",
  "docker_image": "levino/mongo-express",
  "parameters_schema": {
    "TINI_VERSION": {
      "default": "0.5.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MONGO_EXPRESS": {
      "default": "0.28.4",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ME_CONFIG_EDITORTHEME": {
      "default": "\"default\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ME_CONFIG_MONGODB_SERVER": {
      "default": "\"mongo\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ME_CONFIG_BASICAUTH_USERNAME": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ME_CONFIG_BASICAUTH_PASSWORD": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ME_CONFIG_PORT": {
      "default": "8081",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ME_CONFIG_MONGODB_ADMIN_MODE": {
      "default": "\"true\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        8081
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "levino/mongo-express",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/levino/mongo-express",
    "https://hub.docker.com/v2/repositories/levino/mongo-express",
    "https://github.com/Levino/mongo-express.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Data Store/Document-oriented/MongoDB"
  ],
  "info_url": "https://hub.docker.com/r/levino/mongo-express",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}