{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/ctlc/haproxy",
    "repository_url": "https://hub.docker.com/v2/repositories/ctlc/haproxy",
    "tags_url": "https://hub.docker.com/v2/repositories/ctlc/haproxy/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/ctlc/haproxy/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/ctlc/haproxy/autobuild",
    "user": "ctlc",
    "name": "haproxy",
    "namespace": "ctlc",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 5,
    "pull_count": 387,
    "last_updated": "2015-10-11T18:40:50.604563Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 67347834,
        "id": 9443,
        "repository": 9336,
        "creator": 11864,
        "last_updater": 11864,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "CenturyLinkLabs/ctlc-docker-haproxy"
  },
  "name": "ctlc/haproxy Docker container",
  "description": "",
  "readme": "ctlc-docker-haproxy\n==================\n\nBase docker image to run a HAProxy with Serf\n\n\nUsage\n-----\n\nTo create the image `ctlc/haproxy`, execute the following command on the ctlc-docker-haproxy folder:\n\n\tsudo docker build -t ctlc/haproxy .\n\nRunning the Serf agent\n------------------------\n\nRun the `/run.sh` script to start WordPress (via Docker supervisor):\n\n\tID=$(sudo docker run -d -p 80 ctlc/haproxy /run.sh)\n\nIt will store the new container ID (like `d35bf1374e88`) in $ID. Get the allocated external port:\n\n\tsudo docker port $ID 80\n\nIt will print the allocated port (like 4751). Test your deployment:\n\n\tcurl http://0.0.0.0:4751/\n\nDone!\n",
  "dockerfile": "FROM ubuntu:quantal\nMAINTAINER Lucas Carlson <lucas@rufy.com>\n\n# Let's get haproxy\nRUN apt-get update -q\nRUN apt-get install -y haproxy\n\nRUN apt-get install -qy supervisor\n\nADD enabled /etc/default/haproxy\nADD haproxy.cfg /etc/haproxy/haproxy.cfg\n\nADD /start-haproxy.sh /start-haproxy.sh\nADD /run.sh /run.sh\nADD /supervisord-haproxy.conf /etc/supervisor/conf.d/supervisord-haproxy.conf\nRUN chmod 755 /*.sh\n\nEXPOSE 80\nCMD [\"/run.sh\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "enabled",
        "dest": "/etc/default/haproxy"
      },
      {
        "source": "haproxy.cfg",
        "dest": "/etc/haproxy/haproxy.cfg"
      },
      {
        "source": "/start-haproxy.sh",
        "dest": "/start-haproxy.sh"
      },
      {
        "source": "/run.sh",
        "dest": "/run.sh"
      },
      {
        "source": "/supervisord-haproxy.conf",
        "dest": "/etc/supervisor/conf.d/supervisord-haproxy.conf"
      }
    ],
    "expose": [
      80
    ],
    "volume": [],
    "run": [
      "apt-get update -q",
      "apt-get install -y haproxy",
      "apt-get install -qy supervisor",
      "chmod 755 /*.sh"
    ],
    "workdir": [],
    "from": "ubuntu:quantal",
    "maintainer": "Lucas Carlson <lucas@rufy.com>",
    "cmd": "[\"/run.sh\"]"
  },
  "source_repository_url": "git://github.com/CenturyLinkLabs/ctlc-docker-haproxy.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/CenturyLinkLabs/ctlc-docker-haproxy",
  "docker_repository": "ctlc/haproxy",
  "docker_image": "ctlc/haproxy",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "ctlc/haproxy",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/ctlc/haproxy",
    "https://hub.docker.com/v2/repositories/ctlc/haproxy",
    "git://github.com/CenturyLinkLabs/ctlc-docker-haproxy.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Proxy/HAProxy"
  ],
  "info_url": "https://hub.docker.com/r/ctlc/haproxy",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}