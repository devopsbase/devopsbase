{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/withinboredom/mysql",
    "repository_url": "https://hub.docker.com/v2/repositories/withinboredom/mysql",
    "tags_url": "https://hub.docker.com/v2/repositories/withinboredom/mysql/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/withinboredom/mysql/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/withinboredom/mysql/autobuild",
    "user": "withinboredom",
    "name": "mysql",
    "namespace": "withinboredom",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 641,
    "last_updated": "2016-01-04T22:05:31.496048Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 180292668,
        "id": 832659,
        "repository": 308787,
        "creator": 110774,
        "last_updater": 110774,
        "last_updated": "2016-01-04T22:05:30.864697Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "withinboredom/docker-ubuntu-base"
  },
  "name": "withinboredom/mysql Docker container",
  "description": "A MySQL container using s6 and Consul -- built on tatum/mysql",
  "readme": "docker-ubuntu-base\n==================\n\nA base image for Ubuntu-based Docker images.\n\nThis Vagrant vm helps me to manage:\n\n- building [s6](http://www.skarnet.org/software/s6/)\n- building the smebberson/ubuntu-base image\n\nSetup\n-----\n\nSetup the vagrant machine by running `vagrant up --provider=vmware_fusion`. This will get you a VM running a pretty basic version of Ubuntu with:\n\n- Docker (latest at the time of build)\n- installed packages `software-properties-common`,`build-essential`\n- a `/build` directory\n- a `/packages` directory\n\nUsage\n-----\n\nThe following describes the various scripts included in this repository to help build s6 and the docker image.\n\n### To build S6\n-----------------\n\nThere are some scripts to help with this process. Once you're SSH'd into the machine:\n\n- `cd /vagrant`\n- to build the [musil](http://www.musl-libc.org/) static compiler, `./s6/musil-build`\n- to build the [skalibs](http://www.skarnet.org/software/skalibs/) package, `./s6/skalibs-build`\n- to build the [execline](http://www.skarnet.org/software/execline/) package, `./s6/execline-build`\n- and finally to build [s6](http://www.skarnet.org/software/s6/), `./s6/s6-build`\n\nThere will be a new `.tar.gz` file in `/vagrant/dist/` containing statically compiled s6 binaries.\n",
  "dockerfile": "FROM withinboredom/consul-agent\nMAINTAINER Robert Landers <landers.robert@gmail.com>\n\n# Install packages\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n  apt-get -yq install mysql-server-5.5 pwgen && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Remove pre-installed database\nRUN rm -rf /var/lib/mysql/*\n\n# Remove syslog configuration\nRUN rm /etc/mysql/conf.d/mysqld_safe_syslog.cnf\n\nADD root /\n\n# Exposed ENV\nENV MYSQL_USER admin\nENV MYSQL_PASS **Random**\nENV ON_CREATE_DB **False**\n\n# Replication ENV\nENV REPLICATION_MASTER **False**\nENV REPLICATION_SLAVE **False**\nENV REPLICATION_USER replica\nENV REPLICATION_PASS replica\n\n# Add VOLUMEs to allow backup of config and databases\nVOLUME  [\"/etc/mysql\", \"/var/lib/mysql\"]\n\nEXPOSE 3306",
  "dockerfile_json": {
    "add": [
      {
        "source": "root",
        "dest": "/"
      }
    ],
    "expose": [
      3306
    ],
    "volume": [
      " [\"/etc/mysql\", \"/var/lib/mysql\"]"
    ],
    "run": [
      "apt-get update &&   apt-get -yq install mysql-server-5.5 pwgen &&   rm -rf /var/lib/apt/lists/*",
      "rm -rf /var/lib/mysql/*",
      "rm /etc/mysql/conf.d/mysqld_safe_syslog.cnf"
    ],
    "workdir": [],
    "from": "withinboredom/consul-agent",
    "maintainer": "Robert Landers <landers.robert@gmail.com>",
    "env": {
      "DEBIAN_FRONTEND": "noninteractive",
      "MYSQL_USER": "admin",
      "MYSQL_PASS": "**Random**",
      "ON_CREATE_DB": "**False**",
      "REPLICATION_MASTER": "**False**",
      "REPLICATION_SLAVE": "**False**",
      "REPLICATION_USER": "replica",
      "REPLICATION_PASS": "replica"
    }
  },
  "source_repository_url": "https://github.com/withinboredom/docker-ubuntu-base.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/withinboredom/docker-ubuntu-base",
  "docker_repository": "withinboredom/mysql",
  "docker_image": "withinboredom/mysql",
  "parameters_schema": {
    "DEBIAN_FRONTEND": {
      "default": "noninteractive",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MYSQL_USER": {
      "default": "admin",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MYSQL_PASS": {
      "default": "**Random**",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ON_CREATE_DB": {
      "default": "**False**",
      "type": "string",
      "mapping": "environment_variable"
    },
    "REPLICATION_MASTER": {
      "default": "**False**",
      "type": "string",
      "mapping": "environment_variable"
    },
    "REPLICATION_SLAVE": {
      "default": "**False**",
      "type": "string",
      "mapping": "environment_variable"
    },
    "REPLICATION_USER": {
      "default": "replica",
      "type": "string",
      "mapping": "environment_variable"
    },
    "REPLICATION_PASS": {
      "default": "replica",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        3306
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "withinboredom/mysql",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/withinboredom/mysql",
    "https://hub.docker.com/v2/repositories/withinboredom/mysql",
    "https://github.com/withinboredom/docker-ubuntu-base.git"
  ],
  "labels": [
    "Docker",
    "Binding/Region/North America/US",
    "Type/Devopsware/Orchestration/Consul",
    "Type/Middleware/Data Store/Relational/MySQL"
  ],
  "info_url": "https://hub.docker.com/r/withinboredom/mysql",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}