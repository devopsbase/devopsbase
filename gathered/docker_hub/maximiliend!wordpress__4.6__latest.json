{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/maximiliend/wordpress",
    "repository_url": "https://hub.docker.com/v2/repositories/maximiliend/wordpress",
    "tags_url": "https://hub.docker.com/v2/repositories/maximiliend/wordpress/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/maximiliend/wordpress/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/maximiliend/wordpress/autobuild",
    "user": "maximiliend",
    "name": "wordpress",
    "namespace": "maximiliend",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 3,
    "pull_count": 58479,
    "last_updated": "2016-09-01T23:25:33.049011Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "4.6",
        "full_size": 175254739,
        "id": 4636545,
        "repository": 516709,
        "creator": 355642,
        "last_updater": 355642,
        "last_updated": "2016-09-01T23:25:32.361464Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 175254669,
        "id": 1937595,
        "repository": 516709,
        "creator": 355642,
        "last_updater": 355642,
        "last_updated": "2016-09-01T23:22:04.989504Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "maximiliend/docker-wordpress"
  },
  "name": "maximiliend/wordpress Docker container",
  "description": "A enhanced docker image of WordPress with PHP7 & Security Tools. Based on Official Docker WordPress.",
  "readme": "# Wordpress\n\nA enhanced docker image of WordPress with PHP7 & Security Tools. Based on Official Docker WordPress.\n\n### Wordpress Version\n\n4.6\n\n### Advice\n\nThe official wordpress Image use a volume for /var/www/html. We keep it for wp-config.php, because if you want edit this one you will have to mount it with -v /path/to/wp-config.php:/var/www/html/wp-config.php and sometimes you can see a similar error \"./sedKdJ9Dy: Device or resource busy\" because of an inode change.\n\nWe recommend you to use volume for wordpress but only for /var/www/html/wp-content. So you only keep uploaded files, themes and plugins. You are not supposed to change the wordpress core.\nSimply choose what you want to do by using -v option.\n```\ndocker run [...] -v /path/to/wp-content:/var/www/html/wp-content [...]\n```\n\nFor security reason the default wordpress login /wp-login.php is hidden from bots.\n> Use http://my-awesome-website/wp-admin-panel/ to access to your login panel\n\n### Security\n\nEmbedded security systems in this version provide differents features :\n* Block malicious bots\n* Reduce comment spam\n* Protect sensitive files and pages\n* Reduce possible hacks & SQL injections by preventing some insertions in url.\n* Hide your admin panel login from bots.\n\n### Why use this version and not the official?\n\n* The official don't use PHP7\n* The official don't embeds security tips by default\n",
  "dockerfile": "FROM php:7.0.10-apache\n\nRUN a2enmod rewrite expires\n\n# install the PHP extensions we need\nRUN apt-get update && apt-get install -y libpng12-dev libjpeg-dev && rm -rf /var/lib/apt/lists/* \\\n\t&& docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n\t&& docker-php-ext-install gd mysqli opcache\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=60'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t\techo 'opcache.enable_cli=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nRUN { \\\n        echo 'file_uploads=On'; \\\n        echo 'memory_limit=128M'; \\\n        echo 'upload_max_filesize=24M'; \\\n        echo 'post_max_size=24M'; \\\n        echo 'max_execution_time=600'; \\\n    } > /usr/local/etc/php/conf.d/uploads.ini\n\nVOLUME /var/www/html\n\nENV WORDPRESS_VERSION 4.6\nENV WORDPRESS_SHA1 830962689f350e43cd1a069f3a4f68a44c0339c8\n\n# upstream tarballs include ./wordpress/ so this gives us /usr/src/wordpress\nRUN curl -o wordpress.tar.gz -SL https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz \\\n\t&& echo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c - \\\n\t&& tar -xzf wordpress.tar.gz -C /usr/src/ \\\n\t&& rm wordpress.tar.gz \\\n\t&& chown -R www-data:www-data /usr/src/wordpress\n\nCOPY custom_import/* /\nCOPY docker-entrypoint.sh /entrypoint.sh\n\n# grr, ENTRYPOINT resets CMD now\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"apache2-foreground\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [
      "/var/www/html"
    ],
    "run": [
      "a2enmod rewrite expires",
      "apt-get update && apt-get install -y libpng12-dev libjpeg-dev && rm -rf /var/lib/apt/lists/* \t&& docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \t&& docker-php-ext-install gd mysqli opcache",
      "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=60'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} > /usr/local/etc/php/conf.d/opcache-recommended.ini",
      "{         echo 'file_uploads=On';         echo 'memory_limit=128M';         echo 'upload_max_filesize=24M';         echo 'post_max_size=24M';         echo 'max_execution_time=600';     } > /usr/local/etc/php/conf.d/uploads.ini",
      "curl -o wordpress.tar.gz -SL https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz \t&& echo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c - \t&& tar -xzf wordpress.tar.gz -C /usr/src/ \t&& rm wordpress.tar.gz \t&& chown -R www-data:www-data /usr/src/wordpress"
    ],
    "workdir": [],
    "from": "php:7.0.10-apache",
    "env": {
      "WORDPRESS_VERSION": "4.6",
      "WORDPRESS_SHA1": "830962689f350e43cd1a069f3a4f68a44c0339c8"
    },
    "copy": "docker-entrypoint.sh /entrypoint.sh",
    "entrypoint": "[\"/entrypoint.sh\"]",
    "cmd": "[\"apache2-foreground\"]"
  },
  "source_repository_url": "https://github.com/maximiliend/docker-wordpress.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/maximiliend/docker-wordpress",
  "docker_repository": "maximiliend/wordpress",
  "docker_image": "maximiliend/wordpress",
  "parameters_schema": {
    "WORDPRESS_VERSION": {
      "default": "4.6",
      "type": "string",
      "mapping": "environment_variable"
    },
    "WORDPRESS_SHA1": {
      "default": "830962689f350e43cd1a069f3a4f68a44c0339c8",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "maximiliend/wordpress",
  "revision": "4.6",
  "uris": [
    "https://hub.docker.com/r/maximiliend/wordpress",
    "https://hub.docker.com/v2/repositories/maximiliend/wordpress",
    "https://github.com/maximiliend/docker-wordpress.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Middleware/Runtime/PHP"
  ],
  "info_url": "https://hub.docker.com/r/maximiliend/wordpress",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}