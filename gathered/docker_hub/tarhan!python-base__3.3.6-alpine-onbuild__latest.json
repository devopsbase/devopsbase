{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/tarhan/python-base",
    "repository_url": "https://hub.docker.com/v2/repositories/tarhan/python-base",
    "tags_url": "https://hub.docker.com/v2/repositories/tarhan/python-base/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/tarhan/python-base/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/tarhan/python-base/autobuild",
    "user": "tarhan",
    "name": "python-base",
    "namespace": "tarhan",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 363,
    "last_updated": "2016-10-14T18:21:14.280812Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "3.3.6-alpine-onbuild",
        "full_size": 27570481,
        "id": 4312192,
        "repository": 855337,
        "creator": 380061,
        "last_updater": 380061,
        "last_updated": "2016-10-14T18:21:13.949762Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.3-alpine-onbuild",
        "full_size": 27570509,
        "id": 4312191,
        "repository": 855337,
        "creator": 380061,
        "last_updater": 380061,
        "last_updated": "2016-10-14T18:20:11.012958Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2-alpine-onbuild",
        "full_size": 27136064,
        "id": 4312182,
        "repository": 855337,
        "creator": 380061,
        "last_updater": 380061,
        "last_updated": "2016-10-14T18:19:20.937311Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.7.12-alpine-onbuild",
        "full_size": 27136249,
        "id": 4312185,
        "repository": 855337,
        "creator": 380061,
        "last_updater": 380061,
        "last_updated": "2016-10-14T18:03:06.110349Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.5-alpine-onbuild",
        "full_size": 32021823,
        "id": 4312223,
        "repository": 855337,
        "creator": 380061,
        "last_updater": 380061,
        "last_updated": "2016-10-14T18:02:28.584673Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.4.5-alpine-onbuild",
        "full_size": 30513469,
        "id": 4312190,
        "repository": 855337,
        "creator": 380061,
        "last_updater": 380061,
        "last_updated": "2016-10-14T18:01:37.490129Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.4-alpine-onbuild",
        "full_size": 30513402,
        "id": 4312187,
        "repository": 855337,
        "creator": 380061,
        "last_updater": 380061,
        "last_updated": "2016-10-14T18:00:25.997216Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.5.2-alpine-onbuild",
        "full_size": 32021749,
        "id": 4312170,
        "repository": 855337,
        "creator": 380061,
        "last_updater": 380061,
        "last_updated": "2016-10-14T17:57:10.061507Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3-alpine-onbuild",
        "full_size": 32021707,
        "id": 4312220,
        "repository": 855337,
        "creator": 380061,
        "last_updater": 380061,
        "last_updated": "2016-10-14T17:54:36.595502Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.7-alpine-onbuild",
        "full_size": 27136335,
        "id": 4312183,
        "repository": 855337,
        "creator": 380061,
        "last_updater": 380061,
        "last_updated": "2016-10-14T17:53:48.409959Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "tarhan/pythons-apps-tmpl-docker"
  },
  "name": "tarhan/python-base Docker container",
  "description": "Base Docker image for Python apps with app.yaml template.",
  "readme": "## Description\n\nThis Docker image is simple base image for Python apps.  \nIt uses **app.yaml** manifest file located in child Docker image.  \n\n**app.yaml** describe OS dependencies needed by Python packages during installation of Python packages enlisted inside standard **requirements.txt** file. It distincts build time and run time dependencies. So for example during Python package installation you will need to have header files for libraries and various compilers like **gcc**. But after installation is complete you will needed only libraries itself without headers and compilers which uses usually more then 200 MBytes.  \n## Usage\nUse one of following base images for your image.\n```\ntarhan/python-base:2.7.12 - for Python 2.7.12\ntarhan/python-base:3.3.6 - for Python 3.3.6\ntarhan/python-base:3.4.5 - for Python 3.4.5\ntarhan/python-base:3.5.2 - for Python 3.5.2\n```\n\nYour child image must have at least two files **app.yaml** describing OS dependencies and **requirements.txt** describing Python dependencies.  \n**requirements.txt** is standard file enlist packages which will be installed by **pip**.  \n\n**app.yaml** structure must be similar to following:\n```yaml\nname: \"test name\"\n\ndependencies:\n  alpine:\n    runtime:\n      - openssl\n      - libffi\n      - libxml2\n      - libxslt\n    buildtime:\n      - openssl-dev\n      - libffi-dev\n      - libxml2-dev\n      - libxslt-dev\n```\nThis example OS dependencies needed by Python package **Scrapy**. During child image building OS installs more than 200 MBytes of buildtime dependencies. After **Scrapy** building complete all buildtime dependencies will be removed. Remaining OS libraries will require only 4 MBytes instead of potensial 200 MBytes.\n",
  "dockerfile": "FROM python:3.3.6-alpine\n\nMAINTAINER Dmitriy Lekomtsev <lekomtsev@gmail.com>\n\nCOPY ./prepare_alpine.sh /prepare_alpine.sh\n# Prepare script for installing runtime and buildtime dependencies of child images\nCOPY ./pip_install.sh /pip_install.sh\n# Script for installing packages via pip only if requirements.txt exists.\nCOPY ./postinstall_alpine.sh /postinstall_alpine.sh\n\nRUN   apk --no-cache add curl \\\n# Sadly curl needed to download tini executable\n  &&  mkdir /app/ \\\n  &&  pip install pip setuptools wheel \\\n# Updating Python install system. Not mandatory I will always do this at start\n  &&  pip install shyaml \\\n# Installing YAML command line parser\n  &&  curl -L https://github.com/krallin/tini/releases/download/v0.9.0/tini-static -o /usr/local/bin/tini \\\n  &&  chmod +x /usr/local/bin/tini \\\n# Installing minimal init system for container\n# as defence from https://blog.phusion.nl/2015/01/20/docker-and-the-pid-1-zombie-reaping-problem/\n  &&  chmod +x /prepare_alpine.sh \\\n  &&  chmod +x /pip_install.sh \\\n  &&  chmod +x /postinstall_alpine.sh\n\nWORKDIR /app\n\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"python\"]\n\nONBUILD COPY ./app.yaml /app/app.yaml\nONBUILD COPY ./requirements.txt /app/requirements.txt\nONBUILD RUN /prepare_alpine.sh \\\n  && /pip_install.sh \\\n  && /postinstall_alpine.sh\n  # app.yaml contains two keys 'runtime' and 'buildtime' under dependencies.alpine key.\n  # 'runtime' enlist OS packages contains libraries needed by Python packages\n  # to work. For example, lxml Python package uses libxml2 and libxslt libraries\n  # at runtime.\n  # 'buildtime' enlist OS packages contains header files needed by Python packages\n  # while pip installing them. For example, lxml Python package uses lixml2-dev\n  # and libxslt-dev during its installation process. This list does not include\n  # standard OS packages needed at build time like gcc or cmake.\nONBUILD COPY . /app/\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "  apk --no-cache add curl # Sadly curl needed to download tini executable"
    ],
    "workdir": [
      "/app"
    ],
    "from": "python:3.3.6-alpine",
    "maintainer": "Dmitriy Lekomtsev <lekomtsev@gmail.com>",
    "copy": "./postinstall_alpine.sh /postinstall_alpine.sh",
    "entrypoint": "[\"tini\", \"--\"]",
    "cmd": "[\"python\"]",
    "onbuild": "COPY . /app/"
  },
  "source_repository_url": "https://github.com/tarhan/pythons-apps-tmpl-docker.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/tarhan/pythons-apps-tmpl-docker",
  "docker_repository": "tarhan/python-base",
  "docker_image": "tarhan/python-base",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "tarhan/python-base",
  "revision": "3.3.6-alpine-onbuild",
  "uris": [
    "https://hub.docker.com/r/tarhan/python-base",
    "https://hub.docker.com/v2/repositories/tarhan/python-base",
    "https://github.com/tarhan/pythons-apps-tmpl-docker.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Python",
    "Mode/Executable/Image/Container Image/Docker Image"
  ],
  "info_url": "https://hub.docker.com/r/tarhan/python-base",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}