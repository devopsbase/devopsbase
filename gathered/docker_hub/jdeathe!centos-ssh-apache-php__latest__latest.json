{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/jdeathe/centos-ssh-apache-php",
    "repository_url": "https://hub.docker.com/v2/repositories/jdeathe/centos-ssh-apache-php",
    "tags_url": "https://hub.docker.com/v2/repositories/jdeathe/centos-ssh-apache-php/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/jdeathe/centos-ssh-apache-php/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/jdeathe/centos-ssh-apache-php/autobuild",
    "user": "jdeathe",
    "name": "centos-ssh-apache-php",
    "namespace": "jdeathe",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 21,
    "pull_count": 17233,
    "last_updated": "2016-10-02T07:33:35.600507Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 100723750,
        "id": 30232,
        "repository": 43887,
        "creator": 19526,
        "last_updater": 19526,
        "last_updated": "2016-10-02T07:33:35.182857Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos-6",
        "full_size": 100723748,
        "id": 30225,
        "repository": 43887,
        "creator": 19526,
        "last_updater": 19526,
        "last_updated": "2016-10-02T07:31:03.336527Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos-6-1.7.3",
        "full_size": 100723800,
        "id": 5188459,
        "repository": 43887,
        "creator": 19526,
        "last_updater": 19526,
        "last_updated": "2016-10-02T07:28:03.508248Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos-6-1.7.2",
        "full_size": 100723863,
        "id": 5173580,
        "repository": 43887,
        "creator": 19526,
        "last_updater": 19526,
        "last_updated": "2016-09-30T17:04:26.760991Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos-6-1.7.1",
        "full_size": 100723127,
        "id": 4836648,
        "repository": 43887,
        "creator": 19526,
        "last_updater": 19526,
        "last_updated": "2016-09-14T06:47:59.757123Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos-6-1.7.0",
        "full_size": 100728711,
        "id": 4824142,
        "repository": 43887,
        "creator": 19526,
        "last_updater": 19526,
        "last_updated": "2016-09-13T17:01:55.222825Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos-6-1.6.1",
        "full_size": 115662969,
        "id": 4772773,
        "repository": 43887,
        "creator": 19526,
        "last_updater": 19526,
        "last_updated": "2016-09-09T22:39:16.480335Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos-6-1.6.0",
        "full_size": 115662726,
        "id": 4739112,
        "repository": 43887,
        "creator": 19526,
        "last_updater": 19526,
        "last_updated": "2016-09-08T14:50:29.305116Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos-6-1.5.0",
        "full_size": 115663303,
        "id": 4665252,
        "repository": 43887,
        "creator": 19526,
        "last_updater": 19526,
        "last_updated": "2016-09-04T14:06:11.665004Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos-6-1.4.5",
        "full_size": 113377136,
        "id": 2776930,
        "repository": 43887,
        "creator": 19526,
        "last_updater": 19526,
        "last_updated": "2016-04-25T11:29:53.848593Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "jdeathe/centos-ssh-apache-php"
  },
  "name": "jdeathe/centos-ssh-apache-php Docker container",
  "description": "CentOS-6 6.8 x86_64 / Apache / PHP / PHP Memcached / PHP APC.",
  "readme": "centos-ssh-apache-php\n=====================\n\nDocker Image including CentOS-6 6.8 x86_64, Apache 2.2, PHP 5.3, PHP memcached 1.0, PHP APC 3.1.\n\nApache PHP web server, loading only a minimal set of Apache modules by default. Supports custom configuration via environment variables.\n\n## Overview & links\n\nThe latest CentOS-6 based release can be pulled from the centos-6 Docker tag. For a specific release tag the convention is `centos-6-1.7.0` for the [1.7.0](https://github.com/jdeathe/centos-ssh-apache-php/tree/1.7.0) release tag.\n\n- centos-6 [(centos-6/Dockerfile)](https://github.com/jdeathe/centos-ssh-apache-php/blob/centos-6/Dockerfile)\n\nThis build of [Apache](https://httpd.apache.org/), (httpd CentOS package), uses the mpm_prefork_module and php5_module modules for handling [PHP](http://php.net/).\n\nIncluded in the build are the [SCL](https://www.softwarecollections.org/), [EPEL](http://fedoraproject.org/wiki/EPEL) and [IUS](https://ius.io) repositories. Installed packages include [OpenSSH](http://www.openssh.com/portable.html) secure shell, [vim-minimal](http://www.vim.org/), [elinks](http://elinks.or.cz) (for fullstatus support), PHP [APC](http://pecl.php.net/package/APC), PHP [Memcached](http://pecl.php.net/package/memcached) are installed along with python-setuptools, [supervisor](http://supervisord.org/) and [supervisor-stdout](https://github.com/coderanger/supervisor-stdout).\n\nSupervisor is used to start httpd.worker daemon when a docker container based on this image is run. To enable simple viewing of stdout for the service's subprocess, supervisor-stdout is included. This allows you to see output from the supervisord controlled subprocesses with `docker logs {docker-container-name}`.\n\nIf enabling and configuring SSH access, it is by public key authentication and, by default, the [Vagrant](http://www.vagrantup.com/) [insecure private key](https://github.com/mitchellh/vagrant/blob/master/keys/vagrant) is required.\n\n### SSH Alternatives\n\nSSH is not required in order to access a terminal for the running container. The simplest method is to use the docker exec command to run bash (or sh) as follows:\n\n```\n$ docker exec -it {docker-name-or-id} bash\n```\n\nFor cases where access to docker exec is not possible the preferred method is to use Command Keys and the nsenter command. See [command-keys.md](https://github.com/jdeathe/centos-ssh-apache-php/blob/centos-6/command-keys.md) for details on how to set this up.\n\n## Quick Example\n\nRun up a container named `apache-php.pool-1.1.1` from the docker image `jdeathe/centos-ssh-apache-php` on port 8080 of your docker host.\n\n```\n$ docker run -d \\\n  --name apache-php.pool-1.1.1 \\\n  -p 8080:80 \\\n  -e \"APACHE_SERVER_NAME=app-1.local\" \\\n  jdeathe/centos-ssh-apache-php:centos-6\n```\n\nNow point your browser to `http://{docker-host}:8080` where `{docker-host}` is the host name of your docker server and, if all went well, you should see the \"Hello, world!\" page.\n\n![Hello World Screen Shot - Chrome](https://raw.github.com/jdeathe/centos-ssh-apache-php/centos-6/images/hello-world-chrome.png)\n\nTo be able to access the server using the \"app-1.local\" domain name you need to add a hosts file entry locally; such that the IP address of the Docker host resolves to the name \"app-1.local\". Alternatively, you can use the elinks browser installed in the container. Note that because you are using the browser from the container you access the site over port 80.\n\n```\n$ docker exec -it apache-php.pool-1.1.1 \\\n  elinks http://app-1.local\n```\n\n![Hello World Screen Shot - eLinks](https://raw.github.com/jdeathe/centos-ssh-apache-php/centos-6/images/hello-world-elinks.png)\n\nTo verify the container is initialised and running successfully by inspecting the container's logs.\n\n```\n$ docker logs apache-php.pool-1.1.1\n```\n\nOn first run, the bootstrap script, ([/usr/sbin/httpd-bootstrap](https://github.com/jdeathe/centos-ssh-apache-php/blob/centos-6/usr/sbin/httpd-bootstrap)), will check if the DocumentRoot directory is empty and, if so, will populate it with the example app scripts and app specific configuration files.\n\nThe `apachectl` command can be accessed as follows.\n\n```\n$ docker exec -it apache-php.pool-1.1.1 apachectl -h\n```\n\n## Instructions\n\n### Running\n\nTo run the a docker container from this image you can use the standard docker commands. Alternatively, you can use the embedded (Service Container Manager Interface) [scmi](https://github.com/jdeathe/centos-ssh-apache-php/blob/centos-6/usr/sbin/scmi) that is included in the image since `centos-6-1.7.2` or, if you have a checkout of the [source repository](https://github.com/jdeathe/centos-ssh-apache-php), and have make installed the Makefile provides targets to build, install, start, stop etc. where environment variables can be used to configure the container options and set custom docker run parameters.\n\n#### SCMI Installation Examples\n\nThe following example uses docker to run the SCMI install command to create and start a container named `apache-php.pool-1.1.1`. To use SCMI it requires the use of the `--privileged` docker run parameter and the docker host's root directory mounted as a volume with the container's mount directory also being set in the `scmi` `--chroot` option. The `--setopt` option is used to add extra parameters to the default docker run command template; in the following example a named configuration volume is added which allows the SSH host keys to persist after the first container initialisation. Not that the placeholder `{{NAME}}` can be used in this option and is replaced with the container's name.\n\n##### SCMI Install\n\n```\n$ docker run \\\n  --rm \\\n  --privileged \\\n  --volume /:/media/root \\\n  jdeathe/centos-ssh-apache-php:centos-6-1.7.2 \\\n  /usr/sbin/scmi install \\\n    --chroot=/media/root \\\n    --tag=centos-6-1.7.2 \\\n    --name=apache-php.pool-1.1.1\n```\n\n##### SCMI Uninstall\n\nTo uninstall the previous example simply run the same docker run command with the scmi `uninstall` command.\n\n```\n$ docker run \\\n  --rm \\\n  --privileged \\\n  --volume /:/media/root \\\n  jdeathe/centos-ssh-apache-php:centos-6-1.7.2 \\\n  /usr/sbin/scmi uninstall \\\n    --chroot=/media/root \\\n    --tag=centos-6-1.7.2 \\\n    --name=apache-php.pool-1.1.1\n```\n\n##### SCMI Systemd Support\n\nIf your docker host has systemd (and optionally etcd) installed then `scmi` provides a method to install the container as a systemd service unit. This provides some additional features for managing a group of instances on a single docker host and has the option to use an etcd backed service registry. Using a systemd unit file allows the System Administrator to use a Drop-In to override the settings of a unit-file template used to create service instances. To use the systemd method of installation use the `-m` or `--manager` option of `scmi` and to include the optional etcd register companion unit use the `--register` option.\n\n```\n$ docker run \\\n  --rm \\\n  --privileged \\\n  --volume /:/media/root \\\n  jdeathe/centos-ssh-apache-php:centos-6-1.7.2 \\\n  /usr/sbin/scmi install \\\n    --chroot=/media/root \\\n    --tag=centos-6-1.7.2 \\\n    --name=apache-php.pool-1.1.1 \\\n    --manager=systemd \\\n    --register \\\n    --env='APACHE_MOD_SSL_ENABLED=true' \\\n    --setopt='--volume {{NAME}}.data-ssl:/etc/services-config/ssl'\n```\n\n##### SCMI Fleet Support\n\nIf your docker host has systemd, fleetd (and optionally etcd) installed then `scmi` provides a method to schedule the container  to run on the cluster. This provides some additional features for managing a group of instances on a [fleet](https://github.com/coreos/fleet) cluster and has the option to use an etcd backed service registry. To use the fleet method of installation use the `-m` or `--manager` option of `scmi` and to include the optional etcd register companion unit use the `--register` option.\n\n##### SCMI Image Information\n\nSince release `centos-6-1.7.2` the install template has been added to the image metadata. Using docker inspect you can access `scmi` to simplify install/uninstall tasks.\n\nTo see detailed information about the image run `scmi` with the `--info` option. To see all available `scmi` options run with the `--help` option.\n\n```\n$ eval \"sudo -E $(\n    docker inspect \\\n    -f \"{{.ContainerConfig.Labels.install}}\" \\\n    jdeathe/centos-ssh-apache-php:centos-6-1.7.2\n  ) --info\"\n```\n\nTo perform an installation using the docker name `apache-php.pool-1.2.1` simply use the `--name` or `-n` option.\n\n```\n$ eval \"sudo -E $(\n    docker inspect \\\n    -f \"{{.ContainerConfig.Labels.install}}\" \\\n    jdeathe/centos-ssh-apache-php:centos-6-1.7.2\n  ) --name=apache-php.pool-1.2.1\"\n```\n\nTo uninstall use the *same command* that was used to install but with the `uninstall` Label.\n\n```\n$ eval \"sudo -E $(\n    docker inspect \\\n    -f \"{{.ContainerConfig.Labels.uninstall}}\" \\\n    jdeathe/centos-ssh-apache-php:centos-6-1.7.2\n  ) --name=apache-php.pool-1.2.1\"\n```\n\n##### SCMI on Atomic Host\n\nWith the addition of install/uninstall image labels it is possible to use [Project Atomic's](http://www.projectatomic.io/) `atomic install` command to simplify install/uninstall tasks on [CentOS Atomic](https://wiki.centos.org/SpecialInterestGroup/Atomic) Hosts.\n\nTo see detailed information about the image run `scmi` with the `--info` option. To see all available `scmi` options run with the `--help` option.\n\n```\n$ sudo -E atomic install \\\n  -n apache-php.pool-1.3.1 \\\n  jdeathe/centos-ssh-apache-php:centos-6-1.7.2 \\\n  --info\n```\n\nTo perform an installation using the docker name `apache-php.pool-1.3.1` simply use the `-n` option of the `atomic install` command.\n\n```\n$ sudo -E atomic install \\\n  -n apache-php.pool-1.3.1 \\\n  jdeathe/centos-ssh-apache-php:centos-6-1.7.2\n```\n\nAlternatively, you could use the `scmi` options `--name` or `-n` for naming the container.\n\n```\n$ sudo -E atomic install \\\n  jdeathe/centos-ssh-apache-php:centos-6-1.7.2 \\\n  --name apache-php.pool-1.3.1\n```\n\nTo uninstall use the *same command* that was used to install but with the `uninstall` Label.\n\n```\n$ sudo -E atomic uninstall \\\n  -n apache-php.pool-1.3.1 \\\n  jdeathe/centos-ssh-apache-php:centos-6-1.7.2\n```\n\n#### Environment Variables\n\n##### APACHE_SERVER_NAME & APACHE_SERVER_ALIAS\n\nThe `APACHE_SERVER_NAME` and `APACHE_SERVER_ALIAS` environmental variables are used to set the VirtualHost `ServerName` and `ServerAlias` values respectively. In the following example the running container would respond to the host names `app-1.local` or `app-1`:\n\n```\n...\n  --env \"APACHE_SERVER_ALIAS=app-1\" \\\n  --env \"APACHE_SERVER_NAME=app-1.local\" \\\n...\n```\n\n##### APACHE_CONTENT_ROOT\n\nThe home directory of the service user and parent directory of the Apache DocumentRoot is /var/www/app by default but can be changed if necessary using the `APACHE_CONTENT_ROOT` environment variable.\n\n```\n...\n  --env \"APACHE_CONTENT_ROOT=/var/www/app-1\" \\\n...\n```\n\nfrom your browser you can then access it with `http://app-1.local:8080` assuming you have the IP address of your docker mapped to the hostname using your DNS server or a local hosts entry.\n\n##### APACHE_CUSTOM_LOG_LOCATION & APACHE_CUSTOM_LOG_FORMAT\n\nThe Apache CustomLog can be defined using `APACHE_CUSTOM_LOG_LOCATION` to set a file | pipe location and `APACHE_CUSTOM_LOG_FORMAT` to specify the required LogFormat nickname.\n\n```\n...\n  --env \"APACHE_CUSTOM_LOG_LOCATION=/var/log/httpd/access_log\" \\\n  --env \"APACHE_CUSTOM_LOG_FORMAT=common\" \\\n...\n```\n\n##### APACHE_ERROR_LOG_LOCATION & APACHE_ERROR_LOG_LEVEL\n\nThe Apache ErrorLog can be defined using `APACHE_ERROR_LOG_LOCATION` to set a file | pipe location and `APACHE_ERROR_LOG_LEVEL` to specify the required LogLevel value.\n\n```\n...\n  --env \"APACHE_CUSTOM_LOG_LOCATION=/var/log/httpd/error_log\" \\\n  --env \"APACHE_CUSTOM_LOG_FORMAT=error\" \\\n...\n```\n\n##### APACHE_EXTENDED_STATUS_ENABLED\n\nThe variable `APACHE_EXTENDED_STATUS_ENABLED` allows you to turn ExtendedStatus on. It is turned off by default as it has an impact on the server's performance but with it enabled you can gather more statistics.\n\n```\n...\n  --env \"APACHE_EXTENDED_STATUS_ENABLED=true\" \\\n...\n```\n\nYou can view the output from Apache server-status either using the elinks browser from onboard the container or by using `watch` and `curl` to monitor status over time - the following command shows the server-status updated at a 1 second interval.\n\n```\n$ docker exec -it apache-php.pool-1.1.1 \\\n  env TERM=xterm \\\n  watch -n 1 \\\n  -d \"curl -s http://app-1/server-status?auto\"\n```\n\n##### APACHE_HEADER_X_SERVICE_UID\n\nThe `APACHE_HEADER_X_SERVICE_UID` environmental variable is used to set a response header named `X-Service-UID` that lets you identify the container that is serving the content. This is useful when you have many containers running on a single host using different ports or if you are running a cluster and need to identify which host the content is served from. If the value contains the placeholder `{{HOSTNAME}}` it will be replaced with the system `hostname` value; by default this is the container id but the hostname can be modified using the `--hostname` docker create|run parameter.\n\n```\n...\n  --env \"APACHE_HEADER_X_SERVICE_UID={{HOSTNAME}}\" \\\n...\n```\n\n##### APACHE_LOAD_MODULES\n\nThe variable `APACHE_LOAD_MODULES` defines all Apache modules to be loaded from `/etc/httpd/conf/http.conf`. The default is the minimum required so you may need to add more as necessary. To add the \"mod\\_rewrite\" Apache Module you would add it's identifier `rewrite_module` to the array as follows.\n\n```\n...\n  --env \"APACHE_LOAD_MODULES=authz_user_module log_config_module expires_module deflate_module headers_module setenvif_module mime_module status_module dir_module alias_module rewrite_module\"\n...\n```\n\n##### APACHE_MOD_SSL_ENABLED\n\nBy default SSL support is disabled but a second port, (mapped to 8443), is available for traffic that has been been through upstream SSL termination (SSL Offloading). If you want the container to support SSL directly then set `APACHE_MOD_SSL_ENABLED=true` this will then generate a self signed certificate and will update Apache to accept traffic on port 443.\n\n```\n$ docker stop apache-php.pool-1.1.1 && \\\n  docker rm apache-php.pool-1.1.1\n$ docker run -d \\\n  --name apache-php.pool-1.1.1 \\\n  --publish 8080:80 \\\n  --publish 9443:443 \\\n  --env \"APACHE_SERVER_ALIAS=app-1\" \\\n  --env \"APACHE_SERVER_NAME=app-1.local\" \\\n  --env \"APACHE_MOD_SSL_ENABLED=true\" \\\n  --volume apache-php.pool-1.1.1.data-ssl:/etc/services-config/ssl \\\n  jdeathe/centos-ssh-apache-php:centos-6\n```\n\n##### APACHE_MPM\n\nUsing `APACHE_MPM` the Apache MPM can be set. Defaults to `prefork` and in most cases this shouldn't be altered.\n\n```\n...\n  --env \"APACHE_MPM=prefork\" \\\n...\n```\n\n##### APACHE_RUN_USER & APACHE_RUN_GROUP\n\nThe Apache process is run by the User and Group defined by `APACHE_RUN_USER` and `APACHE_RUN_GROUP` respectively.\n\n```\n...\n  --env \"APACHE_RUN_GROUP=www-app\" \\\n  --env \"APACHE_RUN_USER=www-app\" \\\n...\n```\n\n##### APACHE_PUBLIC_DIRECTORY\n\nThe public directory is relative to the `APACHE_CONTENT_ROOT` and together they form the Apache DocumentRoot path. The default value is `public_html` and should not be changed unless changes are made to the source of the app to include an alternative public directory such as `web` or `public`.\n\n```\n...\n  --env \"APACHE_PUBLIC_DIRECTORY=web\" \\\n...\n```\n\n##### APACHE_SSL_CERTIFICATE\n\nThe `APACHE_SSL_CERTIFICATE` environment variable is used to define a PEM, (and optionally base64), encoded certificate bundle. Base64 encoding of the PEM file contents is recommended. To make a compatible certificate bundle use the `cat` command to combine the certificate files together.\n\n```\n$ cat /usr/share/private/server-key.pem \\\n    /usr/share/certs/server-certificate.pem \\\n    /usr/share/certs/intermediate-certificate.pem \\\n  > /usr/share/certs/server-bundle.pem\n```\n\n*Note:* The `base64` command on Mac OSX will encode a file without line breaks by default but if using the command on Linux you need to include use the `-w` option to prevent wrapping lines at 80 characters. i.e. `base64 -w 0 -i {certificate-path}`.\n\n```\n...\n  --env \"APACHE_SSL_CERTIFICATE=$(\n    base64 -i \"/usr/share/certs/server-bundle.pem\"\n  )\" \\\n...\n```\n\n##### APACHE_SSL_CIPHER_SUITE\n\nUse the `APACHE_SSL_CIPHER_SUITE` environment variable to define an appropriate Cipher Suite. The default \"intermediate\" selection should be suitable for most use-cases where support for a wide range browsers is necessary. \n\nReferences:\n- [OpenSSL ciphers documentation](https://www.openssl.org/docs/manmaster/apps/ciphers.html).\n- [Mozilla Security/Server Side TLS guidance](https://wiki.mozilla.org/Security/Server_Side_TLS).\n\n*Note:* The value show is using space separated values to allow for readablity in the documentation; this is valid syntax however using the colon separator is the recommended form.\n\n```\n...\n  --env \"APACHE_SSL_CIPHER_SUITE=ECDHE-ECDSA-AES256-GCM-SHA384 \\\nECDHE-RSA-AES256-GCM-SHA384 ECDHE-ECDSA-CHACHA20-POLY1305 \\\nECDHE-RSA-CHACHA20-POLY1305 ECDHE-ECDSA-AES128-GCM-SHA256 \\\nECDHE-RSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-SHA384 \\\nECDHE-RSA-AES256-SHA384 ECDHE-ECDSA-AES128-SHA256 \\\nECDHE-RSA-AES128-SHA256\" \\\n...\n```\n\n##### APACHE_SSL_PROTOCOL\n\nUse the `APACHE_SSL_PROTOCOL` environment variable to define the supported protocols. The default protocols are suitable for most \"intermediate\" use-cases however you might want to restrict the TLS version support for example.\n\n```\n...\n  --env \"APACHE_SSL_PROTOCOL=All -SSLv2 -SSLv3 -TLSv1 -TLSv1.1\" \\\n...\n```\n\n##### APACHE_SYSTEM_USER\n\nUse the `APACHE_SYSTEM_USER` environment variable to define a custom service username.\n\n```\n...\n  --env \"APACHE_SYSTEM_USER=app-1\" \\\n...\n```\n\n##### PHP_OPTIONS_DATE_TIMEZONE\n\nThe default timezone for the container, and the PHP app, is UTC however the operator can set an appropriate timezone using the `PHP_OPTIONS_DATE_TIMEZONE` variable. The value should be a timezone identifier, like UTC or Europe/London. The list of valid identifiers is available in the PHP [List of Supported Timezones](http://php.net/manual/en/timezones.php).\n\nTo set the timezone for the UK and account for British Summer Time you would use:\n\n```\n...\n  --env \"PHP_OPTIONS_DATE_TIMEZONE=Europe/London\" \\\n...\n```\n",
  "dockerfile": "# =============================================================================\n# jdeathe/centos-ssh-apache-php\n#\n# CentOS-6, Apache 2.2, PHP 5.3, PHP memcached 1.0, PHP APC 3.1\n#\n# =============================================================================\nFROM jdeathe/centos-ssh:centos-6-1.7.3\n\nMAINTAINER James Deathe <james.deathe@gmail.com>\n\n# Use the form ([{fqdn}-]{package-name}|[{fqdn}-]{provider-name})\nARG PACKAGE_NAME=\"app\"\nARG PACKAGE_PATH=\"/opt/${PACKAGE_NAME}\"\n\n# -----------------------------------------------------------------------------\n# Base Apache, PHP\n# -----------------------------------------------------------------------------\nRUN rpm --rebuilddb \\\n\t&& yum --setopt=tsflags=nodocs -y install \\\n\t\telinks-0.12-0.21.pre5.el6_3 \\\n\t\thttpd-2.2.15-54.el6.centos \\\n\t\tmod_ssl-2.2.15-54.el6.centos \\\n\t\tphp-5.3.3-48.el6_8 \\\n\t\tphp-cli-5.3.3-48.el6_8 \\\n\t\tphp-zts-5.3.3-48.el6_8 \\\n\t\tphp-pecl-apc-3.1.9-2.el6 \\\n\t\tphp-pecl-memcached-1.0.0-1.el6 \\\n\t&& yum versionlock add \\\n\t\telinks \\\n\t\thttpd \\\n\t\tmod_ssl \\\n\t\tphp* \\\n\t&& rm -rf /var/cache/yum/* \\\n\t&& yum clean all\n\n# -----------------------------------------------------------------------------\n# Global Apache configuration changes\n# -----------------------------------------------------------------------------\nRUN sed -i \\\n\t-e 's~^KeepAlive .*$~KeepAlive On~g' \\\n\t-e 's~^MaxKeepAliveRequests .*$~MaxKeepAliveRequests 200~g' \\\n\t-e 's~^KeepAliveTimeout .*$~KeepAliveTimeout 2~g' \\\n\t-e 's~^ServerSignature On$~ServerSignature Off~g' \\\n\t-e 's~^ServerTokens OS$~ServerTokens Prod~g' \\\n\t-e 's~^NameVirtualHost \\(.*\\)$~#NameVirtualHost \\1~g' \\\n\t-e 's~^User .*$~User ${APACHE_RUN_USER}~g' \\\n\t-e 's~^Group .*$~Group ${APACHE_RUN_GROUP}~g' \\\n\t-e 's~^DocumentRoot \\(.*\\)$~#DocumentRoot \\1~g' \\\n\t/etc/httpd/conf/httpd.conf\n\n# -----------------------------------------------------------------------------\n# Disable Apache directory indexes\n# -----------------------------------------------------------------------------\nRUN sed -i \\\n\t-e 's~^IndexOptions \\(.*\\)$~#IndexOptions \\1~g' \\\n\t-e 's~^IndexIgnore \\(.*\\)$~#IndexIgnore \\1~g' \\\n\t-e 's~^AddIconByEncoding \\(.*\\)$~#AddIconByEncoding \\1~g' \\\n\t-e 's~^AddIconByType \\(.*\\)$~#AddIconByType \\1~g' \\\n\t-e 's~^AddIcon \\(.*\\)$~#AddIcon \\1~g' \\\n\t-e 's~^DefaultIcon \\(.*\\)$~#DefaultIcon \\1~g' \\\n\t-e 's~^ReadmeName \\(.*\\)$~#ReadmeName \\1~g' \\\n\t-e 's~^HeaderName \\(.*\\)$~#HeaderName \\1~g' \\\n\t/etc/httpd/conf/httpd.conf\n\n# -----------------------------------------------------------------------------\n# Disable Apache language based content negotiation\n# -----------------------------------------------------------------------------\nRUN sed -i \\\n\t-e 's~^LanguagePriority \\(.*\\)$~#LanguagePriority \\1~g' \\\n\t-e 's~^ForceLanguagePriority \\(.*\\)$~#ForceLanguagePriority \\1~g' \\\n\t-e 's~^AddLanguage \\(.*\\)$~#AddLanguage \\1~g' \\\n\t/etc/httpd/conf/httpd.conf\n\n# -----------------------------------------------------------------------------\n# Disable all Apache modules and enable the minimum\n# -----------------------------------------------------------------------------\nRUN sed -i \\\n\t-e 's~^\\(LoadModule .*\\)$~#\\1~g' \\\n\t-e 's~^\\(#LoadModule version_module modules/mod_version.so\\)$~\\1\\n#LoadModule reqtimeout_module modules/mod_reqtimeout.so~g' \\\n\t-e 's~^#LoadModule mime_module ~LoadModule mime_module ~g' \\\n\t-e 's~^#LoadModule log_config_module ~LoadModule log_config_module ~g' \\\n\t-e 's~^#LoadModule setenvif_module ~LoadModule setenvif_module ~g' \\\n\t-e 's~^#LoadModule status_module ~LoadModule status_module ~g' \\\n\t-e 's~^#LoadModule authz_host_module ~LoadModule authz_host_module ~g' \\\n\t-e 's~^#LoadModule dir_module ~LoadModule dir_module ~g' \\\n\t-e 's~^#LoadModule alias_module ~LoadModule alias_module ~g' \\\n\t-e 's~^#LoadModule expires_module ~LoadModule expires_module ~g' \\\n\t-e 's~^#LoadModule deflate_module ~LoadModule deflate_module ~g' \\\n\t-e 's~^#LoadModule headers_module ~LoadModule headers_module ~g' \\\n\t-e 's~^#LoadModule alias_module ~LoadModule alias_module ~g' \\\n\t/etc/httpd/conf/httpd.conf\n\n# -----------------------------------------------------------------------------\n# Enable ServerStatus access via /_httpdstatus to local client\n# -----------------------------------------------------------------------------\nRUN sed -i \\\n\t-e '/#<Location \\/server-status>/,/#<\\/Location>/ s~^#~~' \\\n\t-e '/<Location \\/server-status>/,/<\\/Location>/ s~Allow from .example.com~Allow from localhost 127.0.0.1~' \\\n\t/etc/httpd/conf/httpd.conf\n\n# -----------------------------------------------------------------------------\n# Disable the default SSL Virtual Host\n# -----------------------------------------------------------------------------\nRUN sed -i \\\n\t-e '/<VirtualHost _default_:443>/,/#<\\/VirtualHost>/ s~^~#~' \\\n\t/etc/httpd/conf.d/ssl.conf\n\n# -----------------------------------------------------------------------------\n# Custom Apache configuration\n# -----------------------------------------------------------------------------\nRUN { \\\n\t\techo ''; \\\n\t\techo '#'; \\\n\t\techo '# Custom configuration'; \\\n\t\techo '#'; \\\n\t\techo 'Include /etc/services-config/httpd/conf.d/*.conf'; \\\n\t\techo 'LogFormat \\'; \\\n\t\techo '  \"%{X-Forwarded-For}i %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" \\'; \\\n\t\techo '  forwarded_for_combined'; \\\n\t\techo 'Options -Indexes'; \\\n\t\techo 'TraceEnable Off'; \\\n\t\techo 'UseCanonicalPhysicalPort On'; \\\n\t} >> /etc/httpd/conf/httpd.conf\n\n# -----------------------------------------------------------------------------\n# Disable the SSL support by default\n# -----------------------------------------------------------------------------\nRUN mv \\\n\t\t/etc/httpd/conf.d/ssl.conf \\\n\t\t/etc/httpd/conf.d/ssl.conf.off \\\n\t&& touch \\\n\t\t/etc/httpd/conf.d/ssl.conf \\\n\t&& chmod 444 \\\n\t\t/etc/httpd/conf.d/ssl.conf\n\n# -----------------------------------------------------------------------------\n# Limit threads for the application user\n# -----------------------------------------------------------------------------\nRUN { \\\n\t\techo ''; \\\n\t\techo -e '@apache\\tsoft\\tnproc\\t85'; \\\n\t\techo -e '@apache\\thard\\tnproc\\t170'; \\\n\t} >> /etc/security/limits.conf\n\n# -----------------------------------------------------------------------------\n# Global PHP configuration changes\n# -----------------------------------------------------------------------------\nRUN sed \\\n\t\t-e 's~^; .*$~~' \\\n\t\t-e 's~^;*$~~' \\\n\t\t-e '/^$/d' \\\n\t\t-e 's~^\\[~\\n\\[~g' \\\n\t\t/etc/php.ini \\\n\t\t> /etc/php.d/00-php.ini.default \\\n\t&& sed \\\n\t\t-e 's~^;user_ini.filename =$~user_ini.filename =~g' \\\n\t\t-e 's~^;cgi.fix_pathinfo=1$~cgi.fix_pathinfo=1~g' \\\n\t\t-e 's~^;date.timezone =$~date.timezone = UTC~g' \\\n\t\t-e 's~^expose_php = On$~expose_php = Off~g' \\\n\t\t/etc/php.d/00-php.ini.default \\\n\t\t> /etc/php.d/00-php.ini\n\n# -----------------------------------------------------------------------------\n# APC op-code cache stats\n#\tNote there will be 1 cache per process if using mod_fcgid\n# -----------------------------------------------------------------------------\nRUN sed -i \\\n\t-e \"s~'ADMIN_PASSWORD','password'~'ADMIN_PASSWORD','apc!123'~g\" \\\n\t-e \"s~'DATE_FORMAT', 'Y/m/d H:i:s'~'DATE_FORMAT', 'Y-m-d H:i:s'~g\" \\\n\t-e \"s~php_uname('n');~gethostname();~g\" \\\n\t/usr/share/php-pecl-apc/apc.php\n\n# -----------------------------------------------------------------------------\n# Add default system users\n# -----------------------------------------------------------------------------\nRUN useradd -r -M -d /var/www/app -s /sbin/nologin app \\\n\t&& useradd -r -M -d /var/www/app -s /sbin/nologin -G apache,app app-www \\\n\t&& usermod -a -G app-www app \\\n\t&& usermod -a -G app-www,app apache\n\n# -----------------------------------------------------------------------------\n# Copy files into place\n# -----------------------------------------------------------------------------\nADD usr/sbin/httpd-bootstrap \\\n\tusr/sbin/httpd-wrapper \\\n\t/usr/sbin/\nADD opt/scmi \\\n\t/opt/scmi/\nADD etc/systemd/system \\\n\t/etc/systemd/system/\nADD etc/services-config/httpd/httpd-bootstrap.conf \\\n\t/etc/services-config/httpd/\nADD etc/services-config/httpd/conf.d/*.conf \\\n\t/etc/services-config/httpd/conf.d/\nADD etc/services-config/supervisor/supervisord.d \\\n\t/etc/services-config/supervisor/supervisord.d/\n\nRUN mkdir -p \\\n\t\t/etc/services-config/{httpd/{conf,conf.d},ssl/{certs,private}} \\\n\t&& cp \\\n\t\t/etc/httpd/conf/httpd.conf \\\n\t\t/etc/services-config/httpd/conf/ \\\n\t&& ln -sf \\\n\t\t/etc/services-config/httpd/httpd-bootstrap.conf \\\n\t\t/etc/httpd-bootstrap.conf \\\n\t&& ln -sf \\\n\t\t/etc/services-config/httpd/conf/httpd.conf \\\n\t\t/etc/httpd/conf/httpd.conf \\\n\t&& ln -sf \\\n\t\t/etc/services-config/ssl/certs/localhost.crt \\\n\t\t/etc/pki/tls/certs/localhost.crt \\\n\t&& ln -sf \\\n\t\t/etc/services-config/ssl/private/localhost.key \\\n\t\t/etc/pki/tls/private/localhost.key \\\n\t&& ln -sf \\\n\t\t/etc/services-config/supervisor/supervisord.conf \\\n\t\t/etc/supervisord.conf \\\n\t&& ln -sf \\\n\t\t/etc/services-config/supervisor/supervisord.d/httpd-bootstrap.conf \\\n\t\t/etc/supervisord.d/httpd-bootstrap.conf \\\n\t&& ln -sf \\\n\t\t/etc/services-config/supervisor/supervisord.d/httpd-wrapper.conf \\\n\t\t/etc/supervisord.d/httpd-wrapper.conf \\\n\t&& chmod 700 \\\n\t\t/usr/sbin/httpd-bootstrap\n\n# -----------------------------------------------------------------------------\n# Create and populate the install directory\n# -----------------------------------------------------------------------------\nRUN mkdir -p -m 750 ${PACKAGE_PATH}\nADD var/www/app ${PACKAGE_PATH}\nRUN find ${PACKAGE_PATH} -name '*.gitkeep' -type f -delete \\\n\t&& $(\\\n\t\tif [[ -f /usr/share/php-pecl-apc/apc.php ]]; then \\\n\t\t\tcp \\\n\t\t\t\t/usr/share/php-pecl-apc/apc.php \\\n\t\t\t\t${PACKAGE_PATH}/public_html/_apc.php; \\\n\t\tfi \\\n\t)\n\n# -----------------------------------------------------------------------------\n# Set install directory/file permissions\n# -----------------------------------------------------------------------------\nRUN chown -R app:app-www ${PACKAGE_PATH} \\\n\t&& find ${PACKAGE_PATH} -type d -exec chmod 750 {} + \\\n\t&& find ${PACKAGE_PATH}/var -type d -exec chmod 770 {} + \\\n\t&& find ${PACKAGE_PATH} -type f -exec chmod 640 {} + \\\n\t&& find ${PACKAGE_PATH}/bin -type f -exec chmod 750 {} +\n\nEXPOSE 80 8443 443\n\n# -----------------------------------------------------------------------------\n# Set default environment variables used to configure the service container\n# -----------------------------------------------------------------------------\nENV APACHE_CONTENT_ROOT=\"/var/www/${PACKAGE_NAME}\"\nENV APACHE_CUSTOM_LOG_FORMAT=\"combined\" \\\n\tAPACHE_CUSTOM_LOG_LOCATION=\"var/log/apache_access_log\" \\\n\tAPACHE_ERROR_LOG_LOCATION=\"var/log/apache_error_log\" \\\n\tAPACHE_ERROR_LOG_LEVEL=\"warn\" \\\n\tAPACHE_EXTENDED_STATUS_ENABLED=\"false\" \\\n\tAPACHE_HEADER_X_SERVICE_UID=\"{{HOSTNAME}}\" \\\n\tAPACHE_LOAD_MODULES=\"authz_user_module log_config_module expires_module deflate_module headers_module setenvif_module mime_module status_module dir_module alias_module\" \\\n\tAPACHE_MOD_SSL_ENABLED=\"false\" \\\n\tAPACHE_MPM=\"prefork\" \\\n\tAPACHE_OPERATING_MODE=\"production\" \\\n\tAPACHE_PUBLIC_DIRECTORY=\"public_html\" \\\n\tAPACHE_RUN_GROUP=\"app-www\" \\\n\tAPACHE_RUN_USER=\"app-www\" \\\n\tAPACHE_SERVER_ALIAS=\"\" \\\n\tAPACHE_SERVER_NAME=\"app-1.local\" \\\n\tAPACHE_SSL_CERTIFICATE=\"\" \\\n\tAPACHE_SSL_CIPHER_SUITE=\"ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS\" \\\n\tAPACHE_SSL_PROTOCOL=\"All -SSLv2 -SSLv3\" \\\n\tAPACHE_SYSTEM_USER=\"app\" \\\n\tPACKAGE_PATH=\"${PACKAGE_PATH}\" \\\n\tPHP_OPTIONS_DATE_TIMEZONE=\"UTC\" \\\n\tSSH_AUTOSTART_SSHD=false \\\n\tSSH_AUTOSTART_SSHD_BOOTSTRAP=false\n\n# -----------------------------------------------------------------------------\n# Set image metadata\n# -----------------------------------------------------------------------------\nARG RELEASE_VERSION=\"1.7.3\"\nLABEL \\\n\tinstall=\"docker run \\\n--rm \\\n--privileged \\\n--volume /:/media/root \\\njdeathe/centos-ssh-apache-php:centos-6-${RELEASE_VERSION} \\\n/usr/sbin/scmi install \\\n--chroot=/media/root \\\n--name=\\${NAME} \\\n--tag=centos-6-${RELEASE_VERSION}\" \\\n\tuninstall=\"docker run \\\n--rm \\\n--privileged \\\n--volume /:/media/root \\\njdeathe/centos-ssh-apache-php:centos-6-${RELEASE_VERSION} \\\n/usr/sbin/scmi uninstall \\\n--chroot=/media/root \\\n--name=\\${NAME} \\\n--tag=centos-6-${RELEASE_VERSION}\" \\\n\torg.deathe.name=\"centos-ssh-apache-php\" \\\n\torg.deathe.version=\"${RELEASE_VERSION}\" \\\n\torg.deathe.release=\"jdeathe/centos-ssh-apache-php:centos-6-${RELEASE_VERSION}\" \\\n\torg.deathe.license=\"MIT\" \\\n\torg.deathe.vendor=\"jdeathe\" \\\n\torg.deathe.url=\"https://github.com/jdeathe/centos-ssh-apache-php\" \\\n\torg.deathe.description=\"CentOS-6 6.8 x86_64 - Apache 2.2, PHP 5.3, PHP memcached 1.0, PHP APC 3.1.\"\n\nCMD [\"/usr/bin/supervisord\", \"--configuration=/etc/supervisord.conf\"]",
  "dockerfile_json": {
    "add": [
      {
        "source": "usr/sbin/httpd-bootstrap",
        "dest": "\tusr/sbin/httpd-wrapper"
      },
      {
        "source": "opt/scmi",
        "dest": "\t/opt/scmi/"
      },
      {
        "source": "etc/systemd/system",
        "dest": "\t/etc/systemd/system/"
      },
      {
        "source": "etc/services-config/httpd/httpd-bootstrap.conf",
        "dest": "\t/etc/services-config/httpd/"
      },
      {
        "source": "etc/services-config/httpd/conf.d/*.conf",
        "dest": "\t/etc/services-config/httpd/conf.d/"
      },
      {
        "source": "etc/services-config/supervisor/supervisord.d",
        "dest": "\t/etc/services-config/supervisor/supervisord.d/"
      },
      {
        "source": "var/www/app",
        "dest": "${PACKAGE_PATH}"
      }
    ],
    "expose": [
      80
    ],
    "volume": [],
    "run": [
      "rpm --rebuilddb \t&& yum --setopt=tsflags=nodocs -y install \t\telinks-0.12-0.21.pre5.el6_3 \t\thttpd-2.2.15-54.el6.centos \t\tmod_ssl-2.2.15-54.el6.centos \t\tphp-5.3.3-48.el6_8 \t\tphp-cli-5.3.3-48.el6_8 \t\tphp-zts-5.3.3-48.el6_8 \t\tphp-pecl-apc-3.1.9-2.el6 \t\tphp-pecl-memcached-1.0.0-1.el6 \t&& yum versionlock add \t\telinks \t\thttpd \t\tmod_ssl \t\tphp* \t&& rm -rf /var/cache/yum/* \t&& yum clean all",
      "sed -i \t-e 's~^KeepAlive .*$~KeepAlive On~g' \t-e 's~^MaxKeepAliveRequests .*$~MaxKeepAliveRequests 200~g' \t-e 's~^KeepAliveTimeout .*$~KeepAliveTimeout 2~g' \t-e 's~^ServerSignature On$~ServerSignature Off~g' \t-e 's~^ServerTokens OS$~ServerTokens Prod~g' \t-e 's~^NameVirtualHost \\(.*\\)$~#NameVirtualHost \\1~g' \t-e 's~^User .*$~User ${APACHE_RUN_USER}~g' \t-e 's~^Group .*$~Group ${APACHE_RUN_GROUP}~g' \t-e 's~^DocumentRoot \\(.*\\)$~#DocumentRoot \\1~g' \t/etc/httpd/conf/httpd.conf",
      "sed -i \t-e 's~^IndexOptions \\(.*\\)$~#IndexOptions \\1~g' \t-e 's~^IndexIgnore \\(.*\\)$~#IndexIgnore \\1~g' \t-e 's~^AddIconByEncoding \\(.*\\)$~#AddIconByEncoding \\1~g' \t-e 's~^AddIconByType \\(.*\\)$~#AddIconByType \\1~g' \t-e 's~^AddIcon \\(.*\\)$~#AddIcon \\1~g' \t-e 's~^DefaultIcon \\(.*\\)$~#DefaultIcon \\1~g' \t-e 's~^ReadmeName \\(.*\\)$~#ReadmeName \\1~g' \t-e 's~^HeaderName \\(.*\\)$~#HeaderName \\1~g' \t/etc/httpd/conf/httpd.conf",
      "sed -i \t-e 's~^LanguagePriority \\(.*\\)$~#LanguagePriority \\1~g' \t-e 's~^ForceLanguagePriority \\(.*\\)$~#ForceLanguagePriority \\1~g' \t-e 's~^AddLanguage \\(.*\\)$~#AddLanguage \\1~g' \t/etc/httpd/conf/httpd.conf",
      "sed -i \t-e 's~^\\(LoadModule .*\\)$~#\\1~g' \t-e 's~^\\(#LoadModule version_module modules/mod_version.so\\)$~\\1\\n#LoadModule reqtimeout_module modules/mod_reqtimeout.so~g' \t-e 's~^#LoadModule mime_module ~LoadModule mime_module ~g' \t-e 's~^#LoadModule log_config_module ~LoadModule log_config_module ~g' \t-e 's~^#LoadModule setenvif_module ~LoadModule setenvif_module ~g' \t-e 's~^#LoadModule status_module ~LoadModule status_module ~g' \t-e 's~^#LoadModule authz_host_module ~LoadModule authz_host_module ~g' \t-e 's~^#LoadModule dir_module ~LoadModule dir_module ~g' \t-e 's~^#LoadModule alias_module ~LoadModule alias_module ~g' \t-e 's~^#LoadModule expires_module ~LoadModule expires_module ~g' \t-e 's~^#LoadModule deflate_module ~LoadModule deflate_module ~g' \t-e 's~^#LoadModule headers_module ~LoadModule headers_module ~g' \t-e 's~^#LoadModule alias_module ~LoadModule alias_module ~g' \t/etc/httpd/conf/httpd.conf",
      "sed -i \t-e '/#<Location \\/server-status>/,/#<\\/Location>/ s~^#~~' \t-e '/<Location \\/server-status>/,/<\\/Location>/ s~Allow from .example.com~Allow from localhost 127.0.0.1~' \t/etc/httpd/conf/httpd.conf",
      "sed -i \t-e '/<VirtualHost _default_:443>/,/#<\\/VirtualHost>/ s~^~#~' \t/etc/httpd/conf.d/ssl.conf",
      "{ \t\techo ''; \t\techo '#'; \t\techo '# Custom configuration'; \t\techo '#'; \t\techo 'Include /etc/services-config/httpd/conf.d/*.conf'; \t\techo 'LogFormat \\'; \t\techo '  \"%{X-Forwarded-For}i %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" \\'; \t\techo '  forwarded_for_combined'; \t\techo 'Options -Indexes'; \t\techo 'TraceEnable Off'; \t\techo 'UseCanonicalPhysicalPort On'; \t} >> /etc/httpd/conf/httpd.conf",
      "mv \t\t/etc/httpd/conf.d/ssl.conf \t\t/etc/httpd/conf.d/ssl.conf.off \t&& touch \t\t/etc/httpd/conf.d/ssl.conf \t&& chmod 444 \t\t/etc/httpd/conf.d/ssl.conf",
      "{ \t\techo ''; \t\techo -e '@apache\\tsoft\\tnproc\\t85'; \t\techo -e '@apache\\thard\\tnproc\\t170'; \t} >> /etc/security/limits.conf",
      "sed \t\t-e 's~^; .*$~~' \t\t-e 's~^;*$~~' \t\t-e '/^$/d' \t\t-e 's~^\\[~\\n\\[~g' \t\t/etc/php.ini \t\t> /etc/php.d/00-php.ini.default \t&& sed \t\t-e 's~^;user_ini.filename =$~user_ini.filename =~g' \t\t-e 's~^;cgi.fix_pathinfo=1$~cgi.fix_pathinfo=1~g' \t\t-e 's~^;date.timezone =$~date.timezone = UTC~g' \t\t-e 's~^expose_php = On$~expose_php = Off~g' \t\t/etc/php.d/00-php.ini.default \t\t> /etc/php.d/00-php.ini",
      "sed -i \t-e \"s~'ADMIN_PASSWORD','password'~'ADMIN_PASSWORD','apc!123'~g\" \t-e \"s~'DATE_FORMAT', 'Y/m/d H:i:s'~'DATE_FORMAT', 'Y-m-d H:i:s'~g\" \t-e \"s~php_uname('n');~gethostname();~g\" \t/usr/share/php-pecl-apc/apc.php",
      "useradd -r -M -d /var/www/app -s /sbin/nologin app \t&& useradd -r -M -d /var/www/app -s /sbin/nologin -G apache,app app-www \t&& usermod -a -G app-www app \t&& usermod -a -G app-www,app apache",
      "mkdir -p \t\t/etc/services-config/{httpd/{conf,conf.d},ssl/{certs,private}} \t&& cp \t\t/etc/httpd/conf/httpd.conf \t\t/etc/services-config/httpd/conf/ \t&& ln -sf \t\t/etc/services-config/httpd/httpd-bootstrap.conf \t\t/etc/httpd-bootstrap.conf \t&& ln -sf \t\t/etc/services-config/httpd/conf/httpd.conf \t\t/etc/httpd/conf/httpd.conf \t&& ln -sf \t\t/etc/services-config/ssl/certs/localhost.crt \t\t/etc/pki/tls/certs/localhost.crt \t&& ln -sf \t\t/etc/services-config/ssl/private/localhost.key \t\t/etc/pki/tls/private/localhost.key \t&& ln -sf \t\t/etc/services-config/supervisor/supervisord.conf \t\t/etc/supervisord.conf \t&& ln -sf \t\t/etc/services-config/supervisor/supervisord.d/httpd-bootstrap.conf \t\t/etc/supervisord.d/httpd-bootstrap.conf \t&& ln -sf \t\t/etc/services-config/supervisor/supervisord.d/httpd-wrapper.conf \t\t/etc/supervisord.d/httpd-wrapper.conf \t&& chmod 700 \t\t/usr/sbin/httpd-bootstrap",
      "mkdir -p -m 750 ${PACKAGE_PATH}",
      "find ${PACKAGE_PATH} -name '*.gitkeep' -type f -delete \t&& $(\t\tif [[ -f /usr/share/php-pecl-apc/apc.php ]]; then \t\t\tcp \t\t\t\t/usr/share/php-pecl-apc/apc.php \t\t\t\t${PACKAGE_PATH}/public_html/_apc.php; \t\tfi \t)",
      "chown -R app:app-www ${PACKAGE_PATH} \t&& find ${PACKAGE_PATH} -type d -exec chmod 750 {} + \t&& find ${PACKAGE_PATH}/var -type d -exec chmod 770 {} + \t&& find ${PACKAGE_PATH} -type f -exec chmod 640 {} + \t&& find ${PACKAGE_PATH}/bin -type f -exec chmod 750 {} +"
    ],
    "workdir": [],
    "from": "jdeathe/centos-ssh:centos-6-1.7.3",
    "maintainer": "James Deathe <james.deathe@gmail.com>",
    "arg": "RELEASE_VERSION=\"1.7.3\"",
    "env": {
      "APACHE_CONTENT_ROOT": "\"/var/www/${PACKAGE_NAME}\"",
      "APACHE_CUSTOM_LOG_FORMAT": "\"combined\"",
      "\tAPACHE_CUSTOM_LOG_LOCATION": "\"var/log/apache_access_log\"",
      "\tAPACHE_ERROR_LOG_LOCATION": "\"var/log/apache_error_log\"",
      "\tAPACHE_ERROR_LOG_LEVEL": "\"warn\"",
      "\tAPACHE_EXTENDED_STATUS_ENABLED": "\"false\"",
      "\tAPACHE_HEADER_X_SERVICE_UID": "\"{{HOSTNAME}}\"",
      "\tAPACHE_LOAD_MODULES": "\"authz_user_module",
      "log_config_module": "expires_module",
      "deflate_module": "headers_module",
      "setenvif_module": "mime_module",
      "status_module": "dir_module",
      "alias_module\"": "\tAPACHE_MOD_SSL_ENABLED",
      "\"false\"": "\tAPACHE_MPM",
      "\"prefork\"": "\tAPACHE_OPERATING_MODE",
      "\"production\"": "\tAPACHE_PUBLIC_DIRECTORY",
      "\"public_html\"": "\tAPACHE_RUN_GROUP",
      "\"app-www\"": "\tAPACHE_SERVER_ALIAS",
      "\"\"": "\tAPACHE_SSL_CIPHER_SUITE",
      "\"app-1.local\"": "\tAPACHE_SSL_CERTIFICATE",
      "\"ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS\"": "\tAPACHE_SSL_PROTOCOL",
      "\"All": "-SSLv2",
      "-SSLv3\"": "\tAPACHE_SYSTEM_USER",
      "\"app\"": "\tPACKAGE_PATH",
      "\"${PACKAGE_PATH}\"": "\tPHP_OPTIONS_DATE_TIMEZONE",
      "\"UTC\"": "\tSSH_AUTOSTART_SSHD",
      "false": "\tSSH_AUTOSTART_SSHD_BOOTSTRAP"
    },
    "label": "\tinstall=\"docker run --rm --privileged --volume /:/media/root jdeathe/centos-ssh-apache-php:centos-6-${RELEASE_VERSION} /usr/sbin/scmi install --chroot=/media/root --name=\\${NAME} --tag=centos-6-${RELEASE_VERSION}\" \tuninstall=\"docker run --rm --privileged --volume /:/media/root jdeathe/centos-ssh-apache-php:centos-6-${RELEASE_VERSION} /usr/sbin/scmi uninstall --chroot=/media/root --name=\\${NAME} --tag=centos-6-${RELEASE_VERSION}\" \torg.deathe.name=\"centos-ssh-apache-php\" \torg.deathe.version=\"${RELEASE_VERSION}\" \torg.deathe.release=\"jdeathe/centos-ssh-apache-php:centos-6-${RELEASE_VERSION}\" \torg.deathe.license=\"MIT\" \torg.deathe.vendor=\"jdeathe\" \torg.deathe.url=\"https://github.com/jdeathe/centos-ssh-apache-php\" \torg.deathe.description=\"CentOS-6 6.8 x86_64 - Apache 2.2, PHP 5.3, PHP memcached 1.0, PHP APC 3.1.\"",
    "cmd": "[\"/usr/bin/supervisord\", \"--configuration=/etc/supervisord.conf\"]"
  },
  "source_repository_url": "https://github.com/jdeathe/centos-ssh-apache-php.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/jdeathe/centos-ssh-apache-php",
  "docker_repository": "jdeathe/centos-ssh-apache-php",
  "docker_image": "jdeathe/centos-ssh-apache-php",
  "parameters_schema": {
    "APACHE_CONTENT_ROOT": {
      "default": "\"/var/www/${PACKAGE_NAME}\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "APACHE_CUSTOM_LOG_FORMAT": {
      "default": "\"combined\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\tAPACHE_CUSTOM_LOG_LOCATION": {
      "default": "\"var/log/apache_access_log\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\tAPACHE_ERROR_LOG_LOCATION": {
      "default": "\"var/log/apache_error_log\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\tAPACHE_ERROR_LOG_LEVEL": {
      "default": "\"warn\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\tAPACHE_EXTENDED_STATUS_ENABLED": {
      "default": "\"false\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\tAPACHE_HEADER_X_SERVICE_UID": {
      "default": "\"{{HOSTNAME}}\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\tAPACHE_LOAD_MODULES": {
      "default": "\"authz_user_module",
      "type": "string",
      "mapping": "environment_variable"
    },
    "log_config_module": {
      "default": "expires_module",
      "type": "string",
      "mapping": "environment_variable"
    },
    "deflate_module": {
      "default": "headers_module",
      "type": "string",
      "mapping": "environment_variable"
    },
    "setenvif_module": {
      "default": "mime_module",
      "type": "string",
      "mapping": "environment_variable"
    },
    "status_module": {
      "default": "dir_module",
      "type": "string",
      "mapping": "environment_variable"
    },
    "alias_module\"": {
      "default": "\tAPACHE_MOD_SSL_ENABLED",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"false\"": {
      "default": "\tAPACHE_MPM",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"prefork\"": {
      "default": "\tAPACHE_OPERATING_MODE",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"production\"": {
      "default": "\tAPACHE_PUBLIC_DIRECTORY",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"public_html\"": {
      "default": "\tAPACHE_RUN_GROUP",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"app-www\"": {
      "default": "\tAPACHE_SERVER_ALIAS",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"\"": {
      "default": "\tAPACHE_SSL_CIPHER_SUITE",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"app-1.local\"": {
      "default": "\tAPACHE_SSL_CERTIFICATE",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS\"": {
      "default": "\tAPACHE_SSL_PROTOCOL",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"All": {
      "default": "-SSLv2",
      "type": "string",
      "mapping": "environment_variable"
    },
    "-SSLv3\"": {
      "default": "\tAPACHE_SYSTEM_USER",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"app\"": {
      "default": "\tPACKAGE_PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"${PACKAGE_PATH}\"": {
      "default": "\tPHP_OPTIONS_DATE_TIMEZONE",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"UTC\"": {
      "default": "\tSSH_AUTOSTART_SSHD",
      "type": "string",
      "mapping": "environment_variable"
    },
    "false": {
      "default": "\tSSH_AUTOSTART_SSHD_BOOTSTRAP",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "jdeathe/centos-ssh-apache-php",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/jdeathe/centos-ssh-apache-php",
    "https://hub.docker.com/v2/repositories/jdeathe/centos-ssh-apache-php",
    "https://github.com/jdeathe/centos-ssh-apache-php.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Type/Infrastructure/Operating System/Linux/CentOS",
    "Type/Middleware/Runtime/PHP",
    "Type/Middleware/Web Server/Apache HTTP Server",
    "Type/Middleware/Cache/Memcached"
  ],
  "info_url": "https://hub.docker.com/r/jdeathe/centos-ssh-apache-php",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}