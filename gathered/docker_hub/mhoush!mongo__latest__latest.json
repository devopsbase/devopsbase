{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/mhoush/mongo",
    "repository_url": "https://hub.docker.com/v2/repositories/mhoush/mongo",
    "tags_url": "https://hub.docker.com/v2/repositories/mhoush/mongo/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/mhoush/mongo/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/mhoush/mongo/autobuild",
    "user": "mhoush",
    "name": "mongo",
    "namespace": "mhoush",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 37,
    "last_updated": "2016-07-27T22:29:31.117032Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 52641980,
        "id": 3659752,
        "repository": 775778,
        "creator": 511694,
        "last_updater": 511694,
        "last_updated": "2016-07-27T22:29:30.756824Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "m-housh/Dockerfiles"
  },
  "name": "mhoush/mongo Docker container",
  "description": "Alpine:edge with mongo db",
  "readme": "MONGO\n=====\n\nAn alpine:edge image with mongodb.  The default behavior is to run mongo in\n'--auth' mode.  This image will set a root username and password based on\nenvironment variables at run time, you can also optionally set authentication\nfor one more database at run time.\n\nEnvirionment Variables:\n----------------------\n\n* **MONGO_ROOT_USERNAME:**  \n    (defaults to 'root') The root username for the mongod instance.\n* **MONGO_ROOT_PASSWORD:**  \n    (defaults to 'password') The root password for the mongod instance.\n* **MONGO_USERNAME:**  \n    (defaults to '') The username to set as `dbOwner` of **MONGO_DBNAME**\n* **MONGO_PASSWORD:**  \n    (defaults to '') The password to set for **MONGO_USERNAME**\n* **MONGO_DBNAME:** \n    (defaults to 'test') A db to create and set ownership of if the\n    **MONGO_USERNAME** and **MONGO_PASSWORD** are present.\n\nExamples\n---------------------\nSet the variables through an env-file.  Below will create the root username and password for the 'admin' database, and will also create user 'api_owner' as the \n`dbOwner` of the 'api' database.\n\n**.env-file**\n```bash\nMONGO_ROOT_USERNAME=\"some_root\"\nMONGO_ROOT_PASSWORD=\"secret\"\nMONGO_USERNAME=\"api_owner\"\nMONGO_PASSWORD=\"super-secret\"\nMONGO_DBNAME=\"api\"\n```  \n\n```bash\n$ docker pull mhoush/mongo\n$ docker run -d --name api_mongo \\\n    --env-file \"$PWD/.env-file\" \\\n    -p \"27017:27017\" \\\n    -v /path/to/data:/data/db\n    mhoush/mongo\n```\n-----------------------\nSame as above, but not using an env-file.\n```bash\n$ docker pull mhoush/mongo\n$ docker run -d --name api_mongo \\\n    -e MONGO_ROOT_USERNAME=\"some_root\" \\\n    -e MONGO_ROOT_PASSWORD=\"secret\" \\\n    -e MONGO_USERNAME=\"api_owner\" \\\n    -e MONGO_PASSWORD=\"super-secret\" \\\n    -e MONGO_DBNAME=\"api\" \\\n    -v /path/to/data:/data/db \\\n    -p \"27017:27017\"\n    mhoush/mongo\n```\n---------------------\nPassing other options to `mongod` at start-up.  If no options are passed, we call\n`mongod --auth`, however if you pass additional options, then you need to include the `--auth`\noption, if desired.\n```bash\n$ docker pull mhoush/mongo\n$ docker run -d --name api_mongo \\\n    --env-file \"$PWD/.env-file\" \\\n    -p \"27017:27017\" \\\n    -v /path/to/data:/data/db\n    mhoush/mongo mongod --auth --smallfiles\n```\n",
  "dockerfile": "FROM alpine:edge\nMAINTAINER https://github.com/m-housh\n\nCOPY entrypoint.sh /entrypoint.sh\n\nRUN echo 'http://dl-3.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories && \\\n    apk add --no-cache mongodb\n\nVOLUME /data/db\nEXPOSE 27017 28017\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"mongod\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      27017
    ],
    "volume": [
      "/data/db"
    ],
    "run": [
      "echo 'http://dl-3.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories &&     apk add --no-cache mongodb"
    ],
    "workdir": [],
    "from": "alpine:edge",
    "maintainer": "https://github.com/m-housh",
    "copy": "entrypoint.sh /entrypoint.sh",
    "entrypoint": "[\"/entrypoint.sh\"]",
    "cmd": "[\"mongod\"]"
  },
  "source_repository_url": "https://github.com/m-housh/Dockerfiles.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/m-housh/Dockerfiles",
  "docker_repository": "mhoush/mongo",
  "docker_image": "mhoush/mongo",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        27017
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "mhoush/mongo",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/mhoush/mongo",
    "https://hub.docker.com/v2/repositories/mhoush/mongo",
    "https://github.com/m-housh/Dockerfiles.git"
  ],
  "labels": [
    "Docker",
    "Binding/Region/North America/US",
    "Type/Middleware/Data Store/Document-oriented/MongoDB"
  ],
  "info_url": "https://hub.docker.com/r/mhoush/mongo",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}