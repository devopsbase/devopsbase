{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/etopian/alpine-php-wordpress",
    "repository_url": "https://hub.docker.com/v2/repositories/etopian/alpine-php-wordpress",
    "tags_url": "https://hub.docker.com/v2/repositories/etopian/alpine-php-wordpress/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/etopian/alpine-php-wordpress/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/etopian/alpine-php-wordpress/autobuild",
    "user": "etopian",
    "name": "alpine-php-wordpress",
    "namespace": "etopian",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 6,
    "pull_count": 695,
    "last_updated": "2016-09-27T13:28:43.517485Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 43256028,
        "id": 781393,
        "repository": 295957,
        "creator": 112535,
        "last_updater": 112535,
        "last_updated": "2016-09-27T13:28:43.197772Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "etopian/alpine-php-wordpress"
  },
  "name": "etopian/alpine-php-wordpress Docker container",
  "description": "Alpine WordPress Nginx PHP-FPM WP-CLI",
  "readme": "##### This image is being maintained. No need to fork it. Upgrade your site using the upgrade strategy on dockerwordpress.com\n\nhttp://www.dockerwordpress.com/docker/upgrading-wordpress-docker\n\n# Lightweight WordPress PHP7 PHP-FPM7 & Nginx Docker Image\n\nLightwight Docker image for the (latest) PHP-FPM and Nginx to run WordPress based on [AlpineLinux](http://alpinelinux.org)\n\n* Image size only ~131MB !\n* Very new packages (alpine:edge) 2016-07-21:\n  * [PHP](http://pkgs.alpinelinux.org/package/main/x86/php) 7.0.8\n  * [Nginx](http://pkgs.alpinelinux.org/package/main/x86/nginx) 1.10.1\n  * Memory usage is around 50mb on a simple install.\n  \n  \n## A simple example\n### Say you want to run a single site on a VPS with Docker\n\n```bash\n\nmkdir -p /data/sites/etopian.com/htdocs\n\nsudo docker run -e VIRTUAL_HOST=etopian.com,www.etopian.com -v /data/sites/etopian.com:/DATA -p 80:80 etopian/alpine-php-wordpress\n\n```\nThe following user and group id are used, the files should be set to this:\nUser ID: \nGroup ID: \n\n```bash\nchown -R 100:101 /data/sites/etopian.com/htdocs\n```\n\n### Say you want to run a multiple WP sites on a VPS with Docker\n\n```bash\n\nsudo docker run -p 80:80 etopian/nginx-proxy\nmkdir -p /data/sites/etopian.com/htdocs\n\nsudo docker run -e VIRTUAL_HOST=etopian.com,www.etopian.com -v /data/sites/etopian.com:/DATA etopian/alpine-php-wordpress\n\nmkdir -p /data/sites/etopian.net/htdocs\nsudo docker run -e VIRTUAL_HOST=etopian.net,www.etopian.net -v /data/sites/etopian.net:/DATA etopian/alpine-php-wordpress\n```\n\nPopulate /data/sites/etopian.com/htdocs and  /data/sites/etopian.net/htdocs with your WP files. See http://www.dockerwordpress.com if you need help on how to configure your database.\n\nThe following user and group id are used, the files should be set to this:\nUser ID: \nGroup ID: \n\n```bash\nchown -R 100:101 /data/sites/etopian.com/htdocs\n```\n\n\n\n### Volume structure\n\n* `htdocs`: Webroot\n* `logs`: Nginx/PHP error logs\n* \n\n### WP-CLI\n\nThis image now includes WP-CLI wpcli.org baked in... So you can. Please `su nginx` before executing or else you can potentially compromise your host.\n\n```\ndocker exec -it <container_name> bash\nsu nginx\ncd /DATA/htdocs\nwp-cli cli\n```\n\n### Fail2Ban\n\nWe are adding the ability to use Fail2Ban on here, however it does not yet work. Will update once it does.\n\n### Multisite\n\nFor each multisite you need to give the domain as the -e VIRTUAL_HOST parameter. For instance VIRTUAL_HOST=site1.com,www.site1.com,site2.com,www.site2.com ... if you wish to add more sites you need to recreate the container.\n\n### Upload limit\n\nThe upload limit is 2 gigabyte.\n\n### Change php.ini value\nmodify files/php-fpm.conf\n\nTo modify php.ini variable, simply edit php-fpm.ini and add php_flag[variable] = value.\n\n```\nphp_flag[display_errors] = on\n```\n\n### PHP Modules\n#### List of available modules in Alpine Linux, not all these are installed.\n##### In order to install a php module do, (leave out the version number i.e. -5.6.11-r0\n```\ndocker exec <image_id> apk add <pkg_name>\ndocker restart <image_name>\n```\nExample:\n\n```\ndocker exec <image_id> apk add php-soap\ndocker restart <image_name>\n```\n\n\nphp-soap-5.6.11-r0\n\nphp-openssl-5.6.11-r0\n\nphp-gmp-5.6.11-r0\n\nphp-phar-5.6.11-r0\n\nphp-embed-5.6.11-r0\n\nphp-pdo_odbc-5.6.11-r0\n\nphp-mysqli-5.6.11-r0\n\nphp-common-5.6.11-r0\n\nphp-ctype-5.6.11-r0\n\nphp-fpm-5.6.11-r0\n\nphp-shmop-5.6.11-r0\n\nphp-xsl-5.6.11-r0\n\nphp-curl-5.6.11-r0\n\nphp-pear-net_idna2-0.1.1-r0\n\nphp-json-5.6.11-r0\n\nphp-dom-5.6.11-r0\n\nphp-pspell-5.6.11-r0\n\nphp-sockets-5.6.11-r0\n\nphp-pear-mdb2-driver-pgsql-2.5.0b5-r0\n\nphp-pdo-5.6.11-r0\n\nphpldapadmin-1.2.3-r3\n\nphp-pear-5.6.11-r0\n\nphp-phpmailer-5.2.0-r0\n\nphpmyadmin-doc-4.4.10-r0\n\nphp-cli-5.6.11-r0\n\nphp-zip-5.6.11-r0\n\nphp-pgsql-5.6.11-r0\n\nphp-sysvshm-5.6.11-r0\n\nphp-imap-5.6.11-r0\n\nphp-intl-5.6.11-r0\n\nphp-embed-5.6.11-r0\n\nphp-zlib-5.6.11-r0\n\nphp-phpdbg-5.6.11-r0\n\nphp-sysvsem-5.6.11-r0\n\nphpmyadmin-4.4.10-r0\n\nphp-mysql-5.6.11-r0\n\nphp-sqlite3-5.6.11-r0\n\nphp-cgi-5.6.11-r0\n\nphp-apcu-4.0.7-r1\n\nphp-snmp-5.6.11-r0\n\nphp-pdo_pgsql-5.6.11-r0\n\nphp-xml-5.6.11-r0\n\nphp-wddx-5.6.11-r0\n\nphp-sysvmsg-5.6.11-r0\n\nphp-enchant-5.6.11-r0\n\nphp-bcmath-5.6.11-r0\n\nphp-pear-mail_mime-1.8.9-r0\n\nphp-apache2-5.6.11-r0\n\nphp-gd-5.6.11-r0\n\nphp-pear-mdb2-driver-sqlite-2.5.0b5-r0\n\nphp-xcache-3.2.0-r1\n\nphp-odbc-5.6.11-r0\n\nphp-mailparse-2.1.6-r2\n\nphp-ftp-5.6.11-r0\n\nperl-php-serialization-0.34-r1\n\nphp-exif-5.6.11-r0\n\nphp-pdo_mysql-5.6.11-r0\n\nphp-ldap-5.6.11-r0\n\nphp-pear-mdb2-2.5.0b5-r0\n\nphp-dbg-5.6.11-r0\n\nphp-pear-net_smtp-1.6.2-r0\n\nphp-opcache-5.6.11-r0\n\nphp-pdo_sqlite-5.6.11-r0\n\nphp-posix-5.6.11-r0\n\nphp-dba-5.6.11-r0\n\nphp-iconv-5.6.11-r0\n\nphp-gettext-5.6.11-r0\n\nphp-xmlreader-5.6.11-r0\n\nphp-5.6.11-r0\n\nphp-xmlrpc-5.6.11-r0\n\nphp-bz2-5.6.11-r0\n\nperl-php-serialization-doc-0.34-r1\n\nphp-mcrypt-5.6.11-r0\n\nphp-memcache-3.0.8-r3\n\nxapian-bindings-php-1.2.21-r1\n\nphp-pdo_dblib-5.6.11-r0\n\nphp-phalcon-2.0.3-r0\n\nphp-dev-5.6.11-r0\n\nphp-doc-5.6.11-r0\n\nphp-mssql-5.6.11-r0\n\nphp-calendar-5.6.11-r0\n\nphp-pear-mdb2-driver-mysqli-2.5.0b5-r0\n\nphp-pear-mdb2-driver-mysql-2.5.0b5-r0\n\n",
  "dockerfile": "FROM alpine:edge\nMAINTAINER Etopian Inc. <contact@etopian.com>\n\nLABEL   devoply.type=\"site\" \\\n        devoply.cms=\"wordpress\" \\\n        devoply.framework=\"wordpress\" \\\n        devoply.language=\"php7\" \\\n        devoply.require=\"mariadb etopian/nginx-proxy\" \\\n        devoply.recommend=\"redis\" \\\n        devoply.description=\"WordPress on Nginx and PHP-FPM with WP-CLI.\" \\\n        devoply.name=\"WordPress\" \\\n        devoply.params=\"docker run -d --name {container_name} -e VIRTUAL_HOST={virtual_hosts} -v /data/sites/{domain_name}:/DATA etopian/alpine-php7-wordpress\"\n\n\n\nRUN echo 'http://dl-4.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories\\\n    && apk update \\\n    && apk add bash less vim nginx ca-certificates \\\n    php7-fpm php7-json php7-zlib php7-xml php7-pdo php7-phar php7-openssl \\\n    php7-pdo_mysql php7-mysqli php7-session \\\n    php7-gd php7-iconv php7-mcrypt \\\n    php7-curl php7-opcache php7-ctype php7-apcu \\\n    php7-intl php7-bcmath php7-dom php7-xmlreader mysql-client curl && apk add -u musl\n\nRUN rm -rf /var/cache/apk/*\n\nENV TERM=\"xterm\" \\\n    DB_HOST=\"172.17.0.1\" \\\n    DB_NAME=\"\" \\\n    DB_USER=\"\"\\\n    DB_PASS=\"\"\n\n\nRUN sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php7/php.ini && \\\n    sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd && \\\n    sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd- && \\\n    ln -s /usr/bin/php7 /usr/bin/php && \\\n    ln -s /sbin/php-fpm7 /sbin/php-fpm\n\nADD files/nginx.conf /etc/nginx/\nADD files/php-fpm.conf /etc/php7/\nADD files/run.sh /\nRUN chmod +x /run.sh\n\nRUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && chmod +x wp-cli.phar && mv wp-cli.phar /usr/bin/wp-cli\n\nEXPOSE 80\nVOLUME [\"/DATA\"]\n\nCMD [\"/run.sh\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "files/nginx.conf",
        "dest": "/etc/nginx/"
      },
      {
        "source": "files/php-fpm.conf",
        "dest": "/etc/php7/"
      },
      {
        "source": "files/run.sh",
        "dest": "/"
      }
    ],
    "expose": [
      80
    ],
    "volume": [
      "[\"/DATA\"]"
    ],
    "run": [
      "echo 'http://dl-4.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories    && apk update     && apk add bash less vim nginx ca-certificates     php7-fpm php7-json php7-zlib php7-xml php7-pdo php7-phar php7-openssl     php7-pdo_mysql php7-mysqli php7-session     php7-gd php7-iconv php7-mcrypt     php7-curl php7-opcache php7-ctype php7-apcu     php7-intl php7-bcmath php7-dom php7-xmlreader mysql-client curl && apk add -u musl",
      "rm -rf /var/cache/apk/*",
      "sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php7/php.ini &&     sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd &&     sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd- &&     ln -s /usr/bin/php7 /usr/bin/php &&     ln -s /sbin/php-fpm7 /sbin/php-fpm",
      "chmod +x /run.sh",
      "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && chmod +x wp-cli.phar && mv wp-cli.phar /usr/bin/wp-cli"
    ],
    "workdir": [],
    "from": "alpine:edge",
    "maintainer": "Etopian Inc. <contact@etopian.com>",
    "label": "  devoply.type=\"site\"         devoply.cms=\"wordpress\"         devoply.framework=\"wordpress\"         devoply.language=\"php7\"         devoply.require=\"mariadb etopian/nginx-proxy\"         devoply.recommend=\"redis\"         devoply.description=\"WordPress on Nginx and PHP-FPM with WP-CLI.\"         devoply.name=\"WordPress\"         devoply.params=\"docker run -d --name {container_name} -e VIRTUAL_HOST={virtual_hosts} -v /data/sites/{domain_name}:/DATA etopian/alpine-php7-wordpress\"",
    "env": {
      "TERM": "\"xterm\"",
      "": "DB_PASS",
      "DB_HOST": "\"172.17.0.1\"",
      "DB_NAME": "\"\"",
      "DB_USER": "\"\""
    },
    "cmd": "[\"/run.sh\"]"
  },
  "source_repository_url": "https://github.com/etopian/alpine-php-wordpress.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/etopian/alpine-php-wordpress",
  "docker_repository": "etopian/alpine-php-wordpress",
  "docker_image": "etopian/alpine-php-wordpress",
  "parameters_schema": {
    "TERM": {
      "default": "\"xterm\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "DB_PASS",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DB_HOST": {
      "default": "\"172.17.0.1\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DB_NAME": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DB_USER": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "etopian/alpine-php-wordpress",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/etopian/alpine-php-wordpress",
    "https://hub.docker.com/v2/repositories/etopian/alpine-php-wordpress",
    "https://github.com/etopian/alpine-php-wordpress.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Mode/CLI",
    "Type/Middleware/Runtime/PHP",
    "Type/Middleware/Web Server/Nginx"
  ],
  "info_url": "https://hub.docker.com/r/etopian/alpine-php-wordpress",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}