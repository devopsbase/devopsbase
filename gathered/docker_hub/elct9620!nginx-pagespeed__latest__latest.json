{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/elct9620/nginx-pagespeed",
    "repository_url": "https://hub.docker.com/v2/repositories/elct9620/nginx-pagespeed",
    "tags_url": "https://hub.docker.com/v2/repositories/elct9620/nginx-pagespeed/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/elct9620/nginx-pagespeed/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/elct9620/nginx-pagespeed/autobuild",
    "user": "elct9620",
    "name": "nginx-pagespeed",
    "namespace": "elct9620",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 4,
    "pull_count": 3557,
    "last_updated": "2016-10-13T01:44:32.738007Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 153134514,
        "id": 110039,
        "repository": 98384,
        "creator": 31952,
        "last_updater": 31952,
        "last_updated": "2016-10-13T01:44:32.384812Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.10.1",
        "full_size": 153125708,
        "id": 3871378,
        "repository": 98384,
        "creator": 31952,
        "last_updater": 31952,
        "last_updated": "2016-08-08T00:33:23.528728Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.10.0",
        "full_size": 181619554,
        "id": 2860896,
        "repository": 98384,
        "creator": 31952,
        "last_updater": 31952,
        "last_updated": "2016-05-03T02:21:13.380917Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "1.9.14",
        "full_size": 181312131,
        "id": 2621944,
        "repository": 98384,
        "creator": 31952,
        "last_updater": 31952,
        "last_updated": "2016-04-17T13:01:11.792575Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.7.8",
        "full_size": 116954684,
        "id": 110048,
        "repository": 98384,
        "creator": 31952,
        "last_updater": 31952,
        "last_updated": "2015-11-14T14:33:49.693758Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "elct9620/nginx-pagespeed"
  },
  "name": "elct9620/nginx-pagespeed Docker container",
  "description": "Docker image include nginx and pagespeed.",
  "readme": "Nginx Pagespeed[![](https://images.microbadger.com/badges/image/elct9620/nginx-pagespeed.svg)](https://microbadger.com/images/elct9620/nginx-pagespeed \"Get your own image badge on microbadger.com\")\n===\n\nDocker image include Nginx and Pagespeed module.\n\n\nRoadmap\n---\n\n- [ ] Add SSL support\n- [ ] Add Proxy Mode support\n- [ ] Improve template to support more complex config file struct\n- [ ] Add Laravel support\n- [ ] Add Let's Encrypt support with auto renew\n\nUsage\n---\n\nThe new version provide options to customize Nginx config.\n\n### Host static files\n\n```\ndocker run -v $(pwd)/www:/var/www/html elct9620/nginx-pagespeed\n```\n\n### Run with customize config\n\n```\ndocker run --env='SERVER_NAME=example.com' elct9620/nginx-pagespeed\n```\n\nOptions\n---\n\nTo generate customize config file, just add environment variable when run.\nBelow is current supported options.\n\n### Default\n\n- `SERVER_NAME` The server name,  default is `localhost`\n- `DOCUMENT_ROOT` The root path, default is `/var/www/html`. You can change it point to other path.\n- `INDEX_FILES` The nginx default has `index.html index.htm` as index file, you can add other setting like `index.php`\n- `ALLOW_ORIGIN` CROS setting, default is limited to same as server name.\n\n### FastCGI\n\n- `FASTCGI_HOST` When this variable is not empty, will enable FastCGI mode for PHP.\n- `FASTCGI_PORT` The port for FastCGI server, default is `9000`\n- `FASTCGI_INDEX` The default index file for FastCGI, default is `index.php`\n- `FASTCGI_ROOT` Due to the FastCGI server is not run with Nginx, you can change the path for it. Default same as document root.\n\n### PageSpeed\n\n- `PAGESPEED_ENABLE` You can disable pagespeed by change this variable, default is `on`\n- `PAGESPEED_REWRITE_LEVEL` The default pagespeed optimize options group, default is `PassThrough`\n- `PAGESPEED_HEADER` The response header, default is `Powered by ngx_pagespeed`\n\n### Cache\n\n- `CACHE_LEVEL` The cache level for FastCGI (proxy will support soon), default is `1:2`\n- `CACHE_ZONE_SIZE` The in memory cache size, default is `100m`\n- `Cache_INACTIVE_TIME` The cache inactive time, default is `60m`\n\n### Extension\n\nThis image also provide some extra config to fast setup some popular Framework/CMS.\n\n- `WORDPRESS_ADDON` When set to `yes` will change config to add extra config to let `WordPress` work correctly.\n\n\n",
  "dockerfile": "###\n# Nginx with Pagespeed\n###\n\nFROM ubuntu:trusty\n\nMAINTAINER 蒼時弦也 \"docker@frost.tw\"\n\n# Version\nENV NGINX_VERSION 1.10.1\nENV NPS_VERSION 1.11.33.0\nENV OPENSSL_VERSION 1.0.2h\n\n# Setup Environment\nENV MODULE_DIR /usr/src/nginx-modules\nENV NGINX_TEMPLATE_DIR /usr/src/nginx\nENV NGINX_RUNTIME_DIR /usr/src/runtime\nENV SSL_CERTS_DIR /usr/certs\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install Build Tools & Dependence\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d\nRUN apt-get update && \\\n    apt-get install wget -y && \\\n    apt-get build-dep nginx -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n\n    # ===========\n    # Build Nginx\n    # ===========\n\n    # Create Module Directory\n    mkdir ${MODULE_DIR} && \\\n\n    # Downloading Source\n    cd /usr/src && \\\n    wget -q http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \\\n    tar xzf nginx-${NGINX_VERSION}.tar.gz && \\\n    rm -rf nginx-${NGINX_VERSION}.tar.gz && \\\n\n    cd /usr/src && \\\n    wget -q http://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz && \\\n    tar xzf openssl-${OPENSSL_VERSION}.tar.gz && \\\n    rm -rf openssl-${OPENSSL_VERSION}.tar.gz && \\\n\n    # Install Addational Module\n    cd ${MODULE_DIR} && \\\n    wget -q --no-check-certificate https://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.tar.gz && \\\n    tar zxf release-${NPS_VERSION}-beta.tar.gz && \\\n    rm -rf release-${NPS_VERSION}-beta.tar.gz && \\\n    cd ngx_pagespeed-release-${NPS_VERSION}-beta/ && \\\n    wget -q --no-check-certificate https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz && \\\n    tar zxf ${NPS_VERSION}.tar.gz && \\\n    rm -rf ${NPS_VERSION}.tar.gz && \\\n\n    # Compile Nginx\n    cd /usr/src/nginx-${NGINX_VERSION} && \\\n    ./configure \\\n    --prefix=/etc/nginx \\\n    --sbin-path=/usr/sbin/nginx \\\n    --modules-path=/usr/lib/nginx/modules \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --pid-path=/var/run/nginx.pid \\\n    --lock-path=/var/run/nginx.lock \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --with-http_ssl_module \\\n    --with-http_realip_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_secure_link_module \\\n    --with-http_v2_module \\\n    --with-threads \\\n    --with-file-aio \\\n    --with-ipv6 \\\n    --with-openssl=\"../openssl-${OPENSSL_VERSION}\" \\\n    --add-module=${MODULE_DIR}/ngx_pagespeed-release-${NPS_VERSION}-beta \\\n\n    # Install Nginx\n    && cd /usr/src/nginx-${NGINX_VERSION} \\\n    && make && make install  \\\n    && mkdir -p /var/www/html  \\\n    && mkdir -p /etc/nginx/conf.d  \\\n    && mkdir -p /usr/share/nginx/html \\\n    && mkdir -p /var/cache/nginx \\\n    && mkdir -p /var/cache/ngx_pagespeed \\\n    && install -m644 html/index.html /var/www/html  \\\n    && install -m644 html/50x.html /usr/share/nginx/html \\\n\n    # Clear source code to reduce container size\n    && rm -rf /usr/src/* \\\n    && mkdir -p ${NGINX_TEMPLATE_DIR} \\\n    && mkdir -p ${NGINX_RUNTIME_DIR} \\\n    && mkdir -p ${SSL_CERTS_DIR}\n\n# Forward requests and errors to docker logs\nRUN ln -sf /dev/stdout /var/log/nginx/access.log && \\\n    ln -sf /dev/stderr /var/log/nginx/error.log\n\nVOLUME [\"/var/cache/nginx\", \"/var/cache/ngx_pagespeed\", \"/var/www/html\", \"/usr/certs\"]\n\nCOPY nginx.conf /etc/nginx/nginx.conf\n\n# Copy config template\nCOPY template/ ${NGINX_TEMPLATE_DIR}/\nCOPY runtime/ ${NGINX_RUNTIME_DIR}/\nCOPY entrypoint.sh /entrypoint.sh\n\nEXPOSE 80 443\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      80
    ],
    "volume": [
      "[\"/var/cache/nginx\", \"/var/cache/ngx_pagespeed\", \"/var/www/html\", \"/usr/certs\"]"
    ],
    "run": [
      "echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d",
      "apt-get update &&     apt-get install wget -y &&     apt-get build-dep nginx -y &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* && ",
      "ln -sf /dev/stdout /var/log/nginx/access.log &&     ln -sf /dev/stderr /var/log/nginx/error.log"
    ],
    "workdir": [],
    "from": "ubuntu:trusty",
    "maintainer": "蒼時弦也 \"docker@frost.tw\"",
    "env": {
      "NGINX_VERSION": "1.10.1",
      "NPS_VERSION": "1.11.33.0",
      "OPENSSL_VERSION": "1.0.2h",
      "MODULE_DIR": "/usr/src/nginx-modules",
      "NGINX_TEMPLATE_DIR": "/usr/src/nginx",
      "NGINX_RUNTIME_DIR": "/usr/src/runtime",
      "SSL_CERTS_DIR": "/usr/certs",
      "DEBIAN_FRONTEND": "noninteractive"
    },
    "copy": "entrypoint.sh /entrypoint.sh",
    "entrypoint": "[\"/entrypoint.sh\"]",
    "cmd": "[\"nginx\", \"-g\", \"daemon off;\"]"
  },
  "source_repository_url": "https://github.com/elct9620/nginx-pagespeed.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/elct9620/nginx-pagespeed",
  "docker_repository": "elct9620/nginx-pagespeed",
  "docker_image": "elct9620/nginx-pagespeed",
  "parameters_schema": {
    "NGINX_VERSION": {
      "default": "1.10.1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NPS_VERSION": {
      "default": "1.11.33.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "OPENSSL_VERSION": {
      "default": "1.0.2h",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MODULE_DIR": {
      "default": "/usr/src/nginx-modules",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NGINX_TEMPLATE_DIR": {
      "default": "/usr/src/nginx",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NGINX_RUNTIME_DIR": {
      "default": "/usr/src/runtime",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SSL_CERTS_DIR": {
      "default": "/usr/certs",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DEBIAN_FRONTEND": {
      "default": "noninteractive",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "elct9620/nginx-pagespeed",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/elct9620/nginx-pagespeed",
    "https://hub.docker.com/v2/repositories/elct9620/nginx-pagespeed",
    "https://github.com/elct9620/nginx-pagespeed.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Middleware/Web Server/Nginx"
  ],
  "info_url": "https://hub.docker.com/r/elct9620/nginx-pagespeed",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}