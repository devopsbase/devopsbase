{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/million12/php-testing",
    "repository_url": "https://hub.docker.com/v2/repositories/million12/php-testing",
    "tags_url": "https://hub.docker.com/v2/repositories/million12/php-testing/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/million12/php-testing/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/million12/php-testing/autobuild",
    "user": "million12",
    "name": "php-testing",
    "namespace": "million12",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 3,
    "pull_count": 1812,
    "last_updated": "2016-10-09T13:13:53.057762Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 587192095,
        "id": 204038,
        "repository": 198404,
        "creator": 22393,
        "last_updater": 22393,
        "last_updated": "2016-10-09T13:13:52.016629Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "php56",
        "full_size": 517489871,
        "id": 2012840,
        "repository": 198404,
        "creator": 22393,
        "last_updater": 22393,
        "last_updated": "2016-10-09T13:12:24.211567Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "php70",
        "full_size": 542784187,
        "id": 2012852,
        "repository": 198404,
        "creator": 22393,
        "last_updater": 22393,
        "last_updated": "2016-10-09T13:11:03.720572Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "php55",
        "full_size": 446253147,
        "id": 2012846,
        "repository": 198404,
        "creator": 22393,
        "last_updater": 22393,
        "last_updated": "2016-09-05T11:27:04.515688Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "php-55",
        "full_size": 381514555,
        "id": 204034,
        "repository": 198404,
        "creator": 22393,
        "last_updater": 22393,
        "last_updated": "2016-02-15T22:08:22.981033Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "php-70",
        "full_size": 461968594,
        "id": 204036,
        "repository": 198404,
        "creator": 22393,
        "last_updater": 22393,
        "last_updated": "2016-02-15T22:04:03.670276Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "million12/docker-php-testing"
  },
  "name": "million12/php-testing Docker container",
  "description": "PHP testing with phpunit, behat, Selenium server.",
  "readme": "# Docker container with PHP and Selenium server\n[![Circle CI](https://circleci.com/gh/million12/docker-php-testing.png?style=badge)](https://circleci.com/gh/million12/docker-php-testing)\n\nThis is a [million12/php-testing](https://registry.hub.docker.com/u/million12/php-testing) container for running PHP tests using phpunit and/or [Behat](http://behat.org/) tests. Selenium server is installed and running, also there is a VNC server so you can connect to it to inspect the browser while tests are running.\n\nThis container is based on the [million12/nginx-php](https://github.com/million12/docker-nginx-php) container. If you use it for you application, you have exactly the same environment for the application and for testing. That gives you consistent results and a guarantee that if your test are passing, your app is working.\n\nFor different PHP versions, look up different branches of this repository.  \nOn Docker Hub you can find them under different tags:  \n* `million12/php-testing:latest` - PHP 7.0 # built from `master` branch [![Circle CI](https://circleci.com/gh/million12/docker-php-testing.svg?style=svg)](https://circleci.com/gh/million12/docker-php-testing)\n* `million12/php-testing:php70` - PHP 7.0 # built from `php70` branch [![Circle CI](https://circleci.com/gh/million12/docker-php-testing/tree/php70.svg?style=svg)](https://circleci.com/gh/million12/docker-php-testing/tree/php70)\n* `million12/php-testing:php56` - PHP 5.6 # built from `php56` branch [![Circle CI](https://circleci.com/gh/million12/docker-php-testing/tree/php56.svg?style=svg)](https://circleci.com/gh/million12/docker-php-testing/tree/php56)\n* `million12/php-testing:php55` - PHP 5.5 # built from `php55` branch [![Circle CI](https://circleci.com/gh/million12/docker-php-testing/tree/php55.svg?style=svg)](https://circleci.com/gh/million12/docker-php-testing/tree/php55)\n\n\n## Usage\n\nHere is an example how you can run your unit, functional and Behat test. In the example we are running TYPO3 Neos tests: unit, functional and Behat altogether.\n\nFirst, launch containers with TYPO3 Neos (we use [million12/typo3-neos](https://github.com/million12/docker-typo3-neos) image for that):  \n```\ndocker run -d --name=db --env=\"MARIADB_PASS=my-pass\" million12/mariadb\ndocker run -d --name=neos -p=12345:80 --link=db:db \\\n    --env=\"T3APP_DO_INIT_TESTS=true\" \\\n    --env=\"T3APP_VHOST_NAMES=neos dev.neos behat.dev.neos\" \\\n    million12/typo3-neos\n```\n\nNow, having your application running in `neos` container, application data in /data/www/neos, here's how you can run tests against it:\n```\ndocker run -ti --volumes-from=neos --link=neos:web --link=db:db -p=4444:4444 -p=5900:5900 million12/php-testing \"\n    echo \\$WEB_PORT_80_TCP_ADDR \\$WEB_ENV_T3APP_VHOST_NAMES >> /etc/hosts && cat /etc/hosts && \\\n    su www -c \\\"\n        cd /data/www/typo3-app && \\\n        echo -e '\\n\\n======== RUNNING TYPO3 NEOS TESTS =======\\n\\n' && \\\n        bin/phpunit -c Build/BuildEssentials/PhpUnit/UnitTests.xml && \\\n        bin/phpunit -c Build/BuildEssentials/PhpUnit/FunctionalTests.xml && \\\n        bin/behat -c Packages/Application/TYPO3.Neos/Tests/Behavior/behat.yml\n    \\\"\n\"\n```\n\nHave a look at [million12/typo3-neos](https://github.com/million12/docker-typo3-neos) repository for a complete example. Tests there are described in [circle.yml](https://github.com/million12/docker-typo3-neos/blob/master/circle.yml) and are running on [CircleCI](https://circleci.com/gh/million12/docker-typo3-neos).\n\nNote: port 4444 allows you to connect with the browser to Selenium server. Port 5900 allows to connect to VNC server (with VNC client) and see how the tests are executed in the Selenium browser.\n\n## Authors\n\nAuthor: Marcin Ryzycki (<marcin@m12.io>)  \n\n---\n\n**Sponsored by [Prototype Brewery](http://prototypebrewery.io/)** - the new prototyping tool for building highly-interactive prototypes of your website or web app. Built on top of [Neos CMS](https://www.neos.io/) and [Zurb Foundation](http://foundation.zurb.com/) framework.\n",
  "dockerfile": "FROM million12/nginx-php:latest\nMAINTAINER Marcin Ryzycki marcin@m12.io\n\n# Install java, Xvfb, x11vnc server and firefox\n# Download Selenium Standalone Server\n# Remove supervisord configs for nginx and php - we don't need to run them in this container\n# (but we need PHP configuration to run Behat tests)\nRUN \\\n  yum update -y && \\\n  yum install -y java-1.8.0-openjdk-headless xorg-x11-server-Xvfb x11vnc firefox && \\\n  yum clean all && \\\n  curl -sSL -o /usr/bin/selenium-server-standalone.jar http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.0.jar && \\\n  rm -f /etc/supervisor.d/nginx.conf /etc/supervisor.d/php-fpm.conf\n\nADD container-files /\n\nENV \\\n  SCREEN_DIMENSION=1600x1000x24 \\\n  VNC_PASSWORD=password\n\nEXPOSE 4444 5900\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "container-files",
        "dest": "/"
      }
    ],
    "expose": [
      4444
    ],
    "volume": [],
    "run": [
      "  yum update -y &&   yum install -y java-1.8.0-openjdk-headless xorg-x11-server-Xvfb x11vnc firefox &&   yum clean all &&   curl -sSL -o /usr/bin/selenium-server-standalone.jar http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.0.jar &&   rm -f /etc/supervisor.d/nginx.conf /etc/supervisor.d/php-fpm.conf"
    ],
    "workdir": [],
    "from": "million12/nginx-php:latest",
    "maintainer": "Marcin Ryzycki marcin@m12.io",
    "env": {
      "": "",
      "SCREEN_DIMENSION": "1600x1000x24",
      "VNC_PASSWORD": "password"
    }
  },
  "source_repository_url": "https://github.com/million12/docker-php-testing.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/million12/docker-php-testing",
  "docker_repository": "million12/php-testing",
  "docker_image": "million12/php-testing",
  "parameters_schema": {
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SCREEN_DIMENSION": {
      "default": "1600x1000x24",
      "type": "string",
      "mapping": "environment_variable"
    },
    "VNC_PASSWORD": {
      "default": "password",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        4444
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "million12/php-testing",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/million12/php-testing",
    "https://hub.docker.com/v2/repositories/million12/php-testing",
    "https://github.com/million12/docker-php-testing.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Type/Devopsware/Test",
    "Type/Middleware/Runtime/PHP"
  ],
  "info_url": "https://hub.docker.com/r/million12/php-testing",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}