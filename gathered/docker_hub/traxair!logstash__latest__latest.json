{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/traxair/logstash",
    "repository_url": "https://hub.docker.com/v2/repositories/traxair/logstash",
    "tags_url": "https://hub.docker.com/v2/repositories/traxair/logstash/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/traxair/logstash/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/traxair/logstash/autobuild",
    "user": "traxair",
    "name": "logstash",
    "namespace": "traxair",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 99,
    "last_updated": "2015-06-17T16:55:57.733484Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 492727703,
        "id": 185011,
        "repository": 161446,
        "creator": 249419,
        "last_updater": 251001,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "Trax-air/TraxIT"
  },
  "name": "traxair/logstash Docker container",
  "description": "",
  "readme": "TraxIT\n=======\n\nCreating new microservices\n---------------------------\n\nGo to [the skeletons directory](https://github.com/Trax-air/TraxIT/tree/master/skeletons/) and select the microservice type you want to create\n\n(Django REST microservice, Celery microservice, ...). Instructions are located inside each directory.\n\nCode Checks\n==============\n[![Code Issues](https://www.quantifiedcode.com/api/v1/project/4cd9b15c8264457695eeb3daef910d69/badge.svg)](https://www.quantifiedcode.com/app/project/4cd9b15c8264457695eeb3daef910d69)\n\nBuild Statuses\n==============\n| Microservice | Status |\n| ------------ | ------ |\n| Base | [![Docker Repository on Quay](https://quay.io/repository/traxair/base/status?token=cd07f181-7899-44d0-8fae-8d1a3d5f8ad1 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/base)|\n| base_gpu | [![Docker Repository on Quay](https://quay.io/repository/traxair/base_gpu/status?token=124d0478-ab9d-41f1-afbf-4cee7a40add7 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/base_gpu)|\n| ci-slave | [![Docker Repository on Quay](https://quay.io/repository/traxair/ci-slave/status?token=170d5226-dd11-46cc-b48b-7a0daac4f2dd \"Docker Repository on Quay\")](https://quay.io/repository/traxair/ci-slave)|\n| ci-slave-acceptance | [![Docker Repository on Quay](https://quay.io/repository/traxair/ci-slave-acceptance/status?token=170d5226-dd11-46cc-b48b-7a0daac4f2dd \"Docker Repository on Quay\")](https://quay.io/repository/traxair/ci-slave-acceptance)|\n| identifications | [![Docker Repository on Quay](https://quay.io/repository/traxair/identifications/status?token=104b5c5c-f394-4627-a1a5-84759f273ade \"Docker Repository on Quay\")](https://quay.io/repository/traxair/identifications) |\n| youtube_insight | [![Docker Repository on Quay](https://quay.io/repository/traxair/youtube_insight/status?token=6affeed2-715b-4fc1-a2f1-4414b6244ae9 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/youtube_insight) |\n| ingestion | [![Docker Repository on Quay](https://quay.io/repository/traxair/ingestion/status?token=6d1a409a-b41d-45ed-9a46-2cce110b3d43 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/ingestion) |\n| api_gateway | [![Docker Repository on Quay](https://quay.io/repository/traxair/api_gateway/status?token=fd39a179-95dd-4c5e-8c34-6fd803ddfccf \"Docker Repository on Quay\")](https://quay.io/repository/traxair/api_gateway)|\n| claim | [![Docker Repository on Quay](https://quay.io/repository/traxair/claim/status?token=9f2fdd98-e5c1-4f0e-bf41-e5e014374fde \"Docker Repository on Quay\")](https://quay.io/repository/traxair/claim)|\n| claims | [![Docker Repository on Quay](https://quay.io/repository/traxair/claims/status?token=5ec9ed64-e874-4de8-98a7-cdaeb8e34a60 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/claims)|\n| compute_url_from_semantic | [![Docker Repository on Quay](https://quay.io/repository/traxair/compute_url_from_semantic/status?token=131a16cb-ff9a-4e35-942c-ff05b0dcd924 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/compute_url_from_semantic)|\n| compute_waveform_from_shared_mem | [![Docker Repository on Quay](https://quay.io/repository/traxair/compute_waveform_from_shared_mem/status?token=010302fc-b495-412f-a409-689c3fe9f69e \"Docker Repository on Quay\")](https://quay.io/repository/traxair/compute_waveform_from_shared_mem)|\n| decode | [![Docker Repository on Quay](https://quay.io/repository/traxair/decode/status?token=2bec8262-bbc1-44e2-b985-d9c03c7fed26 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/decode)|\n| decode_from_blob_to_shared_mem | [![Docker Repository on Quay](https://quay.io/repository/traxair/decode_from_blob_to_shared_mem/status?token=9dd60603-d769-48a6-8b2e-22833feef6e1 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/decode_from_blob_to_shared_mem)|\n| decode_from_uri_to_shared_mem | [![Docker Repository on Quay](https://quay.io/repository/traxair/decode_from_uri_to_shared_mem/status?token=49e9fcf9-54b6-4314-b628-f155d48e4350 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/decode_from_uri_to_shared_mem)|\n| extended_content_id | [![Docker Repository on Quay](https://quay.io/repository/traxair/extended_content_id/status?token=7c61fa56-b055-4f4a-866f-606e67b7f914 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/extended_content_id)|\n| fingerprint | [![Docker Repository on Quay](https://quay.io/repository/traxair/fingerprint/status?token=9810a365-c130-4938-9aff-05811330e10f \"Docker Repository on Quay\")](https://quay.io/repository/traxair/fingerprint)|\n| historun | [![Docker Repository on Quay](https://quay.io/repository/traxair/historun/status?token=3edb2387-aef9-42ce-ab27-a1f07ebdeb4f \"Docker Repository on Quay\")](https://quay.io/repository/traxair/historun)|\n| identify_fingerprinting_streaming | [![Docker Repository on Quay](https://quay.io/repository/traxair/identify_fingerprinting_streaming/status?token=82bb54b1-a855-413a-bd75-9c030ae585af \"Docker Repository on Quay\")](https://quay.io/repository/traxair/identify_fingerprinting_streaming)|\n| match_candidates | [![Docker Repository on Quay](https://quay.io/repository/traxair/match_candidates/status?token=b1af53a5-7f6f-4dfc-8fa0-2480e2fe9ce6 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/match_candidates)|\n| match_scores | [![Docker Repository on Quay](https://quay.io/repository/traxair/match_scores/status?token=5bdd3cc3-d03c-4eeb-a0e7-668da28517a7 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/match_scores)|\n| microtracks | [![Docker Repository on Quay](https://quay.io/repository/traxair/microtracks/status?token=d6c8337d-2113-4e0b-89dd-2c1eb4ab5caf \"Docker Repository on Quay\")](https://quay.io/repository/traxair/microtracks)|\n| picture_uploader | [![Docker Repository on Quay](https://quay.io/repository/traxair/picture_uploader/status?token=bfe44112-6ea2-4686-bbb8-8c08814edf4c \"Docker Repository on Quay\")](https://quay.io/repository/traxair/picture_uploader)|\n| post_process | [![Docker Repository on Quay](https://quay.io/repository/traxair/post_process/status?token=0099aa32-4bad-4bca-8b60-644508ab2890 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/post_process)|\n| store_tracklist | [![Docker Repository on Quay](https://quay.io/repository/traxair/store_tracklist/status?token=80be9f8d-22b2-4a80-bca0-1baa90f41f41 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/store_tracklist)|\n| tracklist_manager | [![Docker Repository on Quay](https://quay.io/repository/traxair/tracklist_manager/status?token=fddf2cbb-62fd-4e84-81f7-0705b50b8f25 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/tracklist_manager)|\n| traxitpro_video_creator | [![Docker Repository on Quay](https://quay.io/repository/traxair/traxitpro_video_creator/status?token=d9b42a71-c2ef-47f1-8b9d-b2ef2d254377 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/traxitpro_video_creator)|\n| url_resolver | [![Docker Repository on Quay](https://quay.io/repository/traxair/url_resolver/status?token=a14939a6-4b4a-4e3f-b264-fb1274dc3fb0 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/url_resolver)|\n| waveform_manager | [![Docker Repository on Quay](https://quay.io/repository/traxair/waveform_manager/status?token=84c2051c-1fc3-4c1b-ac99-a1aacdefa074 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/waveform_manager)|\n| fingerprint_from_blob_to_es | [![Docker Repository on Quay](https://quay.io/repository/traxair/fingerprint_from_blob_to_es/status?token=75a4ca61-4a22-42f4-8c65-ed80c6e0a7c0 \"Docker Repository on Quay\")](https://quay.io/repository/traxair/fingerprint_from_blob_to_es)|\n| fingerprint_from_shared_mem_to_blob | [![Docker Repository on Quay](https://quay.io/repository/traxair/fingerprint_from_shared_mem_to_blob/status?token=b74ec944-1d19-44c8-b4b9-12dfc782402d \"Docker Repository on Quay\")](https://quay.io/repository/traxair/fingerprint_from_shared_mem_to_blob)|\n| fingerprint_from_shared_mem_to_shared_mem | [![Docker Repository on Quay](https://quay.io/repository/traxair/fingerprint_from_shared_mem_to_shared_mem/status?token=dd845397-0650-4542-b05d-070d956fb5ec \"Docker Repository on Quay\")](https://quay.io/repository/traxair/fingerprint_from_shared_mem_to_shared_mem)|\n| traxit_services | [![Docker Repository on Quay](https://quay.io/repository/traxair/traxit_services/status?token=bdf895c8-f9f4-4a03-bdb9-52fe6089388e \"Docker Repository on Quay\")](https://quay.io/repository/traxair/traxit_services)|\n| semantic_labelling | [![Docker Repository on Quay](https://quay.io/repository/traxair/semantic_labelling/status?token=1023a313-2b31-4557-8a18-358697eb261f \"Docker Repository on Quay\")](https://quay.io/repository/traxair/semantic_labelling)|\n| ci-slave | [![Docker Repository on Quay](https://quay.io/repository/traxair/ci-slave/status?token=170d5226-dd11-46cc-b48b-7a0daac4f2dd \"Docker Repository on Quay\")](https://quay.io/repository/traxair/ci-slave)|\n| traxitpro | [![Docker Repository on Quay](https://quay.io/repository/traxair/traxitpro/status?token=f4a8543f-92a3-4446-9419-845322ba49aa \"Docker Repository on Quay\")](https://quay.io/repository/traxair/traxitpro)|\n| video_maker | [![Docker Repository on Quay](https://quay.io/repository/traxair/video_maker/status?token=4b1c97aa-5d5c-4fe7-b5f4-e9c0269d9b0f \"Docker Repository on Quay\")](https://quay.io/repository/traxair/video_maker)|\n\nconfig.json:\n\n```\n{\n  \"packages\": [\n    {\n      \"pkg_type\": \"whl\",\n      \"pkg_name\": \"traxit_core\",\n      \"test_type\": \"pytest\",\n      \"extra_args\": \"--runslow\",\n      \"exclude_dependencies_on\": [\"BLD\"],\n      \"type\": \"celery-microservice\",\n      \"components\": {\n        \"elasticsearch\":false,\n        \"mongo\":false,\n        \"redis\":false\n      }\n    },\n    ...\n  ]\n}\n```\n\nWhen you want to update the config.json you have to update the packages and sometimes the environment or integration test parts.\n\n##Environment\nSome tests need environment variables for running, you can indicate here this variables\n\n\n##Packages\n\nA package in the config.json is represent by a json object, who contains:\n    \n* pkg_type: Determine what is the package type to build. If not present, the package will not be built and we suppose there is no app directory.\n* pkg_name: the package name in the github root and the output package name\n* test_type: What is the test to execute for this package. If no present, no testing phase will be executed. This is useful for docker base images\n* extra_args (optional): extra arguments for pytest like runslow\n* exclude_dependencies_only_on_keywords (optional): if this set to `['BLD', 'CLN']` and **all** commits' message in a pull request *start with* `BLD:` or `CLN:` or even `BLD/CLN:`, then exclude this package's dependencies if they were not modified. This is case-sensitive.\n* type: Type is either a skeleton name ('celery-microservices') or the term 'skeleton' for skeletons.\n* components (optional): Determine what components is nececessary for the test (if it not indicate, all components are set to true)\n\npkg_type can be set to:\n* `microservice`: container docker\n* `deb`: debian package\n* `whl`: wheel package\n* `browser_extension`: firefox extension (xpi) and chrome extension (zip)\n\ntest_type can be set:\n* `make`: for code managed with a Makefile. The Makefile must have the `ci` method.\n* `pytest`: Deprecated soon.\n* `grunt`: Deprecated soon.\n* `gulp`:  Deprecated soon.\n\ncomponents have 3 keys:\n* elasticsearch: can be set to true or false\n* mongo: can be set to true or false\n* redis: can be set to true or false\nIf a component must be start for running test set it to true\n",
  "dockerfile": "FROM traxair/oracle-java7:latest\n\nRUN wget -O - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | apt-key add - && \\\n    echo \"deb http://packages.elasticsearch.org/logstash/1.4/debian stable main\" | tee -a /etc/apt/sources.list.d/elasticsearch.list && \\\n    apt-get update && apt-get install logstash && \\\n    apt-get clean && \\\n    apt-get purge\n\n\nADD conf/logstash.conf /etc/logstash/conf.d/logstash.conf\nADD conf/elasticsearch.yml /etc/logstash/elasticsearch.yml\n\nEXPOSE 5000\n\nENV JAVA_OPTS -Djava.io.tmpdir=/var/lib/logstash -Des.config=/etc/logstash/elasticsearch.yml\n\nENTRYPOINT [\"/opt/logstash/bin/logstash\", \"-f\" , \"/etc/logstash/conf.d/logstash.conf\"]",
  "dockerfile_json": {
    "add": [
      {
        "source": "conf/logstash.conf",
        "dest": "/etc/logstash/conf.d/logstash.conf"
      },
      {
        "source": "conf/elasticsearch.yml",
        "dest": "/etc/logstash/elasticsearch.yml"
      }
    ],
    "expose": [
      5000
    ],
    "volume": [],
    "run": [
      "wget -O - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | apt-key add - &&     echo \"deb http://packages.elasticsearch.org/logstash/1.4/debian stable main\" | tee -a /etc/apt/sources.list.d/elasticsearch.list &&     apt-get update && apt-get install logstash &&     apt-get clean &&     apt-get purge"
    ],
    "workdir": [],
    "from": "traxair/oracle-java7:latest",
    "env": {
      "JAVA_OPTS": "-Djava.io.tmpdir",
      "/var/lib/logstash": "-Des.config"
    },
    "entrypoint": "[\"/opt/logstash/bin/logstash\", \"-f\" , \"/etc/logstash/conf.d/logstash.conf\"]"
  },
  "source_repository_url": "git@github.com:Trax-air/TraxIT.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/Trax-air/TraxIT",
  "docker_repository": "traxair/logstash",
  "docker_image": "traxair/logstash",
  "parameters_schema": {
    "JAVA_OPTS": {
      "default": "-Djava.io.tmpdir",
      "type": "string",
      "mapping": "environment_variable"
    },
    "/var/lib/logstash": {
      "default": "-Des.config",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        5000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "traxair/logstash",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/traxair/logstash",
    "https://hub.docker.com/v2/repositories/traxair/logstash",
    "git@github.com:Trax-air/TraxIT.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Logging/Logstash"
  ],
  "info_url": "https://hub.docker.com/r/traxair/logstash",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}