{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/zenphu/httpd-ssh",
    "repository_url": "https://hub.docker.com/v2/repositories/zenphu/httpd-ssh",
    "tags_url": "https://hub.docker.com/v2/repositories/zenphu/httpd-ssh/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/zenphu/httpd-ssh/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/zenphu/httpd-ssh/autobuild",
    "user": "zenphu",
    "name": "httpd-ssh",
    "namespace": "zenphu",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 65,
    "last_updated": "2015-09-05T20:23:02.521391Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 128385201,
        "id": 88288,
        "repository": 121628,
        "creator": 151768,
        "last_updater": 151768,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "cloudcalvin/zenphu"
  },
  "name": "zenphu/httpd-ssh Docker container",
  "description": "",
  "readme": "# README\n\n## What is this\nThis is an extention of [eboraas's apache image](https://registry.hub.docker.com/u/eboraas/apache/) build from debian stable tag\nwith outgoing ssh client capability added to it.\n\nMainly intended to serve as the base image for my [ssh proxy radial wheel] setup from [SSH tunnel over http(s)](http://dag.wiee.rs/howto/ssh-http-tunneling/) so that you can ssh into DMZ that has ssh disabled, or alternatively ssh proxy to any given machine on the network using fancy FQDN names. \n\nIt adds ssh-client and proxytunnnel capability by default to the apache image.\nThis image does not contain any of the proxy setup but can be used as is for apache server with ssh out.(not in)\n\n##Usage\n- /var/www for your site content (e.g. using \"-v /home/jdoe/mysite/:/var/www/\")\n- /var/log/apache2, optionally, if you want to store logfiles visibly outside the container\n- /etc/ssl, optionally, if you wish to use SSL with real keys\n\n## A note on SSL ##\n\nAs per the defaults, Apache will use the bundled \"snakeoil\" key when serving SSL. Obviously this isn't sufficient or advisable for production, so you'll want to mount your real keys onto /etc/ssl/. If you name them \"certs/ssl-cert-snakeoil.pem\" and \"private/ssl-cert-snakeoil.key\", you'll be able to get by with the default config. Otherwise, you'll want to include a revised site definition. If you don't want to use SSL, you can avoid forwarding port 443 when launching the container (see below).\n\n## Simple Examples ##\n\nAssuming you have your content at /home/jdoe/mysite/, the below will be sufficient to serve it. Note that many Docker users encourage mounting data from a storage container, rather than directly from the filesyetem.\n\n- \"It works!\": `docker run -p 80:80 -p 443:443 -d eboraas/apache` and browse to the host's IP address using http or https\n- Serving actual content with SSL support: `docker run -p 80:80 -p 443:443 -v /home/jdoe/mysite/:/var/www/ -d eboraas/apache`\n- ... without SSL support: `docker -p 80:80 -v /home/jdoe/mysite/:/var/www/ -d eboraas/apache`\n- ... using non-standard ports: `docker -p 8080:80 -p 8443:443 -v /home/jdoe/mysite/:/var/www/ -d eboraas/apache`\n",
  "dockerfile": "# hhtpd-ssh Dockerfile for apache http server with ssh and proxytunnel\n#\nFROM eboraas/apache:stable\nMAINTAINER Calvin Maree <cloudcalvin@me.com>\n\n\n# install ssh client and proxytunnel\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tssh-client \\\n\t\tproxytunnel \\\n\t&& apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n#expose ports used for incomming http and ssl/ssh connection\nEXPOSE 80\nEXPOSE 443\n\nCMD [\"httpd\", \"-DFOREGROUND\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      80,
      443
    ],
    "volume": [],
    "run": [
      "apt-get update \t&& apt-get install -y --no-install-recommends \t\tssh-client \t\tproxytunnel \t&& apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
    ],
    "workdir": [],
    "from": "eboraas/apache:stable",
    "maintainer": "Calvin Maree <cloudcalvin@me.com>",
    "cmd": "[\"httpd\", \"-DFOREGROUND\"]"
  },
  "source_repository_url": "https://bitbucket.org/cloudcalvin/zenphu.git",
  "source_repository_type": "git",
  "source_repository_provider": "bitbucket",
  "source_repository_web_url": "https://bitbucket.org/cloudcalvin/zenphu",
  "docker_repository": "zenphu/httpd-ssh",
  "docker_image": "zenphu/httpd-ssh",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        80,
        443
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "zenphu/httpd-ssh",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/zenphu/httpd-ssh",
    "https://hub.docker.com/v2/repositories/zenphu/httpd-ssh",
    "https://bitbucket.org/cloudcalvin/zenphu.git"
  ],
  "labels": [
    "Docker"
  ],
  "info_url": "https://hub.docker.com/r/zenphu/httpd-ssh",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}