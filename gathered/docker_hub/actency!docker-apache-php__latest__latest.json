{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/actency/docker-apache-php",
    "repository_url": "https://hub.docker.com/v2/repositories/actency/docker-apache-php",
    "tags_url": "https://hub.docker.com/v2/repositories/actency/docker-apache-php/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/actency/docker-apache-php/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/actency/docker-apache-php/autobuild",
    "user": "actency",
    "name": "docker-apache-php",
    "namespace": "actency",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 2,
    "pull_count": 720,
    "last_updated": "2016-09-27T09:26:18.924600Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 441690769,
        "id": 2542084,
        "repository": 619467,
        "creator": 41665,
        "last_updater": 41665,
        "last_updated": "2016-09-27T09:26:18.437243Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "7.0",
        "full_size": 441460882,
        "id": 2542082,
        "repository": 619467,
        "creator": 41665,
        "last_updater": 41665,
        "last_updated": "2016-09-27T09:26:15.459197Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.6",
        "full_size": 423935270,
        "id": 2542095,
        "repository": 619467,
        "creator": 41665,
        "last_updater": 41665,
        "last_updated": "2016-09-02T18:02:55.134517Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.4",
        "full_size": 405563087,
        "id": 2542083,
        "repository": 619467,
        "creator": 41665,
        "last_updater": 41665,
        "last_updated": "2016-06-15T14:27:51.515669Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.5",
        "full_size": 407594017,
        "id": 2542114,
        "repository": 619467,
        "creator": 41665,
        "last_updater": 41665,
        "last_updated": "2016-06-15T12:52:45.229431Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.3",
        "full_size": 244282330,
        "id": 2542050,
        "repository": 619467,
        "creator": 41665,
        "last_updater": 41665,
        "last_updated": "2016-06-15T12:45:41.576184Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "Actency/docker-apache-php"
  },
  "name": "actency/docker-apache-php Docker container",
  "description": "Actency apache-php image with everything you need to work with Drupal. Check our other images.",
  "readme": "# About this repo\n\nThis is the Actency Docker **Drupal** optimized images for apache-php.\n\nAvailable tags are:\n- 7.0, latest ([7.0/Dockerfile](https://github.com/Actency/docker-apache-php/blob/master/7.0/Dockerfile))\n- 5.6 ([5.6/Dockerfile](https://github.com/Actency/docker-apache-php/tree/master/5.6/Dockerfile))\n- 5.5 ([5.5/Dockerfile](https://github.com/Actency/docker-apache-php/tree/master/5.5/Dockerfile))\n- 5.4 ([5.4/Dockerfile](https://github.com/Actency/docker-apache-php/tree/master/5.4/Dockerfile))\n- 5.3 ([5.3/Dockerfile](https://github.com/Actency/docker-apache-php/tree/master/5.3/Dockerfile))\n\nThe image basically contains:\n\n- All php libraries needed for Drupal (gd, mbstring, mcrypt, zip, soap, pdo_mysql, mysqli, xsl, opcache, calendar, intl)\n- Development tools for Drupal (xdebug, codesniffer, compass, less, node.js, grunt, gulp, composer, drush, phing, phpcpd, phpmetrics)\n- Much more...\n\n# Docker-compose\n## Use this docker-compose.yml to create a complete development environment using several Actency Docker images:\n\n    version: '2'\n    services:\n      # web with xdebug - actency images\n      web:\n        # actency/docker-apache-php available tags: latest, 7.0, 5.6, 5.5, 5.4, 5.3\n        image: actency/docker-apache-php:7.0\n        ports:\n          - \"80:80\"\n          - \"9000:9000\"\n        environment:\n          - SERVERNAME=example.local\n          - SERVERALIAS=example2.local *.example2.local\n          - DOCUMENTROOT=htdocs\n        volumes:\n          - /home/docker/projets/example/:/var/www/html/\n          - /home/docker/.ssh/:/var/www/.ssh/\n        links:\n          - database:mysql\n          - mailhog\n          - solr\n          - redis\n          - tika\n        tty: true\n        # Set logs driver to fluentd only if you enable the logs container\n        # Add this logging section to any other container if you want the logs to be sent in es-fluentd-kibana container\n        logging:\n          driver: fluentd\n          options:\n            fluentd-address: \"127.0.0.1:24224\"\n\n      # logs container - actency images\n      logs:\n        image: actency/docker-es-fluentd-kibana\n        ports:\n          - \"8000:5601\" # browse this port to see the logs in kibana\n          - \"9200:9200\"\n          - \"9300:9300\"\n          - \"24224:24224\"\n\n      # database container - actency images\n      database:\n        # actency/docker-mysql available tags: latest, 5.7, 5.6, 5.5\n        image: actency/docker-mysql:5.7\n        ports:\n          - \"3306:3306\"\n        environment:\n          - MYSQL_ROOT_PASSWORD=mysqlroot\n          - MYSQL_DATABASE=example\n          - MYSQL_USER=example_user\n          - MYSQL_PASSWORD=mysqlpwd\n\n      # phpmyadmin container - actency images\n      phpmyadmin:\n        image: actency/docker-phpmyadmin\n        ports:\n          - \"8010:80\"\n        environment:\n          - MYSQL_ROOT_PASSWORD=mysqlroot\n          - UPLOAD_SIZE=1G\n        links:\n          - database:mysql\n\n      # mailhog container - official images\n      mailhog:\n        image: mailhog/mailhog\n        ports:\n          - \"1025:1025\"\n          - \"8025:8025\"\n\n      # solr container - actency images\n      solr:\n        # actency/docker-solr available tags: latest, 6.2, 6.1, 6.0, 5.5, 5.4, 5.3, 5.2, 5.1, 5.0, 4.10, 3.6\n        image: actency/docker-solr:6.2\n        ports:\n          - \"8080:8983\"\n\n      # redis container - official images\n      redis:\n        image: redis:latest\n        ports:\n          - \"6379\"\n\n      # phpRedisAdmin container - actency images\n      phpredisadmin:\n        image: actency/docker-phpredisadmin\n        ports:\n          - \"9900:80\"\n        environment:\n          - REDIS_1_HOST=redis\n        links:\n          - redis\n\n      # Tika server container - actency images\n      tika:\n        image: actency/docker-tika-server\n        ports:\n          - \"9998:9998\"\n\n    # ##### PROFILING SECTION - EXPERIMENTAL #####\n    #   # Uncomment this block to enable 3 containers for profiling.\n    #   # xhprof data will be stored in mongodb and available through the xhgui interface.\n    #\n    #   # web with xhprof - actency images\n    #   web-prof:\n    #     # actency/docker-apache-php-xhprof available tags: latest, 7.0, 5.6, 5.5, 5.4\n    #     image: actency/docker-apache-php-xhprof:7.0\n    #     ports:\n    #       - \"8050:80\"\n    #     environment:\n    #       - SERVERNAME=example.local\n    #       - SERVERALIAS=example2.local *.example2.local\n    #       - DOCUMENTROOT=htdocs\n    #     volumes:\n    #       - /home/docker/projets/example/:/var/www/html/\n    #       - /home/docker/.ssh/:/var/www/.ssh/\n    #     links:\n    #       - database:mysql\n    #       - mailhog\n    #       - solr\n    #       - redis\n    #       - tika\n    #       - mongo\n    #     tty: true\n    #\n    #   # mongo container - official images\n    #   mongo:\n    #     image: mongo\n    #     ports:\n    #       - \"27017:27017\"\n    #\n    #   # xhgui container - actency image\n    #   xhgui:\n    #     image: actency/docker-xhgui\n    #     ports:\n    #       - \"8040:80\"\n    #     links:\n    #       - mongo\n    # ##### END OF PROFILING SECTION #####\n\n\n[Docker Hub page](https://hub.docker.com/r/actency/docker-apache-php/)\n",
  "dockerfile": "# Pull base image.\nFROM php:7.0.11-apache\nCOPY config/php.ini /usr/local/etc/php/\n\nRUN apt-get clean && apt-get update && apt-get install --fix-missing wget -y\nRUN echo \"deb http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list\nRUN cd /tmp && wget https://www.dotdeb.org/dotdeb.gpg && apt-key add dotdeb.gpg\n\nRUN apt-get clean && apt-get update && apt-get install --fix-missing -y \\\n  ruby-dev \\\n  rubygems \\\n  imagemagick \\\n  graphviz \\\n  sudo \\\n  git \\\n  vim \\\n  php7.0-dev \\\n  memcached \\\n  libmemcached-tools \\\n  libmemcached-dev \\\n  libpng12-dev \\\n  libjpeg62-turbo-dev \\\n  libmcrypt-dev \\\n  libxml2-dev \\\n  libxslt1-dev \\\n  mysql-client \\\n  php5-mysqlnd \\\n  zip \\\n  wget \\\n  linux-libc-dev \\\n  libyaml-dev \\\n  apt-transport-https \\\n  zlib1g-dev \\\n  libicu-dev \\\n  libpq-dev\n\n# postgresql-client-9.5\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - && echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" >> /etc/apt/sources.list && apt-get update && apt-get install -y postgresql-client-9.5\n\n# Install memcached for PHP 7\nRUN cd /tmp && git clone https://github.com/php-memcached-dev/php-memcached.git\nRUN cd /tmp/php-memcached && sudo git checkout php7 && phpize && ./configure --disable-memcached-sasl && make && make install\nRUN touch /usr/local/etc/php/conf.d/memcached.ini &&\\\n echo \"extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/memcached.so\" >> /usr/local/etc/php/conf.d/memcached.ini\n\nCOPY docker-php-ext-install /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-install\nRUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n&& docker-php-ext-install \\\n  gd \\\n  mbstring \\\n  mcrypt \\\n  zip \\\n  soap \\\n  pdo_mysql \\\n  mysqli \\\n  xsl \\\n  opcache \\\n  calendar \\\n  intl \\\n  exif \\\n  pgsql \\\n  pdo_pgsql \\\n  ftp\n\nRUN pecl install yaml-2.0.0 && echo \"extension=yaml.so\" > /usr/local/etc/php/conf.d/ext-yaml.ini\n\nCOPY core/memcached.conf /etc/memcached.conf\n\n# SASS and Compass installation\nRUN gem install compass\n\n# Installation node.js\nRUN curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash -\nRUN DEBIAN_FRONTEND=noninteractive apt-get -yq --no-install-recommends install -y nodejs\n\n# Installation of LESS\nRUN npm update -g npm && \\\nnpm install -g less && npm install -g less-plugin-clean-css\n\n# Installation of Grunt\nRUN npm install -g grunt-cli\n\n# Installation of Gulp\nRUN npm install -g gulp\n\n# Installation of Bower\nRUN npm install -g bower\n\n# Installation of Composer\nRUN cd /usr/src && curl -sS http://getcomposer.org/installer | php\nRUN cd /usr/src && mv composer.phar /usr/bin/composer\n\n# Installation of drush\nRUN git clone https://github.com/drush-ops/drush.git /usr/local/src/drush\nRUN cd /usr/local/src/drush && git checkout 8.1.2\nRUN ln -s /usr/local/src/drush/drush /usr/bin/drush\nRUN cd /usr/local/src/drush && composer update && composer install\n\n# Install xdebug. We need at least 2.4 version to have PHP 7 support.\nRUN cd /tmp/ && wget http://xdebug.org/files/xdebug-2.4.0.tgz && tar -xvzf xdebug-2.4.0.tgz && cd xdebug-2.4.0/ && phpize && ./configure --enable-xdebug --with-php-config=/usr/local/bin/php-config && make && make install\nRUN cd /tmp/xdebug-2.4.0 && cp modules/xdebug.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/\nRUN echo 'zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20151012/xdebug.so' >> /usr/local/etc/php/php.ini\nRUN touch /usr/local/etc/php/conf.d/xdebug.ini &&\\\n  echo xdebug.remote_enable=1 >> /usr/local/etc/php/conf.d/xdebug.ini &&\\\n  echo xdebug.remote_autostart=0 >> /usr/local/etc/php/conf.d/xdebug.ini &&\\\n  echo xdebug.remote_connect_back=1 >> /usr/local/etc/php/conf.d/xdebug.ini &&\\\n  echo xdebug.remote_port=9000 >> /usr/local/etc/php/conf.d/xdebug.ini &&\\\n  echo xdebug.remote_log=/tmp/php5-xdebug.log >> /usr/local/etc/php/conf.d/xdebug.ini\n\nRUN rm -rf /var/www/html && \\\n  mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html && \\\n  chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n\n# Installation of PHP_CodeSniffer with Drupal coding standards.\n# See https://www.drupal.org/node/1419988#coder-composer\nRUN composer global require drupal/coder\nRUN ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin\nRUN ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin\nRUN phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer\n\n# installation of ssmtp\nRUN DEBIAN_FRONTEND=noninteractive apt-get install --fix-missing -y ssmtp && rm -r /var/lib/apt/lists/*\nADD core/ssmtp.conf /etc/ssmtp/ssmtp.conf\nADD core/php-smtp.ini /usr/local/etc/php/conf.d/php-smtp.ini\n\nCOPY config/apache2.conf /etc/apache2\nCOPY core/envvars /etc/apache2\nCOPY core/other-vhosts-access-log.conf /etc/apache2/conf-enabled/\nRUN rm /etc/apache2/sites-enabled/000-default.conf\n\n# Installation of Opcode cache\nRUN ( \\\n  echo \"opcache.memory_consumption=128\"; \\\n  echo \"opcache.interned_strings_buffer=8\"; \\\n  echo \"opcache.max_accelerated_files=4000\"; \\\n  echo \"opcache.revalidate_freq=5\"; \\\n  echo \"opcache.fast_shutdown=1\"; \\\n  echo \"opcache.enable_cli=1\"; \\\n  ) > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nRUN a2enmod rewrite expires && service apache2 restart\n\n# Install Drupal Console for Drupal 8\nRUN curl https://drupalconsole.com/installer -L -o drupal.phar && mv drupal.phar /usr/local/bin/drupal && chmod +x /usr/local/bin/drupal\n\n# Our apache volume\nVOLUME /var/www/html\n\n# create directory for ssh keys\nRUN mkdir /var/www/.ssh/\nRUN chown -R www-data:www-data /var/www/\nRUN chmod -R 600 /var/www/.ssh/\n\n# Set timezone to Europe/Paris\nRUN echo \"Europe/Paris\" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata\n\n# ADD BASHRC CONFIG\nCOPY config/bashrc /root/\nRUN mv /root/bashrc /root/.bashrc\n\n# Expose 80 for apache, 9000 for xdebug\nEXPOSE 80 9000\n\n# Set a custom entrypoint.\nCOPY core/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "core/ssmtp.conf",
        "dest": "/etc/ssmtp/ssmtp.conf"
      },
      {
        "source": "core/php-smtp.ini",
        "dest": "/usr/local/etc/php/conf.d/php-smtp.ini"
      }
    ],
    "expose": [
      80
    ],
    "volume": [
      "/var/www/html"
    ],
    "run": [
      "apt-get clean && apt-get update && apt-get install --fix-missing wget -y",
      "echo \"deb http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list",
      "echo \"deb-src http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list",
      "cd /tmp && wget https://www.dotdeb.org/dotdeb.gpg && apt-key add dotdeb.gpg",
      "apt-get clean && apt-get update && apt-get install --fix-missing -y   ruby-dev   rubygems   imagemagick   graphviz   sudo   git   vim   php7.0-dev   memcached   libmemcached-tools   libmemcached-dev   libpng12-dev   libjpeg62-turbo-dev   libmcrypt-dev   libxml2-dev   libxslt1-dev   mysql-client   php5-mysqlnd   zip   wget   linux-libc-dev   libyaml-dev   apt-transport-https   zlib1g-dev   libicu-dev   libpq-dev",
      "wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - && echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" >> /etc/apt/sources.list && apt-get update && apt-get install -y postgresql-client-9.5",
      "cd /tmp && git clone https://github.com/php-memcached-dev/php-memcached.git",
      "cd /tmp/php-memcached && sudo git checkout php7 && phpize && ./configure --disable-memcached-sasl && make && make install",
      "touch /usr/local/etc/php/conf.d/memcached.ini && echo \"extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/memcached.so\" >> /usr/local/etc/php/conf.d/memcached.ini",
      "chmod +x /usr/local/bin/docker-php-ext-install",
      "docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ && docker-php-ext-install   gd   mbstring   mcrypt   zip   soap   pdo_mysql   mysqli   xsl   opcache   calendar   intl   exif   pgsql   pdo_pgsql   ftp",
      "pecl install yaml-2.0.0 && echo \"extension=yaml.so\" > /usr/local/etc/php/conf.d/ext-yaml.ini",
      "gem install compass",
      "curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash -",
      "DEBIAN_FRONTEND=noninteractive apt-get -yq --no-install-recommends install -y nodejs",
      "npm update -g npm && npm install -g less && npm install -g less-plugin-clean-css",
      "npm install -g grunt-cli",
      "npm install -g gulp",
      "npm install -g bower",
      "cd /usr/src && curl -sS http://getcomposer.org/installer | php",
      "cd /usr/src && mv composer.phar /usr/bin/composer",
      "git clone https://github.com/drush-ops/drush.git /usr/local/src/drush",
      "cd /usr/local/src/drush && git checkout 8.1.2",
      "ln -s /usr/local/src/drush/drush /usr/bin/drush",
      "cd /usr/local/src/drush && composer update && composer install",
      "cd /tmp/ && wget http://xdebug.org/files/xdebug-2.4.0.tgz && tar -xvzf xdebug-2.4.0.tgz && cd xdebug-2.4.0/ && phpize && ./configure --enable-xdebug --with-php-config=/usr/local/bin/php-config && make && make install",
      "cd /tmp/xdebug-2.4.0 && cp modules/xdebug.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/",
      "echo 'zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20151012/xdebug.so' >> /usr/local/etc/php/php.ini",
      "touch /usr/local/etc/php/conf.d/xdebug.ini &&  echo xdebug.remote_enable=1 >> /usr/local/etc/php/conf.d/xdebug.ini &&  echo xdebug.remote_autostart=0 >> /usr/local/etc/php/conf.d/xdebug.ini &&  echo xdebug.remote_connect_back=1 >> /usr/local/etc/php/conf.d/xdebug.ini &&  echo xdebug.remote_port=9000 >> /usr/local/etc/php/conf.d/xdebug.ini &&  echo xdebug.remote_log=/tmp/php5-xdebug.log >> /usr/local/etc/php/conf.d/xdebug.ini",
      "rm -rf /var/www/html &&   mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html &&   chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html",
      "composer global require drupal/coder",
      "ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin",
      "ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin",
      "phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer",
      "DEBIAN_FRONTEND=noninteractive apt-get install --fix-missing -y ssmtp && rm -r /var/lib/apt/lists/*",
      "rm /etc/apache2/sites-enabled/000-default.conf",
      "(   echo \"opcache.memory_consumption=128\";   echo \"opcache.interned_strings_buffer=8\";   echo \"opcache.max_accelerated_files=4000\";   echo \"opcache.revalidate_freq=5\";   echo \"opcache.fast_shutdown=1\";   echo \"opcache.enable_cli=1\";   ) > /usr/local/etc/php/conf.d/opcache-recommended.ini",
      "a2enmod rewrite expires && service apache2 restart",
      "curl https://drupalconsole.com/installer -L -o drupal.phar && mv drupal.phar /usr/local/bin/drupal && chmod +x /usr/local/bin/drupal",
      "mkdir /var/www/.ssh/",
      "chown -R www-data:www-data /var/www/",
      "chmod -R 600 /var/www/.ssh/",
      "echo \"Europe/Paris\" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata",
      "mv /root/bashrc /root/.bashrc",
      "chmod +x /docker-entrypoint.sh"
    ],
    "workdir": [],
    "from": "php:7.0.11-apache",
    "copy": "core/docker-entrypoint.sh /",
    "entrypoint": "[\"/docker-entrypoint.sh\"]"
  },
  "source_repository_url": "https://github.com/Actency/docker-apache-php.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/Actency/docker-apache-php",
  "docker_repository": "actency/docker-apache-php",
  "docker_image": "actency/docker-apache-php",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "actency/docker-apache-php",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/actency/docker-apache-php",
    "https://hub.docker.com/v2/repositories/actency/docker-apache-php",
    "https://github.com/Actency/docker-apache-php.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Mode/Executable/Image",
    "Type/Middleware/Runtime/PHP",
    "Type/Middleware/Web Server/Apache HTTP Server"
  ],
  "info_url": "https://hub.docker.com/r/actency/docker-apache-php",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}