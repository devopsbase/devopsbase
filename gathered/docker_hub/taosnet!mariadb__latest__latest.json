{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/taosnet/mariadb",
    "repository_url": "https://hub.docker.com/v2/repositories/taosnet/mariadb",
    "tags_url": "https://hub.docker.com/v2/repositories/taosnet/mariadb/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/taosnet/mariadb/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/taosnet/mariadb/autobuild",
    "user": "taosnet",
    "name": "mariadb",
    "namespace": "taosnet",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 31,
    "last_updated": "2016-09-23T16:46:36.776817Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 50530589,
        "id": 4490126,
        "repository": 876417,
        "creator": 248832,
        "last_updater": 248832,
        "last_updated": "2016-09-23T16:46:36.327358Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "10.1.14",
        "full_size": 50530617,
        "id": 4490106,
        "repository": 876417,
        "creator": 248832,
        "last_updater": 248832,
        "last_updated": "2016-09-23T16:45:30.780375Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "taosnet/mariadb"
  },
  "name": "taosnet/mariadb Docker container",
  "description": "Alpine Linux base mariadb.",
  "readme": "## Description\n\nAlpine linux based mariadb image.\n\n## Usage\n\n### Start a Server Instance\n\nBasic usage is simple, use the image as if you are running mysqld_safe.\n```\ndocker run --name=mariadb taosnet/mariadb\n```\nIn this form, the root password will be set to a randomly generated password that will be output to stdout on the container. You can change the password by running:\n```\ndocker exec -ti mariadb /usr/bin/mysqladmin -h localhost -p'randomPassword' password 'newPassword'\n```\n\nAlternatively you can set the root password with an environmental variable **MYSQL_ROOT_PASSWORD** on startup:\n```\ndocker run --name=mariadb -e MYSQL_ROOT_PASSWORD='myPassword' taosnet/mariadb\n```\n\n### Connect From Another Container\n\nYou can connect to your server instance by linking the server container to your app:\n```\ndocker run --name=myapp --link mariadb:db taosnet/myapp\n```\n\n## Environment Variables\n\n#### MYSQL_ROOT_PASSWORD\n\nThis variable specifies the root password for the database. If not specified, a random password will be generated as the root password and output to stdout.\n\n#### MYSQL_DATABASE\n\nIf present, intialize a database with the name given in this variable.\n\n#### MYSQL_USER\n\nDatabase user to create with access to the initialized database. Both **MYSQL_DATABASE** and **MYSQL_PASSWORD** must be present in addition to **MYSQL_USER** for the user to be created. If either of them are missing, this variable is ignored. If **MYSQL_HOST** is specified, then the user's access is restricted to that host. Otherwise the user's access is restricted to localhost.\n\n#### MYSQL_PASSWORD\n\nThe database password for the user specified by **MYSQL_USER**. See conditions above. If the conditions are not met, this variable is ignored.\n\n#### MYSQL_HOST\n\nHost to restrict **MYSQL_USER** to. If **MYSQL_USER** is not create, this variable is ignored.\n\n## Initializing With Data\n\nYou can initialize the container with data located in /docker-entrypoint-initdb.d. The files should have the extension **.sql** and contain valid SQL statements. The files are run in alphabetical order as determined by the ls command.\n",
  "dockerfile": "FROM alpine:3.4\nMAINTAINER Chris Batis <clbatis@taosnet.com>\n\nRUN apk update && \\\n        apk add mariadb mariadb-client && \\\n        rm -rf /var/cache/apk/* && \\\n\tmkdir /docker-entrypoint-initdb.d\n\nEXPOSE 3306\n\nCOPY run.sh /run.sh\nENTRYPOINT [\"/run.sh\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      3306
    ],
    "volume": [],
    "run": [
      "apk update &&         apk add mariadb mariadb-client &&         rm -rf /var/cache/apk/* && \tmkdir /docker-entrypoint-initdb.d"
    ],
    "workdir": [],
    "from": "alpine:3.4",
    "maintainer": "Chris Batis <clbatis@taosnet.com>",
    "copy": "run.sh /run.sh",
    "entrypoint": "[\"/run.sh\"]"
  },
  "source_repository_url": "https://github.com/taosnet/mariadb.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/taosnet/mariadb",
  "docker_repository": "taosnet/mariadb",
  "docker_image": "taosnet/mariadb",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        3306
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "taosnet/mariadb",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/taosnet/mariadb",
    "https://hub.docker.com/v2/repositories/taosnet/mariadb",
    "https://github.com/taosnet/mariadb.git"
  ],
  "labels": [
    "Docker",
    "Type/Infrastructure/Operating System/Linux",
    "Type/Middleware/Data Store/Relational/MariaDB"
  ],
  "info_url": "https://hub.docker.com/r/taosnet/mariadb",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}