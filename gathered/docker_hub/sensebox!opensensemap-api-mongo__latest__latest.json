{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/sensebox/opensensemap-api-mongo",
    "repository_url": "https://hub.docker.com/v2/repositories/sensebox/opensensemap-api-mongo",
    "tags_url": "https://hub.docker.com/v2/repositories/sensebox/opensensemap-api-mongo/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/sensebox/opensensemap-api-mongo/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/sensebox/opensensemap-api-mongo/autobuild",
    "user": "sensebox",
    "name": "opensensemap-api-mongo",
    "namespace": "sensebox",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 99,
    "last_updated": "2016-10-13T14:43:54.102149Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 123436692,
        "id": 3719217,
        "repository": 784551,
        "creator": 895372,
        "last_updater": 895372,
        "last_updated": "2016-10-13T14:43:53.677740Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "sensebox/openSenseMap-API"
  },
  "name": "sensebox/opensensemap-api-mongo Docker container",
  "description": "mongodb for the opensensemap",
  "readme": "openSenseMap-API\n================\n\n[![Join the chat at https://gitter.im/sensebox/openSenseMap-API](https://badges.gitter.im/sensebox/openSenseMap-API.svg)](https://gitter.im/sensebox/openSenseMap-API?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\nThis is the back-end for [openSenseMap](http://opensensemap.org).\n\nopenSenseMap is part of the [senseBox](http//sensebox.de) project.\nTo get more information about openSenseBox and senseBox visit the before mentioned links or have a look at this [video](https://www.youtube.com/watch?v=uTOWYa42_rI).\n\nThe API has been built as part of my bachelor thesis at the ifgi (Institute for Geoinformatics, WWU MÃ¼nster).\n\n### Technologies\n\n* [node.js]\n* [MongoDB]\n\n### Install dependencies (Ubuntu)\n\nIt is assumed that you have installed node.js (developed using 0.10.26).\n\nInstall MongoDB according to [the manual](http://docs.mongodb.org/manual/installation/) and create the database \"OSeM-api\".\n\nThe database schema will be created automatically upon data insertion and looks like this:\n```\nDatabase \"OSeM-api\"\n  - Collections\n    - boxes\n    - measurements\n    - users\n```\n\n### Run for Development & Production\n\nOpen the configuration file ```config/index.js``` and change settings accordingly.\n\n|Variable name             | Explanation|\n|--------------------------|---------------|\n|```exports.targetFolder```|The folder where a generated Arduino sketch for each box will be saved upon registration|\n|```exports.imageFolder``` |The folder where banner images for boxes are stored, should be in your htdocs (make sure read and write permissions are correct)|\n|```exports.dbuser```      |MongoDB database user, leave empty if not configured|\n|```exports.dbuserpass```  |MongoDB database password, leave empty if not configured|\n\nAfter that, run the following command to install dependencies:\n\n```npm install```\n\nThen start the API process, press CTRL+C to stop:\n\n```\nnode app.js\n```\n\n**or with Docker**\n- install docker and docker-compose\n- run `docker-compose up`\n\n### Create the JSDoc pages\n\nTo create the documentation you need [apidocjs](http://apidocjs.com/) and run:\n```\napidoc -e node_modules/\n```\n\nTo push a new Version to gh-pages run:\n```\ngit subtree push --prefix doc/ origin gh-pages\n```\n\n### License\n\n[MIT](license.md) - Matthias Pfeil 2015\n\n[node.js]:http://nodejs.org/\n[MongoDB]:http://www.mongodb.com/\n",
  "dockerfile": "FROM mongo:3.2\n\nCOPY docker-entrypoint.sh /entrypoint.sh\nCOPY set_mongodb_password.sh /set_mongodb_password.sh\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": [],
    "from": "mongo:3.2",
    "copy": "set_mongodb_password.sh /set_mongodb_password.sh"
  },
  "source_repository_url": "https://github.com/sensebox/openSenseMap-API.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/sensebox/openSenseMap-API",
  "docker_repository": "sensebox/opensensemap-api-mongo",
  "docker_image": "sensebox/opensensemap-api-mongo",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "sensebox/opensensemap-api-mongo",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/sensebox/opensensemap-api-mongo",
    "https://hub.docker.com/v2/repositories/sensebox/opensensemap-api-mongo",
    "https://github.com/sensebox/openSenseMap-API.git"
  ],
  "labels": [
    "Docker",
    "Mode/API",
    "Type/Middleware/Data Store/Document-oriented/MongoDB"
  ],
  "info_url": "https://hub.docker.com/r/sensebox/opensensemap-api-mongo",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}