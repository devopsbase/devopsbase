{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/million12/nginx-php",
    "repository_url": "https://hub.docker.com/v2/repositories/million12/nginx-php",
    "tags_url": "https://hub.docker.com/v2/repositories/million12/nginx-php/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/million12/nginx-php/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/million12/nginx-php/autobuild",
    "user": "million12",
    "name": "nginx-php",
    "namespace": "million12",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 76,
    "pull_count": 18047,
    "last_updated": "2016-10-09T13:02:44.380710Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 450728113,
        "id": 43848,
        "repository": 54871,
        "creator": 22393,
        "last_updater": 22393,
        "last_updated": "2016-10-09T13:02:43.721399Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "php70",
        "full_size": 402407824,
        "id": 1594892,
        "repository": 54871,
        "creator": 412911,
        "last_updater": 22393,
        "last_updated": "2016-10-09T13:01:54.190134Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "php56",
        "full_size": 339402209,
        "id": 1594726,
        "repository": 54871,
        "creator": 412911,
        "last_updater": 22393,
        "last_updated": "2016-09-05T11:18:19.928800Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "php55",
        "full_size": 295057804,
        "id": 1594738,
        "repository": 54871,
        "creator": 412911,
        "last_updater": 22393,
        "last_updated": "2016-09-05T10:36:23.223388Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "php70-test",
        "full_size": 316358829,
        "id": 1961355,
        "repository": 54871,
        "creator": 22393,
        "last_updater": 22393,
        "last_updated": "2016-02-10T01:53:16.903959Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "php-70",
        "full_size": 325578823,
        "id": 43845,
        "repository": 54871,
        "creator": 22393,
        "last_updater": 59891,
        "last_updated": "2015-12-19T14:22:13.727104Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "php-56",
        "full_size": 295368516,
        "id": 1593227,
        "repository": 54871,
        "creator": 412911,
        "last_updater": 59891,
        "last_updated": "2015-12-19T14:18:47.611699Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "php-55",
        "full_size": 235104645,
        "id": 43842,
        "repository": 54871,
        "creator": 22393,
        "last_updater": 59891,
        "last_updated": "2015-12-19T14:03:06.679514Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "million12/docker-nginx-php"
  },
  "name": "million12/nginx-php Docker container",
  "description": "Nginx + PHP-FPM 5.5, 5.6, 7.0 (NG), CentOS-7 based",
  "readme": "# Nginx + PHP-FPM docker container\n\nThis is a [million12/nginx-php](https://registry.hub.docker.com/u/million12/nginx-php/)\ndocker container with Nginx + PHP-FPM combo.\n\nFor different PHP versions, look up different branches of this repository.  \nOn Docker Hub you can find them under different tags:  \n* `million12/nginx-php:latest` - PHP 7.0 # built from `master` branch [![Circle CI](https://circleci.com/gh/million12/docker-nginx-php.svg?style=svg)](https://circleci.com/gh/million12/docker-nginx-php)\n* `million12/nginx-php:php70` - PHP 7.0 # built from `php70` branch [![Circle CI](https://circleci.com/gh/million12/docker-nginx-php/tree/php70.svg?style=svg)](https://circleci.com/gh/million12/docker-nginx-php/tree/php70)\n* `million12/nginx-php:php56` - PHP 5.6 # built from `php56` branch [![Circle CI](https://circleci.com/gh/million12/docker-nginx-php/tree/php56.svg?style=svg)](https://circleci.com/gh/million12/docker-nginx-php/tree/php56)\n* `million12/nginx-php:php55` - PHP 5.5 # built from `php55` branch [![Circle CI](https://circleci.com/gh/million12/docker-nginx-php/tree/php55.svg?style=svg)](https://circleci.com/gh/million12/docker-nginx-php/tree/php55)\n\n\n# Things included:\n\n#### - Nginx with HTTP/2 support\n\nThis image is based on [million12/nginx](https://github.com/million12/docker-nginx).  \n**Default vhost** is configured and served from `/data/www/default`. Add .php file \nto that location to have it executed with PHP.\n\n#### - PHP-FPM\n\n**PHP 7.0** is up & running for default vhost. As soon as .php file is requested, the request will be redirected to PHP upstream. See [/etc/nginx/conf.d/php-location.conf](container-files/etc/nginx/conf.d/php-location.conf).\n\nFile [/etc/nginx/fastcgi_params](container-files/etc/nginx/fastcgi_params) has improved configuration to avoid repeating same config options for each vhost. This config works well with most PHP applications (e.g. Symfony2, TYPO3, Wordpress, Drupal).\n\n#### - PHP basic tuning\nCustom PHP.ini directives are inside [/etc/php.d](container-files/etc/php.d/).\n\n#### - Common dev tools for web app development\n* git 2.x\n* Ruby 2.0, Bundler\n* NodeJS and NPM\n* NPM packages like gulp, grunt, bower, browser-sync\n\n\n# Directory structure inside image\n```\n/data/www # meant to contain web content\n/data/www/default # root directory for the default vhost\n/data/logs/ # Nginx, PHP logs\n/data/tmp/php/ # PHP temp directories\n```\n\n# Error logging\n\nPHP errors are forwarded to stderr (by leaving empty value for INI error_log setting) and captured by supervisor. You can see them easily via `docker logs [container]`. In addition, they are captured by parent Nginx worker and logged to `/data/logs/nginx-error.log'. PHP-FPM logs are available in `/data/logs/php-fpm*.log` files.\n\n##### - pre-defined FastCGI cache for PHP backend\n\nIt's not used until specified in location {} context. In your vhost config you can add something like this:  \n```\nlocation ~ \\.php$ {\n    # Your standard directives...\n    include               fastcgi_params;\n    fastcgi_pass          php-upstream;\n\n    # Use the configured cache (adjust fastcgi_cache_valid to your needs):\n    fastcgi_cache         APPCACHE;\n    fastcgi_cache_valid   60m;\n}\n```\n\n\n# Usage\n\n```\ndocker run -d -v /data --name=web-data busybox\ndocker run -d --volumes-from=web-data -p=80:80 --name=web million12/nginx-php\n```\n\nAfter that you can see the default vhost content (something like: '*default vhost created on [timestamp]*') when you open http://CONTAINER_IP:PORT/ in the browser.\n\nYou can replace `/data/www/default/index.html` with `index.php` and, for instance, phpinfo() to inspect installed PHP setup. You can do that using separate container which mounts /data volume (`docker run -ti --volumes-from=web-data --rm busybox`) and adding the file to the above location.\n\n\n# Customise\n\nThere are several ways to customise this container, both in a runtime or when building new image on top of it:\n\n* See [million12:nginx](https://github.com/million12/docker-nginx) for info regarding Nginx customisation, adding new vhosts etc.\n* Override `/etc/nginx/fastcgi_params` if needed.\n* Add custom PHP `*.ini` files to `/etc/php.d/`.\n* Add own PHP-FPM .conf files to `/data/conf/php-fpm-www-*.conf` to modify PHP-FPM www pool.\n\n## ENV variables\n\n**NGINX_GENERATE_DEFAULT_VHOST**  \nDefault: `NGINX_GENERATE_DEFAULT_VHOST=false`  \nExample: `NGINX_GENERATE_DEFAULT_VHOST=true`  \nWhen set to `true`, dummy default (*catch-all*) Nginx vhost config file will be generated in `/etc/nginx/hosts.d/default.conf`. In addition, default index.php file will be created displaying results of `phpinfo()`. **Caveat**: this causes security leak because you expose detailed PHP configuration - remember to remove it on production!\nUse it if you need it, for example to test that your Nginx is working correctly AND/OR if you don't create default vhost config for your app but you still want some dummy catch-all vhost.\n\n**STATUS_PAGE_ALLOWED_IP**  \nDefault: `STATUS_PAGE_ALLOWED_IP=127.0.0.1`  \nExample: `STATUS_PAGE_ALLOWED_IP=10.1.1.0/16`  \nConfigure ip address that would be allowed to see PHP-FPM status page on `/fpm_status` URL.\n\n# Authors\n\nAuthor: ryzy (<marcin@m12.io>)  \nAuthor: pozgo (<linux@ozgo.info>)\n\n---\n\n**Sponsored by [Prototype Brewery](http://prototypebrewery.io/)** - the new prototyping tool for building highly-interactive prototypes of your website or web app. Built on top of [Neos CMS](https://www.neos.io/) and [Zurb Foundation](http://foundation.zurb.com/) framework.\n",
  "dockerfile": "#\n# million12/nginx-php\n#\nFROM million12/nginx:latest\nMAINTAINER Marcin Ryzycki <marcin@m12.io>\n\nENV \\\n  NVM_DIR=/usr/local/nvm \\\n  NODE_VERSION=6.3.0 \\\n  STATUS_PAGE_ALLOWED_IP=127.0.0.1\n\n# Add install scripts needed by the next RUN command\nADD container-files/config/install* /config/\nADD container-files/etc/yum.repos.d/* /etc/yum.repos.d/\n\nRUN \\\n  yum update -y && \\\n  `# Install some basic web-related tools...` \\\n  yum install -y wget patch tar bzip2 unzip openssh-clients MariaDB-client && \\\n\n  `# Install PHP 7.0 from Remi YUM repository...` \\\n  rpm -Uvh http://rpms.remirepo.net/enterprise/remi-release-7.rpm && \\\n\n  yum install -y \\\n    php70-php \\\n    php70-php-bcmath \\\n    php70-php-cli \\\n    php70-php-common \\\n    php70-php-devel \\\n    php70-php-fpm \\\n    php70-php-gd \\\n    php70-php-gmp \\\n    php70-php-intl \\\n    php70-php-json \\\n    php70-php-mbstring \\\n    php70-php-mcrypt \\\n    php70-php-mysqlnd \\\n    php70-php-opcache \\\n    php70-php-pdo \\\n    php70-php-pear \\\n    php70-php-process \\\n    php70-php-pspell \\\n    php70-php-xml \\\n\n    `# Also install the following PECL packages:` \\\n    php70-php-pecl-imagick \\\n    php70-php-pecl-mysql \\\n    php70-php-pecl-uploadprogress \\\n    php70-php-pecl-uuid \\\n    php70-php-pecl-zip \\\n\n    `# Temporary workaround: one dependant package fails to install when building image (and the yum error is: Error unpacking rpm package httpd-2.4.6-40.el7.centos.x86_64)...` \\\n    || true && \\\n\n  `# Set PATH so it includes newest PHP and its aliases...` \\\n  ln -sfF /opt/remi/php70/enable /etc/profile.d/php70-paths.sh && \\\n  `# The above will set PATH when container starts... but not when php is used on container build time.` \\\n  `# Therefore create symlinks in /usr/local/bin for all PHP tools...` \\\n  ln -sfF /opt/remi/php70/root/usr/bin/{pear,pecl,phar,php,php-cgi,php-config,phpize} /usr/local/bin/. && \\\n\n  php --version && \\\n\n  `# Move PHP config files from /etc/opt/remi/php70/* to /etc/* ` \\\n  mv -f /etc/opt/remi/php70/php.ini /etc/php.ini && ln -s /etc/php.ini /etc/opt/remi/php70/php.ini && \\\n  rm -rf /etc/php.d && mv /etc/opt/remi/php70/php.d /etc/. && ln -s /etc/php.d /etc/opt/remi/php70/php.d && \\\n\n  echo 'PHP 7 installed.' && \\\n\n  `# Install libs required to build some gem/npm packages (e.g. PhantomJS requires zlib-devel, libpng-devel)` \\\n  yum install -y ImageMagick GraphicsMagick gcc gcc-c++ libffi-devel libpng-devel zlib-devel && \\\n\n  `# Install common tools needed/useful during Web App development` \\\n  `# Install Ruby 2` \\\n  yum install -y ruby ruby-devel && \\\n  echo 'gem: --no-document' > /etc/gemrc && \\\n  gem update --system && \\\n  gem install bundler && \\\n\n  `# Install/compile other software (Git, NodeJS)` \\\n  source /config/install.sh && \\\n\n  `# Install nvm and NodeJS/npm` \\\n  export PROFILE=/etc/profile.d/nvm.sh && touch $PROFILE && \\\n  curl -sSL https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash && \\\n  source $NVM_DIR/nvm.sh && \\\n  nvm install $NODE_VERSION && \\\n  nvm alias default $NODE_VERSION && \\\n  nvm use default && \\\n\n  `# Install common npm packages: grunt, gulp, bower, browser-sync` \\\n  npm install -g gulp grunt-cli bower browser-sync && \\\n\n  `# Disable SSH strict host key checking: needed to access git via SSH in non-interactive mode` \\\n  echo -e \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config && \\\n\n  `# Install Memcached, Redis PECL extensions from the source. Versions available in yum repo have dependency on igbinary which causes PHP seg faults in some PHP apps (e.g. Flow/Neos)...` \\\n  `# Install PHP Memcached ext from the source...` \\\n  yum install -y libmemcached-devel && \\\n  git clone https://github.com/php-memcached-dev/php-memcached.git && cd php-memcached && git checkout php7 && \\\n  phpize && ./configure && make && make install && \\\n  echo \"extension=memcached.so\" > /etc/php.d/50-memcached.ini && \\\n  `# Install PHP Redis ext from the source...` \\\n  git clone https://github.com/phpredis/phpredis.git && cd phpredis && git checkout php7 && \\\n  phpize && ./configure && make && make install && \\\n  echo \"extension=redis.so\" > /etc/php.d/50-redis.ini && \\\n\n  curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \\\n  chown www /usr/local/bin/composer && composer --version && \\\n\n  `# Clean YUM caches to minimise Docker image size... #` \\\n  yum clean all && rm -rf /tmp/yum*\n\nADD container-files /\n\n# Add NodeJS/npm to PATH (must be separate ENV instruction as we want to use $NVM_DIR)\nENV \\\n  NODE_PATH=$NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules \\\n  PATH=$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "container-files/config/install*",
        "dest": "/config/"
      },
      {
        "source": "container-files/etc/yum.repos.d/*",
        "dest": "/etc/yum.repos.d/"
      },
      {
        "source": "container-files",
        "dest": "/"
      }
    ],
    "expose": [],
    "volume": [],
    "run": [
      "  yum update -y &&   `# Install some basic web-related tools...`   yum install -y wget patch tar bzip2 unzip openssh-clients MariaDB-client && "
    ],
    "workdir": [],
    "from": "million12/nginx:latest",
    "maintainer": "Marcin Ryzycki <marcin@m12.io>",
    "env": {
      "": "",
      "NVM_DIR": "/usr/local/nvm",
      "NODE_VERSION": "6.3.0",
      "STATUS_PAGE_ALLOWED_IP": "127.0.0.1",
      "NODE_PATH": "$NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules",
      "PATH": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
    }
  },
  "source_repository_url": "https://github.com/million12/docker-nginx-php.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/million12/docker-nginx-php",
  "docker_repository": "million12/nginx-php",
  "docker_image": "million12/nginx-php",
  "parameters_schema": {
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NVM_DIR": {
      "default": "/usr/local/nvm",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NODE_VERSION": {
      "default": "6.3.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "STATUS_PAGE_ALLOWED_IP": {
      "default": "127.0.0.1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NODE_PATH": {
      "default": "$NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "million12/nginx-php",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/million12/nginx-php",
    "https://hub.docker.com/v2/repositories/million12/nginx-php",
    "https://github.com/million12/docker-nginx-php.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Type/Infrastructure/Operating System/Linux/CentOS",
    "Type/Middleware/Runtime/PHP",
    "Type/Middleware/Web Server/Nginx"
  ],
  "info_url": "https://hub.docker.com/r/million12/nginx-php",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}