{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/hauptmedia/mariadb",
    "repository_url": "https://hub.docker.com/v2/repositories/hauptmedia/mariadb",
    "tags_url": "https://hub.docker.com/v2/repositories/hauptmedia/mariadb/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/hauptmedia/mariadb/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/hauptmedia/mariadb/autobuild",
    "user": "hauptmedia",
    "name": "mariadb",
    "namespace": "hauptmedia",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 3,
    "pull_count": 5916,
    "last_updated": "2016-05-18T09:18:22.476328Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "10.1",
        "full_size": 216775030,
        "id": 956892,
        "repository": 180750,
        "creator": 206539,
        "last_updater": 206539,
        "last_updated": "2016-05-18T09:18:20.343667Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "10.0",
        "full_size": 184346024,
        "id": 744085,
        "repository": 180750,
        "creator": 206539,
        "last_updater": 206539,
        "last_updated": "2015-11-12T20:37:27.889760Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "10.0-galera",
        "full_size": 180006594,
        "id": 191104,
        "repository": 180750,
        "creator": 206539,
        "last_updater": 206539,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "hauptmedia/docker-mariadb"
  },
  "name": "hauptmedia/mariadb Docker container",
  "description": "",
  "readme": "# docker-mariadb\n\n## Available environment configuration\n\n| Variable | Default value | Description |\n| -------- | ------------- | ----------- |\n| PORT | 3306 | Specify the MySQL Service Port |\n| MAX_CONNECTIONS | 100 | Specified the maximum of parallel connections allowed to use the service |\n| MYSQL_ROOT_PASSWORD | | If set, the root password will be set to this password (only if data-dir was non existent on startup) |\n| MYSQL_DATABASE | | If set, this database will be created (only if data-dir was non existent on startup) |\n| MYSQL_USER | | If set, this user will be created (only if data-dir was no existent on startup) |\n| MYSQL_PASSWORD | | If set, this $MYSQL_USER will be created with this password |\n| LOG_BIN | | Base filename for binary logs (will enable binary logs) |\n| LOG_BIN_INDEX | | Location of the log-bin index file |\n| MAX_ALLOWED_PACKET | 16M | The maximum size of one packet |\n| QUERY_CACHE_SIZE | 16M | The amount of memory allocated for caching query results |\n| INNODB_LOG_FILE_SIZE | 48M | Size in bytes of each log file in the log group |\n| QUERY_CACHE_TYPE | 1 | Set the query cache type 0=OFF, 1=ON, 2=DEMAND |\n| SYNC_BINLOG | 0 | Controls the number of binary log commit groups to collect before synchronizing the binary log to disk. When sync_binlog=0, the binary log is never synchronized to disk, and when sync_binlog is set to a value greater than 0 this number of binary log commit groups is periodically synchronized to disk. When sync_binlog=1, all transactions are synchronized to the binary log before they are committed |\n| INNODB_BUFFER_POOL_SIZE | 128M | The size in bytes of the buffer pool, the memory area where InnoDB caches table and index data |\n| INNODB_FLUSH_METHOD | | Defines the method used to flush data to the InnoDB data files and log files, which can affect I/O throughput |\n| INNODB_OLD_BLOCKS_TIME | 1000 | Non-zero values protect against the buffer pool being filled up by data that is referenced only for a brief period, such as during a full table scan. Increasing this value offers more protection against full table scans interfering with data cached in the buffer pool. |\n| INNODB_FLUSH_LOG_AT_TRX_COMMIT | 1 | Controls the balance between strict ACID compliance for commit operations, and higher performance that is possible when commit-related I/O operations are rearranged and done in batches. You can achieve better performance by changing the default value, but then you can lose up to a second of transactions in a crash. |\n\n### Galera specific settings\n\n| Variable | Default value | Description |\n| -------- | ------------- | ----------- |\n| GALERA | | If set the galera extension will be enabled |\n| CLUSTER_NAME | | Unique Name that identified the Galera Cluster |\n| NODE_NAME | | Unique Node name that identified this node instance |\n| CLUSTER_ADDRESS | | gcomm:// style resource identifier that provides topology information about the Galera Cluster |\n| REPLICATION_PASSWORD | | Password for the replication user which will be needed to allow state transfers using xtrabackupv2 method |\n\n## Running MariaDB in Standalone Mode\n\n```bash\ndocker run -i -t --rm \\\n-e TIMEZONE=Europe/Berlin \\\n-e MYSQL_ROOT_PASSWORD=securepassword \\\nhauptmedia/mariadb:10.1\n```\n## Running MariaDB in Galera Cluster Mode\n\nFor known limitations have a look at https://mariadb.com/kb/en/mariadb/mariadb-galera-cluster-known-limitations\n\n\n### Initializing a new cluster\n\n```bash\ndocker run -i -t --rm \\\n-e TIMEZONE=Europe/Berlin \\\n-e MYSQL_ROOT_PASSWORD=test \\\n-e REPLICATION_PASSWORD=test \\\n-e GALERA=On \\\n-e NODE_NAME=node1 \\\n-e CLUSTER_NAME=test \\\n-e CLUSTER_ADDRESS=gcomm://ipOrHost1,ipOrHost2,ipOrHost3 \\\nhauptmedia/mariadb:10.1 --wsrep-new-cluster\n```\n\n### Joining a node to the cluster\n\n```bash\ndocker run -i -t --rm \\\n-e TIMEZONE=Europe/Berlin \\\n-e MYSQL_ROOT_PASSWORD=test \\\n-e REPLICATION_PASSWORD=test \\\n-e GALERA=On \\\n-e NODE_NAME=node2 \\\n-e CLUSTER_NAME=test \\\n-e CLUSTER_ADDRESS=gcomm://ipOrHost1,ipOrHost2,ipOrHost3 \\\nhauptmedia/mariadb:10.1\n```\n\nPlease note: if you don't specify the timezone the server will run with UTC time\n\n## Recover strategies\n\nTo fix a split brain in a failed cluster make sure that only one node remains in the cluster and run\n\n`SET GLOBAL wsrep_provider_options='pc.bootstrap=true';`\n\nFor more information about recovering a galera cluster have a look at https://www.percona.com/blog/2014/09/01/galera-replication-how-to-recover-a-pxc-cluster/\n",
  "dockerfile": "FROM\t\tdebian:jessie\nMAINTAINER\tJulian Haupt <julian.haupt@hauptmedia.de>\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN\t\tgroupadd -r mysql && useradd -r -g mysql mysql\n\nENV\t\tDEBIAN_FRONTEND noninteractive\n\n# install needed packages\nRUN\t\tapt-get update -qq && \\\n\t\tapt-get upgrade --yes && \\\n\t\tapt-get -y --no-install-recommends --no-install-suggests install host socat unzip ca-certificates wget curl python-software-properties && \\\n\t\tapt-get clean autoclean && \\\n\t\tapt-get autoremove --yes && \\ \n\t\trm -rf /var/lib/{apt,dpkg,cache,log}/\n\n# install percona tools\nRUN\t        apt-key adv --keyserver keys.gnupg.net --recv-keys 1C4CBDCDCD2EFD2A && \\\n\t\techo \"deb http://repo.percona.com/apt jessie main\" >>/etc/apt/sources.list && \\\t\n\t\tapt-get update -qq && \\\n\t\tapt-get -y install percona-toolkit percona-xtrabackup && \\\n\t\tapt-get clean autoclean && \\\n\t\tapt-get autoremove --yes && \\ \n\t\trm -rf /var/lib/{apt,dpkg,cache,log}/\n\nENV\t\tMARIADB_MAJOR 10.1\nENV\t\tMARIADB_VERSION 10.1.14\n\n# install mariadb\nRUN\t\tapt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xcbcb082a1bb943db && \\\n\t\techo \"deb http://ftp.osuosl.org/pub/mariadb/repo/${MARIADB_MAJOR}/debian jessie main\" >>/etc/apt/sources.list && \\\t\n\t\tapt-get update -qq && \\\n\t\tapt-get -y install mariadb-server-${MARIADB_MAJOR}=\"${MARIADB_VERSION}+maria-1~jessie\" mariadb-client-${MARIADB_MAJOR}=\"${MARIADB_VERSION}+maria-1~jessie\" && \\\n\t\tapt-get clean autoclean && \\\n\t\tapt-get autoremove --yes && \\ \n\t\trm -rf /var/lib/{apt,dpkg,cache,log}/ && \\\n\t\trm -rf /var/lib/mysql && \\\n\t\tmkdir /var/lib/mysql && \\\n\t\tsed -ri 's/^(bind-address|skip-networking|log)/;\\1/' /etc/mysql/my.cnf\n\nENV\t\tGALERA_VERSION 25.3.15\n\n# install galera\nRUN\t\tapt-get update -qq && \\\n\t\tapt-get -y install galera-arbitrator-3=\"${GALERA_VERSION}-jessie\" galera-3=\"${GALERA_VERSION}-jessie\" && \\\n\t\tapt-get clean autoclean && \\\n\t\tapt-get autoremove --yes && \\ \n\t\trm -rf /var/lib/{apt,dpkg,cache,log}/\n\n# add configuration\nADD\t\tconf.d/utf8.cnf /etc/mysql/conf.d/utf8.cnf\nADD\t\tconf.d/galera.cnf /etc/mysql/conf.d/galera.cnf\n\n# 3306 - MySQL client connections\n# 4567 - Galera Cluster replication traffic, multicast replication uses both udp & tcp\n# 4568 - For Incremental State Transfers\n# 4444 - For all other State Snapshot Transfers\n\nEXPOSE\t\t3306 4444 4567 4568\n\nVOLUME\t\t[\"/var/lib/mysql\"]\nCOPY\t\tdocker-entrypoint.sh /entrypoint.sh\n\n# Set TERM env to avoid mysql client error message \"TERM environment variable not set\" when running from inside the container\nENV TERM xterm\n\n# default values for configuration options\nENV\tMAX_CONNECTIONS=100 \\\n\tPORT=3306 \\\n\tMAX_ALLOWED_PACKET=16M \\\n\tQUERY_CACHE_SIZE=16M \\\n\tQUERY_CACHE_TYPE=1 \\\n\tINNODB_BUFFER_POOL_SIZE=128M \\\n\tINNODB_LOG_FILE_SIZE=48M \\\n\tINNODB_FLUSH_METHOD= \\\n\tINNODB_OLD_BLOCKS_TIME=1000 \\\n\tINNODB_FLUSH_LOG_AT_TRX_COMMIT=1 \\\n\tSYNC_BINLOG=0\n\nENTRYPOINT\t[\"/entrypoint.sh\"]\n\nCMD [\"mysqld\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": [],
    "env": {
      "TERM": "xterm"
    },
    "cmd": "[\"mysqld\"]"
  },
  "source_repository_url": "https://github.com/hauptmedia/docker-mariadb.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/hauptmedia/docker-mariadb",
  "docker_repository": "hauptmedia/mariadb",
  "docker_image": "hauptmedia/mariadb",
  "parameters_schema": {
    "TERM": {
      "default": "xterm",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "hauptmedia/mariadb",
  "revision": "10.1",
  "uris": [
    "https://hub.docker.com/r/hauptmedia/mariadb",
    "https://hub.docker.com/v2/repositories/hauptmedia/mariadb",
    "https://github.com/hauptmedia/docker-mariadb.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Data Store/Relational/MariaDB"
  ],
  "info_url": "https://hub.docker.com/r/hauptmedia/mariadb",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}