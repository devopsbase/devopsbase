{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/jrcs/letsencrypt-nginx-proxy-companion",
    "repository_url": "https://hub.docker.com/v2/repositories/jrcs/letsencrypt-nginx-proxy-companion",
    "tags_url": "https://hub.docker.com/v2/repositories/jrcs/letsencrypt-nginx-proxy-companion/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/jrcs/letsencrypt-nginx-proxy-companion/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/jrcs/letsencrypt-nginx-proxy-companion/autobuild",
    "user": "jrcs",
    "name": "letsencrypt-nginx-proxy-companion",
    "namespace": "jrcs",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 113,
    "pull_count": 732187,
    "last_updated": "2016-08-18T13:56:22.182640Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 22029970,
        "id": 1646706,
        "repository": 464339,
        "creator": 191813,
        "last_updater": 191813,
        "last_updated": "2016-08-18T13:56:21.838849Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.3",
        "full_size": 22030063,
        "id": 4319128,
        "repository": 464339,
        "creator": 191813,
        "last_updater": 191813,
        "last_updated": "2016-08-15T08:38:11.377751Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "dev",
        "full_size": 22036841,
        "id": 1981725,
        "repository": 464339,
        "creator": 191813,
        "last_updater": 191813,
        "last_updated": "2016-08-15T08:28:20.777336Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.2",
        "full_size": 22029956,
        "id": 4110212,
        "repository": 464339,
        "creator": 191813,
        "last_updater": 191813,
        "last_updated": "2016-08-02T11:42:48.937741Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.1",
        "full_size": 23987381,
        "id": 1876944,
        "repository": 464339,
        "creator": 191813,
        "last_updater": 191813,
        "last_updated": "2016-02-01T07:40:44.651785Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.0",
        "full_size": 22366875,
        "id": 1675340,
        "repository": 464339,
        "creator": 191813,
        "last_updater": 191813,
        "last_updated": "2016-01-17T21:02:13.115732Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "JrCs/docker-letsencrypt-nginx-proxy-companion"
  },
  "name": "jrcs/letsencrypt-nginx-proxy-companion Docker container",
  "description": "LetsEncrypt container to use with nginx as proxy",
  "readme": "[![](https://images.microbadger.com/badges/version/jrcs/letsencrypt-nginx-proxy-companion.svg)](https://hub.docker.com/r/jrcs/letsencrypt-nginx-proxy-companion \"Click to view the image on Docker Hub\")\n[![](https://images.microbadger.com/badges/image/jrcs/letsencrypt-nginx-proxy-companion.svg)](https://hub.docker.com/r/jrcs/letsencrypt-nginx-proxy-companion \"Click to view the image on Docker Hub\")\n[![](https://img.shields.io/docker/stars/jrcs/letsencrypt-nginx-proxy-companion.svg)](https://hub.docker.com/r/jrcs/letsencrypt-nginx-proxy-companion \"Click to view the image on Docker Hub\")\n[![](https://img.shields.io/docker/pulls/jrcs/letsencrypt-nginx-proxy-companion.svg)](https://hub.docker.com/r/jrcs/letsencrypt-nginx-proxy-companion \"Click to view the image on Docker Hub\")\n\nletsencrypt-nginx-proxy-companion is a lightweight companion container for the [nginx-proxy](https://github.com/jwilder/nginx-proxy). It allow the creation/renewal of Let's Encrypt certificates automatically. See [Let's Encrypt section](#lets-encrypt) for configuration details.\n\n### Features:\n* Automatic creation/renewal of Let's Encrypt certificates using original nginx-proxy container.\n* Support creation of Multi-Domain ([SAN](https://www.digicert.com/subject-alternative-name.htm)) Certificates.\n* Automatically creation of a Strong Diffie-Hellman Group (for having an A+ Rate on the [Qualsys SSL Server Test](https://www.ssllabs.com/ssltest/)).\n* Work with all versions of docker.\n\n***NOTE***: The first time this container is launch it generate a new Diffie-Hellman group file. This process can take several minutes to complete (be patient).\n\n#### Usage\n\nTo use it with original [nginx-proxy](https://github.com/jwilder/nginx-proxy) container you must declare 3 writable volumes from the [nginx-proxy](https://github.com/jwilder/nginx-proxy) container:\n* `/etc/nginx/certs` to create/renew Let's Encrypt certificates\n* `/etc/nginx/vhost.d` to change the configuration of vhosts (need by Let's Encrypt)\n* `/usr/share/nginx/html` to write challenge files.\n\nExample of use:\n\n* First start nginx with the 3 volumes declared:\n```bash\n$ docker run -d -p 80:80 -p 443:443 \\\n    --name nginx-proxy \\\n    -v /path/to/certs:/etc/nginx/certs:ro \\\n    -v /etc/nginx/vhost.d \\\n    -v /usr/share/nginx/html \\\n    -v /var/run/docker.sock:/tmp/docker.sock:ro \\\n    jwilder/nginx-proxy\n```\n\n* Second start this container:\n```bash\n$ docker run -d \\\n    -v /path/to/certs:/etc/nginx/certs:rw \\\n    --volumes-from nginx-proxy \\\n    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n    jrcs/letsencrypt-nginx-proxy-companion\n```\n\nThen start any containers you want proxied with a env var `VIRTUAL_HOST=subdomain.youdomain.com`\n\n    $ docker run -e \"VIRTUAL_HOST=foo.bar.com\" ...\n\nThe containers being proxied must [expose](https://docs.docker.com/reference/run/#expose-incoming-ports) the port to be proxied, either by using the `EXPOSE` directive in their `Dockerfile` or by using the `--expose` flag to `docker run` or `docker create`. See [nginx-proxy](https://github.com/jwilder/nginx-proxy) for more informations. To generate automatically Let's Encrypt certificates see next section.\n\n#### Separate Containers (recommended method)\nnginx proxy can also be run as two separate containers using the [jwilder/docker-gen](https://github.com/jwilder/docker-gen)\nimage and the official [nginx](https://hub.docker.com/_/nginx/) image.\n\nYou may want to do this to prevent having the docker socket bound to a publicly exposed container service (avoid to mount the docker socket in the nginx exposed container). It's better in a security point of view.\n\nTo run nginx proxy as a separate container you'll need:\n\n1) To mount the template file [nginx.tmpl](https://github.com/jwilder/nginx-proxy/blob/master/nginx.tmpl) into the docker-gen container. You can get the latest official [nginx.tmpl](https://github.com/jwilder/nginx-proxy/blob/master/nginx.tmpl) with a command like:\n```bash\ncurl https://raw.githubusercontent.com/jwilder/nginx-proxy/master/nginx.tmpl > /path/to/nginx.tmpl\n```\n\n2) Set the `NGINX_DOCKER_GEN_CONTAINER` environment variable to the name or id of the docker-gen container.\n\nExamples:\n\n* First start nginx (official image) with volumes:\n```bash\n$ docker run -d -p 80:80 -p 443:443 \\\n    --name nginx \\\n    -v /etc/nginx/conf.d  \\\n    -v /etc/nginx/vhost.d \\\n    -v /usr/share/nginx/html \\\n    -v /path/to/certs:/etc/nginx/certs:ro \\\n    nginx\n```\n\n* Second start the docker-gen container with the shared volumes and the template file:\n```bash\n$ docker run -d \\\n    --name nginx-gen \\\n    --volumes-from nginx \\\n    -v /path/to/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro \\\n    -v /var/run/docker.sock:/tmp/docker.sock:ro \\\n    jwilder/docker-gen \\\n    -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf\n```\n\n* Then start this container (NGINX_DOCKER_GEN_CONTAINER variable must contain the docker-gen container name or id):\n```bash\n$ docker run -d \\\n    --name nginx-letsencrypt \\\n    -e \"NGINX_DOCKER_GEN_CONTAINER=nginx-gen\" \\\n    --volumes-from nginx \\\n    -v /path/to/certs:/etc/nginx/certs:rw \\\n    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n    jrcs/letsencrypt-nginx-proxy-companion\n```\nThen start any containers to be proxied as described previously.\n\n#### Let's Encrypt\n\nTo use the Let's Encrypt service to automatically create a valid certificate for virtual host(s).\n\nSet the following environment variables to enable Let's Encrypt support for a container being proxied. This environment variables need to be declared in each to-be-proxied application containers.\n\n- `LETSENCRYPT_HOST`\n- `LETSENCRYPT_EMAIL`\n\nThe `LETSENCRYPT_HOST` variable most likely needs to be the same as the `VIRTUAL_HOST` variable and must be publicly reachable domains. Specify multiple hosts with a comma delimiter.\n\n##### multi-domain ([SAN](https://www.digicert.com/subject-alternative-name.htm)) certificates\nIf you want to create multi-domain ([SAN](https://www.digicert.com/subject-alternative-name.htm)) certificates add the base domain as the first domain of the `LETSENCRYPT_HOST` environment variable.\n\n##### test certificates\nIf you want to create test certificates that don't have the 5 certs/week/domain limits define the `LETSENCRYPT_TEST` environment variable with a value of `true`.\n\n##### Automatic certificate renewal\nEvery hour (3600 seconds) the certificates are checked and every certificate that will expire in the next [30 days](https://github.com/kuba/simp_le/blob/ecf4290c4f7863bb5427b50cdd78bc3a5df79176/simp_le.py#L72) (90 days / 3) are renewed.\n\n##### Example:\n```bash\n$ docker run -d \\\n    --name example-app \\\n    -e \"VIRTUAL_HOST=example.com,www.example.com,mail.example.com\" \\\n    -e \"LETSENCRYPT_HOST=example.com,www.example.com,mail.example.com\" \\\n    -e \"LETSENCRYPT_EMAIL=foo@bar.com\" \\\n    tutum/apache-php\n```\n\n#### Optional container environment variables\n\nOptional letsencrypt-nginx-proxy-companion container environment variables for custom configuration.\n\n* `ACME_CA_URI` - Directory URI for the CA ACME API endpoint (default: ``https://acme-v01.api.letsencrypt.org/directory``). If you set it's value to `https://acme-staging.api.letsencrypt.org/directory` letsencrypt will use test servers that don't have the 5 certs/week/domain limits. You can also create test certificates per container (see [let's encrypt test certificates](https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion/blob/doc/README.md#test-certificates))\n\nFor example\n\n```bash\n$ docker run -d \\\n    -e \"ACME_CA_URI=https://acme-staging.api.letsencrypt.org/directory\" \\\n    -v /path/to/certs:/etc/nginx/certs:rw \\\n    --volumes-from nginx-proxy \\\n    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n    jrcs/letsencrypt-nginx-proxy-companion\n```\n\n* `DEBUG` - Set it to `true` to enable debugging of the entrypoint script and generation of LetsEncrypt certificates, which could help you pin point any configuration issues.\n\n* `NGINX_PROXY_CONTAINER`- If for some reason you can't use the docker --volumes-from option, you can specify the name or id of the nginx-proxy container with this variable.\n\n#### Examples:\nIf you want other examples how to use this container, look at [docker-letsencrypt-nginx-proxy-companion-examples] (https://github.com/fatk/docker-letsencrypt-nginx-proxy-companion-examples).\n",
  "dockerfile": "FROM alpine:3.3\n\nMAINTAINER Yves Blusseau <90z7oey02@sneakemail.com> (@blusseau)\n\nENV DEBUG=false              \\\n\tDOCKER_GEN_VERSION=0.7.3 \\\n\tDOCKER_HOST=unix:///var/run/docker.sock\n\nRUN apk --update add bash curl ca-certificates procps jq tar && \\\n\tcurl -L -O https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz && \\\n\ttar -C /usr/local/bin -xvzf docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz && \\\n\trm -f docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz && \\\n\tapk del tar && \\\n\trm -rf /var/cache/apk/*\n\nWORKDIR /app\n\n# Install simp_le program\nCOPY /install_simp_le.sh /app/install_simp_le.sh\nRUN chmod +rx /app/install_simp_le.sh && sync && /app/install_simp_le.sh && rm -f /app/install_simp_le.sh\n\nENTRYPOINT [\"/bin/bash\", \"/app/entrypoint.sh\" ]\nCMD [\"/bin/bash\", \"/app/start.sh\" ]\n\nCOPY /app/ /app/\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "apk --update add bash curl ca-certificates procps jq tar && \tcurl -L -O https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz && \ttar -C /usr/local/bin -xvzf docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz && \trm -f docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz && \tapk del tar && \trm -rf /var/cache/apk/*",
      "chmod +rx /app/install_simp_le.sh && sync && /app/install_simp_le.sh && rm -f /app/install_simp_le.sh"
    ],
    "workdir": [
      "/app"
    ],
    "from": "alpine:3.3",
    "maintainer": "Yves Blusseau <90z7oey02@sneakemail.com> (@blusseau)",
    "env": {
      "DEBUG": "false",
      "": "\tDOCKER_GEN_VERSION",
      "0.7.3": "\tDOCKER_HOST"
    },
    "copy": "/app/ /app/",
    "entrypoint": "[\"/bin/bash\", \"/app/entrypoint.sh\" ]",
    "cmd": "[\"/bin/bash\", \"/app/start.sh\" ]"
  },
  "source_repository_url": "https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion",
  "docker_repository": "jrcs/letsencrypt-nginx-proxy-companion",
  "docker_image": "jrcs/letsencrypt-nginx-proxy-companion",
  "parameters_schema": {
    "DEBUG": {
      "default": "false",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "\tDOCKER_GEN_VERSION",
      "type": "string",
      "mapping": "environment_variable"
    },
    "0.7.3": {
      "default": "\tDOCKER_HOST",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "jrcs/letsencrypt-nginx-proxy-companion",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/jrcs/letsencrypt-nginx-proxy-companion",
    "https://hub.docker.com/v2/repositories/jrcs/letsencrypt-nginx-proxy-companion",
    "https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion.git"
  ],
  "labels": [
    "Docker",
    "Binding/Region/North America/US",
    "Type/Middleware/Web Server/Nginx",
    "Type/Middleware/Proxy"
  ],
  "info_url": "https://hub.docker.com/r/jrcs/letsencrypt-nginx-proxy-companion",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}