{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/doalitic/nginx",
    "repository_url": "https://hub.docker.com/v2/repositories/doalitic/nginx",
    "tags_url": "https://hub.docker.com/v2/repositories/doalitic/nginx/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/doalitic/nginx/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/doalitic/nginx/autobuild",
    "user": "doalitic",
    "name": "nginx",
    "namespace": "doalitic",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 3304,
    "last_updated": "2016-09-05T10:13:42.869520Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "1.8",
        "full_size": 79330555,
        "id": 1412533,
        "repository": 396733,
        "creator": 480657,
        "last_updater": 480634,
        "last_updated": "2016-09-05T10:13:42.475699Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "ml",
        "full_size": 79236305,
        "id": 1614820,
        "repository": 396733,
        "creator": 480657,
        "last_updater": 480634,
        "last_updated": "2016-09-05T10:12:46.575515Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "doalitic/docker-nginx"
  },
  "name": "doalitic/nginx Docker container",
  "description": "Nginx automated build",
  "readme": null,
  "dockerfile": "FROM debian:jessie\n\nMAINTAINER \"The Doalitic Team\" <devops@doalitic.com>\n\nRUN apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62\nRUN echo \"deb http://nginx.org/packages/debian/ jessie nginx\" >> /etc/apt/sources.list\n\nENV NGINX_VERSION 1.8.0-1~jessie\n\nRUN apt-get update && \\\n    apt-get install -y ca-certificates nginx=${NGINX_VERSION} && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log\nRUN ln -sf /dev/stderr /var/log/nginx/error.log\n\nRUN apt-get update \\\n    && apt-get install -y wget\n\nRUN wget https://github.com/jwilder/dockerize/releases/download/v0.0.4/dockerize-linux-amd64-v0.0.4.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.0.4.tar.gz \\\n    && rm -f dockerize-linux-amd64-v0.0.4.tar.gz\n\nRUN mkdir -p /etc/container/templates\n\nADD ./server.key.tpl /etc/container/templates/\n\nADD ./server.crt.tpl /etc/container/templates/\n\nADD ./nginx.conf.tpl /etc/container/templates/\n\nEXPOSE 80 443\n\n# The following environment variables are available:\n#\n# NGINX_WORKER_PROCESSES         number of worker processes(optional, default: 1)\n# NGINX_WORKER_CONNECTIONS       maximum number of simultaneous connections that can be opened by a worker process. (optional, default: 1024)\n# NGINX_PHPFPM_HOST              PHP-FPM network address\n# NGINX_PHPFPM_PORT              PHP-FPM network port\n# NGINX_GUNICORN_HOST            Gunicorn network address\n# NGINX_GUNICORN_PORT            Gunicorn network port\n# NGINX_PORT_HOST                port where nginx is listening on the host\n# NGINX_SERVER_NAME              nginx vhost name\n# NGINX_KEEPALIVE_TIMEOUT        nginx keepalive timeout value (optional, default: 60)\n# NGINX_ROOT                     nginx root directory (optional, default: /var/www)\n# NGINX_SERVE_STATIC_FILES       if present, nginx will serve static files (optional)\n# NGINX_SSL_CERTIFICATE          nginx ssl certificate content (optional)\n# NGINX_SSL_KEY      \t\t     nginx ssl private key content (optional)\n# NGINX_REDIRECT_HTTP_TO_HTTPS   if present, nginx will redirect http traffic to https (optional)\n# NGINX_REDIRECT_WWW_TO_NON_WWW  if present, nginx will redirect non-www NGINX_SERVER_NAME to NGINX_SERVER_NAME\n# NGINX_TRY_INDEX_HTML\t\t     if present, nginx will serve /index.html when $uri doesn't exist\n# NGINX_DISABLE_SENDFILE\t     if present, the sendfile nginx optimization will be disabled\n\nCMD [\"dockerize\", \\\n\t\"-template\", \"/etc/container/templates/server.key.tpl:/etc/ssl/private/server.key\", \\\n\t\"-template\", \"/etc/container/templates/server.crt.tpl:/etc/ssl/private/server.crt\", \\\n\t\"-template\", \"/etc/container/templates/nginx.conf.tpl:/etc/nginx/nginx.conf\", \\\n\t\"nginx\", \"-g\", \"daemon off;\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "./server.key.tpl",
        "dest": "/etc/container/templates/"
      },
      {
        "source": "./server.crt.tpl",
        "dest": "/etc/container/templates/"
      },
      {
        "source": "./nginx.conf.tpl",
        "dest": "/etc/container/templates/"
      }
    ],
    "expose": [
      80
    ],
    "volume": [],
    "run": [
      "apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62",
      "echo \"deb http://nginx.org/packages/debian/ jessie nginx\" >> /etc/apt/sources.list",
      "apt-get update &&     apt-get install -y ca-certificates nginx=${NGINX_VERSION} &&     rm -rf /var/lib/apt/lists/*",
      "ln -sf /dev/stdout /var/log/nginx/access.log",
      "ln -sf /dev/stderr /var/log/nginx/error.log",
      "apt-get update     && apt-get install -y wget",
      "wget https://github.com/jwilder/dockerize/releases/download/v0.0.4/dockerize-linux-amd64-v0.0.4.tar.gz     && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.0.4.tar.gz     && rm -f dockerize-linux-amd64-v0.0.4.tar.gz",
      "mkdir -p /etc/container/templates"
    ],
    "workdir": [],
    "from": "debian:jessie",
    "maintainer": "\"The Doalitic Team\" <devops@doalitic.com>",
    "env": {
      "NGINX_VERSION": "1.8.0-1~jessie"
    },
    "cmd": "[\"dockerize\", \t\"-template\", \"/etc/container/templates/server.key.tpl:/etc/ssl/private/server.key\", \t\"-template\", \"/etc/container/templates/server.crt.tpl:/etc/ssl/private/server.crt\", \t\"-template\", \"/etc/container/templates/nginx.conf.tpl:/etc/nginx/nginx.conf\", \t\"nginx\", \"-g\", \"daemon off;\"]"
  },
  "source_repository_url": "git@bitbucket.org:doalitic/docker-nginx.git",
  "source_repository_type": "git",
  "source_repository_provider": "bitbucket",
  "source_repository_web_url": "https://bitbucket.org/doalitic/docker-nginx",
  "docker_repository": "doalitic/nginx",
  "docker_image": "doalitic/nginx",
  "parameters_schema": {
    "NGINX_VERSION": {
      "default": "1.8.0-1~jessie",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "doalitic/nginx",
  "revision": "1.8",
  "uris": [
    "https://hub.docker.com/r/doalitic/nginx",
    "https://hub.docker.com/v2/repositories/doalitic/nginx",
    "git@bitbucket.org:doalitic/docker-nginx.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Build",
    "Type/Middleware/Web Server/Nginx"
  ],
  "info_url": "https://hub.docker.com/r/doalitic/nginx",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}