{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/agaveapi/httpd",
    "repository_url": "https://hub.docker.com/v2/repositories/agaveapi/httpd",
    "tags_url": "https://hub.docker.com/v2/repositories/agaveapi/httpd/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/agaveapi/httpd/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/agaveapi/httpd/autobuild",
    "user": "agaveapi",
    "name": "httpd",
    "namespace": "agaveapi",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 60,
    "last_updated": "2016-04-17T03:44:28.090272Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "2.4",
        "full_size": 12988568,
        "id": 1936094,
        "repository": 516166,
        "creator": 20253,
        "last_updater": 20253,
        "last_updated": "2016-04-17T03:44:28.740661Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "agaveapi/httpd"
  },
  "name": "agaveapi/httpd Docker container",
  "description": "This is a minimal apache image with support for dynamic document root definition.",
  "readme": "# Apache 2.4 Base Image\n\nThis is a Minimal apache image with support for dynamic document root definition. Default unified logging to standard out.\n\n## Extending this image\n\nThis image can be used as a standard web server for most apps. It is sufficient to add a .htaccess file to\nthe server root to set up redirects, etc.\n\n### Developing with this image\n\nIf you are developing with this image, mount your code into the `/var/www/html` directory in the container. Your local changes will be reflected instantly when you refresh your page.\n\n```\ndocker run -h docker.example.com\n           -p 80:80 \\\n           --name apache \\\n           -v `pwd`:/var/www/html \\\n           --link mysql:mysql\n           -e DOCUMENT_ROOT=/var/www/html\n           agaveapi/httpd:2.4\n```\n\nAlternatively, you can specify a different web root if needed by your application.\n```\ndocker run -h docker.example.com\n           -p 80:80 \\\n           --name apache \\\n           -v /usr/local/src/code:/var/www \\\n           --link mysql:mysql\n           -e DOCUMENT_ROOT=/var/www/public\n           agaveapi/httpd:2.4\n```\n\n### Running in production\n\nWhen running in production, both the access and error logs will stream to standard out so they can be access via the Docker logs facility by default.\n\n```\ndocker run -h docker.example.com \\\n           -p 80:80 \\\n           -p 443:443 \\\n           --name apache \\\n           agaveapi/httpd:2.4\n```\n\n### SSL Support\n\nTo add ssl support, volume mount your ssl cert, key, ca cert file, and ca chain file as needed. In the following example, a folder containing the necessary files is volume mounted to /ssl in the container.\n\n```\ndocker run -h docker.example.com \\\n           -p 80:80 \\\n           -p 443:443 \\\n           --name apache \\\n           -v `pwd`/ssl:/ssl:ro \\\n           -e SSL_CERT=/ssl/docker_example_com_cert.cer \\\n           -e SSL_KEY=/ssl/docker.example.com.key \\\n           -e SSL_CA_CERT=/ssl/docker_example_com.cer \\\n           agaveapi/httpd:2.4\n```\n\n### Logging\n\nAll apache access and error logs are written to /var/log/apache2 by default. You man access them by mounting the folder as a host volume. You can optionally consolidate and stream logs to STDOUT by setting the environment variable `LOG_TARGET_STDOUT` to any truthy value.\n\nThe default log level is `INFO`. You can alter the log level by setting any of the following environment variables to a truthy value: `LOG_LEVEL_INFO`, `LOG_LEVEL_WARN`, `LOG_LEVEL_ERROR`, and `LOG_LEVEL_DEBUG`.\n",
  "dockerfile": "######################################################\n#\n# Apache 2.4 Base Image\n# Tag: deardooley/apache:alpine\n#\n# Minimal Apache 2.4 image with CORS, rewrite, and proxy\n# support. Default unified logging to standard out.\n#\n######################################################\n\nFROM alpine:edge\nMAINTAINER Rion Dooley <dooley@tacc.utexas.edu\n\nADD tcp/limits.conf /etc/security/limits.conf\nADD tcp/sysctl.conf /etc/sysctl.conf\n\nRUN apk --update add openssl apache2 vim gzip tzdata bash && \\\n    apk --update add apache2-ssl && \\\n    rm -f /var/cache/apk/* && \\\n\n    # Set up system timezone and sync\n    echo \"Setting system timezone to America/Chicago...\" && \\\n    ln -snf /usr/share/zoneinfo/America/Chicago /etc/localtime && \\\n    ntpd -d -p pool.ntp.org && \\\n\n    echo \"Updating default apache DocumentRoot...\" && \\\n    mv /var/www/localhost/htdocs /var/www/html && \\\n    chown -R apache:apache /var/www/html && \\\n    # sed -i 's#/var/www/localhost/htdocs#%DOCUMENT_ROOT%#g' /etc/apache2/httpd.conf && \\\n    # sed -i 's/^    AllowOverride None/    AllowOverride All/' /etc/apache2/httpd.conf && \\\n    # sed -i 's#/var/www/localhost/htdocs#%DOCUMENT_ROOT%#g' /etc/apache2/conf.d/ssl.conf && \\\n    # sed -i 's#^SSLMutex .*#Mutex sysvsem default#g' /etc/apache2/conf.d/ssl.conf && \\\n    # sed -i 's#/run/apache2#/etc/apache2/run#g' /etc/apache2/httpd.conf && \\\n    # sed -i 's#/run/apache2#/etc/apache2/run#g' /etc/apache2/conf.d/ssl.conf && \\\n    mkdir /etc/apache2/run && \\\n    rm -f /etc/apache2/conf.d/mpm.conf && \\\n    rm -f /etc/apache2/conf.d/userdir.conf && \\\n\n    sed -i 's#Timeout 60#Timeout 43200#' /etc/apache2/conf.d/default.conf\n\n\nADD apache/httpd.conf /etc/apache2/httpd.conf\nADD apache/conf.d/* /etc/apache2/conf.d/\nADD docker_entrypoint.sh /docker_entrypoint.sh\n\nWORKDIR /var/www/html\n\nEXPOSE 80 443\n\nENTRYPOINT [\"/docker_entrypoint.sh\"]\n\nCMD [\"httpd\", \"-DFOREGROUND\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "tcp/limits.conf",
        "dest": "/etc/security/limits.conf"
      },
      {
        "source": "tcp/sysctl.conf",
        "dest": "/etc/sysctl.conf"
      },
      {
        "source": "apache/httpd.conf",
        "dest": "/etc/apache2/httpd.conf"
      },
      {
        "source": "apache/conf.d/*",
        "dest": "/etc/apache2/conf.d/"
      },
      {
        "source": "docker_entrypoint.sh",
        "dest": "/docker_entrypoint.sh"
      }
    ],
    "expose": [
      80
    ],
    "volume": [],
    "run": [
      "apk --update add openssl apache2 vim gzip tzdata bash &&     apk --update add apache2-ssl &&     rm -f /var/cache/apk/* && "
    ],
    "workdir": [
      "/var/www/html"
    ],
    "from": "alpine:edge",
    "maintainer": "Rion Dooley <dooley@tacc.utexas.edu",
    "entrypoint": "[\"/docker_entrypoint.sh\"]",
    "cmd": "[\"httpd\", \"-DFOREGROUND\"]"
  },
  "source_repository_url": "https://bitbucket.org/agaveapi/httpd.git",
  "source_repository_type": "git",
  "source_repository_provider": "bitbucket",
  "source_repository_web_url": "https://bitbucket.org/agaveapi/httpd",
  "docker_repository": "agaveapi/httpd",
  "docker_image": "agaveapi/httpd",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "agaveapi/httpd",
  "revision": "2.4",
  "uris": [
    "https://hub.docker.com/r/agaveapi/httpd",
    "https://hub.docker.com/v2/repositories/agaveapi/httpd",
    "https://bitbucket.org/agaveapi/httpd.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Script",
    "Mode/API",
    "Type/Middleware/Web Server/Apache HTTP Server"
  ],
  "info_url": "https://hub.docker.com/r/agaveapi/httpd",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}