{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/sbdev/wd-wordpress-scrapinghub",
    "repository_url": "https://hub.docker.com/v2/repositories/sbdev/wd-wordpress-scrapinghub",
    "tags_url": "https://hub.docker.com/v2/repositories/sbdev/wd-wordpress-scrapinghub/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/sbdev/wd-wordpress-scrapinghub/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/sbdev/wd-wordpress-scrapinghub/autobuild",
    "user": "sbdev",
    "name": "wd-wordpress-scrapinghub",
    "namespace": "sbdev",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 310,
    "last_updated": "2016-10-17T11:15:34.165427Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 282324184,
        "id": 4106857,
        "repository": 832302,
        "creator": 950043,
        "last_updater": 950043,
        "last_updated": "2016-10-17T11:15:33.869644Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "ws-1.2",
        "full_size": 279434279,
        "id": 4175754,
        "repository": 832302,
        "creator": 950043,
        "last_updater": 950043,
        "last_updated": "2016-08-05T10:21:14.282343Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "SimplyBridal/wd-wordpress"
  },
  "name": "sbdev/wd-wordpress-scrapinghub Docker container",
  "description": "wd-wordpress-scrapinghub",
  "readme": "\n\n---\n\n## Getting started\n\nThis project has 2 parts: the Docker environment and a set of tools for theme development. To quickly get started, you can simply run the following:\n\n```\n1. git clone  https://github.com/SimplyBridal/wd-wordpress\n2. cd wd-wordpress\n3. docker-compose up\n4. You can view  the website in http://localhost:8080/\n5. http://localhost:8080/wp-admin/     use root/root login\n\n```\n\n##### MySQL Credentials\n\n- username: `root`\n- password: `root` (can be changed with the `MYSQL_ROOT_PASSWORD` and `DB_PASS` environment variables)\n- database: `wordpress` (can be changed with the `DB_NAME` environment variable)\n- admin email: `admin@${DB_NAME}.com`\n\n##### WordPress Container Environment variables\n\n- `DB_PASS` (required): Must match `MYSQL_ROOT_PASSWORD` of the mysql container\n- `DB_NAME` (optional): Defaults to `wordpress`\n- `ADMIN_EMAIL` (optional): Defaults to `admin@${DB_NAME}.com`\n- `WP_DEBUG` (optional): Defaults to `false`\n- `THEMES` (optional): Comma-separated list of themes you want to install.\n- `PLUGINS` (optional): Comma-separated list of plugins you want to install.\n- `SEARCH_REPLACE` (optional): Comma-separated string in the form of `current-url,replacement-url`.\n    - When defined, `current-url` will be replaced with `replacement-url` on build (useful for development environments utilizing a database copied from a live site).\n    - **IMPORTANT NOTE:** If you are running Docker on Mac or PC (using Docker Machine), your replacement url MUST be the output of the following command: `echo $(docker-machine ip <your-machine-name>):8080`\n\n##### DB Container Environment variables\n\n- `MYSQL_ROOT_PASSWORD` (required): Must match `DB_PASS` of the wordpress container\n\n### Working with databases\n\nIf you have an exported `.sql` file from an existing website, drop the file into the `data/` folder. The first time you run the container, it will detect the SQL dump and use it as a database. If it doesn't find one, it will create a fresh database.\n\nIf the SQL dump changes for some reason, you can reload the database by running:\n\n```\ndocker-compose run wordpress wp db import \"$(find /data/*.sql | head -n 1)\" --allow-root\n```\n\nIf you want to create a dump of your development database, you can run:\n\n```\ndocker-compose run wordpress wp db export /data --allow-root\n```\n\nFinally, sometimes your development environment runs on a different domain than your live one. The live will be `example.com` and the development `localhost:8080`. This project does a search and replace for you. You can set the `SEARCH_REPLACE: example.com,localhost:8080` environment variable in the `docker-compose.yml`.\n\n### Use `wp-cli`\n\nYou can access wp-cli by running `npm run wp ...`. Here are some examples:\n\n```\nnpm run wp plugin install <some-plugin>\nnpm run wp db import /data/database.sql\n```\n\n### Use Compass ###\nInstall sass, compass for develop wd custom child theme\n\n- install rvm https://rvm.io/\n\n```\ngpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3\n\\curl -sSL https://get.rvm.io | bash -s stable\n```\n- install ruby\n\n```\nrvm install 2.2.3\nrvm use 2.2.3  \n```\n- install compass\n\n```\ngem install compass\nrvm use 2.2.3  \n```\n\n- compass watch file\n\n```\ncd wd-wordpress/app/themes/thevoux-wp-child\ncompass watch\n```\nSync css and sass file\n",
  "dockerfile": "FROM python:2.7.12-onbuild",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": [],
    "from": "python:2.7.12-onbuild"
  },
  "source_repository_url": "git@github.com:SimplyBridal/wd-wordpress.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/SimplyBridal/wd-wordpress",
  "docker_repository": "sbdev/wd-wordpress-scrapinghub",
  "docker_image": "sbdev/wd-wordpress-scrapinghub",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "sbdev/wd-wordpress-scrapinghub",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/sbdev/wd-wordpress-scrapinghub",
    "https://hub.docker.com/v2/repositories/sbdev/wd-wordpress-scrapinghub",
    "git@github.com:SimplyBridal/wd-wordpress.git"
  ],
  "labels": [
    "Docker",
    "Mode/API"
  ],
  "info_url": "https://hub.docker.com/r/sbdev/wd-wordpress-scrapinghub",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}