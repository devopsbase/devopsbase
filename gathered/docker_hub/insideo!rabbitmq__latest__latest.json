{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/insideo/rabbitmq",
    "repository_url": "https://hub.docker.com/v2/repositories/insideo/rabbitmq",
    "tags_url": "https://hub.docker.com/v2/repositories/insideo/rabbitmq/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/insideo/rabbitmq/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/insideo/rabbitmq/autobuild",
    "user": "insideo",
    "name": "rabbitmq",
    "namespace": "insideo",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 56,
    "last_updated": "2016-01-27T23:14:03.383470Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 77471397,
        "id": 1238715,
        "repository": 380057,
        "creator": 459936,
        "last_updater": 459936,
        "last_updated": "2016-01-27T23:14:02.654424Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "insideo/uc-linux"
  },
  "name": "insideo/rabbitmq Docker container",
  "description": "Basic RabbitMQ container (based on UC linux).",
  "readme": "# rabbitmq\nSmall (< 200MB) RabbitMQ container.\n\nIf this container is extended, shell scripts (*.sh) can be placed in /docker-entrypoint-init.d/ and will be executed on first run. These can be used to create users, exchanges, and queues.\n\nData volumes can be mounted on /data/mnesia (persisted data) and /data/log (log files).\n ",
  "dockerfile": "FROM insideo/uc-linux:buggy\nMAINTAINER ccondit@randomcoder.com\n\nRUN \\\n\topkg update && \\\n\topkg install rabbitmq-server && \\\n\topkg clean && \\\n\taddgroup -S -g 101 rabbitmq && \\\n\tmkdir -p /var/lib/rabbitmq && \\\n\tadduser -h /var/lib/rabbitmq -g \"RabbitMQ user\" -s /bin/sh -G rabbitmq -S -D -u 101 rabbitmq && \\\n\tchown -R rabbitmq:rabbitmq /var/lib/rabbitmq && \\\n\tmkdir -p /etc/rabbitmq && \\\n\techo \"NODENAME=rabbit@localhost\" > /etc/rabbitmq/rabbitmq-env.conf && \\\n\trabbitmq-plugins enable --offline rabbitmq_management && \\\n\tmkdir -p /docker-entrypoint-init.d\n\nCOPY docker-entrypoint.sh /\n\t\nENV RABBITMQ_LOG_BASE /data/log\nENV RABBITMQ_MNESIA_BASE /data/mnesia\n\nVOLUME /data/log\nVOLUME /data/mnesia\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nEXPOSE 5672\nEXPOSE 15672\n\nCMD [\"rabbitmq-server\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      5672,
      15672
    ],
    "volume": [
      "/data/log",
      "/data/mnesia"
    ],
    "run": [
      "\topkg update && \topkg install rabbitmq-server && \topkg clean && \taddgroup -S -g 101 rabbitmq && \tmkdir -p /var/lib/rabbitmq && \tadduser -h /var/lib/rabbitmq -g \"RabbitMQ user\" -s /bin/sh -G rabbitmq -S -D -u 101 rabbitmq && \tchown -R rabbitmq:rabbitmq /var/lib/rabbitmq && \tmkdir -p /etc/rabbitmq && \techo \"NODENAME=rabbit@localhost\" > /etc/rabbitmq/rabbitmq-env.conf && \trabbitmq-plugins enable --offline rabbitmq_management && \tmkdir -p /docker-entrypoint-init.d"
    ],
    "workdir": [],
    "from": "insideo/uc-linux:buggy",
    "maintainer": "ccondit@randomcoder.com",
    "copy": "docker-entrypoint.sh /",
    "env": {
      "RABBITMQ_LOG_BASE": "/data/log",
      "RABBITMQ_MNESIA_BASE": "/data/mnesia"
    },
    "entrypoint": "[\"/docker-entrypoint.sh\"]",
    "cmd": "[\"rabbitmq-server\"]"
  },
  "source_repository_url": "https://github.com/insideo/uc-linux.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/insideo/uc-linux",
  "docker_repository": "insideo/rabbitmq",
  "docker_image": "insideo/rabbitmq",
  "parameters_schema": {
    "RABBITMQ_LOG_BASE": {
      "default": "/data/log",
      "type": "string",
      "mapping": "environment_variable"
    },
    "RABBITMQ_MNESIA_BASE": {
      "default": "/data/mnesia",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        5672,
        15672
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "insideo/rabbitmq",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/insideo/rabbitmq",
    "https://hub.docker.com/v2/repositories/insideo/rabbitmq",
    "https://github.com/insideo/uc-linux.git"
  ],
  "labels": [
    "Docker",
    "Mode/CLI",
    "Type/Infrastructure/Operating System/Linux",
    "Type/Middleware/Messaging/RabbitMQ"
  ],
  "info_url": "https://hub.docker.com/r/insideo/rabbitmq",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}