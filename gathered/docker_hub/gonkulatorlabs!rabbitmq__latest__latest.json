{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/gonkulatorlabs/rabbitmq",
    "repository_url": "https://hub.docker.com/v2/repositories/gonkulatorlabs/rabbitmq",
    "tags_url": "https://hub.docker.com/v2/repositories/gonkulatorlabs/rabbitmq/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/gonkulatorlabs/rabbitmq/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/gonkulatorlabs/rabbitmq/autobuild",
    "user": "gonkulatorlabs",
    "name": "rabbitmq",
    "namespace": "gonkulatorlabs",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 5,
    "pull_count": 4798,
    "last_updated": "2016-07-14T14:14:22.071849Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 23329942,
        "id": 611884,
        "repository": 264653,
        "creator": 47415,
        "last_updater": 380286,
        "last_updated": "2016-07-14T14:14:21.722577Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.6.1",
        "full_size": 23329883,
        "id": 3001618,
        "repository": 264653,
        "creator": 380286,
        "last_updater": 380286,
        "last_updated": "2016-07-14T14:03:22.026752Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "kube-master",
        "full_size": 22788513,
        "id": 2647499,
        "repository": 264653,
        "creator": 47415,
        "last_updater": 47415,
        "last_updated": "2016-04-13T18:59:57.277796Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "kube",
        "full_size": 22788436,
        "id": 2643684,
        "repository": 264653,
        "creator": 47415,
        "last_updater": 47415,
        "last_updated": "2016-04-13T17:43:50.541841Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "rancher",
        "full_size": 22788395,
        "id": 2577153,
        "repository": 264653,
        "creator": 380286,
        "last_updater": 380286,
        "last_updated": "2016-04-07T17:28:22.496893Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "3.6.0",
        "full_size": 22730744,
        "id": 1821112,
        "repository": 264653,
        "creator": 47415,
        "last_updater": 47415,
        "last_updated": "2016-01-26T02:02:56.497982Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "3.5.6",
        "full_size": 27592434,
        "id": 1821110,
        "repository": 264653,
        "creator": 47415,
        "last_updater": 47415,
        "last_updated": "2016-01-26T02:02:54.804147Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "3.5.4",
        "full_size": 26554144,
        "id": 733588,
        "repository": 264653,
        "creator": 47415,
        "last_updater": 47415,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "3.5.3",
        "full_size": 25266963,
        "id": 611886,
        "repository": 264653,
        "creator": 47415,
        "last_updater": 47415,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "gonkulator/alpine-rmq"
  },
  "name": "gonkulatorlabs/rabbitmq Docker container",
  "description": "35MB RabbitMQ image running on Alpine Linux",
  "readme": "# Alpine Linux RabbitMQ Docker image\nMany other RabbitMQ Docker images are [huge](https://imagelayers.io/?images=rabbitmq:latest,frodenas%2Frabbitmq:latest,tutum%2Frabbitmq:latest).  Instead of using the bloated Ubuntu or Fedora images as a base, this image uses the 5MB Alpine Linux base image.  Alpine lets us run RabbitMQ 3.6.1 on Erlang 18.3.2 in only **37MB**!\n\n### Usage\nThe wrapper script starts RabbitMQ (with management plugin enabled), tails the log, and configures listeners on the standard ports:\n  - `5671/tcp`: Listening port when SSL is enabled\n  - `5672/tcp`: Non-SSL default listening port\n  - `15671/tcp`: SSL GUI listening port\n  - `15672/tcp`: Non-SSL GUI listening port\n\nRabbitMQ's data is persisted to a volume at `/var/lib/rabbitmq`.\n\nTo enable SSL set the `SSL_CERT_FILE`, `SSL_KEY_FILE`, and `SSL_CA_FILE` environment variables.  The wrapper script will use the same certs for GUI SSL access as for AMQPS access.\n\n**2/10/16**: We've added the [autocluster](https://github.com/aweber/rabbitmq-autocluster) plugin to this image. To enable it, set the `AUTOCLUSTER_TYPE` environment variable to your backend (we've tested with Consul). See the autocluster [docs](https://github.com/aweber/rabbitmq-autocluster#configuration) for details on what additional options can be set for provided backends.\n\n***Examples:***\n```bash\n# Run without TLS\ndocker run -d \\\n  --name rabbitmq \\\n  -p 5672:5672 \\\n  -p 15672:15672 \\\n  gonkulatorlabs/rabbitmq\n```\n\n```bash\n# Run with TLS enabled\ndocker run -it \\\n  --name rabbitmq \\\n  -p 5671:5671 \\\n  -p 15671:15671 \\\n  -e SSL_CERT_FILE=/ssl/cert/cert.pem \\\n  -e SSL_KEY_FILE=/ssl/cert/key.pem \\\n  -e SSL_CA_FILE=/ssl/CA/cacert.pem \\\n  gonkulatorlabs/rabbitmq\n```\n\n```bash\n# Run with autoclustering enabled\n#   These options will register the RMQ\n#   node as living on 192.168.99.101.\n#   Nodes that join will attempt to cluster\n#   on that address.\ndocker run -d \\\n  --name rabbitmq \\\n  -e AUTOCLUSTER_TYPE=consul \\\n  -e CONSUL_HOST=192.168.99.101 \\\n  -p 5672:5672 \\\n  -p 15672:15672 \\\n  gonkulatorlabs/rabbitmq\n```\n\n### Customizing\nTo set a custom config, ditch the wrapper script and call `rabbitmq-server` directly.  Place the custom config in `/srv/rabbitmq_server-3.6.0/etc/rabbitmq/`. To reduce startup complexity, the autocluster plugin is not enabled by default (our wrapper script enables it on demand). If you want to use it with a custom config, make sure to run `rabbitmq-plugins enable --offline autocluster` in the container before starting Rabbit.\n\n### Fair Warning!\nAlpine's Erlang packages are in its `edge` (testing) repo, if that bothers you then don't use this image!\n",
  "dockerfile": "FROM        alpine:3.2\nMAINTAINER  Gonkulator Labs <github.com/gonkulator>\n\nENV         RABBITMQ_VERSION=3.6.1 \\\n            RABBITMQ_AUTOCLUSTER_PLUGIN_VERSION=0.4.1\nENV         RABBITMQ_HOME=/srv/rabbitmq_server-${RABBITMQ_VERSION} \\\n            PLUGINS_DIR=/srv/rabbitmq_server-${RABBITMQ_VERSION}/plugins \\\n            ENABLED_PLUGINS_FILE=/srv/rabbitmq_server-${RABBITMQ_VERSION}/etc/rabbitmq/enabled_plugins \\\n            RABBITMQ_MNESIA_BASE=/var/lib/rabbitmq\nENV         PATH=$PATH:$RABBITMQ_HOME/sbin\n\nCOPY        ssl.config /srv/rabbitmq_server-${RABBITMQ_VERSION}/etc/rabbitmq/\nCOPY        standard.config /srv/rabbitmq_server-${RABBITMQ_VERSION}/etc/rabbitmq/\nCOPY        wrapper.sh /usr/bin/wrapper\n\nEXPOSE      5671/tcp 5672/tcp 15672/tcp 15671/tcp\nVOLUME      /var/lib/rabbitmq\nCMD         [\"/usr/bin/wrapper\"]\n\nRUN         chmod a+x /usr/bin/wrapper && apk add --update curl tar xz bash && \\\n            echo \"http://dl-4.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories && \\\n            echo \"http://dl-4.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories && \\\n            echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories && \\\n            apk add erlang erlang erlang-mnesia erlang-public-key erlang-crypto erlang-ssl \\\n                erlang-sasl erlang-asn1 erlang-inets erlang-os-mon erlang-xmerl erlang-eldap \\\n                erlang-syntax-tools --update-cache --allow-untrusted && \\\n            cd /srv && \\\n            rmq_zip_url=https://github.com/rabbitmq/rabbitmq-server/releases/download && \\\n                rmq_zip_url=${rmq_zip_url}/rabbitmq_v$(echo $RABBITMQ_VERSION | tr '.' '_') && \\\n                rmq_zip_url=${rmq_zip_url}/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.xz && \\\n            curl -Lv -o /srv/rmq.tar.xz $rmq_zip_url && \\\n            tar -xvf rmq.tar.xz && rm -f rmq.tar.xz && \\\n            touch /srv/rabbitmq_server-${RABBITMQ_VERSION}/etc/rabbitmq/enabled_plugins && \\\n            rabbitmq-plugins enable --offline rabbitmq_management && \\\n            rmq_ac_url=https://github.com/aweber/rabbitmq-autocluster/releases/download && \\\n                rmq_ac_url=${rmq_ac_url}/${RABBITMQ_AUTOCLUSTER_PLUGIN_VERSION} && \\\n                rmq_ac_url=${rmq_ac_url}/autocluster-${RABBITMQ_AUTOCLUSTER_PLUGIN_VERSION}.ez && \\\n            curl -Lv -o ${PLUGINS_DIR}/autocluster-${RABBITMQ_AUTOCLUSTER_PLUGIN_VERSION}.ez $rmq_ac_url && \\\n            apk del --purge tar xz && rm -Rf /var/cache/apk/* && \\\n            ln -sf $RABBITMQ_HOME /rabbitmq\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      5671
    ],
    "volume": [
      "     /var/lib/rabbitmq"
    ],
    "run": [
      "        chmod a+x /usr/bin/wrapper && apk add --update curl tar xz bash &&             echo \"http://dl-4.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories &&             echo \"http://dl-4.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories &&             echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories &&             apk add erlang erlang erlang-mnesia erlang-public-key erlang-crypto erlang-ssl                 erlang-sasl erlang-asn1 erlang-inets erlang-os-mon erlang-xmerl erlang-eldap                 erlang-syntax-tools --update-cache --allow-untrusted &&             cd /srv &&             rmq_zip_url=https://github.com/rabbitmq/rabbitmq-server/releases/download &&                 rmq_zip_url=${rmq_zip_url}/rabbitmq_v$(echo $RABBITMQ_VERSION | tr '.' '_') &&                 rmq_zip_url=${rmq_zip_url}/rabbitmq-server-generic-unix-${RABBITMQ_VERSION}.tar.xz &&             curl -Lv -o /srv/rmq.tar.xz $rmq_zip_url &&             tar -xvf rmq.tar.xz && rm -f rmq.tar.xz &&             touch /srv/rabbitmq_server-${RABBITMQ_VERSION}/etc/rabbitmq/enabled_plugins &&             rabbitmq-plugins enable --offline rabbitmq_management &&             rmq_ac_url=https://github.com/aweber/rabbitmq-autocluster/releases/download &&                 rmq_ac_url=${rmq_ac_url}/${RABBITMQ_AUTOCLUSTER_PLUGIN_VERSION} &&                 rmq_ac_url=${rmq_ac_url}/autocluster-${RABBITMQ_AUTOCLUSTER_PLUGIN_VERSION}.ez &&             curl -Lv -o ${PLUGINS_DIR}/autocluster-${RABBITMQ_AUTOCLUSTER_PLUGIN_VERSION}.ez $rmq_ac_url &&             apk del --purge tar xz && rm -Rf /var/cache/apk/* &&             ln -sf $RABBITMQ_HOME /rabbitmq"
    ],
    "workdir": [],
    "from": "       alpine:3.2",
    "maintainer": " Gonkulator Labs <github.com/gonkulator>",
    "env": {
      "": "",
      "RABBITMQ_VERSION": "3.6.1",
      "RABBITMQ_AUTOCLUSTER_PLUGIN_VERSION": "0.4.1",
      "RABBITMQ_HOME": "/srv/rabbitmq_server-${RABBITMQ_VERSION}",
      "PLUGINS_DIR": "/srv/rabbitmq_server-${RABBITMQ_VERSION}/plugins",
      "ENABLED_PLUGINS_FILE": "/srv/rabbitmq_server-${RABBITMQ_VERSION}/etc/rabbitmq/enabled_plugins",
      "RABBITMQ_MNESIA_BASE": "/var/lib/rabbitmq",
      "PATH": "$PATH:$RABBITMQ_HOME/sbin"
    },
    "copy": "       wrapper.sh /usr/bin/wrapper",
    "cmd": "        [\"/usr/bin/wrapper\"]"
  },
  "source_repository_url": "https://github.com/gonkulator/alpine-rmq.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/gonkulator/alpine-rmq",
  "docker_repository": "gonkulatorlabs/rabbitmq",
  "docker_image": "gonkulatorlabs/rabbitmq",
  "parameters_schema": {
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "RABBITMQ_VERSION": {
      "default": "3.6.1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "RABBITMQ_AUTOCLUSTER_PLUGIN_VERSION": {
      "default": "0.4.1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "RABBITMQ_HOME": {
      "default": "/srv/rabbitmq_server-${RABBITMQ_VERSION}",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PLUGINS_DIR": {
      "default": "/srv/rabbitmq_server-${RABBITMQ_VERSION}/plugins",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ENABLED_PLUGINS_FILE": {
      "default": "/srv/rabbitmq_server-${RABBITMQ_VERSION}/etc/rabbitmq/enabled_plugins",
      "type": "string",
      "mapping": "environment_variable"
    },
    "RABBITMQ_MNESIA_BASE": {
      "default": "/var/lib/rabbitmq",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "$PATH:$RABBITMQ_HOME/sbin",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        5671
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "gonkulatorlabs/rabbitmq",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/gonkulatorlabs/rabbitmq",
    "https://hub.docker.com/v2/repositories/gonkulatorlabs/rabbitmq",
    "https://github.com/gonkulator/alpine-rmq.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image",
    "Type/Infrastructure/Operating System/Linux",
    "Type/Middleware/Messaging/RabbitMQ"
  ],
  "info_url": "https://hub.docker.com/r/gonkulatorlabs/rabbitmq",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}