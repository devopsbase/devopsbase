{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/spiralout/dartisan",
    "repository_url": "https://hub.docker.com/v2/repositories/spiralout/dartisan",
    "tags_url": "https://hub.docker.com/v2/repositories/spiralout/dartisan/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/spiralout/dartisan/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/spiralout/dartisan/autobuild",
    "user": "spiralout",
    "name": "dartisan",
    "namespace": "spiralout",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 708,
    "last_updated": "2016-03-13T10:43:28.842049Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 169889766,
        "id": 1625834,
        "repository": 459198,
        "creator": 487177,
        "last_updater": 487177,
        "last_updated": "2016-03-13T10:43:28.164779Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "SpiralOutDotEu/dartisan"
  },
  "name": "spiralout/dartisan Docker container",
  "description": "Container to run Laravel's artisan commands",
  "readme": "# dartisan\nDocker container to run Laravel's Artisan command\n\n# Usage\nRun with\n```\n$ docker run -P -v </Your/Absolute/Path/To/laravel/folder>:/var/www spiralout/dartisan <artisan command eg. list>\n```\nIf you like to have link with your database:\nwrite on your .env file \n\n```\nDB_HOST=db\n```\nand run with\n```\n$ docker run -d -P --name artisan <Your DB container name>:db -v </Your/Absolute/Path/To/laravel/folder>:/var/www spiralout/dartisan <artisan command eg. make:auth>\n```\n\n",
  "dockerfile": "FROM debian:jessie\n\n\nMAINTAINER \"SpiralOut\" <spiralout.eu@gmail.com>\n\nWORKDIR /tmp\n\nRUN apt-get update -y && \\\n    apt-get install -y \\\n    php5-cli \\\n    php5-mcrypt \\\n    php5-mssql \\\n    php5-mysqlnd \\\n    php5-pgsql \\\n    php5-redis \\\n    php5-mongo \\\n    php5-sqlite \\\n    php5-dev make php-pear \\\n    php5-gd && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* \n    #pecl install mongodb && \\\n    #echo \"extension=mongodb.so\" >> `php --ini | grep \"Loaded Configuration\" | sed -e \"s|.*:\\s*||\"`\n\nRUN mkdir -p /var/www\nVOLUME [\"/var/www\"]\nWORKDIR /var/www\n\nEXPOSE 3306\n\nENTRYPOINT [\"php\", \"artisan\"]\nCMD [\"--help\"]\n\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      3306
    ],
    "volume": [
      "[\"/var/www\"]"
    ],
    "run": [
      "apt-get update -y &&     apt-get install -y     php5-cli     php5-mcrypt     php5-mssql     php5-mysqlnd     php5-pgsql     php5-redis     php5-mongo     php5-sqlite     php5-dev make php-pear     php5-gd &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* ",
      "mkdir -p /var/www"
    ],
    "workdir": [
      "/tmp",
      "/var/www"
    ],
    "from": "debian:jessie",
    "maintainer": "\"SpiralOut\" <spiralout.eu@gmail.com>",
    "entrypoint": "[\"php\", \"artisan\"]",
    "cmd": "[\"--help\"]"
  },
  "source_repository_url": "https://github.com/SpiralOutDotEu/dartisan.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/SpiralOutDotEu/dartisan",
  "docker_repository": "spiralout/dartisan",
  "docker_image": "spiralout/dartisan",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        3306
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "spiralout/dartisan",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/spiralout/dartisan",
    "https://hub.docker.com/v2/repositories/spiralout/dartisan",
    "https://github.com/SpiralOutDotEu/dartisan.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Dart"
  ],
  "info_url": "https://hub.docker.com/r/spiralout/dartisan",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}