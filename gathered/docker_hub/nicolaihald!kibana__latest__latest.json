{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/nicolaihald/kibana",
    "repository_url": "https://hub.docker.com/v2/repositories/nicolaihald/kibana",
    "tags_url": "https://hub.docker.com/v2/repositories/nicolaihald/kibana/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/nicolaihald/kibana/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/nicolaihald/kibana/autobuild",
    "user": "nicolaihald",
    "name": "kibana",
    "namespace": "nicolaihald",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 48,
    "last_updated": "2016-06-03T21:35:19.913698Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 102179045,
        "id": 3062404,
        "repository": 693714,
        "creator": 589118,
        "last_updater": 589118,
        "last_updated": "2016-06-03T21:35:18.210318Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      }
    ],
    "build_name": "nicolaihald/dockerfiles"
  },
  "name": "nicolaihald/kibana Docker container",
  "description": "Kibana server that can easily hook into your Elasticsearch containers and ELK setup.",
  "readme": "Ready-to-run [Kibana](http://www.elasticsearch.org/overview/kibana/) server that can\neasily hook into your [Elasticsearch containers](https://registry.hub.docker.com/u/nicolaihald/elasticsearch/).\n\n## Usage (linked containers)\nRun elasticsearch \n\n    docker run -d --name ES -p 9200:9200 nicolaihald/elasticsearch\n\nRun Kibana \n\n    docker run -d -p 5601:5601 --link ES:elasticsearch nicolaihald/kibana\n\nKibana will then be accessible from http://dockermachine:5601  (fx. http://192.168.99.100:5601) \\\nCheckout the official [Kibana documentation](http://www.elasticsearch.org/guide/en/kibana/current/access.html)\n\n## Usage with non-Docker elasticsearch\n\nStart Kibana using\n\n    docker run -d -p 5601:5601 -e ES_URL=http://YOUR_ES:9200 nicolaihald/kibana\n\nReplacing `http://YOUR_ES:9200` with the appropriate URL for your system.",
  "dockerfile": "FROM ubuntu:trusty\nMAINTAINER nicolaihald\n\n# add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r kibana && useradd -r -m -g kibana kibana\n\nRUN apt-get update && apt-get install -y \\\n\t\tca-certificates \\\n\t\twget \\\n\t--no-install-recommends && rm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.7\nRUN set -x \\\n\t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n\t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n\t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n\t&& rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu \\\n\t&& gosu nobody true\n\n# grab tini for signal processing and zombie killing\nENV TINI_VERSION v0.9.0\nRUN set -x \\\n\t&& wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini\" \\\n\t&& wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5 \\\n\t&& gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini \\\n\t&& rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc \\\n\t&& chmod +x /usr/local/bin/tini \\\n\t&& tini -h\n\n# https://www.elastic.co/guide/en/kibana/4.4/setup.html#kibana-apt\n# https://packages.elasticsearch.org/GPG-KEY-elasticsearch\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 46095ACC8548582C1A2699A9D27D666CD88E42B4\n\nENV KIBANA_MAJOR 4.5\nENV KIBANA_VERSION 4.5.0\n\nRUN echo \"deb http://packages.elastic.co/kibana/${KIBANA_MAJOR}/debian stable main\" > /etc/apt/sources.list.d/kibana.list\n\nRUN set -x \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends kibana=$KIBANA_VERSION \\\n\t&& chown -R kibana:kibana /opt/kibana \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t\\\n# ensure the default configuration is useful when using --link\n\t&& sed -ri \"s!^(\\#\\s*)?(elasticsearch\\.url:).*!\\2 'http://elasticsearch:9200'!\" /opt/kibana/config/kibana.yml \\\n\t&& grep -q 'elasticsearch:9200' /opt/kibana/config/kibana.yml\n\nENV PATH /opt/kibana/bin:$PATH\n\nCOPY config/ /opt/kibana/config\nCOPY start.sh /\n\nRUN chmod +x /start.sh\n\nEXPOSE 5601\nENTRYPOINT [\"/start.sh\"]\nCMD [\"kibana\"]",
  "dockerfile_json": {
    "add": [],
    "expose": [
      5601
    ],
    "volume": [],
    "run": [
      "groupadd -r kibana && useradd -r -m -g kibana kibana",
      "apt-get update && apt-get install -y \t\tca-certificates \t\twget \t--no-install-recommends && rm -rf /var/lib/apt/lists/*",
      "set -x \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu \t&& gosu nobody true",
      "set -x \t&& wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini\" \t&& wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5 \t&& gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini \t&& rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc \t&& chmod +x /usr/local/bin/tini \t&& tini -h",
      "apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 46095ACC8548582C1A2699A9D27D666CD88E42B4",
      "echo \"deb http://packages.elastic.co/kibana/${KIBANA_MAJOR}/debian stable main\" > /etc/apt/sources.list.d/kibana.list",
      "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends kibana=$KIBANA_VERSION \t&& chown -R kibana:kibana /opt/kibana \t&& rm -rf /var/lib/apt/lists/* \t# ensure the default configuration is useful when using --link",
      "chmod +x /start.sh"
    ],
    "workdir": [],
    "from": "ubuntu:trusty",
    "maintainer": "nicolaihald",
    "env": {
      "GOSU_VERSION": "1.7",
      "TINI_VERSION": "v0.9.0",
      "KIBANA_MAJOR": "4.5",
      "KIBANA_VERSION": "4.5.0",
      "PATH": "/opt/kibana/bin:$PATH"
    },
    "copy": "start.sh /",
    "entrypoint": "[\"/start.sh\"]",
    "cmd": "[\"kibana\"]"
  },
  "source_repository_url": "https://github.com/nicolaihald/dockerfiles.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/nicolaihald/dockerfiles",
  "docker_repository": "nicolaihald/kibana",
  "docker_image": "nicolaihald/kibana",
  "parameters_schema": {
    "GOSU_VERSION": {
      "default": "1.7",
      "type": "string",
      "mapping": "environment_variable"
    },
    "TINI_VERSION": {
      "default": "v0.9.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "KIBANA_MAJOR": {
      "default": "4.5",
      "type": "string",
      "mapping": "environment_variable"
    },
    "KIBANA_VERSION": {
      "default": "4.5.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/opt/kibana/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        5601
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "nicolaihald/kibana",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/nicolaihald/kibana",
    "https://hub.docker.com/v2/repositories/nicolaihald/kibana",
    "https://github.com/nicolaihald/dockerfiles.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Search/Elasticsearch"
  ],
  "info_url": "https://hub.docker.com/r/nicolaihald/kibana",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}