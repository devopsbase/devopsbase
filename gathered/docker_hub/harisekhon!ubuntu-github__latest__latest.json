{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/harisekhon/ubuntu-github",
    "repository_url": "https://hub.docker.com/v2/repositories/harisekhon/ubuntu-github",
    "tags_url": "https://hub.docker.com/v2/repositories/harisekhon/ubuntu-github/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/harisekhon/ubuntu-github/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/harisekhon/ubuntu-github/autobuild",
    "user": "harisekhon",
    "name": "ubuntu-github",
    "namespace": "harisekhon",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 1120,
    "last_updated": "2016-10-16T22:58:22.447407Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 985408477,
        "id": 2807525,
        "repository": 655839,
        "creator": 189225,
        "last_updater": 189225,
        "last_updated": "2016-10-16T22:58:22.103290Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "HariSekhon/Dockerfiles"
  },
  "name": "harisekhon/ubuntu-github Docker container",
  "description": "Ubuntu latest with all my GitHub repos pre-built",
  "readme": "Hari Sekhon Docker\n==================\n[![Build Status](https://travis-ci.org/HariSekhon/Dockerfiles.svg?branch=master)](https://travis-ci.org/HariSekhon/Dockerfiles) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/de6229f2d2ba4945acde9f86f59d2c66)](https://www.codacy.com/app/harisekhon/Dockerfiles) [![DockerHub](https://img.shields.io/badge/docker-available-blue.svg)](https://hub.docker.com/u/harisekhon/)\n\nDocker Images containing hundreds of my published tools and the supporting technologies to run full functional test suites.\n\n##### Contains 37 repos with around 120 tags (not including 'latest'), many different versions of [official software](https://github.com/HariSekhon/Dockerfiles#official-technologies):\n\n* [My GitHub repos](https://github.com/HariSekhon) with all dependencies pre-built\n* Hadoop, NoSQL & OS images used for development and functional test suites\n\nThese images are all available pre-built on [My DockerHub](https://hub.docker.com/u/harisekhon/).\n\n### Ready to run Docker images\n\n```\ndocker search harisekhon\ndocker run harisekhon/nagios-plugins\n```\n\nTo see more than the 25 DockerHub repos limited by ```docker search``` ([docker issue 23055](https://github.com/docker/docker/issues/23055)) I wrote ```dockerhub_search.py``` using the DockerHub API, available in my [PyTools github repo](https://github.com/harisekhon/pytools) and as a pre-built docker image:\n\n```\ndocker run harisekhon/pytools dockerhub_search.py harisekhon\n```\n\nThere are lots of tagged versions of official software in my repos to allow development testing across multiple versions, usually more versions than available from the official repos (and new version updates available on request, just [raise a GitHub issue](https://github.com/harisekhon/Dockerfiles/issues)).\n\nDockerHub tags are not shown by ```docker search``` ([docker issue 17238](https://github.com/docker/docker/issues/17238)) so I wrote ```dockerhub_show_tags.py``` available in my [PyTools github repo](https://github.com/harisekhon/pytools) and as a pre-built docker image - eg. to see an organized list of all tags for the official CentOS & Ubuntu repos dynamically using the DockerHub API:\n\n```\ndocker run harisekhon/pytools dockerhub_show_tags.py centos ubuntu\n```\n\n### Full Inventory:\n\n##### Official Technologies:\n\n- Alluxio\n- Apache Drill (opens Drill shell)\n- Cassandra (opens CQL shell, bundled with [nagios-plugins](https://github.com/harisekhon/nagios-plugins))\n- Consul\n- H2O by 0xdata\n- Hadoop (HDFS + Yarn)\n- HBase (opens HBase shell)\n- Kafka\n- Mesos\n- Nifi\n- Riak\n- Riak (bundled with [nagios-plugins](https://github.com/harisekhon/nagios-plugins))\n- Serf\n- Solr\n- SolrCloud\n- Spark (opens Spark shell)\n- Tachyon\n- ZooKeeper (opens ZK shell)\n\nRepos suffixed with ```-dev``` are the official technologies + development & debugging tools + my github repos with all dependencies pre-built.\n\n##### My GitHub Repos (with all libs + deps pre-built):\n\n- [Advanced Nagios Plugins Collection](https://github.com/harisekhon/nagios-plugins) - 250+ nagios plugins for every Hadoop distribution and every major NoSQL technology - Hadoop, Redis, Elasticsearch, Solr, HBase, Cassandra & DataStax OpsCenter, MongoDB, MySQL, Kafka, Riak, Memcached, Couchbase, Mesos, Spark, Neo4j, Datameer, H2O, WanDisco, Yarn, HDFS, Impala, Apache Drill, ZooKeeper, Cloudera, Hortonworks, MapR, IBM BigInsights, Infrastructure - Linux, DNS, Whois, SSL Certs, NoSQL APIs etc\n- [Perl Tools](https://github.com/harisekhon/tools) - 25+ Hadoop, Hive, Solr, Linux, SQL, Ambari, Datameer, Web and various Linux CLI Tools\n- [Python Tools](https://github.com/harisekhon/pytools) - 30+ Hadoop, Spark, Pig, Ambari Blueprints, AWS CloudFormation, Linux, Data Converters & Validators (Avro/Parquet/JSON/CSV/XML/YAML), Elasticsearch, Solr, IPython - CLI tools\n- [Spotify Tools](https://github.com/harisekhon/spotify-tools) - Backup & Play Automation: Spotify Lookup - converts Spotify URIs to 'Artist - Track' form by querying the Spotify Metadata API. Spotify Cmd - command line control of Spotify on Mac via AppleScript for automation, auto timed track flick through etc.\n\n- CentOS + all Github repos pre-built\n- Debian + all Github repos pre-built\n- Ubuntu + all Github repos pre-built\n- Alpine + all Github repos pre-built\n\n##### Base Images:\n\nDev images:\n\n- CentOS latest with Java JDK, Perl, Python, Jython, Ruby, Scala, Groovy, GCC, Maven, SBT, Gradle, Make, Expect, EPEL etc.\n- Debian latest with Java JDK, Perl, Python, Jython, Ruby, Scala, Groovy, GCC, Maven, SBT, Gradle, Make, Expect etc.\n- Ubuntu latest with Java JDK, Perl, Python, Jython, Ruby, Scala, Groovy, GCC, Maven, SBT, Gradle, Make, Expect etc.\n- Alpine latest with Java JDK, Perl, Python, Jython, Ruby, Scala, Groovy, GCC, Maven, SBT, Gradle, Make, Expect etc.\n\n###### Base Images of Java / Scala:\n\nAll builds use OpenJDK with ```jre``` and ```jdk``` numbered tags. See this article below for why it might be illegal to bundle Oracle Java (and why no Linux distributions do this either):\n\nhttps://www.javacodegeeks.com/2016/03/running-java-docker-youre-breaking-law.html\n\n- CentOS latest combinations of Java 7/8 and Scala 2.10/2.11\n- Debian latest with Java 7\n- Ubuntu 14.04 with Java 7\n- Ubuntu latest with Java 8, 9\n\n### Build from Source\n\n```\ngit clone https://github/harisekhon/Dockerfiles\n\ncd Dockerfiles\n```\n\nTo build all Docker images, just run the ```make``` command at the top level:\n\n```\nmake\n```\n\nTo build a specific Docker image, enter it's directory and run make:\n\n```\ncd nagios-plugins\n\nmake\n```\n\n### Support\n\nPlease raise tickets for issues and improvements at https://github.com/harisekhon/dockerfiles/issues\n",
  "dockerfile": "#\n#  Author: Hari Sekhon\n#  Date: 2016-01-16 09:58:07 +0000 (Sat, 16 Jan 2016)\n#\n#  vim:ts=4:sts=4:sw=4:et\n#\n#  https://github.com/harisekhon/Dockerfiles/ubuntu-github\n#\n#  If you're using my code you're welcome to connect with me on LinkedIn and optionally send me feedback to help improve or steer this or other code I publish\n#\n#  https://www.linkedin.com/in/harisekhon\n#\n\nFROM harisekhon/ubuntu-dev:latest\nMAINTAINER Hari Sekhon (https://www.linkedin.com/in/harisekhon)\n\nLABEL Description=\"Ubuntu + my GitHub repos pre-built\"\n\nENV PATH $PATH:/github/nagios-plugins:/github/tools:/github/pytools:/github/bash-tools:/github/spotify\n\nRUN mkdir -v /github\n\nWORKDIR /github\n\n# this is too big and unwieldy and makes caching/maintenance hard\n#RUN git clone https://github.com/harisekhon/bash-tools /github/bash-tools && /github/bash-tools/get-my-repos.sh && cd /github/nagios-plugins && make zookeeper && /github/bash-tools/clean-my-repos.sh && apt-get clean\n\nRUN apt-get update && apt-get install -y openjdk-8-jdk && apt-get clean\n# drops in to /bin/sh pushd not available, could bash -c but explicit paths are good enough\nRUN for x in bash-tools;        do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build clean || exit 1; done; apt-get autoremove -y && apt-get clean\nRUN for x in lib spotify tools; do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build clean || exit 1; done; apt-get autoremove -y && apt-get clean\nRUN for x in nagios-plugins;    do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build zookeeper clean || exit 1; done; apt-get autoremove -y && apt-get clean\n# downgrading certifi package is a workaround so that dockerhub_show_tags.py will work with SSL\nRUN for x in pylib pytools;     do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build clean || exit 1; done; apt-get autoremove -y && apt-get clean && pip uninstall -y certifi && pip install certifi==2015.04.28\nRUN for x in lib-java;          do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build deep-clean || exit 1; done; apt-get autoremove -y && apt-get clean\nRUN for x in spark-apps;        do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build clean || exit 1; done; apt-get autoremove -y && apt-get clean\n\n# trick to invalidate cache at this point to pull latest updates\n#COPY invalidate_cache /tmp\n# pull updates\n#RUN /github/bash-tools/update-my-repos.sh && /github/bash-tools/clean-my-repos.sh && apt-get clean\n#RUN cd /github/nagios-plugins && make zookeeper && make clean-zookeeper && apt-get clean\n#RUN rm -f /tmp/invalidate_cache\n\nCMD /bin/bash\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "mkdir -v /github",
      "apt-get update && apt-get install -y openjdk-8-jdk && apt-get clean",
      "for x in bash-tools;        do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build clean || exit 1; done; apt-get autoremove -y && apt-get clean",
      "for x in lib spotify tools; do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build clean || exit 1; done; apt-get autoremove -y && apt-get clean",
      "for x in nagios-plugins;    do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build zookeeper clean || exit 1; done; apt-get autoremove -y && apt-get clean",
      "for x in pylib pytools;     do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build clean || exit 1; done; apt-get autoremove -y && apt-get clean && pip uninstall -y certifi && pip install certifi==2015.04.28",
      "for x in lib-java;          do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build deep-clean || exit 1; done; apt-get autoremove -y && apt-get clean",
      "for x in spark-apps;        do git clone https://github.com/harisekhon/$x /github/$x && cd /github/$x && make build clean || exit 1; done; apt-get autoremove -y && apt-get clean"
    ],
    "workdir": [
      "/github"
    ],
    "from": "harisekhon/ubuntu-dev:latest",
    "maintainer": "Hari Sekhon (https://www.linkedin.com/in/harisekhon)",
    "label": "Description=\"Ubuntu + my GitHub repos pre-built\"",
    "env": {
      "PATH": "$PATH:/github/nagios-plugins:/github/tools:/github/pytools:/github/bash-tools:/github/spotify"
    },
    "cmd": "/bin/bash"
  },
  "source_repository_url": "https://github.com/HariSekhon/Dockerfiles.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/HariSekhon/Dockerfiles",
  "docker_repository": "harisekhon/ubuntu-github",
  "docker_image": "harisekhon/ubuntu-github",
  "parameters_schema": {
    "PATH": {
      "default": "$PATH:/github/nagios-plugins:/github/tools:/github/pytools:/github/bash-tools:/github/spotify",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "harisekhon/ubuntu-github",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/harisekhon/ubuntu-github",
    "https://hub.docker.com/v2/repositories/harisekhon/ubuntu-github",
    "https://github.com/HariSekhon/Dockerfiles.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Version Control/Git",
    "Type/Devopsware/Test",
    "Type/Infrastructure/Operating System/Linux/Ubuntu"
  ],
  "info_url": "https://hub.docker.com/r/harisekhon/ubuntu-github",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}