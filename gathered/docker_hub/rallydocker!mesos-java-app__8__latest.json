{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/rallydocker/mesos-java-app",
    "repository_url": "https://hub.docker.com/v2/repositories/rallydocker/mesos-java-app",
    "tags_url": "https://hub.docker.com/v2/repositories/rallydocker/mesos-java-app/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/rallydocker/mesos-java-app/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/rallydocker/mesos-java-app/autobuild",
    "user": "rallydocker",
    "name": "mesos-java-app",
    "namespace": "rallydocker",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 2702,
    "last_updated": "2016-10-11T00:02:15.993200Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "8",
        "full_size": 132463779,
        "id": 1669927,
        "repository": 469705,
        "creator": 511909,
        "last_updater": 511909,
        "last_updated": "2016-10-11T00:02:15.591968Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "AudaxHealthInc/docker"
  },
  "name": "rallydocker/mesos-java-app Docker container",
  "description": "Mesos container for java apps with newrelic and tools.",
  "readme": "# Docker\n\nRally's standard Docker image definitions (i.e. Dockerfiles)\n\n## Docker \n\nDocker images will be hosted by Artifactory at docker.werally.in. See wiki page: [Artifactory as our Docker Registry](https://wiki.audaxhealth.com/display/ENG/Artifactory+as+our+Docker+Registry).\n\nThese are all built and pushed to artifactory manually for now.\n\n\n## Running Docker\n\nHave docker installed on your machine.\n\nfor linux, install docker.io at least version 1.6 (1.9 is the current one).\nfor mac, there's a vm with docker in linux to work with - \"docker-machine\"\n\n### Docker login for the push step\n\nto create a login (needs to be done only once). It will generate a ~/.docker/config.json file on the users' home directory.\nCreate or get your Artifactory (aka docker.werally.in) credentials using [this guide](https://wiki.audaxhealth.com/display/ENG/Artifactory+Setup)\n\n    $ docker login docker.werally.in\n\n\n### Docker create image (and push)\n\nTo create a docker image, you need these steps:\n\n1. go into the right directory (the one with a Dockerfile)\n2. run docker build to build the image.\n3. push your image to the registry. This step needs write permissions on the registry. Docker login will configure that, provided you have the credentials.\n\nthat is,\n\n    $ cd <path-to-where-the-Dockerfile-is>\n    $ docker build --tag <tag-name> <source-directory>\n    $ docker push <image-id> <tag-name> \n\nE.g., building mongo-java-app with \"version\" tag 8. Note that if the \"version\" is not provided, it defaults to latest.\n\n    $ MYTAG=docker.werally.in/mongo-java-app:8\n    $ cd mesos-java-app\n    $ docker build --tag $MYTAG .\n    $ docker push $MYTAG\n\n## Mesos/Marathon\n\nWhen running on Mesos using  Marathon, you will need provide credentials to the docker inside Mesos.\n\nFor that, please refer to mesos-apps repo.\n",
  "dockerfile": "FROM java:8-jre\n\n## Adds scripts and tools\nADD bin /usr/local/bin\n\n## Update new-relic\nRUN cd /tmp && curl -s \"https://repository.sonatype.org/service/local/artifact/maven/content?r=central-proxy&g=com.newrelic.agent.java&a=newrelic-java&e=zip&v=LATEST\" -o newrelic.zip && \\\n     unzip -d /opt newrelic.zip && \\\n     rm -f /tmp/newrelic.zip && \\\n     rm -fr /opt/newrelic/extension* /opt/newrelic/*-api-* && \\\n     unzip -p /opt/newrelic/newrelic.jar META-INF/MANIFEST.MF >/opt/newrelic/VERSION.txt && \\\n     cat /opt/newrelic/VERSION.txt\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "bin",
        "dest": "/usr/local/bin"
      }
    ],
    "expose": [],
    "volume": [],
    "run": [
      "cd /tmp && curl -s \"https://repository.sonatype.org/service/local/artifact/maven/content?r=central-proxy&g=com.newrelic.agent.java&a=newrelic-java&e=zip&v=LATEST\" -o newrelic.zip &&      unzip -d /opt newrelic.zip &&      rm -f /tmp/newrelic.zip &&      rm -fr /opt/newrelic/extension* /opt/newrelic/*-api-* &&      unzip -p /opt/newrelic/newrelic.jar META-INF/MANIFEST.MF >/opt/newrelic/VERSION.txt &&      cat /opt/newrelic/VERSION.txt"
    ],
    "workdir": [],
    "from": "java:8-jre"
  },
  "source_repository_url": "git@github.com:AudaxHealthInc/docker.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/AudaxHealthInc/docker",
  "docker_repository": "rallydocker/mesos-java-app",
  "docker_image": "rallydocker/mesos-java-app",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "rallydocker/mesos-java-app",
  "revision": "8",
  "uris": [
    "https://hub.docker.com/r/rallydocker/mesos-java-app",
    "https://hub.docker.com/v2/repositories/rallydocker/mesos-java-app",
    "git@github.com:AudaxHealthInc/docker.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Java",
    "Type/Devopsware/Orchestration/Cluster-based/Mesos",
    "Type/Devopsware/Monitoring/New Relic",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://hub.docker.com/r/rallydocker/mesos-java-app",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}