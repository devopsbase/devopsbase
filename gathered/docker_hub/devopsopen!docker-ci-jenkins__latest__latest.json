{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/devopsopen/docker-ci-jenkins",
    "repository_url": "https://hub.docker.com/v2/repositories/devopsopen/docker-ci-jenkins",
    "tags_url": "https://hub.docker.com/v2/repositories/devopsopen/docker-ci-jenkins/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/devopsopen/docker-ci-jenkins/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/devopsopen/docker-ci-jenkins/autobuild",
    "user": "devopsopen",
    "name": "docker-ci-jenkins",
    "namespace": "devopsopen",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 635,
    "last_updated": "2016-10-11T00:36:11.147261Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 288604239,
        "id": 3776976,
        "repository": 792049,
        "creator": 894448,
        "last_updater": 894448,
        "last_updated": "2016-10-11T00:36:10.678196Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "open-devops/docker-ci-jenkins"
  },
  "name": "devopsopen/docker-ci-jenkins Docker container",
  "description": "CI jenkins Image for Open DevOps Pipeline\n",
  "readme": "[![Docker Automated buil](https://img.shields.io/docker/automated/jrottenberg/ffmpeg.svg?maxAge=2592000)](https://hub.docker.com/r/devopsopen/docker-ci-jenkins/)\n\n# CI/CD Management - Jenkins\nCI jenkins Image for Open DevOps Pipeline\n\n- Use latest OS / TINI / Jenkins releases\n- Avoid 2.0 setup wizard but provide secure-by-default configuration\n- Install default suggested plugins\n- Install Additional Useful plugins\n    - [Blue Ocean](https://jenkins.io/projects/blueocean/)\n    - [Docker Pipeline Plugin](https://wiki.jenkins-ci.org/display/JENKINS/CloudBees+Docker+Pipeline+Plugin)\n- Setup Agent port\n\n# docker-ci-jenkins\nCI jenkins Image for Open DevOps Pipeline\n\n# docker pull\ndocker pull devopsopen/docker-ci-jenkins\n\n# docker run\ndocker run -d -p 8080:8080  -p 50000:50000 --name jenkins devopsopen/docker-ci-jenkins\n\n# web access\nhttp://docker-host-machine-ip:8080\n",
  "dockerfile": "#\n# Jenkins Docker Image for Open DevOps Pipeline\n#\n# VERSION : 1.0\n#\nFROM devopsopen/docker-base\n\nMAINTAINER Open DevOps Team <open.devops@gmail.com>\n\nENV REFRESHED_AT 2016-09-09\n\n# Runtime environment settings\nENV JENKINS_HOME /var/jenkins_home\nENV JENKINS_SLAVE_AGENT_PORT 50000\n\n# Build arguments setting\nARG user=jenkins\nARG group=jenkins\nARG uid=1000\nARG gid=1000\n\n# Jenkins is run with user `jenkins`, uid = 1000\n# If you bind mount a volume from the host or a data container,\n# ensure you use the same uid\nRUN addgroup -g ${gid} ${group} \\\n    && adduser -h \"$JENKINS_HOME\" -u ${uid} -G ${group} -s /bin/bash -D ${user}\n\n# `/usr/share/jenkins/ref/` contains all reference configuration we want\n# to set on a fresh new installation. Use it to bundle additional plugins\n# or config file with your custom jenkins Docker image.\nRUN mkdir -p /usr/share/jenkins/ref/init.groovy.d\n\nENV TINI_VERSION 0.10.0\nENV TINI_SHA 7d00da20acc5c3eb21d959733917f6672b57dabb\n\n# Use tini as subreaper in Docker container to adopt zombie processes\nRUN curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -o /bin/tini && chmod +x /bin/tini \\\n  && echo \"$TINI_SHA  /bin/tini\" | sha1sum -c -\n\nCOPY tcp-slave-agent-port.groovy /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy\nCOPY setup-security-control.groovy /usr/share/jenkins/ref/init.groovy.d/setup-security-control.groovy\n\n# jenkins version being bundled in this docker image\nARG JENKINS_VERSION\nENV JENKINS_VERSION ${JENKINS_VERSION:-2.25}\n\n# jenkins.war checksum, download will be validated using it\nARG JENKINS_SHA=1c4a750b7d7102c5fc9b78550fd3dcc93d7374da\n\n# Can be used to customize where jenkins.war get downloaded from\nARG JENKINS_URL=http://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war\n\n# could use ADD but this one does not check Last-Modified header neither does it allow to control checksum\n# see https://github.com/docker/docker/issues/8331\nRUN curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war \\\n    && echo \"${JENKINS_SHA}  /usr/share/jenkins/jenkins.war\" | sha1sum -c -\n\nENV JENKINS_UC https://updates.jenkins.io\nRUN chown -R ${user} \"$JENKINS_HOME\" /usr/share/jenkins/ref\n\n# Install Maven\nARG MAVEN_VERSION=3.3.9\nARG USER_HOME_DIR=\"/root\"\nENV MAVEN_CONFIG \"$USER_HOME_DIR/.m2\"\nENV MAVEN_HOME /usr/share/maven\nENV JENKINS_MAVEN_CONFIG \"$MAVEN_HOME/conf\"\n\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref $MAVEN_CONFIG \\\n    && curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n       | tar -xzC /usr/share/maven --strip-components=1 \\\n    && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\n\nCOPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY mvn-settings-docker.xml $MAVEN_CONFIG/settings.xml\nRUN /usr/local/bin/mvn-entrypoint.sh \\\n    && cp -f $MAVEN_CONFIG/settings.xml $JENKINS_MAVEN_CONFIG/settings.xml \\\n    && chown -R ${user} \"$MAVEN_HOME\"\n\n# for main web interface:\nEXPOSE 8080\n\n# will be used by attached slave agents:\nEXPOSE 50000\n\nENV COPY_REFERENCE_FILE_LOG $JENKINS_HOME/copy_reference_file.log\n\nUSER ${user}\n\nCOPY jenkins-support /usr/local/bin/jenkins-support\nCOPY jenkins.sh /usr/local/bin/jenkins.sh\n\n# Install jenkins plugins\nCOPY plugins.sh /usr/local/bin/plugins.sh\nCOPY install-plugins.sh /usr/local/bin/install-plugins.sh\n\nCOPY plugins.txt /usr/share/jenkins/ref/plugins.txt\nRUN /usr/local/bin/plugins.sh /usr/share/jenkins/ref/plugins.txt\n\n# Jenkins home directory is a volume, so configuration and build history\n# can be persisted and survive image upgrades\nVOLUME /var/jenkins_home\n\n# Execute jenkins services\nENTRYPOINT [\"/bin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      8080,
      50000
    ],
    "volume": [
      "/var/jenkins_home"
    ],
    "run": [
      "addgroup -g ${gid} ${group}     && adduser -h \"$JENKINS_HOME\" -u ${uid} -G ${group} -s /bin/bash -D ${user}",
      "mkdir -p /usr/share/jenkins/ref/init.groovy.d",
      "curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -o /bin/tini && chmod +x /bin/tini   && echo \"$TINI_SHA  /bin/tini\" | sha1sum -c -",
      "curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war     && echo \"${JENKINS_SHA}  /usr/share/jenkins/jenkins.war\" | sha1sum -c -",
      "chown -R ${user} \"$JENKINS_HOME\" /usr/share/jenkins/ref",
      "mkdir -p /usr/share/maven /usr/share/maven/ref $MAVEN_CONFIG     && curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz        | tar -xzC /usr/share/maven --strip-components=1     && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn",
      "/usr/local/bin/mvn-entrypoint.sh     && cp -f $MAVEN_CONFIG/settings.xml $JENKINS_MAVEN_CONFIG/settings.xml     && chown -R ${user} \"$MAVEN_HOME\"",
      "/usr/local/bin/plugins.sh /usr/share/jenkins/ref/plugins.txt"
    ],
    "workdir": [],
    "from": "devopsopen/docker-base",
    "maintainer": "Open DevOps Team <open.devops@gmail.com>",
    "env": {
      "REFRESHED_AT": "2016-09-09",
      "JENKINS_HOME": "/var/jenkins_home",
      "JENKINS_SLAVE_AGENT_PORT": "50000",
      "TINI_VERSION": "0.10.0",
      "TINI_SHA": "7d00da20acc5c3eb21d959733917f6672b57dabb",
      "JENKINS_VERSION": "${JENKINS_VERSION:-2.25}",
      "JENKINS_UC": "https://updates.jenkins.io",
      "MAVEN_CONFIG": "\"$USER_HOME_DIR/.m2\"",
      "MAVEN_HOME": "/usr/share/maven",
      "JENKINS_MAVEN_CONFIG": "\"$MAVEN_HOME/conf\"",
      "COPY_REFERENCE_FILE_LOG": "$JENKINS_HOME/copy_reference_file.log"
    },
    "arg": "USER_HOME_DIR=\"/root\"",
    "copy": "plugins.txt /usr/share/jenkins/ref/plugins.txt",
    "user": "${user}",
    "entrypoint": "[\"/bin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]"
  },
  "source_repository_url": "https://github.com/open-devops/docker-ci-jenkins.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/open-devops/docker-ci-jenkins",
  "docker_repository": "devopsopen/docker-ci-jenkins",
  "docker_image": "devopsopen/docker-ci-jenkins",
  "parameters_schema": {
    "REFRESHED_AT": {
      "default": "2016-09-09",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_HOME": {
      "default": "/var/jenkins_home",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_SLAVE_AGENT_PORT": {
      "default": "50000",
      "type": "string",
      "mapping": "environment_variable"
    },
    "TINI_VERSION": {
      "default": "0.10.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "TINI_SHA": {
      "default": "7d00da20acc5c3eb21d959733917f6672b57dabb",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_VERSION": {
      "default": "${JENKINS_VERSION:-2.25}",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_UC": {
      "default": "https://updates.jenkins.io",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MAVEN_CONFIG": {
      "default": "\"$USER_HOME_DIR/.m2\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MAVEN_HOME": {
      "default": "/usr/share/maven",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_MAVEN_CONFIG": {
      "default": "\"$MAVEN_HOME/conf\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "COPY_REFERENCE_FILE_LOG": {
      "default": "$JENKINS_HOME/copy_reference_file.log",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        8080,
        50000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "devopsopen/docker-ci-jenkins",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/devopsopen/docker-ci-jenkins",
    "https://hub.docker.com/v2/repositories/devopsopen/docker-ci-jenkins",
    "https://github.com/open-devops/docker-ci-jenkins.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image",
    "Type/Devopsware/Integration/Jenkins"
  ],
  "info_url": "https://hub.docker.com/r/devopsopen/docker-ci-jenkins",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}