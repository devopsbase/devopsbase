{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/carinamarina/try-rails",
    "repository_url": "https://hub.docker.com/v2/repositories/carinamarina/try-rails",
    "tags_url": "https://hub.docker.com/v2/repositories/carinamarina/try-rails/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/carinamarina/try-rails/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/carinamarina/try-rails/autobuild",
    "user": "carinamarina",
    "name": "try-rails",
    "namespace": "carinamarina",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 72,
    "last_updated": "2016-09-01T01:53:43.136938Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 336721383,
        "id": 1835570,
        "repository": 482249,
        "creator": 427606,
        "last_updater": 478453,
        "last_updated": "2016-09-01T01:53:42.676764Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "getcarina/examples"
  },
  "name": "carinamarina/try-rails Docker container",
  "description": "This is a sample rails app, running on port 3000, which connects to a MySQL database.",
  "readme": "# Try Rails on Carina\n\nThis is a sample Rails application which runs on Carina and is backed by a\nMySQL database hosted on the Rackspace Cloud Database service.\n\n1. Create a MySQL database in the IAD region in the Rackspace Cloud Control Panel.\n    Note the host name, and credentials as it will be needed in the next step.\n\n2. Run the `carinamarina/try-rails` container. Update the `DATABASE_URL` environment\n    variable with your database connection details.\n\n    ```bash\n    docker run --name rails \\\n    --env DATABASE_URL=\"mysql://username:password@host/dbname\" \\\n    --detach \\\n    --publish-all \\\n    carinamarina/try-rails\n    ```\n\n3. Identity the port where the rails application was published. In the example below,\n    the port is 32800.\n\n    ```bash\n    $ docker port rails\n    3000/tcp -> 172.99.65.237:32800\n    ```\n\n4. Open http://<em>&lt;dockerHost&gt;</em>:<em>&lt;containerPort&gt;</em>,\n    for example **http://172.99.65.237:32800**. You should see the\n    Powered By Carina badge if the database connection was successful.\n\n    ![Powered by Carina](carina.png)\n",
  "dockerfile": "FROM rails\n\n# Generate a rails app\nRUN cd /usr/src && rails new --skip-bundle app\nWORKDIR /usr/src/app\nRUN bundle install\nRUN bin/rails generate controller Demo helloworld\n\n# Switch to MySQL\nRUN rm Gemfile.lock && sed -i -- \"s/gem 'sqlite3'/gem 'mysql'/g\" Gemfile && bundle install\n\n# Make it pretty\nCOPY carina.png public/\nCOPY helloworld.html.erb app/views/demo/\n\n# Show the demo page as the homepage\nRUN sed -i -- \"s/get 'demo\\/helloworld'/root to: 'demo#helloworld'/g\" config/routes.rb\n\nEXPOSE 3000\n\nCMD bin/rails server -b 0.0.0.0\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      3000
    ],
    "volume": [],
    "run": [
      "cd /usr/src && rails new --skip-bundle app",
      "bundle install",
      "bin/rails generate controller Demo helloworld",
      "rm Gemfile.lock && sed -i -- \"s/gem 'sqlite3'/gem 'mysql'/g\" Gemfile && bundle install",
      "sed -i -- \"s/get 'demo\\/helloworld'/root to: 'demo#helloworld'/g\" config/routes.rb"
    ],
    "workdir": [
      "/usr/src/app"
    ],
    "from": "rails",
    "copy": "helloworld.html.erb app/views/demo/",
    "cmd": "bin/rails server -b 0.0.0.0"
  },
  "source_repository_url": "https://github.com/getcarina/examples.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/getcarina/examples",
  "docker_repository": "carinamarina/try-rails",
  "docker_image": "carinamarina/try-rails",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        3000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "carinamarina/try-rails",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/carinamarina/try-rails",
    "https://hub.docker.com/v2/repositories/carinamarina/try-rails",
    "https://github.com/getcarina/examples.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Ruby",
    "Type/Middleware/Data Store/Relational/MySQL"
  ],
  "info_url": "https://hub.docker.com/r/carinamarina/try-rails",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}