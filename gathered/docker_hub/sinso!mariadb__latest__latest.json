{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/sinso/mariadb",
    "repository_url": "https://hub.docker.com/v2/repositories/sinso/mariadb",
    "tags_url": "https://hub.docker.com/v2/repositories/sinso/mariadb/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/sinso/mariadb/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/sinso/mariadb/autobuild",
    "user": "sinso",
    "name": "mariadb",
    "namespace": "sinso",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 468,
    "last_updated": "2016-10-15T02:30:58.813794Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 117745043,
        "id": 211034,
        "repository": 216923,
        "creator": 181396,
        "last_updater": 181396,
        "last_updated": "2016-10-15T02:30:58.420568Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "sinso/docker-mariadb"
  },
  "name": "sinso/mariadb Docker container",
  "description": "",
  "readme": "Docker MariaDB\n==============\n\nDB export\n---------\nYou can create database dumps with the `db_dump` command. There are no credentials necessary to run this command. And you can add custom parameters (e.g. `--no-data`)\n\n\n* Output dump on STDOUT\n  ```\n  docker exec <DOCKER-CONTAINER-NAME> db_dump\n  ```\n\n* Output dump on STDOUT (with custom parameters)\n  ```\n  docker exec <DOCKER-CONTAINER-NAME> db_dump --no-data\n  ```\n\n* Save dump in file\n  ```\n  docker exec <DOCKER-CONTAINER-NAME> db_dump > `date +%Y%m%d`.sql\n  ```\n\n* Save dump in compressed file\n  ```\n  docker exec <DOCKER-CONTAINER-NAME> db_dump | gzip -9 > `date +%Y%m%d`.sql.gz\n  ```\n\n* Execute a fast dump (nice and without locking tables). There's the risk to get a inconsistent dump.\n  ```\n  docker exec <DOCKER-CONTAINER-NAME> db_fast_dump\n  ```\n\nDB import\n---------\n\nTo import a database use the following commands\n\n* Import from a sql-file\n  ```\n  docker exec -i <DOCKER-CONTAINER-NAME> db_import < dump.sql\n  ```\n\n* Import from another db container\n  ```\n  docker exec <SOURCE-DOCKER-CONTAINER-NAME> db_dump | docker exec -i <TARGET-DOCKER-CONTAINER-NAME> db_import\n  ```\n\n* ... or even piped through ssh to a remote server\n  ```\n` docker exec <SOURCE-DOCKER-CONTAINER-NAME> db_dump | ssh user@server \"docker exec -i <TARGET-DOCKER-CONTAINER-NAME> db_import\"\n  ```\n",
  "dockerfile": "FROM mariadb:10.0\nMAINTAINER Jonas Renggli <jonas.renggli@swisscom.com>\n\n# set default encoding to utf8\nRUN sed -i 's/^#default-character-set/default-character-set/' /etc/mysql/conf.d/mariadb.cnf && \\\n\tsed -i 's/^#character-set-server/character-set-server/' /etc/mysql/conf.d/mariadb.cnf && \\\n\tsed -i 's/^#collation-server/collation-server/' /etc/mysql/conf.d/mariadb.cnf && \\\n\tsed -i 's/^#character_set_server/character_set_server/' /etc/mysql/conf.d/mariadb.cnf && \\\n\tsed -i 's/^#collation_server/collation_server/' /etc/mysql/conf.d/mariadb.cnf\n\nCOPY assets/pre-entrypoint.sh /pre-entrypoint.sh\nCOPY assets/bin/* /usr/local/bin/\n\nRUN cat /pre-entrypoint.sh /docker-entrypoint.sh > /temp-entrypoint.sh ; rm /docker-entrypoint.sh ; mv /temp-entrypoint.sh /docker-entrypoint.sh ; chmod +x /docker-entrypoint.sh\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "sed -i 's/^#default-character-set/default-character-set/' /etc/mysql/conf.d/mariadb.cnf && \tsed -i 's/^#character-set-server/character-set-server/' /etc/mysql/conf.d/mariadb.cnf && \tsed -i 's/^#collation-server/collation-server/' /etc/mysql/conf.d/mariadb.cnf && \tsed -i 's/^#character_set_server/character_set_server/' /etc/mysql/conf.d/mariadb.cnf && \tsed -i 's/^#collation_server/collation_server/' /etc/mysql/conf.d/mariadb.cnf",
      "cat /pre-entrypoint.sh /docker-entrypoint.sh > /temp-entrypoint.sh ; rm /docker-entrypoint.sh ; mv /temp-entrypoint.sh /docker-entrypoint.sh ; chmod +x /docker-entrypoint.sh"
    ],
    "workdir": [],
    "from": "mariadb:10.0",
    "maintainer": "Jonas Renggli <jonas.renggli@swisscom.com>",
    "copy": "assets/bin/* /usr/local/bin/"
  },
  "source_repository_url": "https://github.com/sinso/docker-mariadb.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/sinso/docker-mariadb",
  "docker_repository": "sinso/mariadb",
  "docker_image": "sinso/mariadb",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "sinso/mariadb",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/sinso/mariadb",
    "https://hub.docker.com/v2/repositories/sinso/mariadb",
    "https://github.com/sinso/docker-mariadb.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Data Store/Relational/MariaDB"
  ],
  "info_url": "https://hub.docker.com/r/sinso/mariadb",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}