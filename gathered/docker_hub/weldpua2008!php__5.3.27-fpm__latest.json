{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/weldpua2008/php",
    "repository_url": "https://hub.docker.com/v2/repositories/weldpua2008/php",
    "tags_url": "https://hub.docker.com/v2/repositories/weldpua2008/php/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/weldpua2008/php/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/weldpua2008/php/autobuild",
    "user": "weldpua2008",
    "name": "php",
    "namespace": "weldpua2008",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 4043,
    "last_updated": "2016-10-15T04:24:25.394740Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "5.3.27-fpm",
        "full_size": 113655361,
        "id": 2847612,
        "repository": 651389,
        "creator": 92355,
        "last_updater": 92355,
        "last_updated": "2016-10-15T04:24:24.726786Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "7.0.5-fpm",
        "full_size": 188673042,
        "id": 2847882,
        "repository": 651389,
        "creator": 92355,
        "last_updater": 92355,
        "last_updated": "2016-10-15T04:13:27.660300Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.3-fpm",
        "full_size": 113655171,
        "id": 3024785,
        "repository": 651389,
        "creator": 92355,
        "last_updater": 92355,
        "last_updated": "2016-10-15T03:50:42.388296Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.3-wordpress-fpm",
        "full_size": 131486932,
        "id": 3036566,
        "repository": 651389,
        "creator": 92355,
        "last_updater": 92355,
        "last_updated": "2016-10-15T03:39:49.989921Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "7.0.5-cli",
        "full_size": 175506117,
        "id": 2848139,
        "repository": 651389,
        "creator": 92355,
        "last_updater": 92355,
        "last_updated": "2016-10-15T03:24:39.790436Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.3.27-cli",
        "full_size": 110028485,
        "id": 2848253,
        "repository": 651389,
        "creator": 92355,
        "last_updater": 92355,
        "last_updated": "2016-10-15T03:02:53.586292Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "weldpua2008/docker-php"
  },
  "name": "weldpua2008/php Docker container",
  "description": "PHP images",
  "readme": "[![dockeri.co](http://dockeri.co/image/weldpua2008/php)](https://hub.docker.com/r/weldpua2008/php/)\n\n[![](https://imagelayers.io/badge/weldpua2008/php:latest.svg)](https://imagelayers.io/?images=weldpua2008/php:latest 'Get your own badge on imagelayers.io')\n\n[![Docker Pulls](https://img.shields.io/docker/pulls/weldpua2008/php.svg)](https://hub.docker.com/r/weldpua2008/php/)\n[![Docker Stars](https://img.shields.io/docker/stars/weldpua2008/php.svg)](https://hub.docker.com/r/weldpua2008/php/)\n[![GitHub issues](https://img.shields.io/github/issues/weldpua2008/php.svg)](https://github.com/weldpua2008/docker-php/issues) [![GitHub forks](https://img.shields.io/github/forks/weldpua2008/docker-php.svg)](https://github.com/weldpua2008/docker-php/network) [![GitHub stars](https://img.shields.io/github/stars/weldpua2008/docker-php.svg)](https://github.com/weldpua2008/docker-php/stargazers) [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/weldpua2008/docker-php/master/LICENSE) \n\n# What is PHP?\n\nPHP is a server-side scripting language designed for web development, but which can also be used as a general-purpose programming language. PHP can be added to straight HTML or it can be used with a variety of templating engines and web frameworks. PHP code is usually processed by an interpreter, which is either implemented as a native module on the web-server or as a common gateway interface (CGI).\n\nHow to install more PHP extensions\n\nWe provide the helper scripts docker-php-ext-configure, docker-php-ext-install, and docker-php-ext-enable ([from docker lib](https://github.com/docker-library/php)) to more easily install PHP extensions.\n\n# PHP Core Extensions\n\nFor example, if you want to have a PHP-FPM image with iconv, mcrypt and gd extensions, you can inherit the base image that you like, and write your own Dockerfile like this:\n\n```\nFROM weldpua2008/php:5.3-fpm\nRUN apt-get update && apt-get install -y \\\n        libfreetype6-dev \\\n        libjpeg62-turbo-dev \\\n        libmcrypt-dev \\\n        libpng12-dev \\\n    && docker-php-ext-install -j$(nproc) iconv mcrypt \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) gd\n```\n\nRemember, you must install dependencies for your extensions manually. If an extension needs custom configure arguments, you can use the docker-php-ext-configure script like this example.\n\n# PECL extensions\n\nSome extensions are not provided with the PHP source, but are instead available through PECL. To install a PECL extension, use pecl install to download and compile it, then use docker-php-ext-enable to enable it:\n\n```\nFROM weldpua2008/php:5.3-fpm\nRUN apt-get update && apt-get install -y libmemcached-dev \\\n    && pecl install memcached \\\n    && docker-php-ext-enable memcached\n```\n\n# Other extensions\n\nSome extensions are not provided via either Core or PECL; these can be installed too, although the process is less automated:\n\n```\nFROM weldpua2008/php:5.3-fpm\nRUN curl -fsSL 'https://xcache.lighttpd.net/pub/Releases/3.2.0/xcache-3.2.0.tar.gz' -o xcache.tar.gz \\\n    && mkdir -p xcache \\\n    && tar -xf xcache.tar.gz -C xcache --strip-components=1 \\\n    && rm xcache.tar.gz \\\n    && ( \\\n        cd xcache \\\n        && phpize \\\n        && ./configure --enable-xcache \\\n        && make -j$(nproc) \\\n        && make install \\\n    ) \\\n    && rm -r xcache \\\n    && docker-php-ext-enable xcache    \n```\n\n# Without a Dockerfile\nIf you don't want to include a Dockerfile in your project, it is sufficient to do the following:\n```\n$ docker run -d -p 80:80 --name my-apache-php-app -v \"$PWD\":/var/www/html weldpua2008/php:5.3-fpm\n```\n",
  "dockerfile": "FROM debian:wheezy\n\n# based on https://raw.githubusercontent.com/docker-library/php/4677ca134fe48d20c820a19becb99198824d78e3/5.5/Dockerfile\n\nMAINTAINER Valeriy Solovyov <weldpua2008@gmail.com>\n\n# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)\n# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)\n\nWORKDIR /var/www/html\nCOPY docker-php-ext-* /usr/local/bin/\n\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n\texport DEBIAN_RELEASE=$(awk -F'[\" ]' '/VERSION=/{print $3}'  /etc/os-release | tr -cd '[[:alnum:]]._-' ) && \\\n    [[ \"x${DEBIAN_RELEASE}\" = \"x\" ]] && export DEBIAN_RELEASE=\"unstable\" || echo \"it's ok\" && \\\n    echo \"deb http://httpredir.debian.org/debian ${DEBIAN_RELEASE} main  contrib non-free \" > /etc/apt/sources.list && \\\n    echo \"deb http://httpredir.debian.org/debian ${DEBIAN_RELEASE}-updates main  contrib non-free \" >> /etc/apt/sources.list && \\\n    echo \"deb http://security.debian.org ${DEBIAN_RELEASE}/updates main  contrib non-free\" >> /etc/apt/sources.list && \\\n    echo \"deb-src  http://httpredir.debian.org/debian ${DEBIAN_RELEASE} main  contrib non-free\" >> /etc/apt/sources.list && \\\n    echo \"deb-src  http://httpredir.debian.org/debian ${DEBIAN_RELEASE}-updates main  contrib non-free\" >> /etc/apt/sources.list && \\\n    echo \"deb-src  http://security.debian.org ${DEBIAN_RELEASE}/updates main  contrib non-free\" >> /etc/apt/sources.list && \\\n    apt-get update && \\\n\tapt-get install -y apt-utils autoconf file g++ \tgcc libc6-dev make pkg-config re2c --no-install-recommends\t&& \\\n    apt-get install -y ca-certificates curl libedit2 libsqlite3-0 libxml2 --no-install-recommends && \\\n    export PHP_INI_DIR=/usr/local/etc/php && \\\n    mkdir -p $PHP_INI_DIR/conf.d && \\\n    export PHP_EXTRA_CONFIGURE_ARGS=\" --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data\" && \\\n    export GPG_KEYS=\"0B96609E270F565C13292B24C13C70B87267B52D 0BD78B5F97500D450838F95DFE857D9A90D90EC1 F38252826ACD957EF380D39F2F7956BC5DA04B5D\" && \\\n    export PHP_VERSION=5.3.27 && \\\n    export PHP_FILENAME=php-5.3.27.tar.bz2 && \\\n    export PHP_MD5=25ae23a5b9615fe8d33de5b63e1bb788 && \\\n  set -xe && \\\n\texport buildDeps=\"$PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils bzip2\" && \\\n\tapt-get install -y $buildDeps --no-install-recommends && \\\n\trm -rf /var/lib/apt/lists/* && \\\n\tcurl -fSL \"http://php.net/get/$PHP_FILENAME/from/this/mirror\" -o \"$PHP_FILENAME\" && \\\n\techo \"$PHP_MD5 *$PHP_FILENAME\" | md5sum -c - && \\\n\tcurl -fSL \"http://php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o \"$PHP_FILENAME.asc\" && \\\n\texport GNUPGHOME=\"$(mktemp -d)\" && \\\n\tfor key in $GPG_KEYS; do gpg --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys \"$key\"; done && \\\n\tgpg --batch --verify \"$PHP_FILENAME.asc\" \"$PHP_FILENAME\" && \\\n\trm -r \"$GNUPGHOME\" \"$PHP_FILENAME.asc\" && \\\n\tmkdir -p /usr/src/php && \\\n\ttar jxf \"$PHP_FILENAME\" -C /usr/src/php --strip-components=1 && \\\n\trm \"$PHP_FILENAME\" && \\\n\tcd /usr/src/php && \\\n\t./configure --with-config-file-path=\"$PHP_INI_DIR\" \\\n\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n\t--disable-cgi \\\n\t--enable-mysqlnd \\\n\t--enable-mbstring \\\n\t--with-curl \\\n\t--with-libedit \\\n\t--with-openssl \\\n\t--with-zlib $PHP_EXTRA_CONFIGURE_ARGS && \\\n\tmake -j\"$(nproc)\" && \\\n\tmake install && \\\n\t{ find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } && \\\n\tmake clean && \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps && \\\n\trm -r /var/lib/apt/lists/* && \\\n\tset -ex \\\n\t&& cd /usr/local/etc \\\n\t&& if [ -d php-fpm.d ]; then \\\n\t\t# for some reason, upstream's php-fpm.conf.default has \"include=NONE/etc/php-fpm.d/*.conf\"\n\t\tsed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \\\n\t\tcp php-fpm.d/www.conf.default php-fpm.d/www.conf; \\\n\telse \\\n\t\t# PHP 5.x don't use \"include=\" by default, so we'll create our own simple config that mimics PHP 7+ for consistency\n\t\tmkdir php-fpm.d; \\\n\t\tcp php-fpm.conf.default php-fpm.d/www.conf; \\\n\t\t{ \\\n\t\t\techo '[global]'; \\\n\t\t\techo 'include=etc/php-fpm.d/*.conf'; \\\n\t\t} | tee php-fpm.conf; \\\n\tfi \\\n\t&& { \\\n\t\techo '[global]'; \\\n\t\techo 'error_log = /proc/self/fd/2'; \\\n\t\techo; \\\n\t\techo '[www]'; \\\n\t\techo '; if we send this to /proc/self/fd/1, it never appears'; \\\n\t\techo 'access.log = /proc/self/fd/2'; \\\n\t\techo; \\\n\t\techo '; clear_env = no'; \\\n\t\techo; \\\n\t\techo '; Ensure worker stdout and stderr are sent to the main error log.'; \\\n\t\techo 'catch_workers_output = yes'; \\\n\t} | tee php-fpm.d/docker.conf \\\n\t&& { \\\n\t\techo '[global]'; \\\n\t\techo 'daemonize = no'; \\\n\t\techo; \\\n\t\techo '[www]'; \\\n\t\techo 'listen = [::]:9000'; \\\n\t} | tee php-fpm.d/zz-docker.conf\n\n\nEXPOSE 9000\nCMD [\"php-fpm\"]\n\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      9000
    ],
    "volume": [],
    "run": [
      "export DEBIAN_FRONTEND=noninteractive && \texport DEBIAN_RELEASE=$(awk -F'[\" ]' '/VERSION=/{print $3}'  /etc/os-release | tr -cd '[[:alnum:]]._-' ) &&     [[ \"x${DEBIAN_RELEASE}\" = \"x\" ]] && export DEBIAN_RELEASE=\"unstable\" || echo \"it's ok\" &&     echo \"deb http://httpredir.debian.org/debian ${DEBIAN_RELEASE} main  contrib non-free \" > /etc/apt/sources.list &&     echo \"deb http://httpredir.debian.org/debian ${DEBIAN_RELEASE}-updates main  contrib non-free \" >> /etc/apt/sources.list &&     echo \"deb http://security.debian.org ${DEBIAN_RELEASE}/updates main  contrib non-free\" >> /etc/apt/sources.list &&     echo \"deb-src  http://httpredir.debian.org/debian ${DEBIAN_RELEASE} main  contrib non-free\" >> /etc/apt/sources.list &&     echo \"deb-src  http://httpredir.debian.org/debian ${DEBIAN_RELEASE}-updates main  contrib non-free\" >> /etc/apt/sources.list &&     echo \"deb-src  http://security.debian.org ${DEBIAN_RELEASE}/updates main  contrib non-free\" >> /etc/apt/sources.list &&     apt-get update && \tapt-get install -y apt-utils autoconf file g++ \tgcc libc6-dev make pkg-config re2c --no-install-recommends\t&&     apt-get install -y ca-certificates curl libedit2 libsqlite3-0 libxml2 --no-install-recommends &&     export PHP_INI_DIR=/usr/local/etc/php &&     mkdir -p $PHP_INI_DIR/conf.d &&     export PHP_EXTRA_CONFIGURE_ARGS=\" --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data\" &&     export GPG_KEYS=\"0B96609E270F565C13292B24C13C70B87267B52D 0BD78B5F97500D450838F95DFE857D9A90D90EC1 F38252826ACD957EF380D39F2F7956BC5DA04B5D\" &&     export PHP_VERSION=5.3.27 &&     export PHP_FILENAME=php-5.3.27.tar.bz2 &&     export PHP_MD5=25ae23a5b9615fe8d33de5b63e1bb788 &&   set -xe && \texport buildDeps=\"$PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev xz-utils bzip2\" && \tapt-get install -y $buildDeps --no-install-recommends && \trm -rf /var/lib/apt/lists/* && \tcurl -fSL \"http://php.net/get/$PHP_FILENAME/from/this/mirror\" -o \"$PHP_FILENAME\" && \techo \"$PHP_MD5 *$PHP_FILENAME\" | md5sum -c - && \tcurl -fSL \"http://php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o \"$PHP_FILENAME.asc\" && \texport GNUPGHOME=\"$(mktemp -d)\" && \tfor key in $GPG_KEYS; do gpg --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys \"$key\"; done && \tgpg --batch --verify \"$PHP_FILENAME.asc\" \"$PHP_FILENAME\" && \trm -r \"$GNUPGHOME\" \"$PHP_FILENAME.asc\" && \tmkdir -p /usr/src/php && \ttar jxf \"$PHP_FILENAME\" -C /usr/src/php --strip-components=1 && \trm \"$PHP_FILENAME\" && \tcd /usr/src/php && \t./configure --with-config-file-path=\"$PHP_INI_DIR\" \t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t--disable-cgi \t--enable-mysqlnd \t--enable-mbstring \t--with-curl \t--with-libedit \t--with-openssl \t--with-zlib $PHP_EXTRA_CONFIGURE_ARGS && \tmake -j\"$(nproc)\" && \tmake install && \t{ find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } && \tmake clean && \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps && \trm -r /var/lib/apt/lists/* && \tset -ex \t&& cd /usr/local/etc \t&& if [ -d php-fpm.d ]; then \t\t# for some reason, upstream's php-fpm.conf.default has \"include=NONE/etc/php-fpm.d/*.conf\""
    ],
    "workdir": [
      "/var/www/html"
    ],
    "from": "debian:wheezy",
    "maintainer": "Valeriy Solovyov <weldpua2008@gmail.com>",
    "copy": "docker-php-ext-* /usr/local/bin/",
    "cmd": "[\"php-fpm\"]"
  },
  "source_repository_url": "https://github.com/weldpua2008/docker-php.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/weldpua2008/docker-php",
  "docker_repository": "weldpua2008/php",
  "docker_image": "weldpua2008/php",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        9000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "weldpua2008/php",
  "revision": "5.3.27-fpm",
  "uris": [
    "https://hub.docker.com/r/weldpua2008/php",
    "https://hub.docker.com/v2/repositories/weldpua2008/php",
    "https://github.com/weldpua2008/docker-php.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Mode/Executable/Image",
    "Type/Middleware/Runtime/PHP"
  ],
  "info_url": "https://hub.docker.com/r/weldpua2008/php",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}