{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/istepanov/mongodump",
    "repository_url": "https://hub.docker.com/v2/repositories/istepanov/mongodump",
    "tags_url": "https://hub.docker.com/v2/repositories/istepanov/mongodump/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/istepanov/mongodump/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/istepanov/mongodump/autobuild",
    "user": "istepanov",
    "name": "mongodump",
    "namespace": "istepanov",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 3,
    "pull_count": 27742,
    "last_updated": "2016-10-01T00:48:45.410670Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 112787934,
        "id": 84944,
        "repository": 95655,
        "creator": 108088,
        "last_updater": 108088,
        "last_updated": "2016-10-01T00:48:44.433330Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "istepanov/docker-mongodump"
  },
  "name": "istepanov/mongodump Docker container",
  "description": "Docker image with mongodump running as a cron task",
  "readme": "istepanov/mongodump\n===================\n\nDocker image with mongodump running as a cron task\n\n### Usage\n\nAttach a target mongo container to this container and mount a volume to container's `/data` folder. Backups will appear in this volume. Optionally set up cron job schedule (default is `0 1 * * *` - runs every day at 1:00 am).\n\n    docker run -d \\\n        -v /path/to/target/folder:/backup \\ # where to put backups\n        -e 'CRON_SCHEDULE=0 1 * * *' \\      # cron job schedule\n        --link my-mongo-container:mongo \\   # linked container with running mongo\n        istepanov/mongodump\n\nTo run backup once without cron job, add `no-cron` parameter:\n\n    docker run --rm \\\n        -v /path/to/target/folder:/backup \\ # where to put backups\n        --link my-mongo-container:mongo \\   # linked container with running mongo\n        istepanov/mongodump no-cron\n",
  "dockerfile": "FROM mongo:3.0\nMAINTAINER Ilya Stepanov <dev@ilyastepanov.com>\n\nRUN apt-get update && \\\n    apt-get install -y cron && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\nADD backup.sh /backup.sh\nRUN chmod +x /backup.sh\n\nADD start.sh /start.sh\nRUN chmod +x /start.sh\n\nVOLUME /backup\n\nENTRYPOINT [\"/start.sh\"]\nCMD [\"\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "backup.sh",
        "dest": "/backup.sh"
      },
      {
        "source": "start.sh",
        "dest": "/start.sh"
      }
    ],
    "expose": [],
    "volume": [
      "/backup"
    ],
    "run": [
      "apt-get update &&     apt-get install -y cron &&     apt-get clean && rm -rf /var/lib/apt/lists/*",
      "chmod +x /backup.sh",
      "chmod +x /start.sh"
    ],
    "workdir": [],
    "from": "mongo:3.0",
    "maintainer": "Ilya Stepanov <dev@ilyastepanov.com>",
    "entrypoint": "[\"/start.sh\"]",
    "cmd": "[\"\"]"
  },
  "source_repository_url": "https://github.com/istepanov/docker-mongodump.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/istepanov/docker-mongodump",
  "docker_repository": "istepanov/mongodump",
  "docker_image": "istepanov/mongodump",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "istepanov/mongodump",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/istepanov/mongodump",
    "https://hub.docker.com/v2/repositories/istepanov/mongodump",
    "https://github.com/istepanov/docker-mongodump.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Middleware/Data Store/Document-oriented/MongoDB"
  ],
  "info_url": "https://hub.docker.com/r/istepanov/mongodump",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}