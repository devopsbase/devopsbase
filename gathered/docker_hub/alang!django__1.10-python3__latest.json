{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/alang/django",
    "repository_url": "https://hub.docker.com/v2/repositories/alang/django",
    "tags_url": "https://hub.docker.com/v2/repositories/alang/django/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/alang/django/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/alang/django/autobuild",
    "user": "alang",
    "name": "django",
    "namespace": "alang",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 3,
    "pull_count": 5901,
    "last_updated": "2016-10-14T18:30:28.707860Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "1.10-python3",
        "full_size": 281594965,
        "id": 4116546,
        "repository": 282995,
        "creator": 133018,
        "last_updater": 133018,
        "last_updated": "2016-10-14T18:30:28.279374Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.10-python2-onbuild",
        "full_size": 280271869,
        "id": 4116832,
        "repository": 282995,
        "creator": 133018,
        "last_updater": 133018,
        "last_updated": "2016-10-14T18:27:06.843669Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.9-python3",
        "full_size": 281288607,
        "id": 1491207,
        "repository": 282995,
        "creator": 133018,
        "last_updater": 133018,
        "last_updated": "2016-10-14T18:25:14.453642Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.10-python3-onbuild",
        "full_size": 281595218,
        "id": 4116814,
        "repository": 282995,
        "creator": 133018,
        "last_updater": 133018,
        "last_updated": "2016-10-14T18:21:41.409311Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 281595174,
        "id": 740612,
        "repository": 282995,
        "creator": 133018,
        "last_updater": 133018,
        "last_updated": "2016-10-14T18:19:47.856521Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.8-python3-onbuild",
        "full_size": 280394980,
        "id": 740758,
        "repository": 282995,
        "creator": 133018,
        "last_updater": 133018,
        "last_updated": "2016-10-14T18:16:33.053143Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.9-python2",
        "full_size": 279907679,
        "id": 1491208,
        "repository": 282995,
        "creator": 133018,
        "last_updater": 133018,
        "last_updated": "2016-10-14T18:14:34.668955Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.9-python2-onbuild",
        "full_size": 279908067,
        "id": 1491213,
        "repository": 282995,
        "creator": 133018,
        "last_updater": 133018,
        "last_updated": "2016-10-14T18:11:21.124048Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.8-python2-onbuild",
        "full_size": 279014930,
        "id": 740731,
        "repository": 282995,
        "creator": 133018,
        "last_updater": 133018,
        "last_updated": "2016-10-14T18:09:17.023923Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.10-python2",
        "full_size": 280271869,
        "id": 4116605,
        "repository": 282995,
        "creator": 133018,
        "last_updater": 133018,
        "last_updated": "2016-10-14T18:07:20.348566Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "alesandroLang/docker-django"
  },
  "name": "alang/django Docker container",
  "description": "This image can be used as a starting point to run django applications.",
  "readme": "# Supported tags\n-   latest, 1.10-python3\n-   1.10-python3-onbuild\n-   1.10-python2\n-   1.10-python2-onbuild\n-   1.9-python3\n-   1.9-python3-onbuild\n-   1.9-python2\n-   1.9-python2-onbuild\n-   1.8-python3\n-   1.8-python3-onbuild\n-   1.8-python2\n-   1.8-python2-onbuild\n\n# About this image\nThis image can be used as a starting point to run django applications.\nIt uses [gunicorn](http://gunicorn.org/) in the latest version to serve the wsgi application.\nThe container picks up the wsgi entry point based on the environment variable `DJANGO_APP`.\n\nDjango is already installed within the version specified by the image.\nFor example `1.9-python3` will contain the latest django version of `1.9.x`.\nThe image does also ship with the latest version of `pytz` installed.\n\nThe image does export port `8000`.\n\nIt has a volume defined to generate static resources at `/var/www/static`.\nThe volume `/usr/django/app` can be used for live reload during development.\n\nThe environment variable `GUNICORN_RELOAD` can be set to `true` to active live reload if a source file\ndoes change.\n\nIf the following environment variables are set to `true` the corresponding django command will\nbe executing on container start:\n- `DJANGO_MIGRATE`\n- `DJANGO_COLLECTSTATIC`\n- `DJANGO_COMPRESS`\n\n# How to use this image\n\n## Basic Setup\n\n    FROM alang/django\n    ENV DJANGO_APP=demo                # will start /usr/django/app/demo/wsgi.py\n    COPY django_source /usr/django/app\n\n## Using the onbuild image\n\nThe `-onbuild` variant of the image does assume that your build directory (directory where the\nDockerfile is located) contains a directory called `src` which is the place where the django source\ncode is. This directory will be copied to `/usr/django/app`.\nThe image does also assume that your source code contains a `requirements.txt` file in the `src`\ndirectory. All dependencies listed there will be installed.\n\n## Executing one off commands\n\nHow to execute one off django commands like `makemigrations`:\n\n    docker run --rm -v \"src:/usr/django/app\" alang/django python app/manage.py makemigrations\n\n## Advanced Configuration\n\nA custom gunicorn config can be included:\n\n    COPY gunicorn.conf /etc/gunicorn/\n\n# User Feedback\n\n## Issues\nIf you have any problems with or questions about this image, please contact me through a GitHub issue.\n\n## Contributing\nYou are invited to contribute new features, fixes, or updates, large or small.\nPlease send me a pull request.\n\n",
  "dockerfile": "FROM python:3\n\nEXPOSE 8000\n\nENV GUNICORN_VERSION=19.6.0\nENV DJANGO_VERSION=1.10.1\nENV PYTZ_VERSION=2016.7\n\n# create directory which can be a place for generated static content\n# volume can be used to serve these files with a webserver\nRUN mkdir -p /var/www/static\nVOLUME /var/www/static\n\n# create directory for application source code\n# volume can be used for live-reload during development\nRUN mkdir -p /usr/django/app\nVOLUME /usr/django/app\n\n# add gunicorn config\nRUN mkdir -p /etc/gunicorn\nCOPY gunicorn.conf /etc/gunicorn/\n\n# install gunicorn, django and pytz\nRUN pip install gunicorn==$GUNICORN_VERSION\nRUN pip install django==$DJANGO_VERSION\nRUN pip install pytz==$PYTZ_VERSION\n\n# run start.sh on container start\nCOPY start.sh /usr/django/\nWORKDIR /usr/django\nCMD bash start.sh\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      8000
    ],
    "volume": [
      "/var/www/static",
      "/usr/django/app"
    ],
    "run": [
      "mkdir -p /var/www/static",
      "mkdir -p /usr/django/app",
      "mkdir -p /etc/gunicorn",
      "pip install gunicorn==$GUNICORN_VERSION",
      "pip install django==$DJANGO_VERSION",
      "pip install pytz==$PYTZ_VERSION"
    ],
    "workdir": [
      "/usr/django"
    ],
    "from": "python:3",
    "env": {
      "GUNICORN_VERSION": "19.6.0",
      "DJANGO_VERSION": "1.10.1",
      "PYTZ_VERSION": "2016.7"
    },
    "copy": "start.sh /usr/django/",
    "cmd": "bash start.sh"
  },
  "source_repository_url": "https://github.com/alesandroLang/docker-django.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/alesandroLang/docker-django",
  "docker_repository": "alang/django",
  "docker_image": "alang/django",
  "parameters_schema": {
    "GUNICORN_VERSION": {
      "default": "19.6.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DJANGO_VERSION": {
      "default": "1.10.1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PYTZ_VERSION": {
      "default": "2016.7",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        8000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "alang/django",
  "revision": "1.10-python3",
  "uris": [
    "https://hub.docker.com/r/alang/django",
    "https://hub.docker.com/v2/repositories/alang/django",
    "https://github.com/alesandroLang/docker-django.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Python",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Image",
    "Style/Virtualization Level/Application"
  ],
  "info_url": "https://hub.docker.com/r/alang/django",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}