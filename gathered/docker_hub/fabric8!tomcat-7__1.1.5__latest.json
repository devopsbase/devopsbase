{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/fabric8/tomcat-7",
    "repository_url": "https://hub.docker.com/v2/repositories/fabric8/tomcat-7",
    "tags_url": "https://hub.docker.com/v2/repositories/fabric8/tomcat-7/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/fabric8/tomcat-7/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/fabric8/tomcat-7/autobuild",
    "user": "fabric8",
    "name": "tomcat-7",
    "namespace": "fabric8",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 231,
    "last_updated": "2016-09-19T13:40:59.213871Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "1.1.5",
        "full_size": 159027730,
        "id": 4924643,
        "repository": 776609,
        "creator": 10308,
        "last_updater": 10308,
        "last_updated": "2016-09-19T13:40:58.738688Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 159027695,
        "id": 3666147,
        "repository": 776609,
        "creator": 10308,
        "last_updater": 10308,
        "last_updated": "2016-09-19T13:32:59.001100Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.1.4",
        "full_size": 159027651,
        "id": 4923711,
        "repository": 776609,
        "creator": 10308,
        "last_updater": 10308,
        "last_updated": "2016-09-19T12:52:42.493934Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.1.3",
        "full_size": 158992928,
        "id": 3756338,
        "repository": 776609,
        "creator": 10308,
        "last_updater": 10308,
        "last_updated": "2016-07-08T12:07:04.237308Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.1.2",
        "full_size": 158981302,
        "id": 3682889,
        "repository": 776609,
        "creator": 10308,
        "last_updater": 10308,
        "last_updated": "2016-07-03T17:42:52.698364Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.1.1",
        "full_size": 165274816,
        "id": 3673630,
        "repository": 776609,
        "creator": 10308,
        "last_updater": 10308,
        "last_updated": "2016-07-01T18:46:08.344584Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.1.0",
        "full_size": 165273618,
        "id": 3666194,
        "repository": 776609,
        "creator": 10308,
        "last_updater": 10308,
        "last_updated": "2016-07-01T09:29:37.233776Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "fabric8io-images/tomcat"
  },
  "name": "fabric8/tomcat-7 Docker container",
  "description": "Fabric8 Tomcat 7 Image",
  "readme": "## Apache Tomcat 7.0.70\n\nA simple docker build for installing a vanilla Tomcat 7.0.70 below */opt/tomcat*. It comes out of the box and is intended for use for integration testing.\n\nDuring startup a directory specified by the environment variable `DEPLOY_DIR` (*/deployments* by default) is checked for .war files. If there are any, they are linked into the *webapps/* directory for automatic deployment. This plays nicely with the [docker-maven-plugin](https://github.com/fabric8io/docker-maven-plugin/) and its 'assembly' mode which can automatically create Docker data container with Maven artifacts exposed from a directory */deployments*.\n\n### Agent Bond\n\nFor this image [Agent Bond](https://github.com/fabric8io/agent-bond) is enabled. Agent Bond exports metrics from [Jolokia](http://www.jolokia.org) and [jmx_exporter](https://github.com/prometheus/jmx_exporter).\n\nThe agent is installed as `/opt/agent-bond/agent-bond.jar` and enables the following agents by default:\n\n* [Jolokia](http://www.jolokia.org) : version **undefined** and port **8778**\n* [jmx_exporter](https://github.com/prometheus/jmx_exporter): version **undefined** and port **9779**\n\nYou can influence the behaviour of `agent-bond-opts` by setting various environment variables:\n\n### Agent-Bond Options\n\nAgent bond itself can be influenced with the following environment variables: \n\n* **AB_OFF** : If set disables activation of agent-bond (i.e. echos an empty value). By default, agent-bond is enabled.\n* **AB_ENABLED** : Comma separated list of sub-agents enabled. Currently allowed values are `jolokia` and `jmx_exporter`. \n  By default both are enabled.\n\n\n#### Jolokia configuration\n\n* **AB_JOLOKIA_CONFIG** : If set uses this file (including path) as Jolokia JVM agent properties (as described \n  in Jolokia's [reference manual](http://www.jolokia.org/reference/html/agents.html#agents-jvm)).\n  By default this is `/opt/jolokia/jolokia.properties`.\n* **AB_JOLOKIA_HOST** : Host address to bind to (Default: `0.0.0.0`)\n* **AB_JOLOKIA_PORT** : Port to use (Default: `8778`)\n* **AB_JOLOKIA_USER** : User for authentication. By default authentication is switched off.\n* **AB_JOLOKIA_HTTPS** : Switch on secure communication with https. By default self signed server certificates are generated\n  if no `serverCert` configuration is given in `AB_JOLOKIA_OPTS`\n* **AB_JOLOKIA_PASSWORD** : Password for authentication. By default authentication is switched off.\n* **AB_JOLOKIA_ID** : Agent ID to use (`$HOSTNAME` by default, which is the container id)\n* **AB_JOLOKIA_OPTS**  : Additional options to be appended to the agent opts. They should be given in the format \n  \"key=value,key=value,...\"\n\nSome options for integration in various environments:\n\n* **AB_JOLOKIA_AUTH_OPENSHIFT** : Switch on client authentication for OpenShift TSL communication. The value of this \n  parameter can be a relative distinguished name which must be contained in a presented client certificate. Enabling this\n  parameter will automatically switch Jolokia into https communication mode. The default CA cert is set to \n  `/var/run/secrets/kubernetes.io/serviceaccount/ca.crt` \n  \n#### jmx_exporter configuration\n\n* **AB_JMX_EXPORTER_OPTS** : Configuration to use for `jmx_exporter` (in the format `<port>:<path to config>`)\n* **AB_JMX_EXPORTER_PORT** : Port to use for the JMX Exporter. Default: `9779`\n* **AB_JMX_EXPORTER_CONFIG** : Path to configuration to use for `jmx_exporter`: Default: `/opt/agent-bond/jmx_exporter_config.json`\n\n\n\nFeatures:\n\n* Tomcat Version: **7.0.70**\n* Java Base Image: **jboss/base-jdk:8**\n* Port: **8080**\n* User **admin** (Password: **admin**) has been added to access the admin\n  applications */host-manager* and */manager*)\n* Documentation and examples have been removed\n* Command: `/opt/tomcat/bin/deploy-and-run.sh` which links .war files from */maven* to\n  */opt/tomcat/webapps* and then calls `undefined run`\n* Sets `-Djava.security.egd=file:/dev/./urandom` for faster startup times\n  (though a bit less secure)\n\n### Debugging\n\n  You can enable remote debugging by setting `JAVA_DEBUG` to any value:\n\n  * **JAVA_DEBUG** If set remote debugging will be switched on\n  * **JAVA_DEBUG_PORT** Port used for remote debugging. Default: 5005\n",
  "dockerfile": "FROM jboss/base-jdk:8\n\nMAINTAINER rhuss@redhat.com\n\nEXPOSE 8080\n\nENV TOMCAT_VERSION 7.0.70\nENV DEPLOY_DIR /maven\n\nUSER root\n\n# Agent bond including Jolokia and jmx_exporter\nADD agent-bond-opts /opt/run-java-options\nRUN mkdir -p /opt/agent-bond \\\n && curl http://central.maven.org/maven2/io/fabric8/agent-bond-agent/0.1.4/agent-bond-agent-0.1.4.jar \\\n          -o /opt/agent-bond/agent-bond.jar \\\n && chmod 444 /opt/agent-bond/agent-bond.jar \\\n && chmod 755 /opt/run-java-options\nADD jmx_exporter_config.yml /opt/agent-bond/\nEXPOSE 8778 9779\n\n\n# Get and Unpack Tomcat\nRUN curl http://archive.apache.org/dist/tomcat/tomcat-7/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz -o /tmp/catalina.tar.gz \\\n && tar xzf /tmp/catalina.tar.gz -C /opt \\\n && ln -s /opt/apache-tomcat-${TOMCAT_VERSION} /opt/tomcat \\\n && chown -R jboss /opt/tomcat /opt/apache-tomcat-${TOMCAT_VERSION} \\\n && rm /tmp/catalina.tar.gz\n\n# Add roles\nADD tomcat-users.xml /opt/apache-tomcat-${TOMCAT_VERSION}/conf/\n\n# Startup script\nADD deploy-and-run.sh /opt/apache-tomcat-${TOMCAT_VERSION}/bin/\n\nRUN chmod 755 /opt/apache-tomcat-${TOMCAT_VERSION}/bin/deploy-and-run.sh \\\n && rm -rf /opt/tomcat/webapps/examples /opt/tomcat/webapps/docs \n\nVOLUME [ \"/opt/tomcat/logs\", \"/opt/tomcat/work\", \"/opt/tomcat/temp\", \"/tmp/hsperfdata_root\" ]\n\n# Add debug-options and java-container-options to /opt and make it executable\nCOPY debug-options java-container-options /opt/\nRUN chmod 755 /opt/debug-options /opt/java-container-options\n\n\nENV CATALINA_HOME /opt/tomcat\nENV PATH $PATH:$CATALINA_HOME/bin\n\nCMD /opt/tomcat/bin/deploy-and-run.sh\n\nUSER jboss\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "agent-bond-opts",
        "dest": "/opt/run-java-options"
      },
      {
        "source": "jmx_exporter_config.yml",
        "dest": "/opt/agent-bond/"
      },
      {
        "source": "tomcat-users.xml",
        "dest": "/opt/apache-tomcat-${TOMCAT_VERSION}/conf/"
      },
      {
        "source": "deploy-and-run.sh",
        "dest": "/opt/apache-tomcat-${TOMCAT_VERSION}/bin/"
      }
    ],
    "expose": [
      8080,
      8778
    ],
    "volume": [
      "[ \"/opt/tomcat/logs\", \"/opt/tomcat/work\", \"/opt/tomcat/temp\", \"/tmp/hsperfdata_root\" ]"
    ],
    "run": [
      "mkdir -p /opt/agent-bond  && curl http://central.maven.org/maven2/io/fabric8/agent-bond-agent/0.1.4/agent-bond-agent-0.1.4.jar           -o /opt/agent-bond/agent-bond.jar  && chmod 444 /opt/agent-bond/agent-bond.jar  && chmod 755 /opt/run-java-options",
      "curl http://archive.apache.org/dist/tomcat/tomcat-7/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz -o /tmp/catalina.tar.gz  && tar xzf /tmp/catalina.tar.gz -C /opt  && ln -s /opt/apache-tomcat-${TOMCAT_VERSION} /opt/tomcat  && chown -R jboss /opt/tomcat /opt/apache-tomcat-${TOMCAT_VERSION}  && rm /tmp/catalina.tar.gz",
      "chmod 755 /opt/apache-tomcat-${TOMCAT_VERSION}/bin/deploy-and-run.sh  && rm -rf /opt/tomcat/webapps/examples /opt/tomcat/webapps/docs ",
      "chmod 755 /opt/debug-options /opt/java-container-options"
    ],
    "workdir": [],
    "from": "jboss/base-jdk:8",
    "maintainer": "rhuss@redhat.com",
    "env": {
      "TOMCAT_VERSION": "7.0.70",
      "DEPLOY_DIR": "/maven",
      "CATALINA_HOME": "/opt/tomcat",
      "PATH": "$PATH:$CATALINA_HOME/bin"
    },
    "user": "jboss",
    "copy": "debug-options java-container-options /opt/",
    "cmd": "/opt/tomcat/bin/deploy-and-run.sh"
  },
  "source_repository_url": "https://github.com/fabric8io-images/tomcat.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/fabric8io-images/tomcat",
  "docker_repository": "fabric8/tomcat-7",
  "docker_image": "fabric8/tomcat-7",
  "parameters_schema": {
    "TOMCAT_VERSION": {
      "default": "7.0.70",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DEPLOY_DIR": {
      "default": "/maven",
      "type": "string",
      "mapping": "environment_variable"
    },
    "CATALINA_HOME": {
      "default": "/opt/tomcat",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "$PATH:$CATALINA_HOME/bin",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        8080,
        8778
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "fabric8/tomcat-7",
  "revision": "1.1.5",
  "uris": [
    "https://hub.docker.com/r/fabric8/tomcat-7",
    "https://hub.docker.com/v2/repositories/fabric8/tomcat-7",
    "https://github.com/fabric8io-images/tomcat.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image",
    "Type/Middleware/Application Server/Tomcat"
  ],
  "info_url": "https://hub.docker.com/r/fabric8/tomcat-7",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}