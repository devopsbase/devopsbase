{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/pschiffe/docker101-fedora",
    "repository_url": "https://hub.docker.com/v2/repositories/pschiffe/docker101-fedora",
    "tags_url": "https://hub.docker.com/v2/repositories/pschiffe/docker101-fedora/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/pschiffe/docker101-fedora/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/pschiffe/docker101-fedora/autobuild",
    "user": "pschiffe",
    "name": "docker101-fedora",
    "namespace": "pschiffe",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 69,
    "last_updated": "2016-08-19T13:02:38.533387Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 80796413,
        "id": 2937856,
        "repository": 676578,
        "creator": 247675,
        "last_updater": 247675,
        "last_updated": "2016-08-19T13:02:32.046609Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "pschiffe/docker101"
  },
  "name": "pschiffe/docker101-fedora Docker container",
  "description": "Basic Fedora image with couple of additional packages",
  "readme": "# Linux Containers Course\n\n[![Build Status](https://travis-ci.org/pschiffe/docker101.svg)](https://travis-ci.org/pschiffe/docker101)\n\nSlides are available here - [josefkarasek.github.io/docker101](https://josefkarasek.github.io/docker101/) (source files can be found in the gh-pages branch)\n\nPDF version and archive of the html slides can be found here - [github.com/pschiffe/docker101/releases](https://github.com/pschiffe/docker101/releases)\n\n## Docker Installation\nThis short tutorial guides you through the installation of Docker. However, it does not second the official documentation. If you happen to miss some information, you'll most likely find it [there](https://docs.docker.com/).\n\n### Fedora / CentOS / RHEL\nThe Docker service needs some storage considerations. Ideal case is, when your workstation is using LVM for storage, and you have a free space (20GB or more is recommended) in a volume group. Spare partition or disk is also fine. If not, no worries. Docker will still work just fine, with slightly degraded performance, what is perfectly fine for development and testing purposes.\n\nTo install Docker on Fedora, run:\n```\nsudo dnf install docker\n```\n\nOn CentOS and RHEL, run:\n```\nsudo yum install docker\n```\n\nIf you have a free space in your volume group, and you can use it for the Docker storage, modify `/etc/sysconfig/docker-storage-setup` file. For example:\n```\nVG=my-vol-group\nDATA_SIZE=20GB\n```\n\nIf you have a spare disk or partition, you can use this example:\n```\nDEVS=/dev/vdb1\nVG=docker-vol\nDATA_SIZE=95%VG\n```\n\nIf you haven't, just leave the `/etc/sysconfig/docker-storage-setup` file as it is.\n\nNow just start the Docker service and (optionally) enable it at the boot time:\n```\nsudo systemctl start docker\nsudo systemctl enable docker\n```\n\nWhen running `docker` commands, don't forget to use `sudo`, otherwise you will see something like:\n```\nCannot connect to the Docker daemon. Is the docker daemon running on this host?\n```\n\n#### Ubuntu\nA section of [this tutorial](https://www.digitalocean.com/community/tutorials/how-to-dockerise-and-deploy-multiple-wordpress-applications-on-ubuntu) can be helpful while installing Docker on Ubuntu.\n\n### Windows or Mac Users\nNext couple of lines describe the Atomic Project's bundle, which not only contains Docker, but additional features related to Docker, such as Nulecule or Kubernetes. To install the bundle, you will need these apps (Mac users are encouradged to use brew to [install](#mac_users) them):\n\n1. [VirtualBox](https://www.virtualbox.org/wiki/Downloads) \n2. [Vagrant](https://releases.hashicorp.com/vagrant/1.7.4/vagrant_1.7.4.msi) 1.7.4 - automates operations upon VirtualBox, so you can only run `$ vagrant up` to run the bundle.\n3. [Cygwin](https://www.cygwin.com/) - command line terminal to run your commands ([direct download](https://www.cygwin.com/setup-x86_64.exe)). Click through the installation and on the **Choose A Download Site** select **mirrors.kernel.org** as a download site. In the next window (**Select packages**) search for (1) **rsync** and click on the cycling arrows on the **net** line to install this package, then search for (2) **openssh** and do the same to install it.\n\nAfter the installation restart your PC to apply changes. Then run **CygWin64 Terminal** and type:\n```\nexport VAGRANT_DETECTED_OS=cygwin\nmkdir vagrant-images\ncd vagrant-images\nvagrant init projectatomic/adb\nvagrant up\nvagrant ssh\n```\nNow you're running your own installation of the Atomic project's bundle! You can test your docker installation by typing `docker run hello-world`.\n\n## <a name=\"mac_users\"></a>Mac Users\nJust use brew to download and install necessary software:\n```\nbrew cask install virtualbox\nbrew cask install vagrant\nbrew cask install vagrant-manager\nmkdir vagrant-images\ncd vagrant-images\nvagrant init projectatomic/adb\nvagrant up\nvagrant ssh\n```\nIf installation via brew fails, use the links above and download installers for Mac.\nAfter successful installation open up terminal and type:\n```\nmkdir vagrant-images\ncd vagrant-images\nvagrant init projectatomic/adb\nvagrant up\nvagrant ssh\n```\n\n## Last resort installation\nNor Windows, neither Macs run Docker natively as of yet. To get it there you can use [VirtualBox](https://www.virtualbox.org/wiki/Downloads) and [Docker Toolbox](https://www.docker.com/toolbox). Install VirtualBox first, then Docker Toolbox. After installing both, run the Toolbox. It will download necessary images and load Boot2Docker. Now you can test your installation.\n\n## Test\nTo ensure you have successfully installed Docker issue following command:\n```\ndocker run hello-world\n```\n\n## To pre-download Docker images for workshop, do:\n```\ndocker pull fedora\ndocker pull nginx\ndocker pull mariadb\ndocker pull wordpress\ndocker pull pschiffe/docker101-gcc\n```\n",
  "dockerfile": "FROM fedora:23\nMAINTAINER \"Peter Schiffer\" <pschiffe@redhat.com>\n\nRUN dnf -y --setopt=tsflags=nodocs install \\\n        hostname \\\n        iproute \\\n        procps-ng \\\n        stress \\\n    && dnf -y clean all\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "dnf -y --setopt=tsflags=nodocs install         hostname         iproute         procps-ng         stress     && dnf -y clean all"
    ],
    "workdir": [],
    "from": "fedora:23",
    "maintainer": "\"Peter Schiffer\" <pschiffe@redhat.com>"
  },
  "source_repository_url": "https://github.com/pschiffe/docker101.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/pschiffe/docker101",
  "docker_repository": "pschiffe/docker101-fedora",
  "docker_image": "pschiffe/docker101-fedora",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "pschiffe/docker101-fedora",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/pschiffe/docker101-fedora",
    "https://hub.docker.com/v2/repositories/pschiffe/docker101-fedora",
    "https://github.com/pschiffe/docker101.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image",
    "Type/Infrastructure/Operating System/Linux/Fedora"
  ],
  "info_url": "https://hub.docker.com/r/pschiffe/docker101-fedora",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}