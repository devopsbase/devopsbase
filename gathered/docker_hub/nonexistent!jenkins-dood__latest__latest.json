{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/nonexistent/jenkins-dood",
    "repository_url": "https://hub.docker.com/v2/repositories/nonexistent/jenkins-dood",
    "tags_url": "https://hub.docker.com/v2/repositories/nonexistent/jenkins-dood/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/nonexistent/jenkins-dood/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/nonexistent/jenkins-dood/autobuild",
    "user": "nonexistent",
    "name": "jenkins-dood",
    "namespace": "nonexistent",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 102,
    "last_updated": "2016-10-11T03:37:01.210625Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 491439114,
        "id": 3098365,
        "repository": 698677,
        "creator": 352005,
        "last_updater": 352005,
        "last_updated": "2016-10-11T03:36:59.755601Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "Nnonexistent/jenkins-dood"
  },
  "name": "nonexistent/jenkins-dood Docker container",
  "description": "Jenkins docker config with docker-out-of-the-docker and some additional preinstalled packages",
  "readme": "# jenkins-dood\nJenkins docker config with docker-out-of-the-docker and some additional preinstalled packages\n",
  "dockerfile": "FROM jenkinsci/jenkins\n\n# Switch from jenkins user to root to install packages\nUSER root\n\n# Install docker debian-way\nRUN apt-get update && apt-get install apt-transport-https ca-certificates -y --no-install-recommends && \\\n    apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D && \\\n    echo \"deb https://apt.dockerproject.org/repo debian-jessie main\" >> /etc/apt/sources.list.d/docker.list && \\\n    apt-get update && apt-get install -y --no-install-recommends docker-engine\n\n# Install additional packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        autoconf \\\n        automake \\\n        bzip2 \\\n        cloc \\\n        file \\\n        g++ \\\n        gcc \\\n        imagemagick \\\n        libbz2-dev \\\n        libc6-dev \\\n        libcurl4-openssl-dev \\\n        libdb-dev \\\n        libevent-dev \\\n        libffi-dev \\\n        libgeoip-dev \\\n        libglib2.0-dev \\\n        libjpeg-dev \\\n        liblzma-dev \\\n        libmagickcore-dev \\\n        libmagickwand-dev \\\n        libmysqlclient-dev \\\n        libncurses-dev \\\n        libpng-dev \\\n        libpq-dev \\\n        libreadline-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libtool \\\n        libwebp-dev \\\n        libxml2-dev \\\n        libxslt-dev \\\n        libyaml-dev \\\n        make \\\n        patch \\\n        python-dev \\\n        python-pip \\\n        xz-utils \\\n        zlib1g-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    pip install -U docker-compose virtualenv\n\n# Allow jenkins to manage docker daemon\n# WARNING: This is high security risk as all jobs creators have now root privilegues on HOST docker machine\nRUN groupadd -f docker && \\\n    usermod -aG docker jenkins && \\\n    usermod -aG www-data jenkins\n\n# Switch back to jenkins user\nUSER jenkins\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "apt-get update && apt-get install apt-transport-https ca-certificates -y --no-install-recommends &&     apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D &&     echo \"deb https://apt.dockerproject.org/repo debian-jessie main\" >> /etc/apt/sources.list.d/docker.list &&     apt-get update && apt-get install -y --no-install-recommends docker-engine",
      "apt-get update && apt-get install -y --no-install-recommends         autoconf         automake         bzip2         cloc         file         g++         gcc         imagemagick         libbz2-dev         libc6-dev         libcurl4-openssl-dev         libdb-dev         libevent-dev         libffi-dev         libgeoip-dev         libglib2.0-dev         libjpeg-dev         liblzma-dev         libmagickcore-dev         libmagickwand-dev         libmysqlclient-dev         libncurses-dev         libpng-dev         libpq-dev         libreadline-dev         libsqlite3-dev         libssl-dev         libtool         libwebp-dev         libxml2-dev         libxslt-dev         libyaml-dev         make         patch         python-dev         python-pip         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/* &&     pip install -U docker-compose virtualenv",
      "groupadd -f docker &&     usermod -aG docker jenkins &&     usermod -aG www-data jenkins"
    ],
    "workdir": [],
    "from": "jenkinsci/jenkins",
    "user": "jenkins"
  },
  "source_repository_url": "https://github.com/Nnonexistent/jenkins-dood.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/Nnonexistent/jenkins-dood",
  "docker_repository": "nonexistent/jenkins-dood",
  "docker_image": "nonexistent/jenkins-dood",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "nonexistent/jenkins-dood",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/nonexistent/jenkins-dood",
    "https://hub.docker.com/v2/repositories/nonexistent/jenkins-dood",
    "https://github.com/Nnonexistent/jenkins-dood.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Integration/Jenkins"
  ],
  "info_url": "https://hub.docker.com/r/nonexistent/jenkins-dood",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}