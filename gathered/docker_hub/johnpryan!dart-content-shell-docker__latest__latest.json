{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/johnpryan/dart-content-shell-docker",
    "repository_url": "https://hub.docker.com/v2/repositories/johnpryan/dart-content-shell-docker",
    "tags_url": "https://hub.docker.com/v2/repositories/johnpryan/dart-content-shell-docker/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/johnpryan/dart-content-shell-docker/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/johnpryan/dart-content-shell-docker/autobuild",
    "user": "johnpryan",
    "name": "dart-content-shell-docker",
    "namespace": "johnpryan",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 150,
    "last_updated": "2016-09-19T23:29:55.478802Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 625678202,
        "id": 4393931,
        "repository": 864795,
        "creator": 57632,
        "last_updater": 57632,
        "last_updated": "2016-09-19T23:29:55.070210Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.19.1",
        "full_size": 625678488,
        "id": 4933111,
        "repository": 864795,
        "creator": 57632,
        "last_updater": 57632,
        "last_updated": "2016-09-19T23:23:15.906758Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "johnpryan/dart-content-shell-docker"
  },
  "name": "johnpryan/dart-content-shell-docker Docker container",
  "description": "Docker image for Dart with Content Shell.  Useful for CI",
  "readme": "This is a docker container for dart apps.  It installs Dartium and content-shell\nfor CI builds.\n\n## Example\n\nYou can add a script (e.g. `tool/run_tests` to your Dart project to run your\nbrowser tests:\n\n```bash\n#!/bin/bash\n\npub run test -p dartium\n```\n\nThen in your CI script, use xvfb-run:\n\n```bash\nxvfb-run ./tool/run_tests\n```\nUsing a script ensures that `pub` runs within a child process owned by `xvfb`.\n\n",
  "dockerfile": "FROM google/dart:1.19.1\nMAINTAINER  John Ryan <john.p.ryan4@gmail.com>\nLABEL Description=\"Dart SDK with content-shell\"\n\n# Configuration\nENV CHANNEL stable\nENV SDK_VERSION 1.19.1\nENV ARCHIVE_URL https://storage.googleapis.com/dart-archive/channels/$CHANNEL/release/$SDK_VERSION\nENV PATH $PATH:/usr/lib/dart/bin\n\n# Install third-party dependencies.\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu precise main multiverse\" \\ \n    >> /etc/apt/sources.list\nRUN apt-get update; echo 'true'\nRUN apt-get install -y --force-yes git wget unzip xvfb chromedriver libgconf-2-4\nRUN apt-get clean\n\n# Download the SDK.\nRUN wget $ARCHIVE_URL/sdk/dartsdk-linux-x64-release.zip\nRUN unzip dartsdk-linux-x64-release.zip\nRUN cp -r dart-sdk/* /usr/local\nRUN rm -rf dartsdk-linux-x64-release.zip\n\n# Install Content Shell.\nRUN wget $ARCHIVE_URL/dartium/content_shell-linux-x64-release.zip\nRUN unzip content_shell-linux-x64-release.zip\nRUN rm content_shell-linux-x64-release.zip\nENV PATH /drt-lucid64-full-$CHANNEL-$SDK_VERSION.0:$PATH\n\n# Install Dartium.\nRUN wget $ARCHIVE_URL/dartium/dartium-linux-x64-release.zip\nRUN unzip dartium-linux-x64-release.zip\nRUN ln -s /dartium-lucid64-full-stable-$SDK_VERSION.0/chrome /usr/local/bin/dartium\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "echo \"deb http://us.archive.ubuntu.com/ubuntu precise main multiverse\" \\ ",
      "apt-get update; echo 'true'",
      "apt-get install -y --force-yes git wget unzip xvfb chromedriver libgconf-2-4",
      "apt-get clean",
      "wget $ARCHIVE_URL/sdk/dartsdk-linux-x64-release.zip",
      "unzip dartsdk-linux-x64-release.zip",
      "cp -r dart-sdk/* /usr/local",
      "rm -rf dartsdk-linux-x64-release.zip",
      "wget $ARCHIVE_URL/dartium/content_shell-linux-x64-release.zip",
      "unzip content_shell-linux-x64-release.zip",
      "rm content_shell-linux-x64-release.zip",
      "wget $ARCHIVE_URL/dartium/dartium-linux-x64-release.zip",
      "unzip dartium-linux-x64-release.zip",
      "ln -s /dartium-lucid64-full-stable-$SDK_VERSION.0/chrome /usr/local/bin/dartium"
    ],
    "workdir": [],
    "from": "google/dart:1.19.1",
    "maintainer": " John Ryan <john.p.ryan4@gmail.com>",
    "label": "Description=\"Dart SDK with content-shell\"",
    "env": {
      "CHANNEL": "stable",
      "SDK_VERSION": "1.19.1",
      "ARCHIVE_URL": "https://storage.googleapis.com/dart-archive/channels/$CHANNEL/release/$SDK_VERSION",
      "PATH": "/drt-lucid64-full-$CHANNEL-$SDK_VERSION.0:$PATH"
    }
  },
  "source_repository_url": "https://github.com/johnpryan/dart-content-shell-docker.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/johnpryan/dart-content-shell-docker",
  "docker_repository": "johnpryan/dart-content-shell-docker",
  "docker_image": "johnpryan/dart-content-shell-docker",
  "parameters_schema": {
    "CHANNEL": {
      "default": "stable",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SDK_VERSION": {
      "default": "1.19.1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ARCHIVE_URL": {
      "default": "https://storage.googleapis.com/dart-archive/channels/$CHANNEL/release/$SDK_VERSION",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/drt-lucid64-full-$CHANNEL-$SDK_VERSION.0:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "johnpryan/dart-content-shell-docker",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/johnpryan/dart-content-shell-docker",
    "https://hub.docker.com/v2/repositories/johnpryan/dart-content-shell-docker",
    "https://github.com/johnpryan/dart-content-shell-docker.git"
  ],
  "labels": [
    "Docker",
    "Binding/Region/North America/US",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Middleware/Runtime/Dart"
  ],
  "info_url": "https://hub.docker.com/r/johnpryan/dart-content-shell-docker",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}