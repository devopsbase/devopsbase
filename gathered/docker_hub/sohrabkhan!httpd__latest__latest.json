{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/sohrabkhan/httpd",
    "repository_url": "https://hub.docker.com/v2/repositories/sohrabkhan/httpd",
    "tags_url": "https://hub.docker.com/v2/repositories/sohrabkhan/httpd/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/sohrabkhan/httpd/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/sohrabkhan/httpd/autobuild",
    "user": "sohrabkhan",
    "name": "httpd",
    "namespace": "sohrabkhan",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 82,
    "last_updated": "2016-03-23T23:09:14.525673Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 222333622,
        "id": 1934575,
        "repository": 515501,
        "creator": 600716,
        "last_updater": 600716,
        "last_updated": "2016-03-23T23:09:14.059649Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "sohrabkhan/docker_httpd"
  },
  "name": "sohrabkhan/httpd Docker container",
  "description": "Docker httpd + php5.6 (including php-mysql, php-common & pdo) + redis image + sass",
  "readme": "# Docker Httpd\nCreate a docker httpd container with PHP5.6 including the php5-mysql, php-mysql, php-common, pdo, mysqli and mbstring extensions.\n\n## LAMPR\nTo setup your PHP5.6, mysql & redis project in 1 minute run the following commands:\n\n    > git clone git@github.com:sohrabkhan/docker_httpd.git\n    > docker-compose up (make sure docker-compose is installed)\n\nWith only 2 commands you have your dev environment setup.\n\n## HTTPD Only\nIf you want to run this image individually then do the following:\n    > docker run -d -p 80:80 -v $PWD/public_html:/var/www/html sohrabkhan/httpd\n\n### Note: this is a base image that I use for some of my most simplest projects.\n",
  "dockerfile": "FROM php:5.6-apache\nMAINTAINER Sohrab Khan <sohrab@sohrabkhan.com>\n\n# Install IonCube Loader\nRUN apt-get update && apt-get upgrade -yqq\nRUN apt-get install -y wget\nRUN wget http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz\nRUN tar zxvf ioncube_loaders_lin_x86-64.tar.gz\nRUN mv ioncube/ioncube_loader_lin_5.6.so /usr/local/lib/php/extensions/no-debug-non-zts-20131226/\nRUN touch /usr/local/etc/php/conf.d/ioncube.ini && echo \"zend_extension=ioncube_loader_lin_5.6.so\" >> /usr/local/etc/php/conf.d/ioncube.ini\n\n# Install xDebug\nRUN pecl install xdebug\nRUN touch /usr/local/etc/php/conf.d/xdebug.ini && echo 'zend_extension=xdebug.so \\n xdebug.remote_enable=1 \\n xdebug.profiler_enable=1 \\n xdebug.profiler_output_dir=\"/var/xdebug_profiler\"' >> /usr/local/etc/php/conf.d/xdebug.ini\n\n# Install Sass\nRUN apt-get install -y rubygems\nRUN su -c \"gem install sass\"\n\nRUN wget https://getcomposer.org/composer.phar\nRUN mv composer.phar /usr/local/bin/composer\n\nRUN docker-php-ext-install -j$(nproc) mysqli pdo pdo_mysql mbstring mysql\nRUN apt-get install -y php5-gd\nRUN a2enmod rewrite\nADD public_html/ /var/www/html/\nADD custom.conf /etc/apache2/sites-available/custom.conf\nRUN mkdir /var/xdebug_profiler\n\n#RUN composer install\n\nEXPOSE 80\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "public_html/",
        "dest": "/var/www/html/"
      },
      {
        "source": "custom.conf",
        "dest": "/etc/apache2/sites-available/custom.conf"
      }
    ],
    "expose": [
      80
    ],
    "volume": [],
    "run": [
      "apt-get update && apt-get upgrade -yqq",
      "apt-get install -y wget",
      "wget http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz",
      "tar zxvf ioncube_loaders_lin_x86-64.tar.gz",
      "mv ioncube/ioncube_loader_lin_5.6.so /usr/local/lib/php/extensions/no-debug-non-zts-20131226/",
      "touch /usr/local/etc/php/conf.d/ioncube.ini && echo \"zend_extension=ioncube_loader_lin_5.6.so\" >> /usr/local/etc/php/conf.d/ioncube.ini",
      "pecl install xdebug",
      "touch /usr/local/etc/php/conf.d/xdebug.ini && echo 'zend_extension=xdebug.so \\n xdebug.remote_enable=1 \\n xdebug.profiler_enable=1 \\n xdebug.profiler_output_dir=\"/var/xdebug_profiler\"' >> /usr/local/etc/php/conf.d/xdebug.ini",
      "apt-get install -y rubygems",
      "su -c \"gem install sass\"",
      "wget https://getcomposer.org/composer.phar",
      "mv composer.phar /usr/local/bin/composer",
      "docker-php-ext-install -j$(nproc) mysqli pdo pdo_mysql mbstring mysql",
      "apt-get install -y php5-gd",
      "a2enmod rewrite",
      "mkdir /var/xdebug_profiler"
    ],
    "workdir": [],
    "from": "php:5.6-apache",
    "maintainer": "Sohrab Khan <sohrab@sohrabkhan.com>"
  },
  "source_repository_url": "https://github.com/sohrabkhan/docker_httpd.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/sohrabkhan/docker_httpd",
  "docker_repository": "sohrabkhan/httpd",
  "docker_image": "sohrabkhan/httpd",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "sohrabkhan/httpd",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/sohrabkhan/httpd",
    "https://hub.docker.com/v2/repositories/sohrabkhan/httpd",
    "https://github.com/sohrabkhan/docker_httpd.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Mode/Executable/Image",
    "Type/Middleware/Runtime/PHP",
    "Type/Middleware/Data Store/Relational/MySQL",
    "Type/Middleware/Data Store/Key-Value/Redis"
  ],
  "info_url": "https://hub.docker.com/r/sohrabkhan/httpd",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}