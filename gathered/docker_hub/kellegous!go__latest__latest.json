{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/kellegous/go",
    "repository_url": "https://hub.docker.com/v2/repositories/kellegous/go",
    "tags_url": "https://hub.docker.com/v2/repositories/kellegous/go/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/kellegous/go/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/kellegous/go/autobuild",
    "user": "kellegous",
    "name": "go",
    "namespace": "kellegous",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 16,
    "last_updated": "2016-09-05T20:45:34.578907Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 5259783,
        "id": 4679694,
        "repository": 898381,
        "creator": 362065,
        "last_updater": 362065,
        "last_updated": "2016-09-05T20:45:34.150339Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "kellegous/go"
  },
  "name": "kellegous/go Docker container",
  "description": "A Google-style \"go\" URL service.",
  "readme": "# A \"go\" short-link service\n\n## Background\nThe first time I encountered \"go\" links was at Google. Anyone on the corporate\nnetwork could register a URL shortcut and it would redirect the user to the\nappropriate page. So for instance, if you wanted to find out more about BigTable,\nyou simply directed your browser at http://go/bigtable and you would be redirected to\nsomething about the BigTable data storage system. I was later told that the\nfirst go service at Google was written by [Benjamin Staffin](https://www.linkedin.com/in/benjaminstaffin)\nto end the never-ending stream of requests for internal CNAME entries. He\ndescribed it as AOL keywords for the corporate network. These days if you go to\nany reasonably sized company, you are likely to find a similar system. Etsy made\none after seeing that Twitter had one ... it's a contagious and useful little\ntool. So contagious, in fact, that many former Googlers that I know have built\nor contributed to a similar system post-Google. I am no different, this is my\n\"go\" link service.\n\nOn slight difference between this go service and Google's is that this one is also\ncapable of generating short links for you.\n\n## Installation\nThis tool is written in Go (ironically) and can be easily installed  and started\nwith the following commands.\n\n```\nGOPATH=`pwd` go install github.com/kellegous/go\nbin/go\n```\n\nBy default, the service will put all of its data in the directory `data` and will\nlisten to requests on the port `8067`. Both of these, however, are easily configured\nusing the `--data=/path/to/data` and `--addr=:80` command line flags.\n\n## DNS Setup\nTo get the most benefit from the service, you should setup a DNS entry on your\nlocal network, `go.corp.mycompany.com`. Make sure that corp.mycompany.com is in\nthe search domains for each user on the network. This is usually easily accomplished\nby configuring your DHCP server. Now, simply typing \"go\" into your browser should\ntake you to the service, where you can register shortcuts. Obviously, those\nshortcuts will also be available by typing \"go/shortcut\".\n\n## Using the Service\nOnce you have it all setup, using it is pretty straight-forward.\n\n#### Create a new shortcut\nType `go/edit/my-shortcut` and enter the URL.\n\n#### Visit a shortcut\nType `go/my-shortcut` and you'll be redirected to the URL.\n\n#### Shorten a URL\nType `go` and enter the URL.\n",
  "dockerfile": "FROM alpine\n\nENV GOPATH /go\nCOPY . /go/src/github.com/kellegous/go\nRUN apk update \\\n  && apk add go git \\\n  && go get github.com/kellegous/go \\\n  && apk del go git \\\n  && rm -rf /var/cache/apk/* \\\n  && rm -rf /go/src /go/pkg \\\n  && mkdir /data\n\nEXPOSE 8067\n\nCMD [\"/go/bin/go\", \"--data=/data\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      8067
    ],
    "volume": [],
    "run": [
      "apk update   && apk add go git   && go get github.com/kellegous/go   && apk del go git   && rm -rf /var/cache/apk/*   && rm -rf /go/src /go/pkg   && mkdir /data"
    ],
    "workdir": [],
    "from": "alpine",
    "env": {
      "GOPATH": "/go"
    },
    "copy": ". /go/src/github.com/kellegous/go",
    "cmd": "[\"/go/bin/go\", \"--data=/data\"]"
  },
  "source_repository_url": "https://github.com/kellegous/go.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/kellegous/go",
  "docker_repository": "kellegous/go",
  "docker_image": "kellegous/go",
  "parameters_schema": {
    "GOPATH": {
      "default": "/go",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        8067
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "kellegous/go",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/kellegous/go",
    "https://hub.docker.com/v2/repositories/kellegous/go",
    "https://github.com/kellegous/go.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/Google",
    "Binding/Region/North America/US"
  ],
  "info_url": "https://hub.docker.com/r/kellegous/go",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}