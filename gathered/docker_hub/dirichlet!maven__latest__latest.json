{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/dirichlet/maven",
    "repository_url": "https://hub.docker.com/v2/repositories/dirichlet/maven",
    "tags_url": "https://hub.docker.com/v2/repositories/dirichlet/maven/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/dirichlet/maven/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/dirichlet/maven/autobuild",
    "user": "dirichlet",
    "name": "maven",
    "namespace": "dirichlet",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 65,
    "last_updated": "2016-06-19T00:36:58.667005Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 251388866,
        "id": 1574018,
        "repository": 448925,
        "creator": 169510,
        "last_updater": 169510,
        "last_updated": "2016-06-19T00:36:57.775877Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "evermax/dockerfiles"
  },
  "name": "dirichlet/maven Docker container",
  "description": "Maven container",
  "readme": "# Maven in a container\n\nAll the credits for this must go to Quinten Krijger for this [post](http://www.infoq.com/articles/docker-executable-images) on infoq.\n\nThe purpose of this is to build maven repositories without having maven install on your computer but in a docker container.\n\n## Why?\nWell, I guess is goes along with other containers I've been using so far.\n\nFirst of all, because we can.\n\nSecond of all, because then you can have a perfectly viable Java environment... without having Java installed on your computer. And this is quite a plus. It saves up a lot of resources from the computer as the container don't take up all the resource. So of course it is quite slower, but the computer won't end up lagging until maven finished building with Netbeans reindexing everything at the same time, leaving you with no other option but to wait.\n\nFinally, I guess it is easier to set up when someone new comes along, you just have to install docker, give him on file to import in his .profile and ready to go.\n\n## How to run it:\n\nFirst you need to create a data container. Why? Because otherwise, everytime you are going to run `mvn install` you will have to wait for the dependencies to be downloaded again.\nTo do so, just type the following:\n\n```\ndocker run --name maven_data \\\n    -v /root/.m2 \\\n    busybox echo 'data for maven'\n```\n\nAfter that, you will have a docker container stopped, with a volume inside that is /root/.m2 and all the other containers that will reference it will have access to it.\nIf you want to know more about data container, just go on the docker official website, at this [page](https://docs.docker.com/engine/userguide/dockervolumes/).\n\nThen, you should had this function somewhere in your `.profile` or `.bash_profile`, etc.\n\n```\nmvn() {\n    docker run --rm \\\n    -v $(pwd):/project \\\n    --volumes-from maven_data \\\n    dirichlet/maven $*\n}\n```\n\nNote that it is important to use the same name that you used creating the data volume container. (If you just copy pasted what I wrote, you should be fine.)\n",
  "dockerfile": "FROM maven:3.3.3-jdk-8\n\nMAINTAINER Maxime Lasserre \"maxlasserre@free.fr\"\n\nWORKDIR /project\nENTRYPOINT [\"mvn\"]\nCMD [\"-h\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": [
      "/project"
    ],
    "from": "maven:3.3.3-jdk-8",
    "maintainer": "Maxime Lasserre \"maxlasserre@free.fr\"",
    "entrypoint": "[\"mvn\"]",
    "cmd": "[\"-h\"]"
  },
  "source_repository_url": "https://github.com/evermax/dockerfiles.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/evermax/dockerfiles",
  "docker_repository": "dirichlet/maven",
  "docker_image": "dirichlet/maven",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "dirichlet/maven",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/dirichlet/maven",
    "https://hub.docker.com/v2/repositories/dirichlet/maven",
    "https://github.com/evermax/dockerfiles.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Build/Java/Maven"
  ],
  "info_url": "https://hub.docker.com/r/dirichlet/maven",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}