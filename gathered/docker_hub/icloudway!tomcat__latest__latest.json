{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/icloudway/tomcat",
    "repository_url": "https://hub.docker.com/v2/repositories/icloudway/tomcat",
    "tags_url": "https://hub.docker.com/v2/repositories/icloudway/tomcat/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/icloudway/tomcat/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/icloudway/tomcat/autobuild",
    "user": "icloudway",
    "name": "tomcat",
    "namespace": "icloudway",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 80,
    "last_updated": "2016-07-03T10:14:57.904556Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 265039898,
        "id": 3554807,
        "repository": 762041,
        "creator": 925461,
        "last_updater": 925461,
        "last_updated": "2016-07-03T10:14:57.516687Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8",
        "full_size": 265039810,
        "id": 3554678,
        "repository": 762041,
        "creator": 925461,
        "last_updater": 925461,
        "last_updated": "2016-07-03T10:12:14.090337Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.0",
        "full_size": 265039897,
        "id": 3554577,
        "repository": 762041,
        "creator": 925461,
        "last_updater": 925461,
        "last_updated": "2016-07-03T10:09:15.595357Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.0.36",
        "full_size": 265039892,
        "id": 3554475,
        "repository": 762041,
        "creator": 925461,
        "last_updater": 925461,
        "last_updated": "2016-07-03T10:06:10.139521Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "cloudway/docker-library"
  },
  "name": "icloudway/tomcat Docker container",
  "description": "Apache Tomcat image with OpenJDK and Maven",
  "readme": null,
  "dockerfile": "FROM maven:3.3.9-jdk-8\n\nENV CATALINA_HOME /usr/local/tomcat\nENV PATH $CATALINA_HOME/bin:$PATH\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n\n# runtime dependencies for Tomcat Native Libraries\n# Tomcat Native 1.2+ requires a newer version of OpenSSL than debian:jessie has available (1.0.2g+)\n# see http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5046024.html (and following discussion)\nARG OPENSSL_VERSION=1.0.2h-1\nRUN echo 'deb http://httpredir.debian.org/debian unstable main' > /etc/apt/sources.list.d/unstable.list \\\n && { \\\n# add a negative \"Pin-Priority\" so that we never ever get packages from unstable unless we explicitly request them\n      echo 'Package: *'; \\\n      echo 'Pin: release a=unstable'; \\\n      echo 'Pin-Priority: -10'; \\\n      echo; \\\n# except OpenSSL, which is the reason we're here\n      echo 'Package: openssl libssl*'; \\\n      echo \"Pin: version $OPENSSL_VERSION\"; \\\n      echo 'Pin-Priority: 990'; \\\n } > /etc/apt/preferences.d/unstable-openssl \\\n && apt-get update && apt-get install -y --no-install-recommends libapr1 openssl=\"$OPENSSL_VERSION\" \\\n && rm -rf /var/lib/apt/lists/*\n\n# see https://www.apache.org/dist/tomcat/tomcat-8/KEYS\nRUN set -ex \\\n && for key in \\\n       05AB33110949707C93A279E3D3EFE6B686867BA6 \\\n        07E48665A34DCAFAE522E5E6266191C37C037D42 \\\n        47309207D818FFD8DCD3F83F1931D684307A10A5 \\\n        541FBE7D8F78B25E055DDEE13C370389288584E7 \\\n        61B832AC2F1C5A90F0F9B00A1C506407564C17A3 \\\n        79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED \\\n        9BA44C2621385CB966EBA586F72C284D731FABEE \\\n        A27677289986DB50844682F8ACB77FC2E86E29AC \\\n        A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 \\\n        DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 \\\n        F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE \\\n        F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23 \\\n    ; do \\\n        gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n      done\n\nENV TOMCAT_MAJOR=8 \\\n    TOMCAT_VERSION=8.0.36\nARG TOMCAT_TGZ_URL=\"https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"\n\nRUN set -xe \\\n \\\n && curl -fSL \"$TOMCAT_TGZ_URL\" -o tomcat.tar.gz \\\n && curl -fSL \"$TOMCAT_TGZ_URL.asc\" -o tomcat.tar.gz.asc \\\n && gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz \\\n && tar -xvf tomcat.tar.gz --strip-components=1 \\\n && rm bin/*.bat \\\n && rm tomcat.tar.gz* \\\n \\\n && nativeBuildDir=\"$(mktemp -d)\" \\\n && tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 \\\n && nativeBuildDeps=\"gcc libapr1-dev libssl-dev make\" \\\n && apt-get update && apt-get install -y --no-install-recommends $nativeBuildDeps && rm -rf /var/lib/apt/lists/* \\\n && ( \\\n      export CATALINA_HOME=\"$PWD\" \\\n      && cd \"$nativeBuildDir/native\" \\\n      && ./configure \\\n            --libdir=/usr/lib/jni \\\n            --prefix=\"$CATALINA_HOME\" \\\n            --with-apr=/usr/bin/apr-1-config \\\n            --with-java-home=\"$(docker-java-home)\" \\\n            --with-ssl=yes \\\n      && make -j$(nproc) \\\n      && make install \\\n    ) \\\n && apt-get purge -y --auto-remove $nativeBuildDeps \\\n && rm -rf \"$nativeBuildDir\" \\\n && rm bin/tomcat-native.tar.gz \\\n# verify Tomcat Native is working properly\n && set +x \\\n && nativeLines=\"$(catalina.sh configtest 2>&1)\" \\\n && nativeLines=\"$(echo \"$nativeLines\" | grep 'Apache Tomcat Native')\" \\\n && nativeLines=\"$(echo \"$nativeLines\" | sort -u)\" \\\n && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then \\\n       echo >&2 \"$nativeLines\"; \\\n       exit 1; \\\n    fi\n\nEXPOSE 8080\nCMD [\"catalina.sh\", \"run\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      8080
    ],
    "volume": [],
    "run": [
      "mkdir -p \"$CATALINA_HOME\"",
      "echo 'deb http://httpredir.debian.org/debian unstable main' > /etc/apt/sources.list.d/unstable.list  && { # add a negative \"Pin-Priority\" so that we never ever get packages from unstable unless we explicitly request them",
      "set -ex  && for key in        05AB33110949707C93A279E3D3EFE6B686867BA6         07E48665A34DCAFAE522E5E6266191C37C037D42         47309207D818FFD8DCD3F83F1931D684307A10A5         541FBE7D8F78B25E055DDEE13C370389288584E7         61B832AC2F1C5A90F0F9B00A1C506407564C17A3         79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED         9BA44C2621385CB966EBA586F72C284D731FABEE         A27677289986DB50844682F8ACB77FC2E86E29AC         A9C5DF4D22E99998D9875A5110C01C5A2F6059E7         DCFD35E0BF8CA7344752DE8B6FB21E8933C60243         F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE         F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23     ; do         gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";       done",
      "set -xe   && curl -fSL \"$TOMCAT_TGZ_URL\" -o tomcat.tar.gz  && curl -fSL \"$TOMCAT_TGZ_URL.asc\" -o tomcat.tar.gz.asc  && gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz  && tar -xvf tomcat.tar.gz --strip-components=1  && rm bin/*.bat  && rm tomcat.tar.gz*   && nativeBuildDir=\"$(mktemp -d)\"  && tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1  && nativeBuildDeps=\"gcc libapr1-dev libssl-dev make\"  && apt-get update && apt-get install -y --no-install-recommends $nativeBuildDeps && rm -rf /var/lib/apt/lists/*  && (       export CATALINA_HOME=\"$PWD\"       && cd \"$nativeBuildDir/native\"       && ./configure             --libdir=/usr/lib/jni             --prefix=\"$CATALINA_HOME\"             --with-apr=/usr/bin/apr-1-config             --with-java-home=\"$(docker-java-home)\"             --with-ssl=yes       && make -j$(nproc)       && make install     )  && apt-get purge -y --auto-remove $nativeBuildDeps  && rm -rf \"$nativeBuildDir\"  && rm bin/tomcat-native.tar.gz # verify Tomcat Native is working properly"
    ],
    "workdir": [
      "$CATALINA_HOME"
    ],
    "from": "maven:3.3.9-jdk-8",
    "env": {
      "CATALINA_HOME": "/usr/local/tomcat",
      "PATH": "$CATALINA_HOME/bin:$PATH",
      "TOMCAT_MAJOR": "8",
      "": "",
      "TOMCAT_VERSION": "8.0.36"
    },
    "arg": "TOMCAT_TGZ_URL=\"https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\"",
    "cmd": "[\"catalina.sh\", \"run\"]"
  },
  "source_repository_url": "https://github.com/cloudway/docker-library.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/cloudway/docker-library",
  "docker_repository": "icloudway/tomcat",
  "docker_image": "icloudway/tomcat",
  "parameters_schema": {
    "CATALINA_HOME": {
      "default": "/usr/local/tomcat",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "$CATALINA_HOME/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "TOMCAT_MAJOR": {
      "default": "8",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "TOMCAT_VERSION": {
      "default": "8.0.36",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        8080
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "icloudway/tomcat",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/icloudway/tomcat",
    "https://hub.docker.com/v2/repositories/icloudway/tomcat",
    "https://github.com/cloudway/docker-library.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Java",
    "Mode/Executable/Image",
    "Type/Devopsware/Build/Java/Maven",
    "Type/Middleware/Web Server/Apache HTTP Server",
    "Type/Middleware/Application Server/Tomcat"
  ],
  "info_url": "https://hub.docker.com/r/icloudway/tomcat",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}