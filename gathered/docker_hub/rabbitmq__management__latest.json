{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/_/rabbitmq",
    "repository_url": "https://hub.docker.com/v2/repositories/library/rabbitmq",
    "tags_url": "https://hub.docker.com/v2/repositories/library/rabbitmq/tags",
    "user": "library",
    "name": "rabbitmq",
    "namespace": "library",
    "status": 1,
    "is_private": false,
    "is_automated": false,
    "star_count": 984,
    "pull_count": 9698317,
    "last_updated": "2016-09-23T22:52:17.800313Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "management",
        "full_size": 86575216,
        "id": 138245,
        "repository": 110496,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-09-23T22:51:56.884912Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3-management",
        "full_size": 86575216,
        "id": 138267,
        "repository": 110496,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-09-23T22:51:47.173802Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.6-management",
        "full_size": 86575216,
        "id": 1639092,
        "repository": 110496,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-09-23T22:51:37.634888Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.6.5-management",
        "full_size": 86575216,
        "id": 4188083,
        "repository": 110496,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-09-23T22:51:28.097028Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 86575030,
        "id": 138311,
        "repository": 110496,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-09-23T22:51:11.004184Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3",
        "full_size": 86575030,
        "id": 138258,
        "repository": 110496,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-09-23T22:51:01.625210Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.6",
        "full_size": 86575030,
        "id": 1639087,
        "repository": 110496,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-09-23T22:50:52.197079Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.6.5",
        "full_size": 86575030,
        "id": 4188064,
        "repository": 110496,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-09-23T22:50:49.536020Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.6.4-management",
        "full_size": 86586744,
        "id": 4104509,
        "repository": 110496,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-08-02T01:54:10.389908Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "3.6.4",
        "full_size": 86586557,
        "id": 4104492,
        "repository": 110496,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-08-02T01:50:44.853133Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ]
  },
  "docker_image": "rabbitmq",
  "name": "rabbitmq Docker container",
  "description": "RabbitMQ is a highly reliable enterprise messaging system based on the emerging AMQP standard",
  "readme": "# Supported tags and respective `Dockerfile` links\n\n-\t[`3.6.5`, `3.6`, `3`, `latest` (*Dockerfile*)](https://github.com/docker-library/rabbitmq/blob/29121864d4892b2481706df023a53e31fececd02/Dockerfile)\n-\t[`3.6.5-management`, `3.6-management`, `3-management`, `management` (*management/Dockerfile*)](https://github.com/docker-library/rabbitmq/blob/dc712681dcaeadb0371be66be5e96563be364e5d/management/Dockerfile)\n\nFor more information about this image and its history, please see [the relevant manifest file (`library/rabbitmq`)](https://github.com/docker-library/official-images/blob/master/library/rabbitmq). This image is updated via [pull requests to the `docker-library/official-images` GitHub repo](https://github.com/docker-library/official-images/pulls?q=label%3Alibrary%2Frabbitmq).\n\nFor detailed information about the virtual/transfer sizes and individual layers of each of the above supported tags, please see [the `repos/rabbitmq/tag-details.md` file](https://github.com/docker-library/repo-info/blob/master/repos/rabbitmq/tag-details.md) in [the `docker-library/repo-info` GitHub repo](https://github.com/docker-library/repo-info).\n\n# What is RabbitMQ?\n\nRabbitMQ is open source message broker software (sometimes called message-oriented middleware) that implements the Advanced Message Queuing Protocol (AMQP). The RabbitMQ server is written in the Erlang programming language and is built on the Open Telecom Platform framework for clustering and failover. Client libraries to interface with the broker are available for all major programming languages.\n\n> [wikipedia.org/wiki/RabbitMQ](https://en.wikipedia.org/wiki/RabbitMQ)\n\n![logo](https://raw.githubusercontent.com/docker-library/docs/81187b7b50f5af5bdb64d75882f4d9c782ad52c3/rabbitmq/logo.png)\n\n# How to use this image\n\n## Running the daemon\n\nOne of the important things to note about RabbitMQ is that it stores data based on what it calls the \"Node Name\", which defaults to the hostname. What this means for usage in Docker is that we should specify `-h`/`--hostname` explicitly for each daemon so that we don't get a random hostname and can keep track of our data:\n\n```console\n$ docker run -d --hostname my-rabbit --name some-rabbit rabbitmq:3\n```\n\nIf you give that a minute, then do `docker logs some-rabbit`, you'll see in the output a block similar to:\n\n\t=INFO REPORT==== 6-Jul-2015::20:47:02 ===\n\tnode           : rabbit@my-rabbit\n\thome dir       : /var/lib/rabbitmq\n\tconfig file(s) : /etc/rabbitmq/rabbitmq.config\n\tcookie hash    : UoNOcDhfxW9uoZ92wh6BjA==\n\tlog            : tty\n\tsasl log       : tty\n\tdatabase dir   : /var/lib/rabbitmq/mnesia/rabbit@my-rabbit\n\nNote the `database dir` there, especially that it has my \"Node Name\" appended to the end for the file storage. This image makes all of `/var/lib/rabbitmq` a volume by default.\n\n### Erlang Cookie\n\nSee the [RabbitMQ \"Clustering Guide\"](https://www.rabbitmq.com/clustering.html#erlang-cookie) for more information about cookies and why they're necessary.\n\nFor setting a consistent cookie (especially useful for clustering but also for remote/cross-container administration via `rabbitmqctl`), use `RABBITMQ_ERLANG_COOKIE`:\n\n```console\n$ docker run -d --hostname my-rabbit --name some-rabbit -e RABBITMQ_ERLANG_COOKIE='secret cookie here' rabbitmq:3\n```\n\nThis can then be used from a separate instance to connect:\n\n```console\n$ docker run -it --rm --link some-rabbit:my-rabbit -e RABBITMQ_ERLANG_COOKIE='secret cookie here' rabbitmq:3 bash\nroot@f2a2d3d27c75:/# rabbitmqctl -n rabbit@my-rabbit list_users\nListing users ...\nguest   [administrator]\n```\n\nAlternatively, one can also use `RABBITMQ_NODENAME` to make repeated `rabbitmqctl` invocations simpler:\n\n```console\n$ docker run -it --rm --link some-rabbit:my-rabbit -e RABBITMQ_ERLANG_COOKIE='secret cookie here' -e RABBITMQ_NODENAME=rabbit@my-rabbit rabbitmq:3 bash\nroot@f2a2d3d27c75:/# rabbitmqctl list_users\nListing users ...\nguest   [administrator]\n```\n\n### Management Plugin\n\nThere is a second set of tags provided with the [management plugin](https://www.rabbitmq.com/management.html) installed and enabled by default, which is available on the standard management port of 15672, with the default username and password of `guest` / `guest`:\n\n```console\n$ docker run -d --hostname my-rabbit --name some-rabbit rabbitmq:3-management\n```\n\nYou can access it by visiting `http://container-ip:15672` in a browser or, if you need access outside the host, on port 8080:\n\n```console\n$ docker run -d --hostname my-rabbit --name some-rabbit -p 8080:15672 rabbitmq:3-management\n```\n\nYou can then go to `http://localhost:8080` or `http://host-ip:8080` in a browser.\n\n## Setting default user and password\n\nIf you wish to change the default username and password of `guest` / `guest`, you can do so with the `RABBITMQ_DEFAULT_USER` and `RABBITMQ_DEFAULT_PASS` environmental variables:\n\n```console\n$ docker run -d --hostname my-rabbit --name some-rabbit -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=password rabbitmq:3-management\n```\n\nYou can then go to `http://localhost:8080` or `http://host-ip:8080` in a browser and use `user`/`password` to gain access to the management console\n\n## Setting default vhost\n\nIf you wish to change the default vhost, you can do so with the `RABBITMQ_DEFAULT_VHOST` environmental variables:\n\n```console\n$ docker run -d --hostname my-rabbit --name some-rabbit -e RABBITMQ_DEFAULT_VHOST=my_vhost rabbitmq:3-management\n```\n\n## Enabling HiPE\n\nSee the [RabbitMQ \"Configuration\"](http://www.rabbitmq.com/configure.html#config-items) for more information about various configuration options.\n\nFor enabling the HiPE compiler on startup use `RABBITMQ_HIPE_COMPILE` set to `1`. Accroding to the official documentation:\n\n> Set to true to precompile parts of RabbitMQ with HiPE, a just-in-time compiler for Erlang. This will increase server throughput at the cost of increased startup time. You might see 20-50% better performance at the cost of a few minutes delay at startup.\n\nIt is therefore important to take that startup delay into consideration when configuring health checks, automated clustering etc.\n\n## Connecting to the daemon\n\n```console\n$ docker run --name some-app --link some-rabbit:rabbit -d application-that-uses-rabbitmq\n```\n\n# License\n\nView [license information](https://www.rabbitmq.com/mpl.html) for the software contained in this image.\n\n# Supported Docker versions\n\nThis image is officially supported on Docker version 1.12.2.\n\nSupport for older versions (down to 1.6) is provided on a best-effort basis.\n\nPlease see [the Docker installation documentation](https://docs.docker.com/installation/) for details on how to upgrade your Docker daemon.\n\n# User Feedback\n\n## Issues\n\nIf you have any problems with or questions about this image, please contact us through a [GitHub issue](https://github.com/docker-library/rabbitmq/issues). If the issue is related to a CVE, please check for [a `cve-tracker` issue on the `official-images` repository first](https://github.com/docker-library/official-images/issues?q=label%3Acve-tracker).\n\nYou can also reach many of the official image maintainers via the `#docker-library` IRC channel on [Freenode](https://freenode.net).\n\n## Contributing\n\nYou are invited to contribute new features, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.\n\nBefore you start to code, we recommend discussing your plans through a [GitHub issue](https://github.com/docker-library/rabbitmq/issues), especially for more ambitious contributions. This gives other contributors a chance to point you in the right direction, give you feedback on your design, and help you find out if someone else is working on the same thing.\n\n## Documentation\n\nDocumentation for this image is stored in the [`rabbitmq/` directory](https://github.com/docker-library/docs/tree/master/rabbitmq) of the [`docker-library/docs` GitHub repo](https://github.com/docker-library/docs). Be sure to familiarize yourself with the [repository's `README.md` file](https://github.com/docker-library/docs/blob/master/README.md) before attempting a pull request.",
  "type": "docker",
  "docker_name": "rabbitmq",
  "revision": "management",
  "uris": [
    "https://hub.docker.com/r/_/rabbitmq",
    "https://hub.docker.com/v2/repositories/library/rabbitmq"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Messaging/RabbitMQ"
  ],
  "info_url": "https://hub.docker.com/r/_/rabbitmq",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}