{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/_/solr",
    "repository_url": "https://hub.docker.com/v2/repositories/library/solr",
    "tags_url": "https://hub.docker.com/v2/repositories/library/solr/tags",
    "user": "library",
    "name": "solr",
    "namespace": "library",
    "status": 1,
    "is_private": false,
    "is_automated": false,
    "star_count": 280,
    "pull_count": 473437,
    "last_updated": "2016-10-11T20:33:19.294805Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "6.1-alpine",
        "full_size": 180995025,
        "id": 3504419,
        "repository": 362170,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-11T20:33:18.571854Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.1.0-alpine",
        "full_size": 180995025,
        "id": 3504420,
        "repository": 362170,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-11T20:33:18.407962Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.1",
        "full_size": 267724226,
        "id": 3504410,
        "repository": 362170,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-11T20:32:56.393320Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.1.0",
        "full_size": 267724226,
        "id": 3504411,
        "repository": 362170,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-11T20:32:56.376109Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.0-alpine",
        "full_size": 180296207,
        "id": 2986932,
        "repository": 362170,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-10-11T20:32:36.107421Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.0.1-alpine",
        "full_size": 180296207,
        "id": 3233281,
        "repository": 362170,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-11T20:32:35.567188Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.0",
        "full_size": 267025447,
        "id": 2986911,
        "repository": 362170,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-10-11T20:32:14.445495Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.0.1",
        "full_size": 267025447,
        "id": 3233237,
        "repository": 362170,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-11T20:32:14.403657Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "alpine",
        "full_size": 191064231,
        "id": 2986934,
        "repository": 362170,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-10-11T20:31:51.313837Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6-alpine",
        "full_size": 191064231,
        "id": 2986933,
        "repository": 362170,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-10-11T20:31:40.880365Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ]
  },
  "docker_image": "solr",
  "name": "solr Docker container",
  "description": "Solr is the popular, blazing-fast, open source enterprise search platform built on Apache Luceneâ„¢.",
  "readme": "# Supported tags and respective `Dockerfile` links\n\n-\t[`5.3.2`, `5.3` (*5.3/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/dfe2c80ca10ca9191ae8ce7c6193ecd47c6c0b5f/5.3/Dockerfile)\n-\t[`5.3.2-alpine`, `5.3-alpine` (*5.3/alpine/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/dfe2c80ca10ca9191ae8ce7c6193ecd47c6c0b5f/5.3/alpine/Dockerfile)\n-\t[`5.4.1`, `5.4` (*5.4/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/dfe2c80ca10ca9191ae8ce7c6193ecd47c6c0b5f/5.4/Dockerfile)\n-\t[`5.4.1-alpine`, `5.4-alpine` (*5.4/alpine/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/dfe2c80ca10ca9191ae8ce7c6193ecd47c6c0b5f/5.4/alpine/Dockerfile)\n-\t[`5.5.3`, `5.5`, `5` (*5.5/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/dfe2c80ca10ca9191ae8ce7c6193ecd47c6c0b5f/5.5/Dockerfile)\n-\t[`5.5.3-alpine`, `5.5-alpine`, `5-alpine` (*5.5/alpine/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/dfe2c80ca10ca9191ae8ce7c6193ecd47c6c0b5f/5.5/alpine/Dockerfile)\n-\t[`6.0.1`, `6.0` (*6.0/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/dfe2c80ca10ca9191ae8ce7c6193ecd47c6c0b5f/6.0/Dockerfile)\n-\t[`6.0.1-alpine`, `6.0-alpine` (*6.0/alpine/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/dfe2c80ca10ca9191ae8ce7c6193ecd47c6c0b5f/6.0/alpine/Dockerfile)\n-\t[`6.1.0`, `6.1` (*6.1/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/dfe2c80ca10ca9191ae8ce7c6193ecd47c6c0b5f/6.1/Dockerfile)\n-\t[`6.1.0-alpine`, `6.1-alpine` (*6.1/alpine/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/dfe2c80ca10ca9191ae8ce7c6193ecd47c6c0b5f/6.1/alpine/Dockerfile)\n-\t[`6.2.1`, `6.2`, `6`, `latest` (*6.2/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/5f01cda7259bf25170d48bdb36c4ac268a749454/6.2/Dockerfile)\n-\t[`6.2.1-alpine`, `6.2-alpine`, `6-alpine`, `alpine` (*6.2/alpine/Dockerfile*)](https://github.com/docker-solr/docker-solr/blob/5f01cda7259bf25170d48bdb36c4ac268a749454/6.2/alpine/Dockerfile)\n\nFor more information about this image and its history, please see [the relevant manifest file (`library/solr`)](https://github.com/docker-library/official-images/blob/master/library/solr). This image is updated via [pull requests to the `docker-library/official-images` GitHub repo](https://github.com/docker-library/official-images/pulls?q=label%3Alibrary%2Fsolr).\n\nFor detailed information about the virtual/transfer sizes and individual layers of each of the above supported tags, please see [the `repos/solr/tag-details.md` file](https://github.com/docker-library/repo-info/blob/master/repos/solr/tag-details.md) in [the `docker-library/repo-info` GitHub repo](https://github.com/docker-library/repo-info).\n\n# What is Solr?\n\nSolr is highly reliable, scalable and fault tolerant, providing distributed indexing, replication and load-balanced querying, automated failover and recovery, centralized configuration and more. Solr powers the search and navigation features of many of the world's largest internet sites.\n\nLearn more on [Apache Solr homepage](http://lucene.apache.org/solr/) and in the [Apache Solr Reference Guide](https://www.apache.org/dyn/closer.cgi/lucene/solr/ref-guide/).\n\n> [wikipedia.org/wiki/Apache_Solr](https://en.wikipedia.org/wiki/Apache_Solr)\n\n![logo](https://raw.githubusercontent.com/docker-library/docs/ddc9eb521da7c412b70229f1a600d0c63d55d0f7/solr/logo.png)\n\n# How to use this Docker image\n\n## Run Solr and index example data\n\nTo run a single Solr server:\n\n```console\n$ docker run --name my_solr -d -p 8983:8983 -t solr\n```\n\nThen with a web browser go to `http://localhost:8983/` to see the Admin Console (adjust the hostname for your docker host).\n\nTo use Solr, you need to create a \"core\", an index for your data. For example:\n\n```console\n$ docker exec -it --user=solr my_solr bin/solr create_core -c gettingstarted\n```\n\nIn the web UI if you click on \"Core Admin\" you should now see the \"gettingstarted\" core.\n\nIf you want to load some of the example data that is included in the container:\n\n```console\n$ docker exec -it --user=solr my_solr bin/post -c gettingstarted example/exampledocs/manufacturers.xml\n```\n\nIn the UI, find the \"Core selector\" popup menu and select the \"gettingstarted\" core, then select the \"Query\" menu item. This gives you a default search for `*:*` which returns all docs. Hit the \"Execute Query\" button, and you should see a few docs with data. Congratulations!\n\n## Single-command demo\n\nFor convenience, there is a single command that starts Solr, creates a collection called \"demo\", and loads sample data into it:\n\n```console\n$ docker run --name solr_demo -d -P solr solr-demo\n```\n\n## Loading your own data\n\nIf you want load your own data, you'll have to make it available to the container, for example by copying it into the container:\n\n```console\n$ docker cp $HOME/mydata/mydata.xml my_solr:/opt/solr/mydata.xml\n$ docker exec -it --user=solr my_solr bin/post -c gettingstarted mydata.xml\n```\n\nor by using Docker host volumes:\n\n```console\n$ docker run --name my_solr -d -p 8983:8983 -t -v $HOME/mydata:/opt/solr/mydata solr\n$ docker exec -it --user=solr my_solr bin/solr create_core -c gettingstarted\n$ docker exec -it --user=solr my_solr bin/post -c gettingstarted mydata/mydata.xml\n```\n\nTo learn more about Solr, see the [Apache Solr Reference Guide](https://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide).\n\n## Creating Cores\n\nIn addition to the `docker exec` method explained above, you can create a core automatically at start time, in several ways.\n\nIf you run:\n\n```console\n$ docker run -d -P solr solr-create -c mycore\n```\n\nthe container will:\n\n-\trun Solr in the background, on the loopback interface\n-\twait for it to start\n-\trun the \"solr create\" command with the arguments you passed\n-\tstop the background Solr\n-\tstart Solr in the foreground\n\nYou can combine this with mounted volumes to pass in core configuration from your host:\n\n```console\n$ docker run -d -P -v $PWD/myconfig:/myconfig solr solr-create -c mycore -d /myconfig\n```\n\nWhen using the `solr-create` command, Solr will log to the standard docker log (inspect with `docker logs`), and the collection creation will happen in the background and log to `/opt/docker-solr/init.log`.\n\nThis first way closely mirrors the manual core creation steps and uses Solr's own tools to create the core, so should be reliable.\n\nThe second way of creating a core at start time is using the `solr-precreate` command. This will create the core in the filesystem before running Solr. You should pass it the core name, and optionally the directory to copy the config from (this defaults to Solr's built-in \"basic_configs\"). For example:\n\n```console\n$ docker run -d -P solr solr-precreate mycore\n$ docker run -d -P -v $PWD/myconfig:/myconfig solr solr-precreate mycore /myconfig\n```\n\nThis method stores the core in an intermediate subdirectory called \"mycores\". This allows you to use mounted volumes:\n\n```console\n$ mkdir mycores\n$ sudo chown 8983:8983 mycores\n$ docker run -d -P -v $PWD/mycores:/opt/solr/server/solr/mycores solr solr-precreate mycore\n```\n\nThis second way is quicker, easier to monitor because it logs to the docker log, and can fail immediately if something is wrong. But, because it makes assumptions about Solr's \"basic_configs\", future upstream changes could break that.\n\nThe third way of creating a core at startup is to use the image extension mechanism explained in the next section.\n\n## Using Docker Compose\n\nWith Docker Compose you can create a Solr container with the index stored in a named data volume. Create a `docker-compose.yml` like:\n\n```yml\nversion: '2'\nservices:\n  solr:\n    image: solr\n    ports:\n     - \"8983:8983\"\n    volumes:\n      - data:/opt/solr/server/solr/mycores\n    entrypoint:\n      - docker-entrypoint.sh\n      - solr-precreate\n      - mycore\nvolumes:\n  data:\n```\n\nand just run `docker-compose up`.\n\n## Extending the image\n\nThe docker-solr image has an extension mechanism. At run time, before starting Solr, the container will execute scripts in the `/docker-entrypoint-initdb.d/` directory. You can add your own scripts there either by using mounted volumes or by using a custom Dockerfile. These scripts can for example copy a core directory with pre-loaded data for continuous integration testing, or modify the Solr configuration.\n\nHere is a simple example. With a `set-heap.sh` script like:\n\n```console\n#!/bin/bash\nset -e\ncp /opt/solr/bin/solr.in.sh /opt/solr/bin/solr.in.sh.orig\nsed -e 's/SOLR_HEAP=\".*\"/SOLR_HEAP=\"1024m\"/' </opt/solr/bin/solr.in.sh.orig >/opt/solr/bin/solr.in.sh\ngrep '^SOLR_HEAP=' /opt/solr/bin/solr.in.sh\n```\n\nyou can run:\n\n```console\n$ docker run --name solr_heap1 -d -P -v $PWD/docs/set-heap.sh:/docker-entrypoint-initdb.d/set-heap.sh solr\n$ sleep 5\n$ docker logs solr_heap1 | head\n/opt/docker-solr/scripts/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/set-heap.sh\nSOLR_HEAP=\"1024m\"\n\n\nStarting Solr on port 8983 from /opt/solr/server\n```\n\nWith this extension mechanism it can be useful to see the shell commands that are being executed by the `docker-entrypoint.sh` script in the docker log. To do that, set an environment variable using Docker's `-e VERBOSE=yes`.\n\n## Distributed Solr\n\nYou can also run a distributed Solr configuration.\n\nThe recommended and most flexible way to do that is to use Docker networking. See the [Can I run ZooKeeper and Solr clusters under Docker](https://github.com/docker-solr/docker-solr/blob/master/Docker-FAQ.md#can-i-run-zookeeper-and-solr-clusters-under-docker) FAQ, and [this example](docs/docker-networking.md).\n\nYou can also use legacy links, see the [Can I run ZooKeeper and Solr with Docker Links](Docker-FAQ.md#can-i-run-zookeeper-and-solr-clusters-under-docker) FAQ.\n\n# About this repository\n\nThis repository is available on [github.com/docker-solr/docker-solr](https://github.com/docker-solr/docker-solr), and the official build is on the [Docker Hub](https://hub.docker.com/_/solr/).\n\nThis repository is based on (and replaces) `makuk66/docker-solr`, and has been sponsored by [Lucidworks](http://www.lucidworks.com/).\n\n# Image Variants\n\nThe `solr` images come in many flavors, each designed for a specific use case.\n\n## `solr:<version>`\n\nThis is the defacto image. If you are unsure about what your needs are, you probably want to use this one. It is designed to be used both as a throw away container (mount your source code and start the container to start your app), as well as the base to build other images off of.\n\n## `solr:alpine`\n\nThis image is based on the popular [Alpine Linux project](http://alpinelinux.org), available in [the `alpine` official image](https://hub.docker.com/_/alpine). Alpine Linux is much smaller than most distribution base images (~5MB), and thus leads to much slimmer images in general.\n\nThis variant is highly recommended when final image size being as small as possible is desired. The main caveat to note is that it does use [musl libc](http://www.musl-libc.org) instead of [glibc and friends](http://www.etalabs.net/compare_libcs.html), so certain software might run into issues depending on the depth of their libc requirements. However, most software doesn't have an issue with this, so this variant is usually a very safe choice. See [this Hacker News comment thread](https://news.ycombinator.com/item?id=10782897) for more discussion of the issues that might arise and some pro/con comparisons of using Alpine-based images.\n\nTo minimize image size, it's uncommon for additional related tools (such as `git` or `bash`) to be included in Alpine-based images. Using this image as a base, add the things you need in your own Dockerfile (see the [`alpine` image description](https://hub.docker.com/_/alpine/) for examples of how to install packages if you are unfamiliar).\n\n# License\n\nSolr is licensed under the [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0).\n\nThis repository is also licensed under the [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0).\n\nCopyright 2015 Martijn Koster\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\n\t      http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n# Supported Docker versions\n\nThis image is officially supported on Docker version 1.12.2.\n\nSupport for older versions (down to 1.6) is provided on a best-effort basis.\n\nPlease see [the Docker installation documentation](https://docs.docker.com/installation/) for details on how to upgrade your Docker daemon.\n\n# User Feedback\n\n## Issues\n\nPlease report issues with this docker image on this [Github project](https://github.com/docker-solr/docker-solr).\n\nFor general questions about Solr, see the [Community information](http://lucene.apache.org/solr/resources.html#community), in particular the solr-user mailing list.\n\n## Contributing\n\nIf you want to contribute to Solr, see the [Solr Resources](http://lucene.apache.org/solr/resources.html#community).",
  "type": "docker",
  "docker_name": "solr",
  "revision": "6.1-alpine",
  "uris": [
    "https://hub.docker.com/r/_/solr",
    "https://hub.docker.com/v2/repositories/library/solr"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Type/Middleware/Web Server/Apache HTTP Server",
    "Type/Middleware/Search/Solr"
  ],
  "info_url": "https://hub.docker.com/r/_/solr",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}