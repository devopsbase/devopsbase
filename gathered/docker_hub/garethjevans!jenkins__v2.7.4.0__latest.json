{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/garethjevans/jenkins",
    "repository_url": "https://hub.docker.com/v2/repositories/garethjevans/jenkins",
    "tags_url": "https://hub.docker.com/v2/repositories/garethjevans/jenkins/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/garethjevans/jenkins/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/garethjevans/jenkins/autobuild",
    "user": "garethjevans",
    "name": "jenkins",
    "namespace": "garethjevans",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 1377,
    "last_updated": "2016-09-23T13:46:52.891686Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "v2.7.4.0",
        "full_size": 449643994,
        "id": 5029700,
        "repository": 302215,
        "creator": 116978,
        "last_updater": 116978,
        "last_updated": "2016-09-23T13:46:49.705809Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 449644024,
        "id": 806127,
        "repository": 302215,
        "creator": 116978,
        "last_updater": 116978,
        "last_updated": "2016-09-23T13:30:24.896434Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v2.7.3.0",
        "full_size": 440093169,
        "id": 5028407,
        "repository": 302215,
        "creator": 116978,
        "last_updater": 116978,
        "last_updated": "2016-09-23T12:32:24.248623Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v2.7.2.0",
        "full_size": 435091375,
        "id": 4320604,
        "repository": 302215,
        "creator": 116978,
        "last_updater": 116978,
        "last_updated": "2016-08-15T10:38:19.133899Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.16.9",
        "full_size": 430940442,
        "id": 4319663,
        "repository": 302215,
        "creator": 116978,
        "last_updater": 116978,
        "last_updated": "2016-08-15T09:25:23.063709Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.16.8",
        "full_size": 430533717,
        "id": 3699905,
        "repository": 302215,
        "creator": 116978,
        "last_updater": 116978,
        "last_updated": "2016-07-05T08:48:02.437361Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.16.7",
        "full_size": 430533353,
        "id": 3699533,
        "repository": 302215,
        "creator": 116978,
        "last_updater": 116978,
        "last_updated": "2016-07-05T08:20:24.436961Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.16.6",
        "full_size": 430539528,
        "id": 3695723,
        "repository": 302215,
        "creator": 116978,
        "last_updater": 116978,
        "last_updated": "2016-07-04T20:17:53.844198Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.16.5",
        "full_size": 430533069,
        "id": 3596697,
        "repository": 302215,
        "creator": 116978,
        "last_updater": 116978,
        "last_updated": "2016-06-27T11:57:34.442070Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.16.4",
        "full_size": 430518433,
        "id": 3596495,
        "repository": 302215,
        "creator": 116978,
        "last_updater": 116978,
        "last_updated": "2016-06-27T11:38:31.365946Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "garethjevans/docker-jenkins"
  },
  "name": "garethjevans/jenkins Docker container",
  "description": "Jenkins docker image with additional plugins",
  "readme": "# docker-jenkins\n\n[![](https://imagelayers.io/badge/garethjevans/jenkins:latest.svg)](https://imagelayers.io/?images=garethjevans/jenkins:latest 'Get your own badge on imagelayers.io')\n\nJenkins docker image with additional plugins\n\nThis is available on Docker hub as garethjevans/jenkins.\n\nhttps://hub.docker.com/r/garethjevans/jenkins/\n",
  "dockerfile": "FROM java:8-jdk\n\nRUN apt-get update && apt-get install -y wget git curl zip graphviz && rm -rf /var/lib/apt/lists/*\n\nENV JENKINS_HOME /var/jenkins_home\nENV JENKINS_SLAVE_AGENT_PORT 50000\n\n# Jenkins is ran with user `jenkins`, uid = 1000\n# If you bind mount a volume from host/volume from a data container, \n# ensure you use same uid\nRUN useradd -d \"$JENKINS_HOME\" -u 1000 -m -s /bin/bash jenkins\n\n# Jenkins home directoy is a volume, so configuration and build history \n# can be persisted and survive image upgrades\n# VOLUME /var/jenkins_home\n\n# `/usr/share/jenkins/ref/` contains all reference configuration we want \n# to set on a fresh new installation. Use it to bundle additional plugins \n# or config file with your custom jenkins Docker image.\nRUN mkdir -p /usr/share/jenkins/ref/init.groovy.d\n\nENV TINI_VERSION 0.9.0\nENV TINI_SHA fa23d1e20732501c3bb8eeeca423c89ac80ed452\n\n# Use tini as subreaper in Docker container to adopt zombie processes \nRUN curl -fL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -o /bin/tini && chmod +x /bin/tini \\\n  && echo \"$TINI_SHA /bin/tini\" | sha1sum -c -\n\n# COPY init.groovy /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy\n\nENV JENKINS_VERSION 2.7.4\nENV JENKINS_SHA 07a2e3e4ace728fdbcc823f46068d2f8cc3cb97b\n\n# could use ADD but this one does not check Last-Modified header \n# see https://github.com/docker/docker/issues/8331\nRUN curl -fL http://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war \\\n  -o /usr/share/jenkins/jenkins.war \\\n  && echo \"$JENKINS_SHA /usr/share/jenkins/jenkins.war\" | sha1sum -c -\n\nENV JENKINS_UC https://updates.jenkins-ci.org\nRUN chown -R jenkins \"$JENKINS_HOME\" /usr/share/jenkins/ref\n\n# for main web interface:\nEXPOSE 8080\n\n# will be used by attached slave agents:\nEXPOSE 50000\n\nENV COPY_REFERENCE_FILE_LOG $JENKINS_HOME/copy_reference_file.log\n\nCOPY jenkins.sh /usr/local/bin/jenkins.sh\nCOPY plugins.sh /usr/local/bin/plugins.sh\n\nRUN chown jenkins:jenkins /usr/local/bin/jenkins.sh && \\\n\tchown jenkins:jenkins /usr/local/bin/plugins.sh && \\\n\tchmod a+x /usr/local/bin/jenkins.sh && \\\n\tchmod a+x /usr/local/bin/plugins.sh\n\nENV SONAR_VERSION 2.4\nRUN wget --quiet http://repo1.maven.org/maven2/org/codehaus/sonar/runner/sonar-runner-dist/${SONAR_VERSION}/sonar-runner-dist-${SONAR_VERSION}.zip && \\\n\tunzip sonar-runner-dist-${SONAR_VERSION}.zip && \\\n\tmv sonar-runner-${SONAR_VERSION} /opt/sonar-runner && \\\n\tchown -R jenkins:jenkins /opt/sonar-runner\n\nENV NEWRELIC_AGENT_VERSION 3.28.0\nRUN wget --quiet https://download.run.pivotal.io/new-relic/new-relic-${NEWRELIC_AGENT_VERSION}.jar && \\\n\tmkdir /opt/newrelic && \\\n\tmv new-relic-${NEWRELIC_AGENT_VERSION}.jar /opt/newrelic/new-relic.jar && \\\n\tchown -R jenkins:jenkins /opt/newrelic\n\nCOPY newrelic.yml /opt/newrelic/\n\nUSER jenkins\n\n# Install plugins\nCOPY plugins.txt /usr/local/etc/plugins.txt\nRUN /usr/local/bin/plugins.sh /usr/local/etc/plugins.txt #redo\n\nENTRYPOINT [\"/bin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      8080,
      50000
    ],
    "volume": [],
    "run": [
      "apt-get update && apt-get install -y wget git curl zip graphviz && rm -rf /var/lib/apt/lists/*",
      "useradd -d \"$JENKINS_HOME\" -u 1000 -m -s /bin/bash jenkins",
      "mkdir -p /usr/share/jenkins/ref/init.groovy.d",
      "curl -fL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -o /bin/tini && chmod +x /bin/tini   && echo \"$TINI_SHA /bin/tini\" | sha1sum -c -",
      "curl -fL http://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war   -o /usr/share/jenkins/jenkins.war   && echo \"$JENKINS_SHA /usr/share/jenkins/jenkins.war\" | sha1sum -c -",
      "chown -R jenkins \"$JENKINS_HOME\" /usr/share/jenkins/ref",
      "chown jenkins:jenkins /usr/local/bin/jenkins.sh && \tchown jenkins:jenkins /usr/local/bin/plugins.sh && \tchmod a+x /usr/local/bin/jenkins.sh && \tchmod a+x /usr/local/bin/plugins.sh",
      "wget --quiet http://repo1.maven.org/maven2/org/codehaus/sonar/runner/sonar-runner-dist/${SONAR_VERSION}/sonar-runner-dist-${SONAR_VERSION}.zip && \tunzip sonar-runner-dist-${SONAR_VERSION}.zip && \tmv sonar-runner-${SONAR_VERSION} /opt/sonar-runner && \tchown -R jenkins:jenkins /opt/sonar-runner",
      "wget --quiet https://download.run.pivotal.io/new-relic/new-relic-${NEWRELIC_AGENT_VERSION}.jar && \tmkdir /opt/newrelic && \tmv new-relic-${NEWRELIC_AGENT_VERSION}.jar /opt/newrelic/new-relic.jar && \tchown -R jenkins:jenkins /opt/newrelic",
      "/usr/local/bin/plugins.sh /usr/local/etc/plugins.txt #redo"
    ],
    "workdir": [],
    "from": "java:8-jdk",
    "env": {
      "JENKINS_HOME": "/var/jenkins_home",
      "JENKINS_SLAVE_AGENT_PORT": "50000",
      "TINI_VERSION": "0.9.0",
      "TINI_SHA": "fa23d1e20732501c3bb8eeeca423c89ac80ed452",
      "JENKINS_VERSION": "2.7.4",
      "JENKINS_SHA": "07a2e3e4ace728fdbcc823f46068d2f8cc3cb97b",
      "JENKINS_UC": "https://updates.jenkins-ci.org",
      "COPY_REFERENCE_FILE_LOG": "$JENKINS_HOME/copy_reference_file.log",
      "SONAR_VERSION": "2.4",
      "NEWRELIC_AGENT_VERSION": "3.28.0"
    },
    "copy": "plugins.txt /usr/local/etc/plugins.txt",
    "user": "jenkins",
    "entrypoint": "[\"/bin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]"
  },
  "source_repository_url": "https://github.com/garethjevans/docker-jenkins.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/garethjevans/docker-jenkins",
  "docker_repository": "garethjevans/jenkins",
  "docker_image": "garethjevans/jenkins",
  "parameters_schema": {
    "JENKINS_HOME": {
      "default": "/var/jenkins_home",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_SLAVE_AGENT_PORT": {
      "default": "50000",
      "type": "string",
      "mapping": "environment_variable"
    },
    "TINI_VERSION": {
      "default": "0.9.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "TINI_SHA": {
      "default": "fa23d1e20732501c3bb8eeeca423c89ac80ed452",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_VERSION": {
      "default": "2.7.4",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_SHA": {
      "default": "07a2e3e4ace728fdbcc823f46068d2f8cc3cb97b",
      "type": "string",
      "mapping": "environment_variable"
    },
    "JENKINS_UC": {
      "default": "https://updates.jenkins-ci.org",
      "type": "string",
      "mapping": "environment_variable"
    },
    "COPY_REFERENCE_FILE_LOG": {
      "default": "$JENKINS_HOME/copy_reference_file.log",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SONAR_VERSION": {
      "default": "2.4",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NEWRELIC_AGENT_VERSION": {
      "default": "3.28.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        8080,
        50000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "garethjevans/jenkins",
  "revision": "v2.7.4.0",
  "uris": [
    "https://hub.docker.com/r/garethjevans/jenkins",
    "https://hub.docker.com/v2/repositories/garethjevans/jenkins",
    "https://github.com/garethjevans/docker-jenkins.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Devopsware/Integration/Jenkins"
  ],
  "info_url": "https://hub.docker.com/r/garethjevans/jenkins",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}