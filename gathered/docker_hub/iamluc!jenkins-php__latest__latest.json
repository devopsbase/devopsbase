{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/iamluc/jenkins-php",
    "repository_url": "https://hub.docker.com/v2/repositories/iamluc/jenkins-php",
    "tags_url": "https://hub.docker.com/v2/repositories/iamluc/jenkins-php/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/iamluc/jenkins-php/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/iamluc/jenkins-php/autobuild",
    "user": "iamluc",
    "name": "jenkins-php",
    "namespace": "iamluc",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 190,
    "last_updated": "2016-10-11T20:02:47.491524Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 384302552,
        "id": 939786,
        "repository": 327108,
        "creator": 51147,
        "last_updater": 51147,
        "last_updated": "2016-10-11T20:02:46.910116Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "iamluc/dockerfiles"
  },
  "name": "iamluc/jenkins-php Docker container",
  "description": "PHP flavoured Jenkins image",
  "readme": "Build\n-----\n\ndocker build -t iamluc/jenkins-php .\n",
  "dockerfile": "FROM jenkins\n\nENV DEBIAN_FRONTEND noninteractive\n\n# if we want to install via apt\nUSER root\n\nRUN apt-get update \\\n  && apt-get install -y \\\n\t  ant \\\n\t  php5-cli php5-sqlite php5-curl php5-gd php5-xdebug php-codecoverage \\\n\t  phpunit phploc php-codesniffer pdepend phpmd phpcpd phpdox \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN wget -O /usr/local/bin/composer https://getcomposer.org/composer.phar && chmod +x /usr/local/bin/composer\n\nRUN echo \"xdebug.max_nesting_level = 200\" >> /etc/php5/mods-available/xdebug.ini\n\n# drop back to the regular jenkins user - good practice\nUSER jenkins\n\nCOPY plugins.txt /usr/share/jenkins/plugins.txt\nRUN /usr/local/bin/plugins.sh /usr/share/jenkins/plugins.txt\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "apt-get update   && apt-get install -y \t  ant \t  php5-cli php5-sqlite php5-curl php5-gd php5-xdebug php-codecoverage \t  phpunit phploc php-codesniffer pdepend phpmd phpcpd phpdox   && apt-get clean   && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*",
      "wget -O /usr/local/bin/composer https://getcomposer.org/composer.phar && chmod +x /usr/local/bin/composer",
      "echo \"xdebug.max_nesting_level = 200\" >> /etc/php5/mods-available/xdebug.ini",
      "/usr/local/bin/plugins.sh /usr/share/jenkins/plugins.txt"
    ],
    "workdir": [],
    "from": "jenkins",
    "env": {
      "DEBIAN_FRONTEND": "noninteractive"
    },
    "user": "jenkins",
    "copy": "plugins.txt /usr/share/jenkins/plugins.txt"
  },
  "source_repository_url": "https://github.com/iamluc/dockerfiles.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/iamluc/dockerfiles",
  "docker_repository": "iamluc/jenkins-php",
  "docker_image": "iamluc/jenkins-php",
  "parameters_schema": {
    "DEBIAN_FRONTEND": {
      "default": "noninteractive",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "iamluc/jenkins-php",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/iamluc/jenkins-php",
    "https://hub.docker.com/v2/repositories/iamluc/jenkins-php",
    "https://github.com/iamluc/dockerfiles.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Mode/Executable/Image",
    "Type/Devopsware/Integration/Jenkins",
    "Type/Middleware/Runtime/PHP"
  ],
  "info_url": "https://hub.docker.com/r/iamluc/jenkins-php",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}