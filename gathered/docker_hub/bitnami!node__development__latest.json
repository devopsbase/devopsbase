{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/bitnami/node",
    "repository_url": "https://hub.docker.com/v2/repositories/bitnami/node",
    "tags_url": "https://hub.docker.com/v2/repositories/bitnami/node/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/bitnami/node/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/bitnami/node/autobuild",
    "user": "bitnami",
    "name": "node",
    "namespace": "bitnami",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 16,
    "pull_count": 14381,
    "last_updated": "2016-10-17T09:49:24.804968Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "development",
        "full_size": 183510187,
        "id": 384278,
        "repository": 229039,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-10-17T09:49:24.384817Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "_",
        "full_size": 183510639,
        "id": 5450699,
        "repository": 229039,
        "creator": 342683,
        "last_updater": 342683,
        "last_updated": "2016-10-17T08:30:24.298157Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "latest",
        "full_size": 183510691,
        "id": 384285,
        "repository": 229039,
        "creator": 257375,
        "last_updater": 342683,
        "last_updated": "2016-10-13T23:43:07.911524Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "6.8.0-r0",
        "full_size": 183510691,
        "id": 5445525,
        "repository": 229039,
        "creator": 342683,
        "last_updater": 342683,
        "last_updated": "2016-10-13T23:43:00.672004Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "6.7.0-r0",
        "full_size": 183473298,
        "id": 5164946,
        "repository": 229039,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-30T09:31:11.046450Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.6.0-r0",
        "full_size": 183501502,
        "id": 5044156,
        "repository": 229039,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-24T00:46:42.724855Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.5.0-r0",
        "full_size": 181638031,
        "id": 5036545,
        "repository": 229039,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-23T18:52:56.881458Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.4.0-r1",
        "full_size": 181358041,
        "id": 4711944,
        "repository": 229039,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-07T11:53:01.471895Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.4.0-r0",
        "full_size": 179382452,
        "id": 4519608,
        "repository": 229039,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-08-26T00:52:08.299764Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "6.3.0-r0",
        "full_size": 178586744,
        "id": 3796572,
        "repository": 229039,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-07-12T08:12:03.520403Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "bitnami/bitnami-docker-node"
  },
  "name": "bitnami/node Docker container",
  "description": "Bitnami Node.js Docker Image",
  "readme": "[![CircleCI](https://circleci.com/gh/bitnami/bitnami-docker-node/tree/master.svg?style=shield)](https://circleci.com/gh/bitnami/bitnami-docker-node/tree/master)\n[![Docker Hub Automated Build](http://container.checkforupdates.com/badges/bitnami/node)](https://hub.docker.com/r/bitnami/node/)\n\n# What is Node.js?\n\n> Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.\n\n[nodejs.org](https://nodejs.org/)\n\n# TLDR\n\n```bash\ndocker run -it --name node bitnami/node\n```\n\n## Docker Compose\n\n```yaml\nnode:\n  image: bitnami/node\n  command: npm start\n  volumes:\n    - .:/app\n```\n\n# Get this image\n\nThe recommended way to get the Bitnami Node.js Docker Image is to pull the prebuilt image from the [Docker Hub Registry](https://hub.docker.com/r/bitnami/node).\n\n```bash\ndocker pull bitnami/node:latest\n```\n\nTo use a specific version, you can pull a versioned tag. You can view the [list of available versions](https://hub.docker.com/r/bitnami/node/tags/) in the Docker Hub Registry.\n\n```bash\ndocker pull bitnami/node:[TAG]\n```\n\nIf you wish, you can also build the image yourself.\n\n```bash\ndocker build -t bitnami/node https://github.com/bitnami/bitnami-docker-node.git\n```\n\n# Entering the REPL\n\nBy default, running this image will drop you into the Node.js REPL, where you can interactively test and try things out in Node.js.\n\n```bash\ndocker run -it --name node bitnami/node\n```\n\n**Further Reading:**\n\n  - [nodejs.org/api/repl.html](https://nodejs.org/api/repl.html)\n\n# Running your Node.js script\n\nThe default work directory for the Node.js image is `/app`. You can mount a folder from your host here that includes your Node.js script, and run it normally using the `node` command.\n\n```bash\ndocker run -it --name node -v /path/to/app:/app bitnami/node \\\n  node script.js\n```\n\n# Running a Node.js app with npm dependencies\n\nIf your Node.js app has a `package.json` defining your app's dependencies and start script, you can install the dependencies before running your app.\n\n```bash\ndocker run --rm -v /path/to/app:/app bitnami/node npm install\ndocker run -it --name node  -v /path/to/app:/app bitnami/node npm start\n```\n\nor using Docker Compose:\n\n```yaml\nnode:\n  image: bitnami/node\n  command: \"sh -c 'npm install && npm start'\"\n  volumes:\n    - .:/app\n```\n\n**Further Reading:**\n\n- [package.json documentation](https://docs.npmjs.com/files/package.json)\n- [npm start script](https://docs.npmjs.com/misc/scripts#default-values)\n\n# Accessing a Node.js app running a web server\n\nBy default the image exposes the port `3000` of the container. You can use this port for your Node.js application server.\n\nBelow is an example of an [express.js](http://expressjs.com/) app listening to remote connections on port `3000`:\n\n```javascript\nvar express = require('express');\nvar app = express();\n\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\n\nvar server = app.listen(3000, '0.0.0.0', function () {\n\n  var host = server.address().address;\n  var port = server.address().port;\n\n  console.log('Example app listening at http://%s:%s', host, port);\n});\n```\n\nTo access your web server from your host machine you can ask Docker to map a random port on your host to port `3000` inside the container.\n\n```bash\ndocker run -it --name node -v /path/to/app:/app -P bitnami/node node index.js\n```\n\nRun `docker port` to determine the random port Docker assigned.\n\n```bash\n$ docker port node\n3000/tcp -> 0.0.0.0:32769\n```\n\nYou can also specify the port you want forwarded from your host to the container.\n\n```bash\ndocker run -it --name node -p 8080:3000 -v /path/to/app:/app bitnami/node node index.js\n```\n\nAccess your web server in the browser by navigating to [http://localhost:8080](http://localhost:8080/).\n\n# Linking\n\nIf you want to connect to your Node.js web server inside another container, you can use the linking system provided by Docker.\n\n## Serving your Node.js app through an nginx frontend\n\nWe may want to make our Node.js web server only accessible via an nginx web server. Doing so will allow us to setup more complex configuration, serve static assets using nginx, load balance to different Node.js instances, etc.\n\n### Step 1: Create a virtual host\n\nLet's create an nginx virtual host to reverse proxy to our Node.js container.\n\n```nginx\nserver {\n    listen 0.0.0.0:80;\n    server_name yourapp.com;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header HOST $http_host;\n        proxy_set_header X-NginX-Proxy true;\n\n        # proxy_pass http://[your_node_container_link_alias]:3000;\n        proxy_pass http://yourapp:3000;\n        proxy_redirect off;\n    }\n}\n```\n\nNotice we've substituted the link alias name `yourapp`, we will use the same name when creating the link.\n\nCopy the virtual host above, saving the file somewhere on your host. We will mount it as a volume in our nginx container.\n\n### Step 2: Run the Node.js image with a specific name\n\nDocker's linking system uses container ids or names to reference containers. We can explicitly specify a name for our Node.js server to make it easier to connect to other containers.\n\n```bash\ndocker run -it --name node -v /path/to/app:/app bitnami/node node index.js\n```\n\nor using Docker Compose:\n\n```yaml\nnode:\n  image: bitnami/node\n  command: node index.js\n  volumes:\n    - .:/app\n```\n\n### Step 3: Run the nginx image and link it to the Node.js server\n\nNow that we have our Node.js server running, we can create another container that links to it by giving Docker the `--link` option. This option takes the id or name of the container we want to link it to as well as a hostname to use inside the container, separated by a colon. For example, to have our Node.js server accessible in another container with `yourapp` as it's hostname we would pass `--link node:yourapp` to the Docker run command.\n\n```bash\ndocker run -it -v /path/to/vhost.conf:/bitnami/nginx/conf/vhosts/yourapp.conf:ro \\\n  --link node:yourapp \\\n  bitnami/nginx\n```\n\nor using Docker Compose:\n\n```yaml\nnginx:\n  image: bitnami/nginx\n  links:\n    - node:yourapp\n  volumes:\n    - /path/to/vhost.conf:/bitnami/nginx/conf/vhosts/yourapp.conf:ro\n```\n\nWe started the nginx server, mounting the virtual host we created in [Step 1](#step-1-create-a-virtual-host), and created a link to the Node.js server with the alias `yourapp`.\n\n# Maintenance\n\n## Upgrade this image\n\nBitnami provides up-to-date versions of Node.js, including security patches, soon after they are made upstream. We recommend that you follow these steps to upgrade your container.\n\n### Step 1: Get the updated image\n\n```bash\ndocker pull bitnami/node:latest\n```\n\nor if you're using Docker Compose, update the value of the image property to `bitnami/node:latest`.\n\n### Step 2: Remove the currently running container\n\n```bash\ndocker rm -v node\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose rm -v node\n```\n\n### Step 3: Run the new image\n\nRe-create your container from the new image.\n\n```bash\ndocker run --name node bitnami/node:latest\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose start node\n```\n\n# Testing\n\nThis image is tested for expected runtime behavior, using the [Bats](https://github.com/sstephenson/bats) testing framework. You can run the tests on your machine using the `bats` command.\n\n```bash\nbats test.sh\n```\n\n# Notable Changes\n\n## 6.2.0-r0 (2016-05-11)\n\n- Commands are now executed as the `root` user. Use the `--user` argument to switch to another user or change to the required user using `sudo` to launch applications. Alternatively, as of Docker 1.10 User Namespaces are supported by the docker daemon. Refer to the [daemon user namespace options](https://docs.docker.com/engine/reference/commandline/daemon/#daemon-user-namespace-options) for more details.\n\n## 4.1.2-0 (2015-10-12)\n\n- Permissions fixed so `bitnami` user can install global npm modules without needing `sudo`.\n\n## 4.1.1-0-r01 (2015-10-07)\n\n- `/app` directory is no longer exported as a volume. This caused problems when building on top of the image, since changes in the volume are not persisted between Dockerfile `RUN` instructions. To keep the previous behavior (so that you can mount the volume in another container), create the container with the `-v /app` option.\n\n# Contributing\n\nWe'd love for you to contribute to this Docker image. You can request new features by creating an [issue](https://github.com/bitnami/bitnami-docker-node/issues), or submit a [pull request](https://github.com/bitnami/bitnami-docker-node/pulls) with your contribution.\n\n# Issues\n\nIf you encountered a problem running this container, you can file an [issue](https://github.com/bitnami/bitnami-docker-node/issues). For us to provide better support, be sure to include the following information in your issue:\n\n- Host OS and version\n- Docker version (`docker version`)\n- Output of `docker info`\n- Version of this container (`echo $BITNAMI_IMAGE_VERSION` inside the container)\n- The command you used to run the container, and any relevant output you saw (masking any sensitive\ninformation)\n\n# License\n\nCopyright (c) 2015-2016 Bitnami\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "dockerfile": "## BUILDING\n##   (from project root directory)\n##   $ docker build -t node-js-for-bitnami-bitnami-docker-node .\n##\n## RUNNING\n##   $ docker run -p 3000:3000 node-js-for-bitnami-bitnami-docker-node\n##\n## CONNECTING\n##   Lookup the IP of your active docker host using:\n##     $ docker-machine ip $(docker-machine active)\n##   Connect to the container at DOCKER_IP:3000\n##     replacing DOCKER_IP for the IP of your active docker host\n\nFROM gcr.io/stacksmith-images/ubuntu-buildpack:14.04-r10\n\nMAINTAINER Bitnami <containers@bitnami.com>\n\nENV STACKSMITH_STACK_ID=\"1r79j35\" \\\n    STACKSMITH_STACK_NAME=\"Node.js for bitnami/bitnami-docker-node\" \\\n    STACKSMITH_STACK_PRIVATE=\"1\"\n\nRUN bitnami-pkg install node-6.8.0-0 --checksum 4f7b240da766618428e8d878a63a2f554d0a6e1777b917ff45b54cf66f9a196d\n\nENV PATH=/opt/bitnami/node/bin:/opt/bitnami/python/bin:$PATH \\\n    NODE_PATH=/opt/bitnami/node/lib/node_modules\n\n## STACKSMITH-END: Modifications below this line will be unchanged when regenerating\n\nRUN bitnami-pkg install imagemagick-6.7.5-10-3 --checksum 617e85a42c80f58c568f9bc7337e24c03e35cf4c7c22640407a7e1e16880cf88\nRUN bitnami-pkg install mysql-libraries-10.1.13-0 --checksum 71ca428b619901123493503f8a99ccfa588e5afddd26e0d503a32cca1bc2a389\n\nENV BITNAMI_APP_NAME=node \\\n    BITNAMI_IMAGE_VERSION=6.8.0-r0\n\nEXPOSE 3000\nWORKDIR /app\n\nCMD [\"node\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      3000
    ],
    "volume": [],
    "run": [
      "bitnami-pkg install node-6.8.0-0 --checksum 4f7b240da766618428e8d878a63a2f554d0a6e1777b917ff45b54cf66f9a196d",
      "bitnami-pkg install imagemagick-6.7.5-10-3 --checksum 617e85a42c80f58c568f9bc7337e24c03e35cf4c7c22640407a7e1e16880cf88",
      "bitnami-pkg install mysql-libraries-10.1.13-0 --checksum 71ca428b619901123493503f8a99ccfa588e5afddd26e0d503a32cca1bc2a389"
    ],
    "workdir": [
      "/app"
    ],
    "from": "gcr.io/stacksmith-images/ubuntu-buildpack:14.04-r10",
    "maintainer": "Bitnami <containers@bitnami.com>",
    "env": {
      "STACKSMITH_STACK_ID": "\"1r79j35\"",
      "": "",
      "STACKSMITH_STACK_NAME": "\"Node.js",
      "for": "bitnami/bitnami-docker-node\"",
      "STACKSMITH_STACK_PRIVATE": "\"1\"",
      "PATH": "/opt/bitnami/node/bin:/opt/bitnami/python/bin:$PATH",
      "NODE_PATH": "/opt/bitnami/node/lib/node_modules",
      "BITNAMI_APP_NAME": "node",
      "BITNAMI_IMAGE_VERSION": "6.8.0-r0"
    },
    "cmd": "[\"node\"]"
  },
  "source_repository_url": "https://github.com/bitnami/bitnami-docker-node.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/bitnami/bitnami-docker-node",
  "docker_repository": "bitnami/node",
  "docker_image": "bitnami/node",
  "parameters_schema": {
    "STACKSMITH_STACK_ID": {
      "default": "\"1r79j35\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "STACKSMITH_STACK_NAME": {
      "default": "\"Node.js",
      "type": "string",
      "mapping": "environment_variable"
    },
    "for": {
      "default": "bitnami/bitnami-docker-node\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "STACKSMITH_STACK_PRIVATE": {
      "default": "\"1\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/opt/bitnami/node/bin:/opt/bitnami/python/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "NODE_PATH": {
      "default": "/opt/bitnami/node/lib/node_modules",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_APP_NAME": {
      "default": "node",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_IMAGE_VERSION": {
      "default": "6.8.0-r0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        3000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "bitnami/node",
  "revision": "development",
  "uris": [
    "https://hub.docker.com/r/bitnami/node",
    "https://hub.docker.com/v2/repositories/bitnami/node",
    "https://github.com/bitnami/bitnami-docker-node.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/JavaScript/Node.js",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Image/Container Image/Docker Image"
  ],
  "info_url": "https://hub.docker.com/r/bitnami/node",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}