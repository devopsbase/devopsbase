{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/thedigitalgarage/wordpress",
    "repository_url": "https://hub.docker.com/v2/repositories/thedigitalgarage/wordpress",
    "tags_url": "https://hub.docker.com/v2/repositories/thedigitalgarage/wordpress/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/thedigitalgarage/wordpress/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/thedigitalgarage/wordpress/autobuild",
    "user": "thedigitalgarage",
    "name": "wordpress",
    "namespace": "thedigitalgarage",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 4571,
    "last_updated": "2016-09-29T01:13:24.463652Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 170743525,
        "id": 4971370,
        "repository": 928292,
        "creator": 671421,
        "last_updater": 671421,
        "last_updated": "2016-09-29T01:13:22.386208Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "thedigitalgarage/docker-wordpress"
  },
  "name": "thedigitalgarage/wordpress Docker container",
  "description": "wordpress",
  "readme": "# docker-wordpress\nDocker image that allows running [Wordpress](https://github.com/WordPress/WordPress) in production mode,\nand is a bit more configurable than the [official Wordpress Docker image](https://hub.docker.com/_/wordpress/).\n\n# What is WordPress?\nWordPress is a free and open source blogging tool and a content management system (CMS) based on PHP and MySQL, which runs on a web hosting service. Features include a plugin architecture and a template system. WordPress is used by more than 22.0% of the top 10 million websites as of August 2013. WordPress is the most popular blogging system in use on the Web, at more than 60 million websites. The most popular languages used are English, Spanish and Bahasa Indonesia.\n```\nwikipedia.org/wiki/WordPress\n```\n\n![wordress]\n\n[wordress]: https://raw.githubusercontent.com/docker-library/docs/01c12653951b2fe592c1f93a13b4e289ada0e3a1/wordpress/logo.png\n\n# How to use this image\n```\n$ docker run --name some-wordpress --link some-mysql:mysql -d wordpress\n```\nThe following environment variables are also honored for configuring your WordPress instance:\n\n-e WORDPRESS_DB_HOST=... (defaults to the IP and port of the linked mysql container)\n-e WORDPRESS_DB_USER=... (defaults to \"root\")\n-e WORDPRESS_DB_PASSWORD=... (defaults to the value of the MYSQL_ROOT_PASSWORD environment variable from the linked mysql container)\n-e WORDPRESS_DB_NAME=... (defaults to \"wordpress\")\n-e WORDPRESS_TABLE_PREFIX=... (defaults to \"\", only set this when you need to override the default table prefix in wp-config.php)\n-e WORDPRESS_AUTH_KEY=..., -e WORDPRESS_SECURE_AUTH_KEY=..., -e WORDPRESS_LOGGED_IN_KEY=..., -e WORDPRESS_NONCE_KEY=..., -e WORDPRESS_AUTH_SALT=..., -e WORDPRESS_SECURE_AUTH_SALT=..., -e WORDPRESS_LOGGED_IN_SALT=..., -e WORDPRESS_NONCE_SALT=... (default to unique random SHA1s)\nIf the WORDPRESS_DB_NAME specified does not already exist on the given MySQL server, it will be created automatically upon startup of the wordpress container, provided that the WORDPRESS_DB_USER specified has the necessary permissions to create it.\n\nIf you'd like to be able to access the instance from the host without the container's IP, standard port mappings can be used:\n```\n$ docker run --name some-wordpress --link some-mysql:mysql -p 8080:80 -d wordpress\n```\nThen, access it via http://localhost:8080 or http://host-ip:8080 in a browser.\n\nIf you'd like to use an external database instead of a linked mysql container, specify the hostname and port with WORDPRESS_DB_HOST along with the password in WORDPRESS_DB_PASSWORD and the username in WORDPRESS_DB_USER (if it is something other than root):\n```\n$ docker run --name some-wordpress -e WORDPRESS_DB_HOST=10.1.2.3:3306 \\\n    -e WORDPRESS_DB_USER=... -e WORDPRESS_DB_PASSWORD=... -d wordpress\n```\n\n# ... via docker-compose\nExample docker-compose.yml for wordpress:\n```\nversion: '2'\n\nservices:\n\n  wordpress:\n    image: wordpress\n    ports:\n      - 8080:80\n    environment:\n      WORDPRESS_DB_PASSWORD: example\n\n  mysql:\n    image: mariadb\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n```\nRun docker-compose up, wait for it to initialize completely, and visit http://localhost:8080 or http://host-ip:8080.\n\n# Adding additional libraries / extensions\nThis image does not provide any additional PHP extensions or other libraries, even if they are required by popular plugins. There are an infinite number of possible plugins, and they potentially require any extension PHP supports. Including every PHP extension that exists would dramatically increase the image size.\n\nIf you need additional PHP extensions, you'll need to create your own image FROM this one. The [documentation](https://github.com/docker-library/docs/blob/master/php/README.md#how-to-install-more-php-extensions) of the `php` [image](https://github.com/docker-library/docs/blob/master/php/README.md#how-to-install-more-php-extensions) explains how to compile additional extensions. Additionally, the `wordpress` [Dockerfile](https://github.com/docker-library/wordpress/blob/618490d4bdff6c5774b84b717979bfe3d6ba8ad1/apache/Dockerfile#L5-L9) has an example of doing this.\n\nThe following Docker Hub features can help with the task of keeping your dependent images up-to-date:\n\n* [Automated Builds](https://docs.docker.com/docker-hub/builds/#repository-links) let Docker Hub automatically build your Dockerfile each time you push changes to it.\n* [Repository Links](https://docs.docker.com/docker-hub/builds/#repository-links) can ensure that your image is also rebuilt any time wordpress is updated.\n\n# Supported Docker versions\nThis image is officially supported on Docker version 1.12.1.\n\nSupport for older versions (down to 1.6) is provided on a best-effort basis.\n\nPlease see the [Docker installation documentation](https://docs.docker.com/installation/) for details on how to upgrade your Docker daemon.",
  "dockerfile": "FROM wordpress\n\nMAINTAINER David, david.dimas333@gmail.com",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": [],
    "from": "wordpress",
    "maintainer": "David, david.dimas333@gmail.com"
  },
  "source_repository_url": "https://github.com/thedigitalgarage/docker-wordpress.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/thedigitalgarage/docker-wordpress",
  "docker_repository": "thedigitalgarage/wordpress",
  "docker_image": "thedigitalgarage/wordpress",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "thedigitalgarage/wordpress",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/thedigitalgarage/wordpress",
    "https://hub.docker.com/v2/repositories/thedigitalgarage/wordpress",
    "https://github.com/thedigitalgarage/docker-wordpress.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Version Control/Git"
  ],
  "info_url": "https://hub.docker.com/r/thedigitalgarage/wordpress",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}