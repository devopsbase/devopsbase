{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/solict/high-performance-php-stack",
    "repository_url": "https://hub.docker.com/v2/repositories/solict/high-performance-php-stack",
    "tags_url": "https://hub.docker.com/v2/repositories/solict/high-performance-php-stack/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/solict/high-performance-php-stack/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/solict/high-performance-php-stack/autobuild",
    "user": "solict",
    "name": "high-performance-php-stack",
    "namespace": "solict",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 2,
    "pull_count": 2084,
    "last_updated": "2016-10-14T03:15:33.810411Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "debian8_mysql56",
        "full_size": 158638585,
        "id": 2868061,
        "repository": 643538,
        "creator": 178581,
        "last_updater": 178581,
        "last_updated": "2016-10-14T03:15:32.810089Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos6_redis30",
        "full_size": 126505402,
        "id": 2867648,
        "repository": 643538,
        "creator": 178581,
        "last_updater": 178581,
        "last_updated": "2016-10-14T03:12:21.039395Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos7_mysql55",
        "full_size": 626784427,
        "id": 2868761,
        "repository": 643538,
        "creator": 178581,
        "last_updater": 178581,
        "last_updated": "2016-10-14T03:09:43.005595Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "debian8_php56",
        "full_size": 220769257,
        "id": 2868506,
        "repository": 643538,
        "creator": 178581,
        "last_updater": 178581,
        "last_updated": "2016-10-14T03:02:33.356424Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "debian7_php56",
        "full_size": 166335355,
        "id": 2868287,
        "repository": 643538,
        "creator": 178581,
        "last_updater": 178581,
        "last_updated": "2016-10-14T02:54:29.239768Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos7_php56",
        "full_size": 259714396,
        "id": 2868867,
        "repository": 643538,
        "creator": 178581,
        "last_updater": 178581,
        "last_updated": "2016-10-14T02:47:01.046500Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos6_php56",
        "full_size": 253225062,
        "id": 2868440,
        "repository": 643538,
        "creator": 178581,
        "last_updater": 178581,
        "last_updated": "2016-10-14T02:37:30.240713Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "debian8_memcached14",
        "full_size": 103821363,
        "id": 2708513,
        "repository": 643538,
        "creator": 178581,
        "last_updater": 178581,
        "last_updated": "2016-10-14T02:22:51.066082Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "centos6_memcached14",
        "full_size": 126171079,
        "id": 2708469,
        "repository": 643538,
        "creator": 178581,
        "last_updater": 178581,
        "last_updated": "2016-10-14T02:20:44.701505Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "debian7_memcached14",
        "full_size": 76315605,
        "id": 2708483,
        "repository": 643538,
        "creator": 178581,
        "last_updater": 178581,
        "last_updated": "2016-10-14T02:18:00.971667Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "solict/docker-high-performance-php-stack"
  },
  "name": "solict/high-performance-php-stack Docker container",
  "description": "High Performance PHP Stack for Debian and CentOS, developed for Docker",
  "readme": "# Docker High Performance PHP Stack\nHigh Performance PHP stack builds based on [Debian](https://www.debian.org/) and [CentOS](https://www.centos.org/), and developed as scripts for [Docker](https://www.docker.com/).  \nContinues on [Docker General Purpose System Distro](https://github.com/solict/docker-general-purpose-system-distro) builds.\n\nRequires [Docker Compose](https://docs.docker.com/compose/) 1.6.x or higher due to the [version 2](https://docs.docker.com/compose/compose-file/#versioning) format of the docker-compose.yml files.\n\nThe docker-compose.yml are separated by distribution and may use docker-compose.override.yml or .env files to override configuration.\nAn optional rudimentary script [docker-compose-helper.sh](../../tree/master/docker-compose-helper.sh) is provided to help with loading these.\n\nScripts are also provided to help test and deploy the installation procedures in non-Docker environments.\n\nThe images are automatically built at a [repository](https://hub.docker.com/r/solict/high-performance-php-stack) in the Docker Hub registry.\n\n## Distributions\nThe profiles use custom images as a starting point:\n- __Debian__, from the [Docker General Purpose System Distro](https://github.com/solict/docker-general-purpose-system-distro)\n  - [Debian 8 (jessie)](../../tree/master/debian8)\n  - [Debian 7 (wheezy)](../../tree/master/debian7)\n- __CentOS__, from the [Docker General Purpose System Distro](https://github.com/solict/docker-general-purpose-system-distro)\n  - [CentOS 7 (centos7)](../../tree/master/centos7)\n  - [CentOS 6 (centos6)](../../tree/master/centos6)\n\n## Profiles\nThese are the profiles described by the dockerfiles:\n- Memcached 1.4.x, adds Memcached on top of upstream Standard profile\n- Redis 3.0.x, adds Redis on top of upstream Standard profile\n- MySQL 5.5.x/5.6.x/MariaDB 10.x, adds MySQL/MariaDB on top of upstream Standard profile\n- PHP 5.6.x, adds PHP on top of upstream Devel profile\n- HTTPd 2.x.x Web, adds HTTPd on top of upstream Devel profile\n- HTTPd 2.x.x Proxy, adds HTTPd on top of upstream Standard profile\n\n## Images\nThese are the [resulting images](https://hub.docker.com/r/solict/high-performance-php-stack/tags/) upon building:\n- Memcached 1.4.x profile:\n  - solict/high-performance-php-stack:debian8_memcached14\n  - solict/high-performance-php-stack:debian7_memcached14\n  - solict/high-performance-php-stack:centos7_memcached14\n  - solict/high-performance-php-stack:centos6_memcached14\n- Redis 3.0.x profile:\n  - solict/high-performance-php-stack:debian8_redis30\n  - solict/high-performance-php-stack:debian7_redis30\n  - solict/high-performance-php-stack:centos7_redis30\n  - solict/high-performance-php-stack:centos6_redis30\n- MySQL 5.5.x/5.6.x/MariaDB 10.x profile:\n  - solict/high-performance-php-stack:debian8_mysql56\n  - solict/high-performance-php-stack:debian7_mysql56\n  - solict/high-performance-php-stack:centos7_mysql55\n  - solict/high-performance-php-stack:centos6_mysql55\n- PHP 5.6.x profile:\n  - solict/high-performance-php-stack:debian8_php56\n  - solict/high-performance-php-stack:debian7_php56\n  - solict/high-performance-php-stack:centos7_php56\n  - solict/high-performance-php-stack:centos6_php56\n- HTTPd 2.x.x Web profile:\n  - solict/high-performance-php-stack:debian8_httpd24_web\n  - solict/high-performance-php-stack:debian7_httpd22_web\n  - solict/high-performance-php-stack:centos7_httpd24_web\n  - solict/high-performance-php-stack:centos6_httpd22_web\n- HTTPd 2.x.x Proxy profile:\n  - solict/high-performance-php-stack:debian8_httpd24_proxy\n  - solict/high-performance-php-stack:debian7_httpd22_proxy\n  - solict/high-performance-php-stack:centos7_httpd24_proxy\n  - solict/high-performance-php-stack:centos6_httpd22_proxy\n\n## Containers\nThese containers are generated upon issuing a create:\n- Memcached 1.4.x profile:\n  - debian8_memcached14_xxx\n  - debian7_memcached14_xxx\n  - centos7_memcached14_xxx\n  - centos6_memcached14_xxx\n- Redis 3.0.x profile:\n  - debian8_redis30_xxx\n  - debian7_redis30_xxx\n  - centos7_redis30_xxx\n  - centos6_redis30_xxx\n- MySQL 5.5.x/5.6.x/MariaDB 10.x profile:\n  - debian8_mysql56_xxx\n  - debian7_mysql56_xxx\n  - centos7_mysql55_xxx\n  - centos6_mysql55_xxx\n- PHP 5.6.x profile:\n  - debian8_php56_xxx\n  - debian7_php56_xxx\n  - centos7_php56_xxx\n  - centos6_php56_xxx\n- HTTPd 2.x.x Web profile:\n  - debian8_httpd24_web_xxx\n  - debian7_httpd22_web_xxx\n  - centos7_httpd24_web_xxx\n  - centos6_httpd22_web_xxx\n- HTTPd 2.x.x Proxy profile:\n  - debian8_httpd24_proxy_xxx\n  - debian7_httpd22_proxy_xxx\n  - centos7_httpd24_proxy_xxx\n  - centos6_httpd22_proxy_xxx\n\n## Usage\n\n### From Docker Hub repository (basics)\n\nNote: this method will not allow you to use the docker-compose files nor the script.\n\n1. To pull the images, try typing:  \n`docker pull <image_url>`\n2. You can start a new container interactively by typing:  \n`docker run -ti <image_url> /bin/bash`\n\nWhere <image_url> is the full image url (lookup the image list above).\n\nExamples:\n```\ndocker pull solict/high-performance-php-stack:debian7_memcached14\ndocker pull solict/high-performance-php-stack:debian7_redis30\ndocker pull solict/high-performance-php-stack:debian7_mysql56\ndocker pull solict/high-performance-php-stack:debian7_php56\ndocker pull solict/high-performance-php-stack:debian7_httpd22_web\ndocker pull solict/high-performance-php-stack:debian7_httpd22_proxy\n```\n\n### From GitHub repository (advanced)\n\n1. Download the repository [zip file](https://github.com/solict/docker-high-performance-php-stack/archive/master.zip) and unpack it or clone the repository using:  \n`git clone https://github.com/solict/docker-high-performance-php-stack.git`\n2. Navigate to the project directory with a terminal and type:  \n`docker-compose-helper --project=<distro> <operation>`\n\nWhere <distro> is the distribution/directory and <operation> is the desired docker-compose operation.\n\nExamples:\n```\n./docker-compose-helper.sh --project=debian7 build\n./docker-compose-helper.sh --project=debian7 create\n./docker-compose-helper.sh --project=debian7 start\n./docker-compose-helper.sh --project=debian7 stop\n./docker-compose-helper.sh --project=debian7 rm\n```\n\n## Credits\nDocker High Performance PHP Stack  \nCopyright (C) 2016 SOL-ICT  \nLuís Pedro Algarvio\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.",
  "dockerfile": "\n#\n#    Debian 8 (jessie) MySQL56 (MariaDB10) profile (dockerfile)\n#    Copyright (C) 2016 SOL-ICT\n#    This file is part of the Docker High Performance PHP Stack.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n\nFROM solict/general-purpose-system-distro:debian8_standard\nMAINTAINER Luís Pedro Algarvio <lp.algarvio@gmail.com>\n\n#\n# Arguments\n#\n\nARG app_mysql_user=\"mysql\"\nARG app_mysql_group=\"mysql\"\nARG app_mysql_home=\"/var/lib/mysql\"\nARG app_mysql_listen_addr=\"0.0.0.0\"\nARG app_mysql_listen_port=\"3306\"\n\n#\n# Packages\n#\n\n# Add foreign repositories and GPG keys\n#  - N/A: for MariaDB\n# Install the MariaDB packages\n#  - mariadb-server: for mysqld, the MySQL relational database management system server\n#  - mariadb-client: for mysql, the MySQL relational database management system client\n#  - mytop: for mytop, the MySQL relational database management system top-like utility\nRUN printf \"Installing repositories and packages...\\n\" && \\\n    \\\n    printf \"Install the repositories and refresh the GPG keys...\\n\" && \\\n    printf \"# MariaDB repository\\n\\\ndeb http://lon1.mirrors.digitalocean.com/mariadb/repo/10.1/debian jessie main\\n\\\n\\n\" > /etc/apt/sources.list.d/mariadb.list && \\\n    apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db && \\\n    gpg --refresh-keys && \\\n    printf \"Install the MySQL packages...\\n\" && \\\n    apt-get update && apt-get install -qy \\\n      mariadb-server mariadb-client mytop && \\\n    printf \"Cleanup the Package Manager...\\n\" && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*; \\\n    \\\n    printf \"Finished installing repositories and packages...\\n\";\n\n#\n# Configuration\n#\n\n# Add users and groups\nRUN printf \"Adding users and groups...\\n\"; \\\n    \\\n    printf \"Add mysql user and group...\\n\"; \\\n    id -g ${app_mysql_user} || \\\n    groupadd \\\n      --system ${app_mysql_group} && \\\n    id -u ${app_mysql_user} && \\\n    usermod \\\n      --gid ${app_mysql_group} \\\n      --home ${app_mysql_home} \\\n      --shell /usr/sbin/nologin \\\n      ${app_mysql_user} \\\n    || \\\n    useradd \\\n      --system --gid ${app_mysql_group} \\\n      --no-create-home --home-dir ${app_mysql_home} \\\n      --shell /usr/sbin/nologin \\\n      ${app_mysql_user}; \\\n    \\\n    printf \"Finished adding users and groups...\\n\";\n\n# Supervisor\nRUN printf \"Updading Supervisor configuration...\\n\"; \\\n    \\\n    # /etc/supervisor/conf.d/init.conf \\\n    file=\"/etc/supervisor/conf.d/init.conf\"; \\\n    printf \"\\n# Applying configuration for ${file}...\\n\"; \\\n    perl -0p -i -e \"s>supervisorctl start dropbear;>supervisorctl start dropbear; supervisorctl start mysql;>\" ${file}; \\\n    printf \"Done patching ${file}...\\n\"; \\\n    \\\n    # /etc/supervisor/conf.d/mysql.conf \\\n    file=\"/etc/supervisor/conf.d/mysql.conf\"; \\\n    printf \"\\n# Applying configuration for ${file}...\\n\"; \\\n    printf \"# mysql\\n\\\n[program:mysql]\\n\\\ncommand=/bin/bash -c \\\"\\$(which mysqld_safe) --defaults-file=/etc/mysql/my.cnf\\\"\\n\\\nautostart=false\\n\\\nautorestart=true\\n\\\n\\n\" > ${file}; \\\n    printf \"Done patching ${file}...\\n\"; \\\n    \\\n    printf \"Finished updading Supervisor configuration...\\n\";\n\n# MySQL\nRUN printf \"Updading MySQL configuration...\\n\"; \\\n    \\\n    # ignoring /etc/default/mysql \\\n    \\\n    # /etc/mysql/my.cnf \\\n    file=\"/etc/mysql/my.cnf\"; \\\n    printf \"\\n# Applying configuration for ${file}...\\n\"; \\\n    # run as user \\\n    perl -0p -i -e \"s>user\\t\\t= .*>user\\t\\t= ${app_mysql_user}>\" ${file}; \\\n    # change logging \\\n    perl -0p -i -e \"s>\\[mysqld_safe\\]>\\[mysqld_safe\\]\\nlog-error       = /var/log/mysql/mariadb-error.log>\" ${file}; \\\n    perl -0p -i -e \"s># Error logging goes to syslog due to /etc/mysql/conf.d/mysqld_safe_syslog.cnf.\\n#># Error logging goes to syslog due to /etc/mysql/conf.d/mysqld_safe_syslog.cnf.\\n#\\nlog-error               = /var/log/mysql/mariadb-error.log>\" ${file}; \\\n    # change interface \\\n    perl -0p -i -e \"s>bind-address\\t\\t= .*>bind-address\\t\\t= ${app_mysql_listen_addr}>\" ${file}; \\\n    # change port \\\n    perl -0p -i -e \"s>port\\t\\t= .*>port\\t\\t= ${app_mysql_listen_port}>g\" ${file}; \\\n    # change protocol \\\n    perl -0p -i -e \"s>\\[client\\]>\\[client\\]\\nprotocol        = tcp>\" ${file}; \\\n    # storage engine \\\n    perl -0p -i -e \"s>\\[mysqld\\]>\\[mysqld\\]\\ndefault-storage-engine = InnoDB>\" ${file}; \\\n    # change performance settings \\\n    perl -0p -i -e \"s>max_allowed_packet\\t= .*>max_allowed_packet\\t= 128M>\" ${file}; \\\n    perl -0p -i -e \"s>\\[mysqldump\\]\\nquick\\nquote-names\\nmax_allowed_packet\\t= .*>\\[mysqldump\\]\\nquick\\nquote-names\\nmax_allowed_packet\\t= 24M>\" ${file}; \\\n    printf \"Done patching ${file}...\\n\"; \\\n    \\\n    # /etc/mysql/conf.d/mariadb.cnf \\\n    file=\"/etc/mysql/conf.d/mariadb.cnf\"; \\\n    printf \"\\n# Applying configuration for ${file}...\\n\"; \\\n    # change engine and collation \\\n    # https://stackoverflow.com/questions/3513773/change-mysql-default-character-set-to-utf-8-in-my-cnf \\\n    # https://www.percona.com/blog/2014/01/28/10-mysql-settings-to-tune-after-installation/ \\\n    # https://dev.mysql.com/doc/refman/5.6/en/charset-configuration.html \\\n    perl -0p -i -e \"s>.*default-character-set = .*>default-character-set = utf8>\" ${file}; \\\n    perl -0p -i -e \"s>.*character-set-server  = .*>character-set-server  = utf8>\" ${file}; \\\n    perl -0p -i -e \"s>.*collation-server      = .*>collation-server      = utf8_general_ci>\" ${file}; \\\n    printf \"Done patching ${file}...\\n\"; \\\n    \\\n    printf \"Finished updading MySQL configuration...\\n\";\n\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "printf \"Installing repositories and packages...\\n\" &&         printf \"Install the repositories and refresh the GPG keys...\\n\" &&     printf \"# MariaDB repository\\ndeb http://lon1.mirrors.digitalocean.com/mariadb/repo/10.1/debian jessie main\\n\\n\" > /etc/apt/sources.list.d/mariadb.list &&     apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db &&     gpg --refresh-keys &&     printf \"Install the MySQL packages...\\n\" &&     apt-get update && apt-get install -qy       mariadb-server mariadb-client mytop &&     printf \"Cleanup the Package Manager...\\n\" &&     apt-get clean && rm -rf /var/lib/apt/lists/*;         printf \"Finished installing repositories and packages...\\n\";",
      "printf \"Adding users and groups...\\n\";         printf \"Add mysql user and group...\\n\";     id -g ${app_mysql_user} ||     groupadd       --system ${app_mysql_group} &&     id -u ${app_mysql_user} &&     usermod       --gid ${app_mysql_group}       --home ${app_mysql_home}       --shell /usr/sbin/nologin       ${app_mysql_user}     ||     useradd       --system --gid ${app_mysql_group}       --no-create-home --home-dir ${app_mysql_home}       --shell /usr/sbin/nologin       ${app_mysql_user};         printf \"Finished adding users and groups...\\n\";",
      "printf \"Updading Supervisor configuration...\\n\";         # /etc/supervisor/conf.d/init.conf     file=\"/etc/supervisor/conf.d/init.conf\";     printf \"\\n# Applying configuration for ${file}...\\n\";     perl -0p -i -e \"s>supervisorctl start dropbear;>supervisorctl start dropbear; supervisorctl start mysql;>\" ${file};     printf \"Done patching ${file}...\\n\";         # /etc/supervisor/conf.d/mysql.conf     file=\"/etc/supervisor/conf.d/mysql.conf\";     printf \"\\n# Applying configuration for ${file}...\\n\";     printf \"# mysql\\n[program:mysql]\\ncommand=/bin/bash -c \\\"\\$(which mysqld_safe) --defaults-file=/etc/mysql/my.cnf\\\"\\nautostart=false\\nautorestart=true\\n\\n\" > ${file};     printf \"Done patching ${file}...\\n\";         printf \"Finished updading Supervisor configuration...\\n\";",
      "printf \"Updading MySQL configuration...\\n\";         # ignoring /etc/default/mysql         # /etc/mysql/my.cnf     file=\"/etc/mysql/my.cnf\";     printf \"\\n# Applying configuration for ${file}...\\n\";     # run as user     perl -0p -i -e \"s>user\\t\\t= .*>user\\t\\t= ${app_mysql_user}>\" ${file};     # change logging     perl -0p -i -e \"s>\\[mysqld_safe\\]>\\[mysqld_safe\\]\\nlog-error       = /var/log/mysql/mariadb-error.log>\" ${file};     perl -0p -i -e \"s># Error logging goes to syslog due to /etc/mysql/conf.d/mysqld_safe_syslog.cnf.\\n#># Error logging goes to syslog due to /etc/mysql/conf.d/mysqld_safe_syslog.cnf.\\n#\\nlog-error               = /var/log/mysql/mariadb-error.log>\" ${file};     # change interface     perl -0p -i -e \"s>bind-address\\t\\t= .*>bind-address\\t\\t= ${app_mysql_listen_addr}>\" ${file};     # change port     perl -0p -i -e \"s>port\\t\\t= .*>port\\t\\t= ${app_mysql_listen_port}>g\" ${file};     # change protocol     perl -0p -i -e \"s>\\[client\\]>\\[client\\]\\nprotocol        = tcp>\" ${file};     # storage engine     perl -0p -i -e \"s>\\[mysqld\\]>\\[mysqld\\]\\ndefault-storage-engine = InnoDB>\" ${file};     # change performance settings     perl -0p -i -e \"s>max_allowed_packet\\t= .*>max_allowed_packet\\t= 128M>\" ${file};     perl -0p -i -e \"s>\\[mysqldump\\]\\nquick\\nquote-names\\nmax_allowed_packet\\t= .*>\\[mysqldump\\]\\nquick\\nquote-names\\nmax_allowed_packet\\t= 24M>\" ${file};     printf \"Done patching ${file}...\\n\";         # /etc/mysql/conf.d/mariadb.cnf     file=\"/etc/mysql/conf.d/mariadb.cnf\";     printf \"\\n# Applying configuration for ${file}...\\n\";     # change engine and collation     # https://stackoverflow.com/questions/3513773/change-mysql-default-character-set-to-utf-8-in-my-cnf     # https://www.percona.com/blog/2014/01/28/10-mysql-settings-to-tune-after-installation/     # https://dev.mysql.com/doc/refman/5.6/en/charset-configuration.html     perl -0p -i -e \"s>.*default-character-set = .*>default-character-set = utf8>\" ${file};     perl -0p -i -e \"s>.*character-set-server  = .*>character-set-server  = utf8>\" ${file};     perl -0p -i -e \"s>.*collation-server      = .*>collation-server      = utf8_general_ci>\" ${file};     printf \"Done patching ${file}...\\n\";         printf \"Finished updading MySQL configuration...\\n\";"
    ],
    "workdir": [],
    "from": "solict/general-purpose-system-distro:debian8_standard",
    "maintainer": "Luís Pedro Algarvio <lp.algarvio@gmail.com>",
    "arg": "app_mysql_listen_port=\"3306\""
  },
  "source_repository_url": "https://github.com/solict/docker-high-performance-php-stack.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/solict/docker-high-performance-php-stack",
  "docker_repository": "solict/high-performance-php-stack",
  "docker_image": "solict/high-performance-php-stack",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "solict/high-performance-php-stack",
  "revision": "debian8_mysql56",
  "uris": [
    "https://hub.docker.com/r/solict/high-performance-php-stack",
    "https://hub.docker.com/v2/repositories/solict/high-performance-php-stack",
    "https://github.com/solict/docker-high-performance-php-stack.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Type/Infrastructure/Operating System/Linux/CentOS",
    "Type/Infrastructure/Operating System/Linux/Debian",
    "Type/Middleware/Runtime/PHP"
  ],
  "info_url": "https://hub.docker.com/r/solict/high-performance-php-stack",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}