{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/xiocode/kibana",
    "repository_url": "https://hub.docker.com/v2/repositories/xiocode/kibana",
    "tags_url": "https://hub.docker.com/v2/repositories/xiocode/kibana/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/xiocode/kibana/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/xiocode/kibana/autobuild",
    "user": "xiocode",
    "name": "kibana",
    "namespace": "xiocode",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 28,
    "last_updated": "2016-05-05T08:35:29.257291Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 30029158,
        "id": 2905233,
        "repository": 671139,
        "creator": 25851,
        "last_updater": 25851,
        "last_updated": "2016-05-05T08:35:27.159103Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      }
    ],
    "build_name": "dockerized/docker-elk"
  },
  "name": "xiocode/kibana Docker container",
  "description": "kibana",
  "readme": null,
  "dockerfile": "FROM alpine:latest\n\nENV GOSU_VERSION 1.8\nENV KIBANA_VERSION 4.5.0\nENV KIBANA_PLATFORM linux-x64\n\nRUN apk add --update --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/ tini curl nodejs && \\\n    curl -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\" && \\\n    chmod +x /usr/local/bin/gosu && \\\n    gosu nobody true && \\\n    curl -o kibana.tar.gz -sSL \"https://download.elastic.co/kibana/kibana/kibana-$KIBANA_VERSION-$KIBANA_PLATFORM.tar.gz\" && \\\n    tar -xzf kibana.tar.gz && \\\n    rm -rf *.tar.gz && \\\n    mkdir /opt && \\\n    mv kibana-$KIBANA_VERSION-$KIBANA_PLATFORM /opt/kibana && \\\n    rm -rf /opt/kibana/node/ && \\\n    mkdir -p /opt/kibana/node/bin/ && \\\n    ln -s $(which node) /opt/kibana/node/bin/node && \\\n    adduser -DH -s /sbin/nologin kibana && \\\n    chown -R kibana:kibana /opt/kibana && \\\n    apk del curl && \\\n    rm -rf /var/cache/apk/*\n\nENV PATH /opt/kibana/bin:$PATH\n\nCOPY docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"kibana\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "apk add --update --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/ tini curl nodejs &&     curl -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\" &&     chmod +x /usr/local/bin/gosu &&     gosu nobody true &&     curl -o kibana.tar.gz -sSL \"https://download.elastic.co/kibana/kibana/kibana-$KIBANA_VERSION-$KIBANA_PLATFORM.tar.gz\" &&     tar -xzf kibana.tar.gz &&     rm -rf *.tar.gz &&     mkdir /opt &&     mv kibana-$KIBANA_VERSION-$KIBANA_PLATFORM /opt/kibana &&     rm -rf /opt/kibana/node/ &&     mkdir -p /opt/kibana/node/bin/ &&     ln -s $(which node) /opt/kibana/node/bin/node &&     adduser -DH -s /sbin/nologin kibana &&     chown -R kibana:kibana /opt/kibana &&     apk del curl &&     rm -rf /var/cache/apk/*"
    ],
    "workdir": [],
    "from": "alpine:latest",
    "env": {
      "GOSU_VERSION": "1.8",
      "KIBANA_VERSION": "4.5.0",
      "KIBANA_PLATFORM": "linux-x64",
      "PATH": "/opt/kibana/bin:$PATH"
    },
    "copy": "docker-entrypoint.sh /",
    "entrypoint": "[\"/docker-entrypoint.sh\"]",
    "cmd": "[\"kibana\"]"
  },
  "source_repository_url": "https://github.com/dockerized/docker-elk.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/dockerized/docker-elk",
  "docker_repository": "xiocode/kibana",
  "docker_image": "xiocode/kibana",
  "parameters_schema": {
    "GOSU_VERSION": {
      "default": "1.8",
      "type": "string",
      "mapping": "environment_variable"
    },
    "KIBANA_VERSION": {
      "default": "4.5.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "KIBANA_PLATFORM": {
      "default": "linux-x64",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/opt/kibana/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "xiocode/kibana",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/xiocode/kibana",
    "https://hub.docker.com/v2/repositories/xiocode/kibana",
    "https://github.com/dockerized/docker-elk.git"
  ],
  "labels": [
    "Docker"
  ],
  "info_url": "https://hub.docker.com/r/xiocode/kibana",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}