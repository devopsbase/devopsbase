{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/telling/django",
    "repository_url": "https://hub.docker.com/v2/repositories/telling/django",
    "tags_url": "https://hub.docker.com/v2/repositories/telling/django/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/telling/django/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/telling/django/autobuild",
    "user": "telling",
    "name": "django",
    "namespace": "telling",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 123,
    "last_updated": "2016-09-27T12:33:24.502557Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "1.9.10-py3",
        "full_size": 285499769,
        "id": 5090353,
        "repository": 797889,
        "creator": 555615,
        "last_updater": 555615,
        "last_updated": "2016-09-27T12:33:24.114786Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.9.10-py2",
        "full_size": 284115485,
        "id": 5090292,
        "repository": 797889,
        "creator": 555615,
        "last_updater": 555615,
        "last_updated": "2016-09-27T12:30:10.557963Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.9.7-py3",
        "full_size": 284633600,
        "id": 3828771,
        "repository": 797889,
        "creator": 555615,
        "last_updater": 555615,
        "last_updated": "2016-09-05T07:09:55.063546Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.9.7-py2",
        "full_size": 283262668,
        "id": 3828795,
        "repository": 797889,
        "creator": 555615,
        "last_updater": 555615,
        "last_updated": "2016-09-05T07:06:52.132998Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 285017025,
        "id": 3841006,
        "repository": 797889,
        "creator": 555615,
        "last_updater": 555615,
        "last_updated": "2016-09-05T07:04:01.094821Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.10.1-py3",
        "full_size": 285017069,
        "id": 4663859,
        "repository": 797889,
        "creator": 555615,
        "last_updater": 555615,
        "last_updated": "2016-09-05T07:00:59.733186Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.10.1-py2",
        "full_size": 283643861,
        "id": 4663852,
        "repository": 797889,
        "creator": 555615,
        "last_updater": 555615,
        "last_updated": "2016-09-05T06:55:52.663220Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "Telling/docker-django"
  },
  "name": "telling/django Docker container",
  "description": "Easy docker and django",
  "readme": "# Django base image\n\n[hub.docker.com/r/telling/django](https://hub.docker.com/r/telling/django)\n\nBased on the official python images.\n\nSimplifying developing django applications by providing a few shorthands for manage.py:\n\n- `runserver host:port`\n    - Waits for the database to be ready, then runs `migrate`, `collectstatic` and lastly `runserver`.\n- `nomigrate host:port`\n  - Waits for the database to be ready, then runs `collectstatic` followed by `runserver`.\n- `makemigrations` and `loadtestdata`\n  - Waits for the database to be ready, then runs `makemigrations` or `loadtestdata`.\n\nIf environment variables `DJANGO_SUPERUSER_*` are set, `runserver` and `nomigrate` will attempt to create the superuser. Likewise, if the `DJANGO_DB_*` variables are set, it will wait for the database upon starting the container, the image uses [dockerize](https://github.com/jwilder/dockerize) to wait for the database. Other then that it behaves like the official python images, with the environment variable `PYTHONUNBUFFERED` set, django and a few extra packages installed.\n\n# Environment variables\n\n- `DJANGO_DB_HOST`\n- `DJANGO_DB_PORT`\n- `DJANGO_SUPERUSER_NAME`\n- `DJANGO_SUPERUSER_MAIL`\n- `DJANGO_SUPERUSER_PASS`\n- `PYTHONUNBUFFERED`\n- `DOCKERIZE_VERSION`\n- `DJANGO_VERSION`\n\n# Usage\n\nTo start a new project and create a new app:\n\n```bash\ndocker run --rm --log-driver none -v $(pwd):/code telling/django:1.9.7-py3 django-admin startproject mysite\n\ndocker run --rm --log-driver none -v $(pwd)/mysite:/code telling/django:1.9.7-py3 python manage.py startapp polls\n```\n\n# docker-compose\n\nI've recently used this to get a local development environment for the [bornhack](https://github.com/bornhack/bornhack-website) website.\n\nI created a very simple dockerfile, which copies the requirements files and installs said requirements, _Dockerfile_: \n\n```dockerfile\nFROM telling/django:1.9.7-py2\n\nCOPY requirements/base.txt base.txt\nCOPY requirements/development.txt development.txt\nRUN pip install -r development.txt\n\nCMD [\"runserver\", \"0.0.0.0:8000\"]\n```\n\nThen using the dockerfile in _docker-compose.yml_:\n\n```yaml\nversion: \"2\"\n\nservices:\n  postgres:\n    image: postgres:9.5\n    container_name: bornhack-postgres\n    environment:\n      - POSTGRES_PASSWORD=bornhack\n      - POSTGRES_USER=bornhack\n      - POSTGRES_DB=bornhack_dev\n\n  django:\n    build: .\n    volumes:\n      - .:/code\n    container_name: bornhack-django\n    ports:\n      - \"8000:8000\"\n    environment:\n      - DJANGO_DB_HOST=postgres\n      - DJANGO_DB_PORT=5432\n      - DJANGO_SUPERUSER_NAME=bornhack\n      - DJANGO_SUPERUSER_PASS=bornhack\n      - DJANGO_SUPERUSER_MAIL=bornhack@mail.com\n      - DJANGO_SETTINGS_MODULE=bornhack.settings.development\n\n```\n\nChange the settings file `bornhack/settings/development.py` and replace `'HOST': 'localhost',` with `'HOST': 'postgres',`. Now copy the environment file: `cp bornhack/settings/env.dist bornhack/settings/.env`\n\nWe end with a tree structure like:\n\n```\n.\n├── Dockerfile\n├── Makefile\n├── README.md\n├── bornhack\n├── camps\n├── docker-compose.yml\n├── graphics\n├── manage.py\n├── news\n├── profiles\n├── requirements\n├── shop\n├── utils\n├── vendor\n└── villages\n```\n\nThen we can start hacking on the bornhack website by simply doing:\n\n- docker-compose up -d --build\n\nGo to [localhost:8000](localhost:8000) and see the bornhack website in all its beauty.\n",
  "dockerfile": "FROM python:3.5.2\nMAINTAINER Stephan Telling <st@telling.xyz>\n\nENV DOCKERIZE_VERSION=\"v0.2.0\" \\\n    PYTHONUNBUFFERED=\"1\" \\\n    DJANGO_VERSION=\"1.9.10\" \\\n    DJANGO_DB_HOST=\"\" \\\n    DJANGO_DB_PORT=\"\" \\\n    DJANGO_SUPERUSER_NAME=\"\" \\\n    DJANGO_SUPERUSER_MAIL=\"\" \\\n    DJANGO_SUPERUSER_PASS=\"\"\n\nRUN apt-get update && apt-get install -y \\\n        gcc \\\n        gettext \\\n        libmysqlclient-dev \\\n        libpq-dev \\\n        sqlite3 \\\n        --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\nRUN mkdir /code\nWORKDIR /code\n\nRUN pip install Django==$DJANGO_VERSION\n\nCOPY entrypoint /entrypoint\nRUN chmod +x /entrypoint\n\nENTRYPOINT [\"/entrypoint\"]\nCMD [\"runserver\", \"0.0.0.0:8000\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "apt-get update && apt-get install -y         gcc         gettext         libmysqlclient-dev         libpq-dev         sqlite3         --no-install-recommends     && rm -rf /var/lib/apt/lists/*",
      "wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz",
      "mkdir /code",
      "pip install Django==$DJANGO_VERSION",
      "chmod +x /entrypoint"
    ],
    "workdir": [
      "/code"
    ],
    "from": "python:3.5.2",
    "maintainer": "Stephan Telling <st@telling.xyz>",
    "env": {
      "DOCKERIZE_VERSION": "\"v0.2.0\"",
      "": "",
      "PYTHONUNBUFFERED": "\"1\"",
      "DJANGO_VERSION": "\"1.9.10\"",
      "DJANGO_DB_HOST": "\"\"",
      "DJANGO_DB_PORT": "\"\"",
      "DJANGO_SUPERUSER_NAME": "\"\"",
      "DJANGO_SUPERUSER_MAIL": "\"\"",
      "DJANGO_SUPERUSER_PASS": "\"\""
    },
    "copy": "entrypoint /entrypoint",
    "entrypoint": "[\"/entrypoint\"]",
    "cmd": "[\"runserver\", \"0.0.0.0:8000\"]"
  },
  "source_repository_url": "git@github.com:Telling/docker-django.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/Telling/docker-django",
  "docker_repository": "telling/django",
  "docker_image": "telling/django",
  "parameters_schema": {
    "DOCKERIZE_VERSION": {
      "default": "\"v0.2.0\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PYTHONUNBUFFERED": {
      "default": "\"1\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DJANGO_VERSION": {
      "default": "\"1.9.10\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DJANGO_DB_HOST": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DJANGO_DB_PORT": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DJANGO_SUPERUSER_NAME": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DJANGO_SUPERUSER_MAIL": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DJANGO_SUPERUSER_PASS": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "telling/django",
  "revision": "1.9.10-py3",
  "uris": [
    "https://hub.docker.com/r/telling/django",
    "https://hub.docker.com/v2/repositories/telling/django",
    "git@github.com:Telling/docker-django.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Python"
  ],
  "info_url": "https://hub.docker.com/r/telling/django",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}