{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/bitnami/memcached",
    "repository_url": "https://hub.docker.com/v2/repositories/bitnami/memcached",
    "tags_url": "https://hub.docker.com/v2/repositories/bitnami/memcached/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/bitnami/memcached/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/bitnami/memcached/autobuild",
    "user": "bitnami",
    "name": "memcached",
    "namespace": "bitnami",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 6,
    "pull_count": 7322,
    "last_updated": "2016-10-17T08:37:32.017516Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "_",
        "full_size": 85751277,
        "id": 5450602,
        "repository": 229042,
        "creator": 342683,
        "last_updater": 342683,
        "last_updated": "2016-10-17T08:37:30.990959Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "development",
        "full_size": 85750880,
        "id": 217361,
        "repository": 229042,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-10-17T08:29:33.383668Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 85750840,
        "id": 320225,
        "repository": 229042,
        "creator": 140130,
        "last_updater": 257375,
        "last_updated": "2016-09-24T20:04:25.432266Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.4.25-r6",
        "full_size": 85750848,
        "id": 5049665,
        "repository": 229042,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-24T20:03:02.931062Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.4.25-r5",
        "full_size": 85749478,
        "id": 5041107,
        "repository": 229042,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-23T22:00:06.706898Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.4.25-r4",
        "full_size": 83899350,
        "id": 4800568,
        "repository": 229042,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-12T17:22:18.046746Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.4.25-r3",
        "full_size": 83899359,
        "id": 4707131,
        "repository": 229042,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-07T07:02:49.066858Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.4.25-r2",
        "full_size": 81922544,
        "id": 4041807,
        "repository": 229042,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-07-28T10:19:50.548637Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.4.25-r1",
        "full_size": 81831891,
        "id": 3795381,
        "repository": 229042,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-07-12T06:16:15.034902Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.4.25-r0",
        "full_size": 81796946,
        "id": 3202834,
        "repository": 229042,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-05-28T00:11:15.382066Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      }
    ],
    "build_name": "bitnami/bitnami-docker-memcached"
  },
  "name": "bitnami/memcached Docker container",
  "description": "Bitnami Memcached Docker Image",
  "readme": "[![CircleCI](https://circleci.com/gh/bitnami/bitnami-docker-memcached/tree/master.svg?style=shield)](https://circleci.com/gh/bitnami/bitnami-docker-memcached/tree/master)\n[![Docker Hub Automated Build](http://container.checkforupdates.com/badges/bitnami/memcached)](https://hub.docker.com/r/bitnami/memcached/)\n\n# What is Memcached?\n\n> Memcached is an in-memory key-value store for small chunks of arbitrary data (strings, objects) from results of database calls, API calls, or page rendering.\n\n[memcached.org](http://memcached.org/)\n\n# TLDR\n\n```bash\ndocker run --name memcached bitnami/memcached:latest\n```\n\n## Docker Compose\n\n```yaml\nmemcached:\n  image: bitnami/memcached:latest\n```\n\n# Get this image\n\nThe recommended way to get the Bitnami Memcached Docker Image is to pull the prebuilt image from the [Docker Hub Registry](https://hub.docker.com).\n\n```bash\ndocker pull bitnami/memcached:latest\n```\n\nTo use a specific version, you can pull a versioned tag. You can view the [list of available versions](https://hub.docker.com/r/bitnami/memcached/tags/) in the Docker Hub Registry.\n\n```bash\ndocker pull bitnami/memcached:[TAG]\n```\n\nIf you wish, you can also build the image yourself.\n\n```bash\ndocker build -t bitnami/memcached:latest https://github.com/bitnami/bitnami-docker-memcached.git\n```\n\n\n# Linking\n\nIf you want to connect to your Memcached server inside another container, you can use the linking system provided by Docker.\n\n## Connecting your app container to the Memcached server container\n\n### Step 1: Run the Memcached image with a specific name\n\nThe first step is to start our Memcached server.\n\nDocker's linking system uses container ids or names to reference containers. We can explicitly specify a name for our Memcached server to make it easier to connect to other containers.\n\n```bash\ndocker run --name memcached bitnami/memcached:latest\n```\n\n### Step 2: Run your app and link to our server\n\nNow that we have our Memcached server running, we can create another container that links to it by giving Docker the `--link` option. This option takes the id or name of the container we want to link it to as well as a hostname to use inside the container, separated by a colon. For example, to have our Memcached server accessible in another container with `memcached` as it's hostname we would pass `--link memcached:memcached` to the Docker run command.\n\n```bash\ndocker run -it --link memcached:memcached myapp\n```\n\nInside `myapp`, use `memcached` as the hostname for the Memcached server.\n\n## Linking with Docker Compose\n\n### Step 1: Add a Memcached entry in your `docker-compose.yml`\n\nCopy the snippet below into your `docker-compose.yml` to add Memcached to your application.\n\n```yaml\nmemcached:\n  image: bitnami/memcached\n```\n\n### Step 2: Link it to another container in your application\n\nUpdate the definitions for containers you want to access your Memcached server from to include a link to the `memcached` entry you added in Step 1.\n\n```yaml\nmyapp:\n  image: myapp\n  links:\n    - memcached:memcached\n```\n\n# Configuration\n\n## Creating the Memcached admin user\n\nAuthentication on the Memcached server is disabled by default. To enable authentication, specify a username and password for the Memcached admin user using the `MEMCACHED_USERNAME` and `MEMCACHED_PASSWORD` environment variables.\n\n```bash\ndocker run --name memcached \\\n  -e MEMCACHED_USERNAME=my_user \\\n  -e MEMCACHED_PASSWORD=my_password \\\n  bitnami/memcached:latest\n```\n\nor using Docker Compose:\n\n```yaml\nmemcached:\n  image: bitnami/memcached:latest\n  environment:\n    - MEMCACHED_USERNAME=my_user\n    - MEMCACHED_PASSWORD=my_password\n```\n\n> The default value of the `MEMCACHED_USERNAME` is `root`.\n\n# Logging\n\nThe Bitnami Memcached Docker image sends the container logs to the `stdout`. To view the logs:\n\n```bash\ndocker logs memcached\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose logs memcached\n```\n\nYou can configure the containers [logging driver](https://docs.docker.com/engine/admin/logging/overview/) using the `--log-driver` option if you wish to consume the container logs differently. In the default configuration docker uses the `json-file` driver.\n\n# Maintenance\n\n## Upgrade this image\n\nBitnami provides up-to-date versions of Memcached, including security patches, soon after they are made upstream. We recommend that you follow these steps to upgrade your container.\n\n### Step 1: Get the updated image\n\n```bash\ndocker pull bitnami/memcached:latest\n```\n\nor if you're using Docker Compose, update the value of the image property to\n`bitnami/memcached:latest`.\n\n### Step 2: Remove the currently running container\n\n```bash\ndocker rm -v memcached\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose rm -v memcached\n```\n\n### Step 3: Run the new image\n\nRe-create your container from the new image.\n\n```bash\ndocker run --name memcached bitnami/memcached:latest\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose start memcached\n```\n\n# Testing\n\nThis image is tested for expected runtime behavior, using the [Bats](https://github.com/sstephenson/bats) testing framework. You can run the tests on your machine using the `bats` command.\n\n```\nbats test.sh\n```\n\n# Notable Changes\n\n## 1.4.25-r4\n\n- `MEMCACHED_USER` parameter has been renamed to `MEMCACHED_USERNAME`.\n\n## 1.4.25-r0\n\n- The logs are always sent to the `stdout` and are no longer collected in the volume.\n\n# Contributing\n\nWe'd love for you to contribute to this container. You can request new features by creating an [issue](https://github.com/bitnami/bitnami-docker-memcached/issues), or submit a [pull request](https://github.com/bitnami/bitnami-docker-memcached/pulls) with your contribution.\n\n# Issues\n\nIf you encountered a problem running this container, you can file an [issue](https://github.com/bitnami/bitnami-docker-memcached/issues). For us to provide better support, be sure to include the following information in your issue:\n\n- Host OS and version\n- Docker version (`docker version`)\n- Output of `docker info`\n- Version of this container (`echo $BITNAMI_IMAGE_VERSION` inside the container)\n- The command you used to run the container, and any relevant output you saw (masking any sensitive information)\n\n# License\n\nCopyright (c) 2015-2016 Bitnami\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "dockerfile": "FROM gcr.io/stacksmith-images/ubuntu:14.04-r10\nMAINTAINER Bitnami <containers@bitnami.com>\n\nENV BITNAMI_IMAGE_VERSION=1.4.25-r6 \\\n    BITNAMI_APP_NAME=memcached \\\n    BITNAMI_APP_USER=memcached\n\nRUN bitnami-pkg unpack memcached-1.4.25-3 --checksum 202b6500474b9abe66b06b16ea464ac5629f4f9c7e0247b8a9d2a8330152916b\nENV PATH=/opt/bitnami/$BITNAMI_APP_NAME/sbin:/opt/bitnami/$BITNAMI_APP_NAME/bin:$PATH\n\nCOPY rootfs/ /\nENTRYPOINT [\"/app-entrypoint.sh\"]\nCMD [\"nami\", \"start\", \"--foreground\", \"memcached\"]\n\nEXPOSE 11211\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      11211
    ],
    "volume": [],
    "run": [
      "bitnami-pkg unpack memcached-1.4.25-3 --checksum 202b6500474b9abe66b06b16ea464ac5629f4f9c7e0247b8a9d2a8330152916b"
    ],
    "workdir": [],
    "from": "gcr.io/stacksmith-images/ubuntu:14.04-r10",
    "maintainer": "Bitnami <containers@bitnami.com>",
    "env": {
      "BITNAMI_IMAGE_VERSION": "1.4.25-r6",
      "": "",
      "BITNAMI_APP_NAME": "memcached",
      "BITNAMI_APP_USER": "memcached",
      "PATH": "/opt/bitnami/$BITNAMI_APP_NAME/sbin:/opt/bitnami/$BITNAMI_APP_NAME/bin:$PATH"
    },
    "copy": "rootfs/ /",
    "entrypoint": "[\"/app-entrypoint.sh\"]",
    "cmd": "[\"nami\", \"start\", \"--foreground\", \"memcached\"]"
  },
  "source_repository_url": "https://github.com/bitnami/bitnami-docker-memcached.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/bitnami/bitnami-docker-memcached",
  "docker_repository": "bitnami/memcached",
  "docker_image": "bitnami/memcached",
  "parameters_schema": {
    "BITNAMI_IMAGE_VERSION": {
      "default": "1.4.25-r6",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_APP_NAME": {
      "default": "memcached",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_APP_USER": {
      "default": "memcached",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/opt/bitnami/$BITNAMI_APP_NAME/sbin:/opt/bitnami/$BITNAMI_APP_NAME/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        11211
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "bitnami/memcached",
  "revision": "_",
  "uris": [
    "https://hub.docker.com/r/bitnami/memcached",
    "https://hub.docker.com/v2/repositories/bitnami/memcached",
    "https://github.com/bitnami/bitnami-docker-memcached.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Middleware/Cache/Memcached"
  ],
  "info_url": "https://hub.docker.com/r/bitnami/memcached",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}