{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/janeczku/go-dnsmasq",
    "repository_url": "https://hub.docker.com/v2/repositories/janeczku/go-dnsmasq",
    "tags_url": "https://hub.docker.com/v2/repositories/janeczku/go-dnsmasq/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/janeczku/go-dnsmasq/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/janeczku/go-dnsmasq/autobuild",
    "user": "janeczku",
    "name": "go-dnsmasq",
    "namespace": "janeczku",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 45479,
    "last_updated": "2016-10-02T20:23:28.878213Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "release-1.0.7",
        "full_size": 4813970,
        "id": 5191475,
        "repository": 532210,
        "creator": 285962,
        "last_updater": 285962,
        "last_updated": "2016-10-02T20:23:24.514495Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 4813970,
        "id": 2027166,
        "repository": 532210,
        "creator": 285962,
        "last_updater": 285962,
        "last_updated": "2016-10-02T20:22:30.764544Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "release-1.0.6",
        "full_size": 4803103,
        "id": 3311001,
        "repository": 532210,
        "creator": 285962,
        "last_updater": 285962,
        "last_updated": "2016-10-02T18:52:54.244574Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "release-1.0.5",
        "full_size": 6167594,
        "id": 2548357,
        "repository": 532210,
        "creator": 285962,
        "last_updater": 285962,
        "last_updated": "2016-04-05T23:45:46.654075Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "release-1.0.4",
        "full_size": 6167594,
        "id": 2450419,
        "repository": 532210,
        "creator": 285962,
        "last_updater": 285962,
        "last_updated": "2016-04-04T15:26:00.137071Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "release-1.0.3",
        "full_size": 6167680,
        "id": 2424525,
        "repository": 532210,
        "creator": 285962,
        "last_updater": 285962,
        "last_updated": "2016-03-24T23:00:15.479203Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "release-1.0.2",
        "full_size": 6167680,
        "id": 2288645,
        "repository": 532210,
        "creator": 285962,
        "last_updater": 285962,
        "last_updated": "2016-03-12T17:11:32.320497Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "release-1.0.1",
        "full_size": 6167680,
        "id": 2212051,
        "repository": 532210,
        "creator": 285962,
        "last_updater": 285962,
        "last_updated": "2016-03-06T00:03:50.009448Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "release-1.0.0",
        "full_size": 6166097,
        "id": 2027171,
        "repository": 532210,
        "creator": 285962,
        "last_updater": 285962,
        "last_updated": "2016-02-17T07:17:42.081383Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "janeczku/go-dnsmasq"
  },
  "name": "janeczku/go-dnsmasq Docker container",
  "description": "Lightweight caching DNS server/forwarder with tons of configuration options",
  "readme": "# go-dnsmasq\n[![Latest Version](https://img.shields.io/github/release/janeczku/go-dnsmasq.svg?maxAge=60)][release]\n[![Github All Releases](https://img.shields.io/github/downloads/janeczku/go-dnsmasq/total.svg?maxAge=86400)]()\n[![Docker Pulls](https://img.shields.io/docker/pulls/janeczku/go-dnsmasq.svg?maxAge=86400)][hub]\n[![License](https://img.shields.io/github/license/janeczku/go-dnsmasq.svg?maxAge=86400)]()\n\n[release]: https://github.com/janeczku/go-dnsmasq/releases\n[hub]: https://hub.docker.com/r/janeczku/go-dnsmasq/\n\ngo-dnsmasq is a lightweight (1.2 MB) DNS caching server/forwarder with minimal filesystem and runtime overhead.\n\n### Application examples:\n\n- Caching DNS server/forwarder in a local network\n- Container/Host DNS cache\n- DNS proxy providing DNS `search` capabilities to `musl-libc` based clients, particularly Alpine Linux\n\n### Features\n\n* Automatically set upstream `nameservers` and `search` domains from resolv.conf\n* Insert itself into the host's /etc/resolv.conf on start\n* Serve static A/AAAA records from a hosts file\n* Provide DNS response caching\n* Replicate the `search` domain treatment not supported by `musl-libc` based Linux distributions\n* Supports virtually unlimited number of `search` paths and `nameservers` ([related Kubernetes article](https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/dns#known-issues))\n* Configure stubzones (different nameserver for specific domains)\n* Round-robin of DNS records\n* Send server metrics to Graphite and StatHat\n* Configuration through both command line flags and environment variables\n\n### Resolve logic\n\nDNS queries are resolved in the style of the GNU libc resolver:\n* The first nameserver (as listed in resolv.conf or configured by `--nameservers`) is always queried first, additional servers are considered fallbacks\n* Multiple `search` domains are tried in the order they are configured. \n* Single-label queries (e.g.: \"redis-service\") are always qualified with the `search` domains\n* Multi-label queries (ndots >= 1) are first tried as absolute names before qualifying them with the `search` domains\n\n### Command-line options / environment variables\n\n| Flag                           | Description                                                                   | Default       | Environment vars     |\n| ------------------------------ | ----------------------------------------------------------------------------- | ------------- | -------------------- |\n| --listen, -l                   | Address to listen on  `host[:port]`                                           | 127.0.0.1:53  | $DNSMASQ_LISTEN      |\n| --default-resolver, -d         | Update resolv.conf to make go-dnsmasq the host's nameserver                   | False         | $DNSMASQ_DEFAULT     |\n| --nameservers, -n              | Comma delimited list of nameservers `host[:port]`. IPv6 literal address must be enclosed in brackets. (supersedes etc/resolv.conf) | -  | $DNSMASQ_SERVERS     |\n| --stubzones, -z                | Use different nameservers for given domains. Can be passed multiple times. `domain[,domain]/host[:port][,host[:port]]`   | -  |$DNSMASQ_STUB        |\n| --hostsfile, -f                | Path to a hosts file (e.g. ‘/etc/hosts‘)                                      | -             | $DNSMASQ_HOSTSFILE   |\n| --hostsfile-poll, -p           | How frequently to poll hosts file for changes (seconds, ‘0‘ to disable)       | 0             | $DNSMASQ_POLL        |\n| --search-domains, -s           | Comma delimited list of search domains `domain[,domain]` (supersedes /etc/resolv.conf) | -             | $DNSMASQ_SEARCH_DOMAINS      |\n| --enable-search, -search       | Qualify names with search domains to resolve queries                          | False         | $DNSMASQ_ENABLE_SEARCH      |\n| --rcache, -r                   | Capacity of the response cache (‘0‘ disables caching)                         | 0             | $DNSMASQ_RCACHE      |\n| --rcache-ttl                   | TTL for entries in the response cache                                         | 60            | $DNSMASQ_RCACHE_TTL  |\n| --no-rec                       | Disable forwarding of queries to upstream nameservers                         | False         | $DNSMASQ_NOREC       |\n| --fwd-ndots                    | Number of dots a name must have before the query is forwarded                 | 0 | $DNSMASQ_FWD_NDOTS   |\n| --ndots                        | Number of dots a name must have before making an initial absolute query (supersedes /etc/resolv.conf) | 1  | $DNSMASQ_NDOTS |\n| --round-robin                  | Enable round robin of A/AAAA records                                          | False         | $DNSMASQ_RR          |\n| --systemd                      | Bind to socket(s) activated by Systemd (ignores --listen)                     | False         | $DNSMASQ_SYSTEMD     |\n| --verbose                      | Enable verbose logging                                                        | False         | $DNSMASQ_VERBOSE     |\n| --syslog                       | Enable syslog logging                                                         | False         | $DNSMASQ_SYSLOG      |\n| --multithreading               | Enable multithreading (experimental)                                          | False         |                      |\n| --help, -h                     | Show help                                                                     |               |                      |\n| --version, -v                  | Print the version                                                             |               |                      |\n\n#### Enable Graphite/StatHat metrics\n\nEnvVar: **GRAPHITE_SERVER**  \nDefault: ` `  \nSet to the `host:port` of the Graphite server\n\nEnvVar: **GRAPHITE_PREFIX**  \nDefault: `go-dnsmasq`  \nSet a custom prefix for Graphite metrics\n\nEnvVar: **STATHAT_USER**  \nDefault: ` `  \nSet to your StatHat account email address\n\n### Usage\n\n#### Run from the command line\n\nDownload the binary for your OS from the [releases page](https://github.com/janeczku/go-dnsmasq/releases/latest).    \n\ngo-dnsmasq is available in two versions. The minimal version (`go-dnsmasq-min`) has a lower memory footprint but doesn't have caching, stats reporting and systemd support.\n\n```sh\n   sudo ./go-dnsmasq [options]\n```\n\n#### Run as a Docker container\n\nDocker Hub trusted builds are [available](https://hub.docker.com/r/janeczku/go-dnsmasq/).\n\n```sh\ndocker run -d -p 53:53/udp -p 53:53 janeczku/go-dnsmasq:latest\n```\n\nYou can pass go-dnsmasq configuration parameters by setting the corresponding environmental variables with Docker's `-e` flag.\n\n#### Serving A/AAAA records from a hosts file\nThe `--hostsfile` parameter expects a standard plain text [hosts file](https://en.wikipedia.org/wiki/Hosts_(file)) with the only difference being that a wildcard `*` in the left-most label of hostnames is allowed. Wildcard entries will match any subdomain that is not explicitly defined.\nFor example, given a hosts file with the following content:\n\n```\n192.168.0.1 db1.db.local\n192.168.0.2 *.db.local\n```\n\nQueries for `db2.db.local` would be answered with an A record pointing to 192.168.0.2, while queries for `db1.db.local` would yield an A record pointing to 192.168.0.1.\n",
  "dockerfile": "FROM alpine:3.2\nMAINTAINER Jan Broer <janeczku@yahoo.com>\n\nADD https://github.com/janeczku/go-dnsmasq/releases/download/1.0.0/go-dnsmasq_linux-amd64 /go-dnsmasq\nRUN chmod +x /go-dnsmasq\n\nENV DNSMASQ_LISTEN=0.0.0.0\nEXPOSE 53 53/udp\nENTRYPOINT [\"/go-dnsmasq\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "https://github.com/janeczku/go-dnsmasq/releases/download/1.0.0/go-dnsmasq_linux-amd64",
        "dest": "/go-dnsmasq"
      }
    ],
    "expose": [
      53
    ],
    "volume": [],
    "run": [
      "chmod +x /go-dnsmasq"
    ],
    "workdir": [],
    "from": "alpine:3.2",
    "maintainer": "Jan Broer <janeczku@yahoo.com>",
    "env": {
      "DNSMASQ_LISTEN": "0.0.0.0"
    },
    "entrypoint": "[\"/go-dnsmasq\"]"
  },
  "source_repository_url": "https://github.com/janeczku/go-dnsmasq.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/janeczku/go-dnsmasq",
  "docker_repository": "janeczku/go-dnsmasq",
  "docker_image": "janeczku/go-dnsmasq",
  "parameters_schema": {
    "DNSMASQ_LISTEN": {
      "default": "0.0.0.0",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        53
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "janeczku/go-dnsmasq",
  "revision": "release-1.0.7",
  "uris": [
    "https://hub.docker.com/r/janeczku/go-dnsmasq",
    "https://hub.docker.com/v2/repositories/janeczku/go-dnsmasq",
    "https://github.com/janeczku/go-dnsmasq.git"
  ],
  "labels": [
    "Docker",
    "Type/Infrastructure/Network/DNS",
    "Type/Middleware/Cache"
  ],
  "info_url": "https://hub.docker.com/r/janeczku/go-dnsmasq",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}