{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/jgeiger/rails",
    "repository_url": "https://hub.docker.com/v2/repositories/jgeiger/rails",
    "tags_url": "https://hub.docker.com/v2/repositories/jgeiger/rails/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/jgeiger/rails/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/jgeiger/rails/autobuild",
    "user": "jgeiger",
    "name": "rails",
    "namespace": "jgeiger",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 76,
    "last_updated": "2016-04-07T05:13:53.849642Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 205089834,
        "id": 2154632,
        "repository": 543907,
        "creator": 16601,
        "last_updater": 16601,
        "last_updated": "2016-04-07T05:13:53.158396Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "jgeiger/dockerfiles"
  },
  "name": "jgeiger/rails Docker container",
  "description": "Base rails image",
  "readme": "# dockerfiles\nA collection of Dockerfiles to build containers\n",
  "dockerfile": "FROM jgeiger/ruby-ubuntu\nMAINTAINER jgeiger@gmail.com\n\nEXPOSE 3000\n\nUSER root\n\nWORKDIR /tmp\n\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list \\\n      && wget --quiet https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add - \\\n      && apt-get -qq -y update \\\n      && apt-get install -qq -y --no-install-recommends \\\n      libpq-dev \\\n      nodejs \\\n      npm \\\n      postgresql-client \\\n      sqlite3 \\\n      && apt-get clean \\\n      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nCOPY docker-entrypoint.sh /entrypoint.sh\n\nRUN mkdir -p /app \\\n      && chown -R $USERNAME /app \\\n      && chmod +x /entrypoint.sh\n\nUSER $USERNAME\n\nWORKDIR /app\n\nENTRYPOINT [ \"tini\", \"--\", \"/entrypoint.sh\" ]\n\nCMD [\"bundle\", \"exec\", \"rails\", \"server\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      3000
    ],
    "volume": [],
    "run": [
      "echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list       && wget --quiet https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add -       && apt-get -qq -y update       && apt-get install -qq -y --no-install-recommends       libpq-dev       nodejs       npm       postgresql-client       sqlite3       && apt-get clean       && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*",
      "mkdir -p /app       && chown -R $USERNAME /app       && chmod +x /entrypoint.sh"
    ],
    "workdir": [
      "/tmp",
      "/app"
    ],
    "from": "jgeiger/ruby-ubuntu",
    "maintainer": "jgeiger@gmail.com",
    "user": "$USERNAME",
    "copy": "docker-entrypoint.sh /entrypoint.sh",
    "entrypoint": "[ \"tini\", \"--\", \"/entrypoint.sh\" ]",
    "cmd": "[\"bundle\", \"exec\", \"rails\", \"server\"]"
  },
  "source_repository_url": "https://github.com/jgeiger/dockerfiles.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/jgeiger/dockerfiles",
  "docker_repository": "jgeiger/rails",
  "docker_image": "jgeiger/rails",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        3000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "jgeiger/rails",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/jgeiger/rails",
    "https://hub.docker.com/v2/repositories/jgeiger/rails",
    "https://github.com/jgeiger/dockerfiles.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Ruby",
    "Mode/Executable/Image"
  ],
  "info_url": "https://hub.docker.com/r/jgeiger/rails",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}