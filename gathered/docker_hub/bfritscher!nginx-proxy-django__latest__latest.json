{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/bfritscher/nginx-proxy-django",
    "repository_url": "https://hub.docker.com/v2/repositories/bfritscher/nginx-proxy-django",
    "tags_url": "https://hub.docker.com/v2/repositories/bfritscher/nginx-proxy-django/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/bfritscher/nginx-proxy-django/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/bfritscher/nginx-proxy-django/autobuild",
    "user": "bfritscher",
    "name": "nginx-proxy-django",
    "namespace": "bfritscher",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 77,
    "last_updated": "2016-09-02T22:41:40.211947Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 71414108,
        "id": 2055090,
        "repository": 536267,
        "creator": 386847,
        "last_updater": 386847,
        "last_updated": "2016-09-02T22:41:39.839738Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "bfritscher/fablab-admin"
  },
  "name": "bfritscher/nginx-proxy-django Docker container",
  "description": "nginx-proxy-django",
  "readme": "# FabLab Administration Tool\n\nA series of domain objects, methods and CRUD views to manage different aspect of a FabLab.\n\nFor rapid prototyping and customizability django-admin is used heavily.\n\n## Gallery\n\n[![home](doc/screens/thumbs/home.png)](doc/screens/home.png)\n[![dashboard](doc/screens/thumbs/dashboard.png)](doc/screens/dashboard.png)\n[![contacts](doc/screens/thumbs/contacts.png)](doc/screens/contacts.png)\n[![contact](doc/screens/thumbs/contact.png)](doc/screens/contact.png)\n[![invoice](doc/screens/thumbs/invoice.png)](doc/screens/invoice.png)\n[![usage](doc/screens/thumbs/usage.png)](doc/screens/usage.png)\n[![profile](doc/screens/thumbs/profile.png)](doc/screens/profile.png)\n\n## General Features\n- Multilingual: FR, EN (possible to translate easily with po files)\n- Basic frontend service portal\n    - Membership registration\n    - Track machine usage\n    - Display member list with trainings and functions\n    - User's personal page\n        - invoice list\n        - machine usage list\n        - NFC badge logs\n        - Edit contact details\n- CRUD administration of following domain objects and functions:\n    - Contact\n        - ContactType (external, members,...)\n        - Tracking of membership status and payment\n        - Tracking of functions\n        - Tracking of Training on resources\n        - Tracking of expenses\n        - Synchronize e-mails with MailChimp distribution lists\n    - Resource (machines,..)\n        - ResourceType (laser, ...)\n        - ResourceUsage\n    - Event\n        - Registration to Events\n        - Expense for event\n    - Invoice/Expense\n        - Entries (anything to invoice or expense)\n            - Usage\n            - Registration to events\n            - Memberships\n        - PDF invoice generation\n        - Invoice mailing\n    - NFC tokens, and logs\n\n\n## Specific FabLab-la Cote\n- ccv-webshop support\n  - webhook endpoint to import orders from our webshop\n  - and create invoices\n  - and event registrations\n\n- postfiance CAMT xml import\n  - allows to consolidate invoices with money received on our postfinance account\n- current theme is hardcoded\n\n## Not Implemented\n\nFeatures which are not supported, but could one day be:\n\n- Stock management\n- Resource reservation\n- More accounting\n- More self-service functions\n\n\n## Used Environment Variables\n\ncreate .env file in root\n\n```\nDEBUG=True # or empty for production\nSECRET_KEY=\nSTATIC_ROOT=/app/static/\nSTATIC_URL=static/\nMEDIA_ROOT=/app/media/\nMEDIA_URL=media/\nPOSTGRES_USER=user\nPOSTGRES_PASSWORD=password\nDATABASE_URL=postgres://user:password@db/fablabadmin\nRECAPTCHA_PRIVATE_KEY = 'your private key'\nRECAPTCHA_PUBLIC_KEY = 'your public key'\nCCVSHOP_DOMAIN = 'full url to securearea url'\nCCVSHOP_PRIVATE_KEY = 'your private key'\nCCVSHOP_PUBLIC_KEY = 'your public key'\n```\n\n## docker comands\n```\n docker-compose build\n docker-compose up -d\n\n # during dev, is done also on startup\n docker-compose run web python manage.py migrate\n docker-compose run web python manage.py createsuperuser\n docker-compose run web python manage.py collectstatic\n```\n\n## During Development\n### making translations\nInside eacho app module folder\n```\ndjango-admin makemessages\n```\nmake adjustments to translations files (check dirty flags)\n```\ndjango-admin compilemessages\n```",
  "dockerfile": "FROM nginx\nADD nginx.conf /etc/nginx/nginx.conf",
  "dockerfile_json": {
    "add": [
      {
        "source": "nginx.conf",
        "dest": "/etc/nginx/nginx.conf"
      }
    ],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": [],
    "from": "nginx"
  },
  "source_repository_url": "https://github.com/bfritscher/fablab-admin.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/bfritscher/fablab-admin",
  "docker_repository": "bfritscher/nginx-proxy-django",
  "docker_image": "bfritscher/nginx-proxy-django",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "bfritscher/nginx-proxy-django",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/bfritscher/nginx-proxy-django",
    "https://hub.docker.com/v2/repositories/bfritscher/nginx-proxy-django",
    "https://github.com/bfritscher/fablab-admin.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Python",
    "Type/Middleware/Web Server/Nginx",
    "Type/Middleware/Proxy"
  ],
  "info_url": "https://hub.docker.com/r/bfritscher/nginx-proxy-django",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}