{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/crossdev/go-web-tester",
    "repository_url": "https://hub.docker.com/v2/repositories/crossdev/go-web-tester",
    "tags_url": "https://hub.docker.com/v2/repositories/crossdev/go-web-tester/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/crossdev/go-web-tester/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/crossdev/go-web-tester/autobuild",
    "user": "crossdev",
    "name": "go-web-tester",
    "namespace": "crossdev",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 670,
    "last_updated": "2016-10-12T20:24:16.818365Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 268560171,
        "id": 1094380,
        "repository": 355714,
        "creator": 169201,
        "last_updater": 468423,
        "last_updated": "2016-10-12T20:23:23.276348Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "cross-dev/go-web-tester"
  },
  "name": "crossdev/go-web-tester Docker container",
  "description": "Docker image to test simple Go Web applications with CLI",
  "readme": "# Docker image to test simple Go Web applications\n\nIt is created for drone CI and is automated build in Docker Hub.\n\nIt includes basic Go language runtime, curl and bats framework\n\n",
  "dockerfile": "FROM golang\nMAINTAINER Roman Saveljev <roman.saveljev@haltian.com>\n\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive && \\\n\tapt-key update && \\\n\tapt-get -y update && \\\n\tapt-get install -y curl psmisc sudo\n    \nRUN \\\n    curl -L https://github.com/sstephenson/bats/archive/v0.4.0.tar.gz | tar xzv -C /tmp && \\\n    /tmp/bats-0.4.0/install.sh /usr/local && \\\n    rm -rf /tmp/bats-0.4.0\n\nRUN \\\n    echo \"Defaults:root !env_reset\" >/etc/sudoers.d/tester_extra && \\\n    echo \"Defaults:root !secure_path\" >/etc/sudoers.d/tester_extra && \\\n    echo \"nobody ALL=(ALL) NOPASSWD:ALL\" >>/etc/sudoers.d/tester_extra\n\nRUN \\\n    go get github.com/tools/godep\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "\texport DEBIAN_FRONTEND=noninteractive && \tapt-key update && \tapt-get -y update && \tapt-get install -y curl psmisc sudo",
      "    curl -L https://github.com/sstephenson/bats/archive/v0.4.0.tar.gz | tar xzv -C /tmp &&     /tmp/bats-0.4.0/install.sh /usr/local &&     rm -rf /tmp/bats-0.4.0",
      "    echo \"Defaults:root !env_reset\" >/etc/sudoers.d/tester_extra &&     echo \"Defaults:root !secure_path\" >/etc/sudoers.d/tester_extra &&     echo \"nobody ALL=(ALL) NOPASSWD:ALL\" >>/etc/sudoers.d/tester_extra",
      "    go get github.com/tools/godep"
    ],
    "workdir": [],
    "from": "golang",
    "maintainer": "Roman Saveljev <roman.saveljev@haltian.com>"
  },
  "source_repository_url": "https://github.com/cross-dev/go-web-tester.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/cross-dev/go-web-tester",
  "docker_repository": "crossdev/go-web-tester",
  "docker_image": "crossdev/go-web-tester",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "crossdev/go-web-tester",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/crossdev/go-web-tester",
    "https://hub.docker.com/v2/repositories/crossdev/go-web-tester",
    "https://github.com/cross-dev/go-web-tester.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Mode/CLI",
    "Style/Virtualization Level/Application",
    "Type/Devopsware/Test",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://hub.docker.com/r/crossdev/go-web-tester",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}