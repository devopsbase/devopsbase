{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/_/sentry",
    "repository_url": "https://hub.docker.com/v2/repositories/library/sentry",
    "tags_url": "https://hub.docker.com/v2/repositories/library/sentry/tags",
    "user": "library",
    "name": "sentry",
    "namespace": "library",
    "status": 1,
    "is_private": false,
    "is_automated": false,
    "star_count": 263,
    "pull_count": 1595375,
    "last_updated": "2016-10-14T18:45:54.383099Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "8.8-onbuild",
        "full_size": 171418369,
        "id": 4722819,
        "repository": 82698,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:45:54.032428Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.8.0-onbuild",
        "full_size": 171418369,
        "id": 4722815,
        "repository": 82698,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:45:43.736698Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.8",
        "full_size": 171418238,
        "id": 4722803,
        "repository": 82698,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:45:33.322258Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.8.0",
        "full_size": 171418238,
        "id": 4722802,
        "repository": 82698,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:45:29.280175Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "onbuild",
        "full_size": 173902119,
        "id": 1740746,
        "repository": 82698,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:45:10.694474Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8-onbuild",
        "full_size": 173902119,
        "id": 1740736,
        "repository": 82698,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:45:00.343246Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.9-onbuild",
        "full_size": 173902119,
        "id": 5229795,
        "repository": 82698,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:44:50.020360Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.9.0-onbuild",
        "full_size": 173902119,
        "id": 5229994,
        "repository": 82698,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:44:39.093807Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 173901988,
        "id": 71948,
        "repository": 82698,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:44:27.789066Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8",
        "full_size": 173901988,
        "id": 1740711,
        "repository": 82698,
        "creator": 2215,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:44:17.160473Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ]
  },
  "docker_image": "sentry",
  "name": "sentry Docker container",
  "description": "Sentry is a realtime, platform-agnostic error logging and aggregation platform",
  "readme": "# Supported tags and respective `Dockerfile` links\n\n-\t[`8.8.0`, `8.8` (*8.8/Dockerfile*)](https://github.com/getsentry/docker-sentry/blob/90e5f20bf418a42986c9716d07a4de980a4dfc07/8.8/Dockerfile)\n-\t[`8.8.0-onbuild`, `8.8-onbuild` (*8.8/onbuild/Dockerfile*)](https://github.com/getsentry/docker-sentry/blob/90e5f20bf418a42986c9716d07a4de980a4dfc07/8.8/onbuild/Dockerfile)\n-\t[`8.9.0`, `8.9`, `8`, `latest` (*8.9/Dockerfile*)](https://github.com/getsentry/docker-sentry/blob/06d750bddc0e6499446e73ca22fbd4c915b29cbd/8.9/Dockerfile)\n-\t[`8.9.0-onbuild`, `8.9-onbuild`, `8-onbuild`, `onbuild` (*8.9/onbuild/Dockerfile*)](https://github.com/getsentry/docker-sentry/blob/06d750bddc0e6499446e73ca22fbd4c915b29cbd/8.9/onbuild/Dockerfile)\n\nFor more information about this image and its history, please see [the relevant manifest file (`library/sentry`)](https://github.com/docker-library/official-images/blob/master/library/sentry). This image is updated via [pull requests to the `docker-library/official-images` GitHub repo](https://github.com/docker-library/official-images/pulls?q=label%3Alibrary%2Fsentry).\n\nFor detailed information about the virtual/transfer sizes and individual layers of each of the above supported tags, please see [the `repos/sentry/tag-details.md` file](https://github.com/docker-library/repo-info/blob/master/repos/sentry/tag-details.md) in [the `docker-library/repo-info` GitHub repo](https://github.com/docker-library/repo-info).\n\n# What is Sentry?\n\nSentry is a realtime event logging and aggregation platform. It specializes in monitoring errors and extracting all the information needed to do a proper post-mortem without any of the hassle of the standard user feedback loop.\n\n> [github.com/getsentry/sentry](https://github.com/getsentry/sentry)\n\n![logo](https://raw.githubusercontent.com/docker-library/docs/831b07a52f9ff6577c915afc41af8158725829f4/sentry/logo.png)\n\n# How to use this image\n\n## How to setup a full Sentry instance\n\n1.\tStart a Redis container\n\n\t```console\n\t$ docker run -d --name sentry-redis redis\n\t```\n\n2.\tStart a Postgres container\n\n\t```console\n\t$ docker run -d --name sentry-postgres -e POSTGRES_PASSWORD=secret -e POSTGRES_USER=sentry postgres\n\t```\n\n3.\tGenerate a new secret key to be shared by all `sentry` containers. This value will then be used as the `SENTRY_SECRET_KEY` environment variable.\n\n\t```console\n\t$ docker run --rm sentry config generate-secret-key\n\t```\n\n4.\tIf this is a new database, you'll need to run `upgrade`\n\n\t```console\n\t$ docker run -it --rm -e SENTRY_SECRET_KEY='<secret-key>' --link sentry-postgres:postgres --link sentry-redis:redis sentry upgrade\n\t```\n\n\t**Note: the `-it` is important as the initial upgrade will prompt to create an initial user and will fail without it**\n\n5.\tNow start up Sentry server\n\n\t```console\n\t$ docker run -d --name my-sentry -e SENTRY_SECRET_KEY='<secret-key>' --link sentry-redis:redis --link sentry-postgres:postgres sentry\n\t```\n\n6.\tThe default config needs a celery beat and celery workers, start as many workers as you need (each with a unique name)\n\n\t```console\n\t$ docker run -d --name sentry-cron -e SENTRY_SECRET_KEY='<secret-key>' --link sentry-postgres:postgres --link sentry-redis:redis sentry run cron\n\t$ docker run -d --name sentry-worker-1 -e SENTRY_SECRET_KEY='<secret-key>' --link sentry-postgres:postgres --link sentry-redis:redis sentry run worker\n\t```\n\n### Port mapping\n\nIf you'd like to be able to access the instance from the host without the container's IP, standard port mappings can be used. Just add `-p 8080:9000` to the `docker run` arguments and then access either `http://localhost:8080` or `http://host-ip:8080` in a browser.\n\n## Configuring the initial user\n\nIf you did not create a superuser during `upgrade`, use the following to create one:\n\n```console\n$ docker run -it --rm -e SENTRY_SECRET_KEY='<secret-key>' --link sentry-redis:redis --link sentry-postgres:postgres sentry createuser\n```\n\n## Environment variables\n\nWhen you start the `sentry` image, you can adjust the configuration of the Sentry instance by passing one or more environment variables on the `docker run` command line. Please note that these environment variables are provided as a jump start, and it's highly recommended to either mount in your own config file or utilize the `sentry:onbuild` variant.\n\n### `SENTRY_SECRET_KEY`\n\nA secret key used for cryptographic functions within Sentry. This key should be unique and consistent across all running instances. You can generate a new secret key doing something like:\n\n```console\n$ docker run --rm sentry config generate-secret-key\n```\n\n### `SENTRY_POSTGRES_HOST`, `SENTRY_POSTGRES_PORT`, `SENTRY_DB_NAME`, `SENTRY_DB_USER`, `SENTRY_DB_PASSWORD`\n\nDatabase credentials for your Postgres server. These values aren't needed if a linked `postgres` container exists.\n\n### `SENTRY_REDIS_HOST`, `SENTRY_REDIS_PORT`, `SENTRY_REDIS_DB`\n\nConnection information for your Redis server. These values aren't needed if a linked `redis` container exists.\n\n### `SENTRY_MEMCACHED_HOST`, `SENTRY_MEMCACHED_PORT`\n\nConnection information for a Memcache server. These values aren't needed if a linked `memcached` container exists.\n\n### `SENTRY_FILESTORE_DIR`\n\nDirectory where uploaded files will be stored. This defaults to `/var/lib/sentry/files` and is a `VOLUME` for persistent data.\n\n### `SENTRY_SERVER_EMAIL`\n\nThe email address used for `From:` in outbound emails. Default: `root@localhost`\n\n### `SENTRY_EMAIL_HOST`, `SENTRY_EMAIL_PORT`, `SENTRY_EMAIL_USER`, `SENTRY_EMAIL_PASSWORD`, `SENTRY_EMAIL_USE_TLS`\n\nConnection information for an outbound smtp server. These values aren't needed if a linked `smtp` container exists.\n\n### `SENTRY_MAILGUN_API_KEY`\n\nIf you're using Mailgun for inbound mail, set your API key and configure a route to forward to `/api/hooks/mailgun/inbound/`.\n\n# Image Variants\n\nThe `sentry` images come in many flavors, each designed for a specific use case.\n\n## `sentry:<version>`\n\nThis is the defacto image. If you are unsure about what your needs are, you probably want to use this one. It is designed to be used both as a throw away container (mount your source code and start the container to start your app), as well as the base to build other images off of.\n\n## `sentry:onbuild`\n\nThis image makes it easy to custom build your own Sentry instance by copying in a custom `config.yml` and/or `sentry.conf.py` file and installing plugins from `requirements.txt`.\n\nIt's also possible to develop custom extensions within your `onbuild` package. If the build directory contains a `setup.py` file, this will also get installed.\n\nSee the [official Sentry documentation](https://docs.getsentry.com/on-premise/server/installation/) for more information.\n\nTo create your custom `sentry:onbuild` package, simply do the following:\n\n1.\tCreate a Dockerfile containing `FROM sentry:onbuild`\n2.\tIn the same directory, add your custom configuration files.\n3.\tYou can get copies of those files to use as templates from the [docker-sentry GitHub repo](https://github.com/getsentry/docker-sentry/).\n4.\tBuild your image: `docker build -t mysentry .`\n5.\tRun your custom image using `mysentry` instead of `sentry`.\n\n# License\n\nView [license information](https://github.com/getsentry/sentry/blob/master/LICENSE) for the software contained in this image.\n\n# Supported Docker versions\n\nThis image is officially supported on Docker version 1.12.2.\n\nSupport for older versions (down to 1.6) is provided on a best-effort basis.\n\nPlease see [the Docker installation documentation](https://docs.docker.com/installation/) for details on how to upgrade your Docker daemon.\n\n# User Feedback\n\n## Issues\n\nIf you have any problems with or questions about this image, please contact us through a [GitHub issue](https://github.com/getsentry/docker-sentry/issues). If the issue is related to a CVE, please check for [a `cve-tracker` issue on the `official-images` repository first](https://github.com/docker-library/official-images/issues?q=label%3Acve-tracker).\n\nYou can also reach many of the official image maintainers via the `#docker-library` IRC channel on [Freenode](https://freenode.net).\n\n## Contributing\n\nYou are invited to contribute new features, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.\n\nBefore you start to code, we recommend discussing your plans through a [GitHub issue](https://github.com/getsentry/docker-sentry/issues), especially for more ambitious contributions. This gives other contributors a chance to point you in the right direction, give you feedback on your design, and help you find out if someone else is working on the same thing.\n\n## Documentation\n\nDocumentation for this image is stored in the [`sentry/` directory](https://github.com/docker-library/docs/tree/master/sentry) of the [`docker-library/docs` GitHub repo](https://github.com/docker-library/docs). Be sure to familiarize yourself with the [repository's `README.md` file](https://github.com/docker-library/docs/blob/master/README.md) before attempting a pull request.",
  "type": "docker",
  "docker_name": "sentry",
  "revision": "8.8-onbuild",
  "uris": [
    "https://hub.docker.com/r/_/sentry",
    "https://hub.docker.com/v2/repositories/library/sentry"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Logging",
    "Type/Devopsware/Error Management/Sentry",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://hub.docker.com/r/_/sentry",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}