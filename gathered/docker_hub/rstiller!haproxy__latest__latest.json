{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/rstiller/haproxy",
    "repository_url": "https://hub.docker.com/v2/repositories/rstiller/haproxy",
    "tags_url": "https://hub.docker.com/v2/repositories/rstiller/haproxy/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/rstiller/haproxy/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/rstiller/haproxy/autobuild",
    "user": "rstiller",
    "name": "haproxy",
    "namespace": "rstiller",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 56,
    "last_updated": "2015-07-11T02:08:45.782855Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 16904377,
        "id": 79169,
        "repository": 226884,
        "creator": 2955,
        "last_updater": 2955,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "rstiller/dockerfiles"
  },
  "name": "rstiller/haproxy Docker container",
  "description": "haproxy reloads without packet-loss",
  "readme": "# haproxy\n\nA HAproxy image (based on [Alpine Linux](http://alpinelinux.org/) - small and secure)\nwith zero-packet-loss configuration reload.\n\n## run\n\n    docker run -d \\\n           --name=\"<name of the container>\" \\\n           --cap-add=NET_ADMIN \\\n           -v <path to haproxy>:/etc/haproxy/haproxy.cfg \\\n           -p 0.0.0.0:80:80 -p 0.0.0.0:443:443 \\\n           rstiller/haproxy\n    \n    weave run --with-dns <an ip address> \\\n           --cap-add=NET_ADMIN \\\n           --name=\"<name of the container>\" \\\n           -v <path to haproxy>:/etc/haproxy/haproxy.cfg \\\n           -p 0.0.0.0:80:80 -p 0.0.0.0:443:443 \\\n           rstiller/haproxy\n    weave export <an ip address>\n\n## restart\n\nNote:\n    Changes in the mounted configuration file are immediately available inside the container - so simply restart haproxy for the changes to be applied.\n\n    docker exec <name of the container> /haproxy.sh\n",
  "dockerfile": "FROM gliderlabs/alpine\n\nRUN apk --update add haproxy iptables supervisor irqbalance\n\nADD haproxy.cfg /etc/haproxy/haproxy.cfg\nADD haproxy.sh /haproxy.sh\nADD supervisord.conf /etc/supervisord.conf\n\nRUN chmod a+x /haproxy.sh\nRUN mkdir -p /var/run/haproxy /var/lib/haproxy\nRUN chown -R haproxy:haproxy /var/run/haproxy /var/lib/haproxy\n\n#RUN echo \"* soft nofile 1048576\" >> /etc/security/limits.conf\n#RUN echo \"* hard nofile 1048576\" >> /etc/security/limits.conf\n\nEXPOSE 80 443\n\nCMD [\"supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "haproxy.cfg",
        "dest": "/etc/haproxy/haproxy.cfg"
      },
      {
        "source": "haproxy.sh",
        "dest": "/haproxy.sh"
      },
      {
        "source": "supervisord.conf",
        "dest": "/etc/supervisord.conf"
      }
    ],
    "expose": [
      80
    ],
    "volume": [],
    "run": [
      "apk --update add haproxy iptables supervisor irqbalance",
      "chmod a+x /haproxy.sh",
      "mkdir -p /var/run/haproxy /var/lib/haproxy",
      "chown -R haproxy:haproxy /var/run/haproxy /var/lib/haproxy"
    ],
    "workdir": [],
    "from": "gliderlabs/alpine",
    "cmd": "[\"supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]"
  },
  "source_repository_url": "https://github.com/rstiller/dockerfiles.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/rstiller/dockerfiles",
  "docker_repository": "rstiller/haproxy",
  "docker_image": "rstiller/haproxy",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "rstiller/haproxy",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/rstiller/haproxy",
    "https://hub.docker.com/v2/repositories/rstiller/haproxy",
    "https://github.com/rstiller/dockerfiles.git"
  ],
  "labels": [
    "Docker",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Proxy/HAProxy"
  ],
  "info_url": "https://hub.docker.com/r/rstiller/haproxy",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}