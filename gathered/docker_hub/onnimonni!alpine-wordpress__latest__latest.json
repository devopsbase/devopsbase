{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/onnimonni/alpine-wordpress",
    "repository_url": "https://hub.docker.com/v2/repositories/onnimonni/alpine-wordpress",
    "tags_url": "https://hub.docker.com/v2/repositories/onnimonni/alpine-wordpress/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/onnimonni/alpine-wordpress/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/onnimonni/alpine-wordpress/autobuild",
    "user": "onnimonni",
    "name": "alpine-wordpress",
    "namespace": "onnimonni",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 2,
    "pull_count": 314,
    "last_updated": "2016-03-02T18:08:49.260536Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 115221943,
        "id": 1997473,
        "repository": 526425,
        "creator": 107522,
        "last_updater": 107522,
        "last_updated": "2016-03-02T18:08:48.535541Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "php5.6",
        "full_size": 117592151,
        "id": 2090366,
        "repository": 526425,
        "creator": 107522,
        "last_updater": 107522,
        "last_updated": "2016-02-23T16:48:56.327935Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "0.2",
        "full_size": 117371770,
        "id": 2073758,
        "repository": 526425,
        "creator": 107522,
        "last_updater": 107522,
        "last_updated": "2016-02-22T09:35:39.940142Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "0.1.2",
        "full_size": 115517757,
        "id": 2046619,
        "repository": 526425,
        "creator": 107522,
        "last_updater": 107522,
        "last_updated": "2016-02-18T17:07:14.491915Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "0.1.1",
        "full_size": 115486088,
        "id": 2029255,
        "repository": 526425,
        "creator": 107522,
        "last_updater": 107522,
        "last_updated": "2016-02-17T11:48:23.116238Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "onnimonni/alpine-wordpress"
  },
  "name": "onnimonni/alpine-wordpress Docker container",
  "description": "Minimal PHP container for running WordPress including testing tools",
  "readme": "This repository is not maintained. See [devgeniem/alpine-wordpress](https://github.com/devgeniem/docker-alpine-wordpress) instead.\n\n##### This is work in progress, Not intended for production use yet\n\n# Lightweight WordPress PHP-FPM & Nginx Docker Image\n",
  "dockerfile": "FROM alpine:edge\nMAINTAINER Onni Hakala - Geniem Oy. <onni.hakala@geniem.com>\n\nLABEL   devoply.type=\"site\" \\\n        devoply.cms=\"wordpress\" \\\n        devoply.framework=\"wordpress\" \\\n        devoply.language=\"php\" \\\n        devoply.require=\"mariadb etopian/nginx-proxy\" \\\n        devoply.recommend=\"redis\" \\\n        devoply.description=\"WordPress on Nginx and PHP-FPM with WP-CLI.\" \\\n        devoply.name=\"WordPress\" \\\n        devoply.params=\"docker run -d --name {container_name} -e VIRTUAL_HOST={virtual_hosts} -v /data/sites/{domain_name}:/DATA geniem/alpine-php-wordpress\"\n\n#php5.6\n## Install php + nginx\n#RUN apk update \\\n#    && apk add bash less vim nano git mysql-client nginx ca-certificates \\\n#    # PHP 5.6\n#    php php-fpm php-json php-zlib php-xml php-pdo php-phar php-openssl \\\n#    php-pdo_mysql php-mysqli \\\n#    php-gd php-mcrypt \\\n#    php-curl php-opcache php-ctype  \\\n#    php-intl php-bcmath php-dom php-xmlreader php-apcu php-mysql php-iconv \\\n#    # Libs for php\n#    libssh2 curl libpng freetype libjpeg-turbo libgcc libxml2 libstdc++ icu-libs libltdl libmcrypt \\\n#    && apk add -u musl\n\n# Install php + nginx\nRUN apk update \\\n    && apk add bash less vim nano git mysql-client nginx ca-certificates \\\n    # Libs for php\n    libssh2 curl libpng freetype libjpeg-turbo libgcc libxml2 libstdc++ icu-libs libltdl libmcrypt \\\n    # For mails\n    msmtp \\\n    && apk add -u musl\n\n# php7 depracates following packages: php-apcu php-mysql php-iconv\n# Install php 7\nRUN apk add php7 php7-fpm php7-json php7-zlib php7-xml php7-pdo php7-phar php7-openssl \\\n    php7-pdo_mysql php7-mysqli php7-mysqlnd \\\n    php7-gd php7-mcrypt \\\n    php7-curl php7-opcache php7-ctype  \\\n    php7-intl php7-bcmath php7-dom php7-xmlreader --update-cache --repository http://dl-4.alpinelinux.org/alpine/edge/testing/ \n\n##\n# Install PhantomJS\n##\n\n# Add preconfigured phantomjs package build with: https://github.com/fgrehm/docker-phantomjs2\n# This adds all sorts of dependencies from dockerize magic\nADD lib/phantomjs-dependencies.tar.gz /\n\n# Update phantomjs binary to 2.1.1\nRUN cd /tmp && \\\n    wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 && \\\n    tar -xjf phantomjs-2.1.1-linux-x86_64.tar.bz2 && \\\n    mv phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs && \\\n    chmod +x /usr/local/bin/phantomjs && \\\n    rm -r /tmp/*\n\n##\n# Install ruby + poltergeist\n##\nRUN apk add ruby ruby-nokogiri ruby-json build-base ruby-dev && \\\n    gem install rspec rspec-retry poltergeist capybara --no-ri --no-rdoc && \\\n    apk del build-base ruby-dev\n\n# Add S6-overlay to use S6 process manager\n# https://github.com/just-containers/s6-overlay/#the-docker-way\nADD https://github.com/just-containers/s6-overlay/releases/download/v1.11.0.1/s6-overlay-amd64.tar.gz /tmp/\nRUN gunzip -c /tmp/s6-overlay-amd64.tar.gz | tar -xf - -C /\n\n# Small fixes\nRUN ln -s /etc/php7 /etc/php && \\\n    ln -s /usr/bin/php7 /usr/bin/php && \\\n    ln -s /usr/sbin/php-fpm7 /usr/bin/php-fpm && \\\n    ln -s /usr/lib/php7 /usr/lib/php && \\\n    sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php/php.ini && \\\n    sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd && \\\n    sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd-\n\n# Install wp-cli\n# Add wp-cli wrapper\nADD scripts/wp /usr/local/bin/wp\n\nRUN wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && chmod +x wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp-cli && chmod +x /usr/local/bin/wp\n\n# Install composer\n# source: https://getcomposer.org/download/\nRUN php -r \"readfile('https://getcomposer.org/installer');\" > composer-setup.php && \\\n    php composer-setup.php && \\\n    php -r \"unlink('composer-setup.php');\" && \\\n    mv composer.phar /usr/local/bin/composer && \\\n    chmod +x /usr/local/bin/composer\n\n##\n# Add Project files like nginx and php-fpm processes and configs\n##\nADD files/etc/ /etc/\n\n###\n# Additions\n###\n\n# Add .bashrc for root to easier debugging inside container\nADD root/.bashrc /root/.bashrc\n\nENV TERM=\"xterm\" \\\n    DB_HOST=\"172.17.0.1\" \\\n    DB_NAME=\"\" \\\n    DB_USER=\"\"\\\n    DB_PASS=\"\"\\\n    WP_CORE=\"/data/code/htdocs/wp\"\n\nRUN rm -rf /var/cache/apk/*\n\n# Set default path\nWORKDIR /data/code\n\nEXPOSE 80\nVOLUME [\"/data\"]\n\nENTRYPOINT [\"/init\"]",
  "dockerfile_json": {
    "add": [
      {
        "source": "lib/phantomjs-dependencies.tar.gz",
        "dest": "/"
      },
      {
        "source": "https://github.com/just-containers/s6-overlay/releases/download/v1.11.0.1/s6-overlay-amd64.tar.gz",
        "dest": "/tmp/"
      },
      {
        "source": "scripts/wp",
        "dest": "/usr/local/bin/wp"
      },
      {
        "source": "files/etc/",
        "dest": "/etc/"
      },
      {
        "source": "root/.bashrc",
        "dest": "/root/.bashrc"
      }
    ],
    "expose": [
      80
    ],
    "volume": [
      "[\"/data\"]"
    ],
    "run": [
      "apk update     && apk add bash less vim nano git mysql-client nginx ca-certificates     # Libs for php",
      "apk add php7 php7-fpm php7-json php7-zlib php7-xml php7-pdo php7-phar php7-openssl     php7-pdo_mysql php7-mysqli php7-mysqlnd     php7-gd php7-mcrypt     php7-curl php7-opcache php7-ctype      php7-intl php7-bcmath php7-dom php7-xmlreader --update-cache --repository http://dl-4.alpinelinux.org/alpine/edge/testing/ ",
      "cd /tmp &&     wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 &&     tar -xjf phantomjs-2.1.1-linux-x86_64.tar.bz2 &&     mv phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs &&     chmod +x /usr/local/bin/phantomjs &&     rm -r /tmp/*",
      "apk add ruby ruby-nokogiri ruby-json build-base ruby-dev &&     gem install rspec rspec-retry poltergeist capybara --no-ri --no-rdoc &&     apk del build-base ruby-dev",
      "gunzip -c /tmp/s6-overlay-amd64.tar.gz | tar -xf - -C /",
      "ln -s /etc/php7 /etc/php &&     ln -s /usr/bin/php7 /usr/bin/php &&     ln -s /usr/sbin/php-fpm7 /usr/bin/php-fpm &&     ln -s /usr/lib/php7 /usr/lib/php &&     sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php/php.ini &&     sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd &&     sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/bin\\/bash/g' /etc/passwd-",
      "wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && chmod +x wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp-cli && chmod +x /usr/local/bin/wp",
      "php -r \"readfile('https://getcomposer.org/installer');\" > composer-setup.php &&     php composer-setup.php &&     php -r \"unlink('composer-setup.php');\" &&     mv composer.phar /usr/local/bin/composer &&     chmod +x /usr/local/bin/composer",
      "rm -rf /var/cache/apk/*"
    ],
    "workdir": [
      "/data/code"
    ],
    "from": "alpine:edge",
    "maintainer": "Onni Hakala - Geniem Oy. <onni.hakala@geniem.com>",
    "label": "  devoply.type=\"site\"         devoply.cms=\"wordpress\"         devoply.framework=\"wordpress\"         devoply.language=\"php\"         devoply.require=\"mariadb etopian/nginx-proxy\"         devoply.recommend=\"redis\"         devoply.description=\"WordPress on Nginx and PHP-FPM with WP-CLI.\"         devoply.name=\"WordPress\"         devoply.params=\"docker run -d --name {container_name} -e VIRTUAL_HOST={virtual_hosts} -v /data/sites/{domain_name}:/DATA geniem/alpine-php-wordpress\"",
    "env": {
      "TERM": "\"xterm\"",
      "": "",
      "DB_HOST": "\"172.17.0.1\"",
      "DB_NAME": "\"\"",
      "DB_USER": "\"\"",
      "\"\"": "",
      "WP_CORE": "\"/data/code/htdocs/wp\""
    },
    "entrypoint": "[\"/init\"]"
  },
  "source_repository_url": "https://github.com/onnimonni/alpine-wordpress.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/onnimonni/alpine-wordpress",
  "docker_repository": "onnimonni/alpine-wordpress",
  "docker_image": "onnimonni/alpine-wordpress",
  "parameters_schema": {
    "TERM": {
      "default": "\"xterm\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DB_HOST": {
      "default": "\"172.17.0.1\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DB_NAME": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "DB_USER": {
      "default": "\"\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "\"\"": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "WP_CORE": {
      "default": "\"/data/code/htdocs/wp\"",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "onnimonni/alpine-wordpress",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/onnimonni/alpine-wordpress",
    "https://hub.docker.com/v2/repositories/onnimonni/alpine-wordpress",
    "https://github.com/onnimonni/alpine-wordpress.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Type/Devopsware/Test",
    "Type/Middleware/Runtime/PHP"
  ],
  "info_url": "https://hub.docker.com/r/onnimonni/alpine-wordpress",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}