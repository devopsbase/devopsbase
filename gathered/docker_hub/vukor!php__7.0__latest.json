{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/vukor/php",
    "repository_url": "https://hub.docker.com/v2/repositories/vukor/php",
    "tags_url": "https://hub.docker.com/v2/repositories/vukor/php/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/vukor/php/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/vukor/php/autobuild",
    "user": "vukor",
    "name": "php",
    "namespace": "vukor",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 22110,
    "last_updated": "2016-08-09T09:06:24.266860Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "7.0",
        "full_size": 227322177,
        "id": 2639742,
        "repository": 633328,
        "creator": 90890,
        "last_updater": 90890,
        "last_updated": "2016-08-09T09:06:23.977021Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.6",
        "full_size": 227375362,
        "id": 2639657,
        "repository": 633328,
        "creator": 90890,
        "last_updater": 90890,
        "last_updated": "2016-08-09T09:06:12.116406Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.5",
        "full_size": 227235653,
        "id": 3646044,
        "repository": 633328,
        "creator": 90890,
        "last_updater": 90890,
        "last_updated": "2016-08-09T09:06:00.584791Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.4",
        "full_size": 307741511,
        "id": 2639701,
        "repository": 633328,
        "creator": 90890,
        "last_updater": 90890,
        "last_updated": "2016-08-09T09:05:47.245735Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.3",
        "full_size": 209019196,
        "id": 2863340,
        "repository": 633328,
        "creator": 90890,
        "last_updater": 90890,
        "last_updated": "2016-08-09T09:05:35.898149Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 234622312,
        "id": 2639721,
        "repository": 633328,
        "creator": 90890,
        "last_updater": 90890,
        "last_updated": "2016-05-18T08:02:16.868595Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      }
    ],
    "build_name": "vukor/docker-web-stack"
  },
  "name": "vukor/php Docker container",
  "description": "Build for php with fpm support. Project available on https://github.com/vukor/docker-web-stack",
  "readme": "docker-web-stack\n===========\n\nThis is docker projects for run web apps as containers - nginx, php, mysql, postfix, dnsmasq.\n\n\nNecessary steps\n===========\n\n* Download project:\n\n    `` git clone https://vukor@github.com/vukor/docker-web-stack.git ``\n\n* Install docker and docker-compose on your system\n\n* [ OPTIONAL ] Change the docker-compose.yml. For example, you can change MYSQL_ROOT_PASSWORD or change php version (default php 5.6).\n\n* Create volume data:\n    \n    `` cd docker-web-stack/ ``\n    \n    `` docker volume create --name data ``\n\n* Create and start containers:\n\n    `` docker-compose up --no-build -d ``\n\n* Go to your http:/localhost/\n  You must see response from nginx - \"410 Gone\"\n\n* If you use OSX (like me) - you also have to create alias 127.0.0.2 on loopback:\n\n    `` sudo ifconfig lo0 127.0.0.2 alias ``\n\n\nManage your projects\n===========\n\n* You can create your first virtual host:\n\n    `` ./bin/create.prj.py PRJNAME `` (then documentroot is ./htdocs/PRJNAME/)\n\n\tor\n\n    `` ./bin/create.prj.py -v5 PRJNAME `` (then documentroot is ./htdocs/PRJNAME/www/)\n\n    After that put your web files to documentroot\n\n\nManage your containers\n===========\n\n* For stop, start, restart, up and build for all or one of project container you have to run:\n    \n    `` docker-compose stop [container]``\n    \n    `` docker-compose start [container]``\n    \n    `` docker-compose restart [container]``\n    \n    `` docker-compose up -d [container]``\n    \n    `` docker-compose build [container]``\n\n\nManage your DNS zones\n===========\n\n* For exampple, you create project my-first-project.ru. But for working in your browser you need that domain myp-first-project.ru is resolve to 127.0.0.1\n\n* For working this create your first zone:\n\n    ``\n    echo \"address=/my-first-project.ru/127.0.0.1\" > .dnsmasq/zones/my-first-project.ru\n    ``\n\n* Build and up image dnsmasq:\n    \n    ``\n    docker-compose build dns\n    docker-compose up -d dns\n    ``\n\n* And add to /etc/resolv.conf after your real nameservers:\n\n    `` nameserver 127.0.0.2 ``\n\n* Now you can resolve my-first-project.ru. and \\*.my-first-project.ru. to 127.0.0.1\n\n\nManage databases\n===========\n\n1. For connect to mysql service run:\n    \n    `` make db-cmd ``\n\n2. For backup all your databases run:\n    \n    `` make db-backup ``\n\n    Your databases will be located in backup/ directory.\n\n3. For restore all databases from backup/ directory to mysql service run:\n    \n    `` make db-restore ``\n\n\nHow update images (move it crontab in docker soon)\n============\n\nRun:\n\n`` make upgrade ``\n\nThis command backup all your databases, upgrade docker images, run new updated containers and restore all your databases.\n\n\nManage crontab\n===========\n\nNow you have docker image vukor/cron for run cron jobs.\n\n* For list current cron jobs run:\n\n`` make crontabs ``\n\n* For add or remove cron jobs, you have to edit file \".cron/cron-jobs\" and run:\n\n`` docker-compose build cron &% docker-compose up -d cron ``\n\n\nShare dirs\n===========\n\n``.nginx/etc, .mysql5x/etc, .php5x/etc - config files``\n\n``htdocs - web files``\n\n``logs - app logs``\n\n``backup - mysql backups``\n\n\nUseful links\n============\n  - http://docs.docker.com/compose/\n  - https://github.com/docker/compose/blob/master/docs/index.md\n\n\nThe MIT License (MIT)\n===========\nCopyright (c) 2016 Anton Bugreev <anton@bugreev.ru>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "dockerfile": "## Version: 0.1\nFROM centos:centos6\nMAINTAINER Anton Bugreev <anton@bugreev.ru>\n\n## Import centos 6 base key\nRUN rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6\n\n## Install epel repo\nRUN rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm && \\\n    yum install ansible1.9 git -y\n\n## Deploy php 7.0 role with ansible, we using ansible in prod - not yet docker\nRUN cd /tmp/ && \\\n    git clone https://github.com/vukor/ansible-deploy-web-stack && \\\n    cd /tmp/ansible-deploy-web-stack/ && \\\n    echo 'local' >> inventory/hosts && \\\n    sed -i 's/php_version: 5.6/php_version: 7.0/' inventory/group_vars/all.yml && \\\n    sed -i 's/prj_group: www/prj_group: dev/' inventory/group_vars/all.yml && \\\n    ansible-playbook playbook/setup.yml -t unix,repo,user,php --connection=local\n#    cd / && rm -rf /tmp/ansible-deploy-web-stack/ && \\\n#    echo 'clean_requirements_on_remove=1' >> /etc/yum.conf && \\\n#    yum remove ansible git epel-release -y && \\\n#    yum clean all\n\n## DEBUG!\n## build, configure libiconv 1.x (needs for php)\nRUN yum install tar gcc wget -y && \\\n    cd /tmp && \\\n    wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz && \\\n    tar -xvzf ./libiconv-1.14.tar.gz && \\\n    cd ./libiconv-1.14/ && \\\n    ./configure --prefix=/usr/local && \\\n    make && make install && \\\n    cd /tmp && rm -rf /tmp/libiconv* && \\\n    echo \"export LD_PRELOAD=/usr/local/lib/preloadable_libiconv.so\" >> /etc/bashrc\nRUN yum --enablerepo=remi-php70 install php-pear php-devel -y && \\\n    pecl install xdebug\n\n### Copy configs\nCOPY ./etc/php-fpm.conf /etc/php-fpm.conf\nCOPY ./etc/php-fpm.d/www.conf /etc/php-fpm.d/www.conf\nCOPY ./etc/php.ini /etc/php.ini\n\n### volumes\n## php-fpm\nVOLUME [\"/etc/php-fpm.d/\"]\n\n## web\nVOLUME [\"/home/dev/logs/\"]\nVOLUME [\"/home/dev/htdocs/\"]\n\n## allow ports\nEXPOSE 9000\n\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      9000
    ],
    "volume": [
      "[\"/etc/php-fpm.d/\"]",
      "[\"/home/dev/logs/\"]",
      "[\"/home/dev/htdocs/\"]"
    ],
    "run": [
      "rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6",
      "rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm &&     yum install ansible1.9 git -y",
      "cd /tmp/ &&     git clone https://github.com/vukor/ansible-deploy-web-stack &&     cd /tmp/ansible-deploy-web-stack/ &&     echo 'local' >> inventory/hosts &&     sed -i 's/php_version: 5.6/php_version: 7.0/' inventory/group_vars/all.yml &&     sed -i 's/prj_group: www/prj_group: dev/' inventory/group_vars/all.yml &&     ansible-playbook playbook/setup.yml -t unix,repo,user,php --connection=local",
      "yum install tar gcc wget -y &&     cd /tmp &&     wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz &&     tar -xvzf ./libiconv-1.14.tar.gz &&     cd ./libiconv-1.14/ &&     ./configure --prefix=/usr/local &&     make && make install &&     cd /tmp && rm -rf /tmp/libiconv* &&     echo \"export LD_PRELOAD=/usr/local/lib/preloadable_libiconv.so\" >> /etc/bashrc",
      "yum --enablerepo=remi-php70 install php-pear php-devel -y &&     pecl install xdebug"
    ],
    "workdir": [],
    "from": "centos:centos6",
    "maintainer": "Anton Bugreev <anton@bugreev.ru>",
    "copy": "./etc/php.ini /etc/php.ini"
  },
  "source_repository_url": "https://github.com/vukor/docker-web-stack.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/vukor/docker-web-stack",
  "docker_repository": "vukor/php",
  "docker_image": "vukor/php",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        9000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "vukor/php",
  "revision": "7.0",
  "uris": [
    "https://hub.docker.com/r/vukor/php",
    "https://hub.docker.com/v2/repositories/vukor/php",
    "https://github.com/vukor/docker-web-stack.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Type/Devopsware/Build",
    "Type/Devopsware/Version Control/Git",
    "Type/Middleware/Runtime/PHP"
  ],
  "info_url": "https://hub.docker.com/r/vukor/php",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}