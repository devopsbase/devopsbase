{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/bitnami/apache",
    "repository_url": "https://hub.docker.com/v2/repositories/bitnami/apache",
    "tags_url": "https://hub.docker.com/v2/repositories/bitnami/apache/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/bitnami/apache/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/bitnami/apache/autobuild",
    "user": "bitnami",
    "name": "apache",
    "namespace": "bitnami",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 21,
    "pull_count": 55778,
    "last_updated": "2016-10-17T10:51:07.695614Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "development",
        "full_size": 100134428,
        "id": 217367,
        "repository": 229046,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-10-17T10:51:05.498788Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "_",
        "full_size": 100135070,
        "id": 5450129,
        "repository": 229046,
        "creator": 342683,
        "last_updater": 342683,
        "last_updated": "2016-10-17T08:21:00.293267Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "2.4.23-r6",
        "full_size": 100134520,
        "id": 5049726,
        "repository": 229046,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-24T20:11:04.534672Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 100134513,
        "id": 384346,
        "repository": 229046,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-24T20:08:40.214893Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.4.23-r5",
        "full_size": 98283786,
        "id": 4967412,
        "repository": 229046,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-21T07:29:45.495536Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.4.23-r4",
        "full_size": 98283521,
        "id": 4894589,
        "repository": 229046,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-16T15:44:22.873989Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.4.23-r3",
        "full_size": 98283280,
        "id": 4706786,
        "repository": 229046,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-07T06:33:59.257747Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.4.23-r2",
        "full_size": 98283110,
        "id": 4655446,
        "repository": 229046,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-02T21:27:17.227906Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.4.23-r1",
        "full_size": 96306058,
        "id": 4148422,
        "repository": 229046,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-08-03T22:38:28.226716Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "2.4.23-r0",
        "full_size": 95904809,
        "id": 3961135,
        "repository": 229046,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-07-22T13:10:41.386994Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "bitnami/bitnami-docker-apache"
  },
  "name": "bitnami/apache Docker container",
  "description": "Bitnami Apache Docker Image",
  "readme": "[![CircleCI](https://circleci.com/gh/bitnami/bitnami-docker-apache/tree/master.svg?style=shield)](https://circleci.com/gh/bitnami/bitnami-docker-apache/tree/master)\n[![Docker Hub Automated Build](http://container.checkforupdates.com/badges/bitnami/apache)](https://hub.docker.com/r/bitnami/apache/)\n\n\n# What is Apache?\n\n> The Apache HTTP Server Project is an effort to develop and maintain an open-source HTTP server for modern operating systems including UNIX and Windows NT. The goal of this project is to provide a secure, efficient and extensible server that provides HTTP services in sync with the current HTTP standards.\n\n[http://httpd.apache.org/](http://httpd.apache.org/)\n\n# TLDR\n\n```bash\ndocker run --name apache bitnami/apache:latest\n```\n\n## Docker Compose\n\n```yaml\napache:\n  image: bitnami/apache:latest\n```\n\n# Get this image\n\nThe recommended way to get the Bitnami Apache Docker Image is to pull the prebuilt image from the [Docker Hub Registry](https://hub.docker.com/r/bitnami/apache).\n\n```bash\ndocker pull bitnami/apache:latest\n```\n\nTo use a specific version, you can pull a versioned tag. You can view the [list of available versions](https://hub.docker.com/r/bitnami/apache/tags/) in the Docker Hub Registry.\n\n```bash\ndocker pull bitnami/apache:[TAG]\n```\n\nIf you wish, you can also build the image yourself.\n\n```bash\ndocker build -t bitnami/apache:latest https://github.com/bitnami/bitnami-docker-apache.git\n```\n\n# Hosting a static website\n\nThe `/app` path is configured as the Apache [DocumentRoot](https://httpd.apache.org/docs/2.4/urlmapping.html#documentroot). Content mounted here is served by the default catch-all virtual host.\n\n```bash\ndocker run --name apache -v /path/to/app:/app bitnami/apache:latest\n```\n\nor using Docker Compose:\n\n```\napache:\n  image: bitnami/apache:latest\n  volumes:\n    - /path/to/app:/app\n```\n\n# Accessing your server from the host\n\nTo access your web server from your host machine you can ask Docker to map a random port on your host to ports `80` and `443` exposed in the container.\n\n```bash\ndocker run --name apache -P bitnami/apache:latest\n```\n\nRun `docker port` to determine the random ports Docker assigned.\n\n```bash\n$ docker port apache\n443/tcp -> 0.0.0.0:32768\n80/tcp -> 0.0.0.0:32769\n```\n\nYou can also manually specify the ports you want forwarded from your host to the container.\n\n```bash\ndocker run -p 8080:80 -p 8443:443 bitnami/apache:latest\n```\n\nAccess your web server in the browser by navigating to [http://localhost:8080](http://localhost:8080/).\n\n# Configuration\n\n## Adding custom virtual hosts\n\nThe default `httpd.conf` includes virtual hosts placed in `/bitnami/apache/conf/vhosts/*.conf`. You can mount a directory at `/bitnami/apache/conf/vhosts` from your host containing your custom virtual hosts.\n\n```bash\ndocker run -v /path/to/apache-persistence/vhosts:/bitnami/apache/conf/vhosts bitnami/apache:latest\n```\n\nor using Docker Compose:\n\n```\napache:\n  image: bitnami/apache:latest\n  volumes:\n    - /path/to/apache-persistence/vhosts:/bitnami/apache/conf/vhosts\n```\n\n## Full configuration\n\nThis container looks for configuration in `/bitnami/apache/conf`. You can mount a directory at `/bitnami/apache/` with your own configuration, or the default configuration will be copied to your directory at `conf/` if it is empty.\n\n### Step 1: Run the Apache image\n\nRun the Apache image, mounting a directory from your host.\n\n```bash\ndocker run --name apache -v /path/to/apache-persistence:/bitnami/apache bitnami/apache:latest\n```\n\nor using Docker Compose:\n\n```\napache:\n  image: bitnami/apache:latest\n  volumes:\n    - /path/to/apache-persistence:/bitnami/apache\n```\n\n### Step 2: Edit the configuration\n\nEdit the configuration on your host using your favorite editor.\n\n```bash\nvi /path/to/apache-persistence/conf/httpd.conf\n```\n\n### Step 4: Restart Apache\n\nAfter changing the configuration, restart your Apache container for the changes to take effect.\n\n```bash\ndocker restart apache\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose restart apache\n```\n\n# Reverse proxy to other containers\n\nApache can be used to reverse proxy to other containers using Docker's linking system. This is particularly useful if you want to serve dynamic content through an Apache frontend.\n\n**Further Reading:**\n\n  - [mod_proxy documentation](http://httpd.apache.org/docs/2.2/mod/mod_proxy.html#forwardreverse)\n\n# Logging\n\nThe Bitnami Apache Docker image sends the container logs to the `stdout`. To view the logs:\n\n```bash\ndocker logs apache\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose logs apache\n```\n\nYou can configure the containers [logging driver](https://docs.docker.com/engine/admin/logging/overview/) using the `--log-driver` option if you wish to consume the container logs differently. In the default configuration docker uses the `json-file` driver.\n\n# Maintenance\n\n## Backing up your container\n\nTo backup your configuration, follow these simple steps:\n\n### Step 1: Stop the currently running container\n\n```bash\ndocker stop apache\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose stop apache\n```\n\n### Step 2: Run the backup command\n\nWe need to mount two volumes in a container we will use to create the backup: a directory on your host to store the backup in, and the volumes from the container we just stopped so we can access the data.\n\n```bash\ndocker run --rm -v /path/to/apache-backups:/backups \\\n  --volumes-from apache busybox \\\n    cp -a /bitnami/apache /backups/latest\n```\n\nor using Docker Compose:\n\n```bash\ndocker run --rm -v /path/to/apache-backups:/backups \\\n  --volumes-from `docker-compose ps -q apache` busybox \\\n    cp -a /bitnami/apache /backups/latest\n```\n\n## Restoring a backup\n\nRestoring a backup is as simple as mounting the backup as volumes in the container.\n\n```bash\ndocker run -v /path/to/apache-backups/latest:/bitnami/apache bitnami/apache:latest\n```\n\nor using Docker Compose:\n\n```\napache:\n  image: bitnami/apache:latest\n  volumes:\n    - /path/to/apache-backups/latest:/bitnami/apache\n```\n\n## Upgrade this image\n\nBitnami provides up-to-date versions of Apache, including security patches, soon after they are made upstream. We recommend that you follow these steps to upgrade your container.\n\n### Step 1: Get the updated image\n\n```bash\ndocker pull bitnami/apache:latest\n```\n\nor if you're using Docker Compose, update the value of the image property to\n`bitnami/apache:latest`.\n\n### Step 2: Stop and backup the currently running container\n\nBefore continuing, you should backup your container's configuration and logs.\n\nFollow the steps on [creating a backup](#backing-up-your-container).\n\n### Step 3: Remove the currently running container\n\n```bash\ndocker rm -v apache\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose rm -v apache\n```\n\n### Step 4: Run the new image\n\nRe-create your container from the new image, [restoring your backup](#restoring-a-backup) if necessary.\n\n```bash\ndocker run --name apache bitnami/apache:latest\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose start apache\n```\n\n# Testing\n\nThis image is tested for expected runtime behavior, using the [Bats](https://github.com/sstephenson/bats) testing framework. You can run the tests on your machine using the `bats` command.\n\n```\nbats test.sh\n```\n\n# Notable Changes\n\n## 2.4.18-r0\n\n- All volumes have been merged at `/bitnami/apache`. Now you only need to mount a single volume at `/bitnami/apache` for persistence.\n- The logs are always sent to the `stdout` and are no longer collected in the volume.\n\n## 2.4.12-4-r01\n\n- The `/app` directory is no longer exported as a volume. This caused problems when building on top of the image, since changes in the volume are not persisted between Dockerfile `RUN` instructions. To keep the previous behavior (so that you can mount the volume in another container), create the container with the `-v /app` option.\n\n# Contributing\n\nWe'd love for you to contribute to this container. You can request new features by creating an [issue](https://github.com/bitnami/bitnami-docker-apache/issues), or submit a [pull request](https://github.com/bitnami/bitnami-docker-apache/pulls) with your contribution.\n\n# Issues\n\nIf you encountered a problem running this container, you can file an [issue](https://github.com/bitnami/bitnami-docker-apache/issues). For us to provide better support, be sure to include the following information in your issue:\n\n- Host OS and version\n- Docker version (`docker version`)\n- Output of `docker info`\n- Version of this container (`echo $BITNAMI_IMAGE_VERSION` inside the container)\n- The command you used to run the container, and any relevant output you saw (masking any sensitive information)\n\n# License\n\nCopyright (c) 2015-2016 Bitnami\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "dockerfile": "FROM gcr.io/stacksmith-images/ubuntu:14.04-r10\nMAINTAINER Bitnami <containers@bitnami.com>\n\nENV BITNAMI_IMAGE_VERSION=2.4.23-r6 \\\n    BITNAMI_APP_NAME=apache \\\n    BITNAMI_APP_USER=daemon\n\nRUN bitnami-pkg unpack apache-2.4.23-5 --checksum ce7996de3c2173a72ad742e7ad0b4d48a1947454d4e0001497be74f19f9aa74c\nRUN ln -sf /opt/bitnami/$BITNAMI_APP_NAME/htdocs /app\n\nENV PATH=/opt/bitnami/$BITNAMI_APP_NAME/sbin:/opt/bitnami/$BITNAMI_APP_NAME/bin:/opt/bitnami/common/bin:$PATH\n\nCOPY rootfs/ /\nENTRYPOINT [\"/app-entrypoint.sh\"]\nCMD [\"nami\", \"start\", \"--foreground\", \"apache\"]\n\nVOLUME [\"/bitnami/$BITNAMI_APP_NAME\"]\n\nWORKDIR /app\n\nEXPOSE 80 443\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      80
    ],
    "volume": [
      "[\"/bitnami/$BITNAMI_APP_NAME\"]"
    ],
    "run": [
      "bitnami-pkg unpack apache-2.4.23-5 --checksum ce7996de3c2173a72ad742e7ad0b4d48a1947454d4e0001497be74f19f9aa74c",
      "ln -sf /opt/bitnami/$BITNAMI_APP_NAME/htdocs /app"
    ],
    "workdir": [
      "/app"
    ],
    "from": "gcr.io/stacksmith-images/ubuntu:14.04-r10",
    "maintainer": "Bitnami <containers@bitnami.com>",
    "env": {
      "BITNAMI_IMAGE_VERSION": "2.4.23-r6",
      "": "",
      "BITNAMI_APP_NAME": "apache",
      "BITNAMI_APP_USER": "daemon",
      "PATH": "/opt/bitnami/$BITNAMI_APP_NAME/sbin:/opt/bitnami/$BITNAMI_APP_NAME/bin:/opt/bitnami/common/bin:$PATH"
    },
    "copy": "rootfs/ /",
    "entrypoint": "[\"/app-entrypoint.sh\"]",
    "cmd": "[\"nami\", \"start\", \"--foreground\", \"apache\"]"
  },
  "source_repository_url": "https://github.com/bitnami/bitnami-docker-apache.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/bitnami/bitnami-docker-apache",
  "docker_repository": "bitnami/apache",
  "docker_image": "bitnami/apache",
  "parameters_schema": {
    "BITNAMI_IMAGE_VERSION": {
      "default": "2.4.23-r6",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_APP_NAME": {
      "default": "apache",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_APP_USER": {
      "default": "daemon",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/opt/bitnami/$BITNAMI_APP_NAME/sbin:/opt/bitnami/$BITNAMI_APP_NAME/bin:/opt/bitnami/common/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "bitnami/apache",
  "revision": "development",
  "uris": [
    "https://hub.docker.com/r/bitnami/apache",
    "https://hub.docker.com/v2/repositories/bitnami/apache",
    "https://github.com/bitnami/bitnami-docker-apache.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Middleware/Web Server/Apache HTTP Server"
  ],
  "info_url": "https://hub.docker.com/r/bitnami/apache",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}