{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/axiom/docker-tomcat",
    "repository_url": "https://hub.docker.com/v2/repositories/axiom/docker-tomcat",
    "tags_url": "https://hub.docker.com/v2/repositories/axiom/docker-tomcat/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/axiom/docker-tomcat/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/axiom/docker-tomcat/autobuild",
    "user": "axiom",
    "name": "docker-tomcat",
    "namespace": "axiom",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 2,
    "pull_count": 295,
    "last_updated": "2016-07-07T18:13:22.747501Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 340696064,
        "id": 1549914,
        "repository": 444997,
        "creator": 491800,
        "last_updater": 491807,
        "last_updated": "2016-07-07T18:13:22.210432Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.0.36",
        "full_size": 340695855,
        "id": 3744479,
        "repository": 444997,
        "creator": 491807,
        "last_updater": 491807,
        "last_updated": "2016-07-07T18:06:17.182681Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8",
        "full_size": 340696274,
        "id": 3743973,
        "repository": 444997,
        "creator": 491807,
        "last_updater": 491807,
        "last_updated": "2016-07-07T17:58:56.509918Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.0",
        "full_size": 392888753,
        "id": 1549932,
        "repository": 444997,
        "creator": 491800,
        "last_updater": 491807,
        "last_updated": "2016-07-07T16:20:33.424516Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "axiom-data-science/docker-tomcat"
  },
  "name": "axiom/docker-tomcat Docker container",
  "description": "A feature full Tomcat (SSL over APR, etc.) running in Docker",
  "readme": "# Tomcat on Docker\n\nA feature full Tomcat (SSL over APR, etc.) running in Docker.\n\n### Versions\n\n### 8.0\n* `axiom/docker-tomcat:8.0.36` - [Dockerfile](https://github.com/axiom-data-science/docker-tomcat/blob/8.0.36/Dockerfile)\n\n### tl;dr\n\n**Quickstart**\n\n```bash\n$ docker run \\\n    -d \\\n    -p 80:8080 \\\n    -p 443:8443 \\\n    axiom/docker-tomcat\n```\n\n**Production**\n\n\n```bash\n$ docker run \\\n    -d \\\n    -p 80:8080 \\\n    -p 443:8443 \\\n    -v /path/to/your/ssl.crt:/opt/tomcat/conf/ssl.crt \\\n    -v /path/to/your/ssl.key:/opt/tomcat/conf/ssl.key \\\n    -v /path/to/your/tomcat-users.xml:/opt/tomcat/conf/tomcat-users.xml \\\n    --name tomcat \\\n    axiom/docker-tomcat\n```\n\n## Configuration\n\n### Ports\n\nTomcat runs with two ports open\n\n* 8080 - HTTP\n* 8443 - HTTPS\n\nMap the ports to local ports to access outside of the Docker ecosystem:\n```bash\n$ docker run \\\n    -p 80:8080 \\\n    -p 443:8443 \\\n    ... \\\n    axiom/docker-tomcat\n```\n\n### JVM\n\nBy default, the JVM is run with the [following options](https://github.com/axiom-data-science/docker-tomcat/blob/master/files/javaopts.sh):\n\n* `-server` - server optimized jvm\n* `-d64` - 64-bit jvm\n* `-Xms4G` - reserve 4g of RAM\n* `-Xmx4G` - use a max of 4g of RAM\n* `-XX:MaxPermSize=256m` - increase perm size\n* `-XX:+HeapDumpOnOutOfMemoryError` -  nice log dumps on out of memory errors\n* `-Djava.awt.headless=true` - headless (no monitor)\n\nA custom JVM options file may be used but must `export JAVA_OPTS` at the end\nand include any already defined `JAVA_OPTS`, like so:\n\n```bash\n#!/bin/sh\nNORMAL=\"-server -d64 -Xms16G -Xmx16G\"  # More memory\nMAX_PERM_GEN=\"-XX:MaxPermSize=128m\"    # Less Perm\nHEADLESS=\"-Djava.awt.headless=true\"    # Still headless\nJAVA_OPTS=\"$JAVA_OPTS $NORMAL $MAX_PERM_GEN $HEADLESS\"\nexport JAVA_OPTS\n```\n\nMount your own `javaopts.sh`:\n\n```bash\n$ docker run \\\n    -v /path/to/your/javaopts.sh:/opt/tomcat/bin/javaopts.sh \\\n    ... \\\n    axiom/docker-tomcat\n```\n\n### Users\n\nBy default, Tomcat will start with a single `admin` [user account](https://github.com/axiom-data-science/docker-tomcat/blob/master/files/tomcat-users.xml). The password is equal to the user name.\n\n**You need to mount your own `tomcat-users.xml` file with different SHA1 digested passwords**.\nIf not, anyone who reads this document and knows your server address will have admin Tomcat privileges.\n\nMount your own `tomcat-users.xml`:\n\n```bash\n$ docker run \\\n    -v /path/to/your/tomcat-users.xml:/opt/tomcat/conf/tomcat-users.xml \\\n    ... \\\n    axiom/docker-tomcat\n```\n\n### SSL\n\nBy default, Tomcat will start with a self-signed certificate valid for 3650 days.\nThis certificate **does not change on run**, so if you are serious about SSL, you\nshould mount your own private key and certificate files.\n\nMount your own `ssl.crt` and `ssl.key`:\n\n```bash\n$ docker run \\\n    -v /path/to/your/ssl.crt:/opt/tomcat/conf/ssl.crt \\\n    -v /path/to/your/ssl.key:/opt/tomcat/conf/ssl.key \\\n    ... \\\n    axiom/docker-tomcat\n```\n\nIf you want to disable SSL altogether, you will need to mount a [custom](https://github.com/axiom-data-science/docker-tomcat/blob/master/files/server.xml) `setup.xml`:\n\n```bash\n$ docker run \\\n    -v /path/to/your/setup.xml:/opt/tomcat/conf/setup.xml \\\n    ... \\\n    axiom/docker-tomcat\n```\n",
  "dockerfile": "FROM debian:jessie\nMAINTAINER Kyle Wilcox <kyle@axiomdatascience.com>\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install system dependencies\nENV OPENSSL_VERSION 1.0.2h-1\nRUN \\\n    echo \"deb http://httpredir.debian.org/debian unstable main\" | tee /etc/apt/sources.list.d/unstable.list && \\\n    { \\\n        echo 'Package: *'; \\\n        echo 'Pin: release a=unstable'; \\\n        echo 'Pin-Priority: -10'; \\\n        echo; \\\n        echo 'Package: openssl libssl*'; \\\n        echo \"Pin: version $OPENSSL_VERSION\"; \\\n        echo 'Pin-Priority: 990'; \\\n    } > /etc/apt/preferences.d/unstable-openssl && \\\n    echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\n    echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list && \\\n    echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list && \\\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 && \\\n    apt-get update && \\\n    apt-get install -y \\\n        curl \\\n        gcc \\\n        libapr1 \\\n        libapr1-dev \\\n        libreadline-dev \\\n        libssl-dev \\\n        libterm-readline-gnu-perl \\\n        make \\\n        openssl=\"$OPENSSL_VERSION\" \\\n        oracle-java8-installer \\\n        oracle-java8-set-default && \\\n    apt-get clean && \\\n    rm -rf /var/cache/oracle-jdk8-installer && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Tomcat keys - https://www.apache.org/dist/tomcat/tomcat-8/KEYS\nRUN \\\n    gpg --keyserver pool.sks-keyservers.net --recv-keys \\\n        05AB33110949707C93A279E3D3EFE6B686867BA6 \\\n        07E48665A34DCAFAE522E5E6266191C37C037D42 \\\n        47309207D818FFD8DCD3F83F1931D684307A10A5 \\\n        541FBE7D8F78B25E055DDEE13C370389288584E7 \\\n        61B832AC2F1C5A90F0F9B00A1C506407564C17A3 \\\n        79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED \\\n        9BA44C2621385CB966EBA586F72C284D731FABEE \\\n        A27677289986DB50844682F8ACB77FC2E86E29AC \\\n        A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 \\\n        DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 \\\n        F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE \\\n        F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\n\n# Apache native libraries (apr)\nENV APACHE_NATIVE_VERSION 1.2.8\nENV APACHE_NATIVE_URL https://www.apache.org/dist/tomcat/tomcat-connectors/native/$APACHE_NATIVE_VERSION/source/tomcat-native-$APACHE_NATIVE_VERSION-src.tar.gz\nRUN \\\n    curl -fSL \"$APACHE_NATIVE_URL\" -o native.tar.gz && \\\n    curl -fSL \"$APACHE_NATIVE_URL.asc\" -o native.tar.gz.asc && \\\n    gpg --verify native.tar.gz.asc && \\\n    tar zxf native.tar.gz -C /tmp && \\\n    cd /tmp/tomcat-native*-src/native/ && \\\n    ./configure \\\n        --with-apr=/usr/bin/apr-1-config \\\n        --with-java-home=/usr/lib/jvm/java-8-oracle \\\n        --with-ssl=yes \\\n        --libdir=/usr/lib/jni && \\\n    make && \\\n    make install && \\\n    apt-get purge -y \\\n        libssl-dev \\\n        libapr1-dev\n\n# Tomcat\nENV TOMCAT_MAJOR 8\nENV TOMCAT_VERSION 8.0.36\nENV TOMCAT_TGZ_URL https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\n\nENV CATALINA_HOME /opt/tomcat\nENV PATH $CATALINA_HOME/bin:$PATH\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n\nRUN \\\n    curl -fSL \"$TOMCAT_TGZ_URL\" -o tomcat.tar.gz && \\\n    curl -fSL \"$TOMCAT_TGZ_URL.asc\" -o tomcat.tar.gz.asc && \\\n    gpg --verify tomcat.tar.gz.asc && \\\n    tar -xvf tomcat.tar.gz --strip-components=1 && \\\n    rm bin/*.bat && \\\n    rm tomcat.tar.gz*\n\n# Run Tomcat as the 'tomcat' user\nRUN \\\n    groupadd -r tomcat -g 1000 && \\\n    useradd -u 1000 -r -g tomcat -d $CATALINA_HOME -s /bin/bash tomcat\n\n# Tomcat user helpers\nCOPY files/.bash_profile $CATALINA_HOME/.bash_profile\nCOPY files/.bash_logout $CATALINA_HOME/.bash_logout\n\n# Tomcat config\nCOPY files/setenv.sh $CATALINA_HOME/bin/setenv.sh\nCOPY files/javaopts.sh $CATALINA_HOME/bin/javaopts.sh\nCOPY files/server.xml $CATALINA_HOME/conf/server.xml\nCOPY files/tomcat-users.xml $CATALINA_HOME/conf/tomcat-users.xml\n\n# Create a self-signed certificate for Tomcat to use\nRUN \\\n    openssl req \\\n        -new \\\n        -newkey rsa:4096 \\\n        -days 3650 \\\n        -nodes \\\n        -x509 \\\n        -subj \"/C=US/ST=Alaska/L=Anchorage/O=Axiom Data Science/CN=tomcat.example.com\" \\\n        -keyout $CATALINA_HOME/conf/ssl.key \\\n        -out $CATALINA_HOME/conf/ssl.crt\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.9\nRUN set -x \\\n    apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* && \\\n    wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" && \\\n    wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" && \\\n    export GNUPGHOME=\"$(mktemp -d)\" && \\\n    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && \\\n    gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu && \\\n    rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc && \\\n    chmod +x /usr/local/bin/gosu && \\\n    gosu nobody true\n\nRUN chown -R tomcat:tomcat \"$CATALINA_HOME\"\n\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\n\nEXPOSE 8080 8443\nCMD [\"catalina.sh\", \"run\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      8080
    ],
    "volume": [],
    "run": [
      "    echo \"deb http://httpredir.debian.org/debian unstable main\" | tee /etc/apt/sources.list.d/unstable.list &&     {         echo 'Package: *';         echo 'Pin: release a=unstable';         echo 'Pin-Priority: -10';         echo;         echo 'Package: openssl libssl*';         echo \"Pin: version $OPENSSL_VERSION\";         echo 'Pin-Priority: 990';     } > /etc/apt/preferences.d/unstable-openssl &&     echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections &&     echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list &&     echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list &&     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 &&     apt-get update &&     apt-get install -y         curl         gcc         libapr1         libapr1-dev         libreadline-dev         libssl-dev         libterm-readline-gnu-perl         make         openssl=\"$OPENSSL_VERSION\"         oracle-java8-installer         oracle-java8-set-default &&     apt-get clean &&     rm -rf /var/cache/oracle-jdk8-installer &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*",
      "    gpg --keyserver pool.sks-keyservers.net --recv-keys         05AB33110949707C93A279E3D3EFE6B686867BA6         07E48665A34DCAFAE522E5E6266191C37C037D42         47309207D818FFD8DCD3F83F1931D684307A10A5         541FBE7D8F78B25E055DDEE13C370389288584E7         61B832AC2F1C5A90F0F9B00A1C506407564C17A3         79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED         9BA44C2621385CB966EBA586F72C284D731FABEE         A27677289986DB50844682F8ACB77FC2E86E29AC         A9C5DF4D22E99998D9875A5110C01C5A2F6059E7         DCFD35E0BF8CA7344752DE8B6FB21E8933C60243         F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE         F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23",
      "    curl -fSL \"$APACHE_NATIVE_URL\" -o native.tar.gz &&     curl -fSL \"$APACHE_NATIVE_URL.asc\" -o native.tar.gz.asc &&     gpg --verify native.tar.gz.asc &&     tar zxf native.tar.gz -C /tmp &&     cd /tmp/tomcat-native*-src/native/ &&     ./configure         --with-apr=/usr/bin/apr-1-config         --with-java-home=/usr/lib/jvm/java-8-oracle         --with-ssl=yes         --libdir=/usr/lib/jni &&     make &&     make install &&     apt-get purge -y         libssl-dev         libapr1-dev",
      "mkdir -p \"$CATALINA_HOME\"",
      "    curl -fSL \"$TOMCAT_TGZ_URL\" -o tomcat.tar.gz &&     curl -fSL \"$TOMCAT_TGZ_URL.asc\" -o tomcat.tar.gz.asc &&     gpg --verify tomcat.tar.gz.asc &&     tar -xvf tomcat.tar.gz --strip-components=1 &&     rm bin/*.bat &&     rm tomcat.tar.gz*",
      "    groupadd -r tomcat -g 1000 &&     useradd -u 1000 -r -g tomcat -d $CATALINA_HOME -s /bin/bash tomcat",
      "    openssl req         -new         -newkey rsa:4096         -days 3650         -nodes         -x509         -subj \"/C=US/ST=Alaska/L=Anchorage/O=Axiom Data Science/CN=tomcat.example.com\"         -keyout $CATALINA_HOME/conf/ssl.key         -out $CATALINA_HOME/conf/ssl.crt",
      "set -x     apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* &&     wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" &&     wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 &&     gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu &&     rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc &&     chmod +x /usr/local/bin/gosu &&     gosu nobody true",
      "chown -R tomcat:tomcat \"$CATALINA_HOME\""
    ],
    "workdir": [
      "$CATALINA_HOME"
    ],
    "from": "debian:jessie",
    "maintainer": "Kyle Wilcox <kyle@axiomdatascience.com>",
    "env": {
      "DEBIAN_FRONTEND": "noninteractive",
      "OPENSSL_VERSION": "1.0.2h-1",
      "APACHE_NATIVE_VERSION": "1.2.8",
      "APACHE_NATIVE_URL": "https://www.apache.org/dist/tomcat/tomcat-connectors/native/$APACHE_NATIVE_VERSION/source/tomcat-native-$APACHE_NATIVE_VERSION-src.tar.gz",
      "TOMCAT_MAJOR": "8",
      "TOMCAT_VERSION": "8.0.36",
      "TOMCAT_TGZ_URL": "https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz",
      "CATALINA_HOME": "/opt/tomcat",
      "PATH": "$CATALINA_HOME/bin:$PATH",
      "GOSU_VERSION": "1.9"
    },
    "copy": "entrypoint.sh /",
    "entrypoint": "[\"/entrypoint.sh\"]",
    "cmd": "[\"catalina.sh\", \"run\"]"
  },
  "source_repository_url": "https://github.com/axiom-data-science/docker-tomcat.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/axiom-data-science/docker-tomcat",
  "docker_repository": "axiom/docker-tomcat",
  "docker_image": "axiom/docker-tomcat",
  "parameters_schema": {
    "DEBIAN_FRONTEND": {
      "default": "noninteractive",
      "type": "string",
      "mapping": "environment_variable"
    },
    "OPENSSL_VERSION": {
      "default": "1.0.2h-1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "APACHE_NATIVE_VERSION": {
      "default": "1.2.8",
      "type": "string",
      "mapping": "environment_variable"
    },
    "APACHE_NATIVE_URL": {
      "default": "https://www.apache.org/dist/tomcat/tomcat-connectors/native/$APACHE_NATIVE_VERSION/source/tomcat-native-$APACHE_NATIVE_VERSION-src.tar.gz",
      "type": "string",
      "mapping": "environment_variable"
    },
    "TOMCAT_MAJOR": {
      "default": "8",
      "type": "string",
      "mapping": "environment_variable"
    },
    "TOMCAT_VERSION": {
      "default": "8.0.36",
      "type": "string",
      "mapping": "environment_variable"
    },
    "TOMCAT_TGZ_URL": {
      "default": "https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz",
      "type": "string",
      "mapping": "environment_variable"
    },
    "CATALINA_HOME": {
      "default": "/opt/tomcat",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "$CATALINA_HOME/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "GOSU_VERSION": {
      "default": "1.9",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        8080
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "axiom/docker-tomcat",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/axiom/docker-tomcat",
    "https://hub.docker.com/v2/repositories/axiom/docker-tomcat",
    "https://github.com/axiom-data-science/docker-tomcat.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Application Server/Tomcat"
  ],
  "info_url": "https://hub.docker.com/r/axiom/docker-tomcat",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}