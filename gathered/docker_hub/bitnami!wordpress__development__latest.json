{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/bitnami/wordpress",
    "repository_url": "https://hub.docker.com/v2/repositories/bitnami/wordpress",
    "tags_url": "https://hub.docker.com/v2/repositories/bitnami/wordpress/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/bitnami/wordpress/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/bitnami/wordpress/autobuild",
    "user": "bitnami",
    "name": "wordpress",
    "namespace": "bitnami",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 16,
    "pull_count": 61684,
    "last_updated": "2016-10-17T10:16:18.064953Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "development",
        "full_size": 155668855,
        "id": 3127518,
        "repository": 331794,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-10-17T10:16:17.706850Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "_",
        "full_size": 155669943,
        "id": 5450955,
        "repository": 331794,
        "creator": 342683,
        "last_updater": 342683,
        "last_updated": "2016-10-17T08:35:41.063660Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "latest",
        "full_size": 155669227,
        "id": 958177,
        "repository": 331794,
        "creator": 448179,
        "last_updater": 257375,
        "last_updated": "2016-09-24T20:00:15.352183Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "4.6.1-r2",
        "full_size": 155669206,
        "id": 5049601,
        "repository": 331794,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-24T19:56:26.134912Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "4.6.1-r1",
        "full_size": 149659914,
        "id": 4871540,
        "repository": 331794,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-15T16:27:15.151064Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "4.6.1-r0",
        "full_size": 149660229,
        "id": 4755916,
        "repository": 331794,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-09T07:33:52.312204Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "4.6-r2",
        "full_size": 149518093,
        "id": 4713564,
        "repository": 331794,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-07T13:22:35.261168Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "4.6-r1",
        "full_size": 147548724,
        "id": 4636359,
        "repository": 331794,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-01T23:04:31.913911Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "4.6-r0",
        "full_size": 147547580,
        "id": 4483083,
        "repository": 331794,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-08-24T11:45:36.879034Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "4.5.3-r0",
        "full_size": 142885419,
        "id": 3845655,
        "repository": 331794,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-07-14T16:42:41.688154Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "bitnami/bitnami-docker-wordpress"
  },
  "name": "bitnami/wordpress Docker container",
  "description": "Bitnami Docker Image for WordPress",
  "readme": "[![CircleCI](https://circleci.com/gh/bitnami/bitnami-docker-wordpress/tree/master.svg?style=shield)](https://circleci.com/gh/bitnami/bitnami-docker-wordpress/tree/master)\n[![Docker Hub Automated Build](http://container.checkforupdates.com/badges/bitnami/wordpress)](https://hub.docker.com/r/bitnami/wordpress/)\n\n# What is WordPress?\n\n> WordPress is one of the most versatile open source content management systems on the market. WordPress is built for high performance and is scalable to many servers, has easy integration via REST, JSON, SOAP and other formats, and features a whopping 15,000 plugins to extend and customize the application for just about any type of website.\n\nhttps://www.wordpress.org/\n\n# Prerequisites\n\nTo run this application you need [Docker Engine](https://www.docker.com/products/docker-engine) >= `1.10.0`. [Docker Compose](https://www.docker.com/products/docker-compose) is recommended with a version `1.6.0` or later.\n\n# How to use this image\n\nWordPress requires access to a MySQL database or MariaDB database to store information. We'll use our very own [MariaDB image](https://www.github.com/bitnami/bitnami-docker-mariadb) for the database requirements.\n\n## Using Docker Compose\n\nThe recommended way to run WordPress is using Docker Compose using the following `docker-compose.yml` template:\n\n```yaml\nversion: '2'\n\nservices:\n  mariadb:\n    image: bitnami/mariadb:latest\n    volumes:\n      - mariadb_data:/bitnami/mariadb\n  wordpress:\n    image: bitnami/wordpress:latest\n    depends_on:\n      - mariadb\n    ports:\n      - '80:80'\n      - '443:443'\n    volumes:\n      - wordpress_data:/bitnami/wordpress\n      - apache_data:/bitnami/apache\n      - php_data:/bitnami/php\n\nvolumes:\n  mariadb_data:\n    driver: local\n  wordpress_data:\n    driver: local\n  apache_data:\n    driver: local\n  php_data:\n    driver: local\n```\n\nLaunch the containers using:\n\n```bash\n$ docker-compose up -d\n```\n\n## Using the Docker Command Line\n\nIf you want to run the application manually instead of using `docker-compose`, these are the basic steps you need to run:\n\n1. Create a network\n\n```bash\n$ docker network create wordpress-tier\n```\n\n2. Create a volume for MariaDB persistence and create a MariaDB container\n\n```bash\n$ docker volume create --name mariadb_data\n$ docker run -d --name mariadb \\\n  --net wordpress-tier \\\n  --volume mariadb_data:/bitnami/mariadb \\\n  bitnami/mariadb:latest\n```\n\n3. Create volumes for WordPress persistence and launch the container\n\n```bash\n$ docker volume create --name wordpress_data\n$ docker volume create --name apache_data\n$ docker run -d --name wordpress -p 80:80 -p 443:443 \\\n  --net wordpress-tier \\\n  --volume wordpress_data:/bitnami/wordpress \\\n  --volume apache_data:/bitnami/apache \\\n  --volume php_data:/bitnami/php \\\n  bitnami/wordpress:latest\n```\n\nAccess your application at http://your-ip/\n\n## Persisting your application\n\nFor persistence of the WordPress deployment, the above examples define docker volumes namely `mariadb_data`, `wordpress_data` and `apache_data`. The WordPress application state will persist as long as these volumes are not removed.\n\nIf avoid inadvertent removal of these volumes you can [mount host directories as data volumes](https://docs.docker.com/engine/userguide/containers/dockervolumes/#mount-a-host-directory-as-a-data-volume). Alternatively you can make use of volume plugins to host the volume data.\n\n### Mount host directories as data volumes with Docker Compose\n\nThe following `docker-compose.yml` template demonstrates the use of host directories as data volumes.\n\n```yaml\nversion: '2'\n\nservices:\n  mariadb:\n    image: bitnami/mariadb:latest\n    volumes:\n      - /path/to/mariadb-persistence:/bitnami/mariadb\n  wordpress:\n    image: bitnami/wordpress:latest\n    depends_on:\n      - mariadb\n    ports:\n      - '80:80'\n      - '443:443'\n    volumes:\n      - /path/to/wordpress-persistence:/bitnami/wordpress\n      - /path/to/apache-persistence:/bitnami/apache\n      - /path/to/php-persistence:/bitnami/php\n```\n\n### Mount host directories as data volumes using the Docker command line\n\n1. Create a network (if it does not exist)\n\n```bash\n$ docker network create wordpress-tier\n```\n\n2. Create a MariaDB container with host volume\n\n```bash\n$ docker run -d --name mariadb \\\n  --net wordpress-tier \\\n  --volume /path/to/mariadb-persistence:/bitnami/mariadb \\\n  bitnami/mariadb:latest\n```\n\n3. Create the WordPress the container with host volumes\n\n```bash\n$ docker run -d --name wordpress -p 80:80 -p 443:443 \\\n  --net wordpress-tier \\\n  --volume /path/to/wordpress-persistence:/bitnami/wordpress \\\n  --volume /path/to/apache-persistence:/bitnami/apache \\\n  --volume /path/to/php-persistence:/bitnami/php \\\n  bitnami/wordpress:latest\n```\n\n# Upgrading WordPress\n\nBitnami provides up-to-date versions of MariaDB and WordPress, including security patches, soon after they are made upstream. We recommend that you follow these steps to upgrade your container. We will cover here the upgrade of the WordPress container. For the MariaDB upgrade see https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#upgrade-this-image\n\nThe `bitnami/wordpress:latest` tag always points to the most recent release. To get the most recent release you can simple repull the `latest` tag from the Docker Hub with `docker pull bitnami/wordpress:latest`. However it is recommended to use [tagged versions](https://hub.docker.com/r/bitnami/wordpress/tags/).\n\nGet the updated image:\n\n```\n$ docker pull bitnami/wordpress:latest\n```\n\n## Using Docker Compose\n\n1. Stop the running WordPress container\n\n```bash\n$ docker-compose stop wordpress\n```\n\n2. Remove the stopped container\n\n```bash\n$ docker-compose rm wordpress\n```\n\n3. Launch the updated WordPress image\n\n```bash\n$ docker-compose start wordpress\n```\n\n## Using Docker command line\n\n1. Stop the running WordPress container\n\n```bash\n$ docker stop wordpress\n```\n\n2. Remove the stopped container\n\n```bash\n$ docker rm wordpress\n```\n\n3. Launch the updated WordPress image\n\n```bash\n$ docker run -d --name wordpress -p 80:80 -p 443:443 \\\n  --net wordpress-tier \\\n  --volume wordpress_data:/bitnami/wordpress \\\n  --volume apache_data:/bitnami/apache \\\n  --volume php_data:/bitnami/php \\\n  bitnami/wordpress:latest\n```\n\n> **NOTE**:\n>\n> The above command assumes that local docker volumes are in use. Edit the command according to your usage.\n\n# Configuration\n\n## Environment variables\n\nThe WordPress instance can be customized by specifying environment variables on the first run. The following environment values are provided to custom WordPress:\n\n- `WORDPRESS_USERNAME`: WordPress application username. Default: **user**\n- `WORDPRESS_PASSWORD`: WordPress application password. Default: **bitnami**\n- `WORDPRESS_EMAIL`: WordPress application email. Default: **user@example.com**\n- `WORDPRESS_FIRST_NAME`: WordPress user first name. Default: **FirstName**\n- `WORDPRESS_LAST_NAME`: WordPress user last name. Default: **LastName**\n- `WORDPRESS_BLOG_NAME`: WordPress blog name. Default: **User's blog**\n- `MARIADB_USER`: Root user for the MariaDB database. Default: **root**\n- `MARIADB_PASSWORD`: Root password for the MariaDB.\n- `MARIADB_HOST`: Hostname for MariaDB server. Default: **mariadb**\n- `MARIADB_PORT`: Port used by MariaDB server. Default: **3306**\n\n### Specifying Environment variables using Docker Compose\n\n```yaml\nversion: '2'\n\nservices:\n  mariadb:\n    image: bitnami/mariadb:latest\n    volumes:\n      - mariadb_data:/bitnami/mariadb\n  wordpress:\n    image: bitnami/wordpress:latest\n    depends_on:\n      - mariadb\n    ports:\n      - '80:80'\n      - '443:443'\n    environment:\n      - WORDPRESS_PASSWORD=my_password\n    volumes:\n      - wordpress_data:/bitnami/wordpress\n      - apache_data:/bitnami/apache\n      - php_data:/bitnami/php\n\nvolumes:\n  mariadb_data:\n    driver: local\n  wordpress_data:\n    driver: local\n  apache_data:\n    driver: local\n  php_data:\n    driver: local\n```\n\n### Specifying Environment variables on the Docker command line\n\n```bash\n$ docker run -d --name wordpress -p 80:80 -p 443:443 \\\n  --net wordpress-tier \\\n  --env WORDPRESS_PASSWORD=my_password \\\n  --volume wordpress_data:/bitnami/wordpress \\\n  --volume apache_data:/bitnami/apache \\\n  --volume php_data:/bitnami/php \\\n  bitnami/wordpress:latest\n```\n\n### SMTP Configuration\n\nTo configure WordPress to send email using SMTP you can set the following environment variables:\n- `SMTP_HOST`: Host for outgoing SMTP email.\n- `SMTP_PORT`: Port for outgoing SMTP email.\n- `SMTP_USER`: User of SMTP used for authentication (likely email).\n- `SMTP_PASSWORD`: Password for SMTP.\n- `SMTP_USERNAME`: User name for SMTP emails.\n- `SMTP_PROTOCOL`: Secure connection protocol to use for SMTP [tls, ssl, none].\n\nThis would be an example of SMTP configuration using a GMail account:\n\n * docker-compose (application part):\n\n```\n  application:\n    image: bitnami/wordpress:latest\n    ports:\n      - 80:80\n    environment:\n      - SMTP_HOST=smtp.gmail.com\n      - SMTP_PORT=587\n      - SMTP_USER=your_email@gmail.com\n      - SMTP_PASSWORD=your_password\n      - SMTP_PROTOCOL=tls\n    volumes_from:\n      - application_data\n```\n\n* For manual execution:\n\n```\n $ docker run -d -e SMTP_HOST=smtp.gmail.com -e SMTP_PORT=587 -e SMTP_USER=your_email@gmail.com -e SMTP_PASSWORD=your_password -p 80:80 --name wordpress -v /your/local/path/bitnami/wordpress:/bitnami/wordpress --net=wordpress_network bitnami/wordpress\n```\n\n# Backing up your application\n\nTo backup your application data follow these steps:\n\n## Backing up using Docker Compose\n\n1. Stop the WordPress container:\n\n```bash\n$ docker-compose stop wordpress\n```\n\n2. Copy the WordPress, PHP and Apache data\n\n```bash\n$ docker cp $(docker-compose ps -q wordpress):/bitnami/wordpress/ /path/to/backups/wordpress/latest/\n$ docker cp $(docker-compose ps -q wordpress):/bitnami/apache/ /path/to/backups/apache/latest/\n$ docker cp $(docker-compose ps -q wordpress):/bitnami/php/ /path/to/backups/php/latest/\n```\n\n3. Start the WordPress container\n\n```bash\n$ docker-compose start wordpress\n```\n\n## Backing up using the Docker command line\n\n1. Stop the WordPress container:\n\n```bash\n$ docker stop wordpress\n```\n\n2. Copy the WordPress, PHP and Apache data\n\n```bash\n$ docker cp wordpress:/bitnami/wordpress/ /path/to/backups/wordpress/latest/\n$ docker cp wordpress:/bitnami/apache/ /path/to/backups/apache/latest/\n$ docker cp wordpress:/bitnami/php/ /path/to/backups/php/latest/\n```\n\n3. Start the WordPress container\n\n```bash\n$ docker start wordpress\n```\n\n# Restoring a backup\n\nTo restore your application using backed up data simply mount the folder with WordPress and Apache data in the container. See [persisting your application](#persisting-your-application) section for more info.\n\n# Contributing\n\nWe'd love for you to contribute to this container. You can request new features by creating an [issue](https://github.com/bitnami/bitnami-docker-wordpress/issues), or submit a [pull request](https://github.com/bitnami/bitnami-docker-wordpress/pulls) with your contribution.\n\n# Issues\n\nIf you encountered a problem running this container, you can file an [issue](https://github.com/bitnami/bitnami-docker-wordpress/issues). For us to provide better support, be sure to include the following information in your issue:\n\n- Host OS and version\n- Docker version (`docker version`)\n- Output of `docker info`\n- Version of this container (`echo $BITNAMI_IMAGE_VERSION` inside the container)\n- The command you used to run the container, and any relevant output you saw (masking any sensitive information)\n\n# License\n\nCopyright (c) 2015-2016 Bitnami\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "dockerfile": "FROM gcr.io/stacksmith-images/ubuntu:14.04-r10\n\nMAINTAINER Bitnami <containers@bitnami.com>\n\nENV BITNAMI_APP_NAME=wordpress \\\n    BITNAMI_IMAGE_VERSION=4.6.1-r2 \\\n    PATH=/opt/bitnami/php/bin:/opt/bitnami/mysql/bin/:$PATH\n\n# Additional modules required\nRUN bitnami-pkg unpack apache-2.4.23-5 --checksum ce7996de3c2173a72ad742e7ad0b4d48a1947454d4e0001497be74f19f9aa74c\nRUN bitnami-pkg unpack php-5.6.26-1 --checksum b7a72ae78f9b19352bd400dfe027465c88a8643c0e5d9753f8d12f4ebae542a2\nRUN bitnami-pkg install libphp-5.6.26-1 --checksum 327d070f57727f2ed4f0246d0e3f61c5a94f6366d21a7e7e4572fe6c9c8e8c2d\nRUN bitnami-pkg install mysql-client-10.1.13-4 --checksum 14b45c91dd78b37f0f2366712cbe9bfdf2cb674769435611955191a65dbf4976\n\n# Install wordpress\nRUN bitnami-pkg unpack wordpress-4.6.1-1 --checksum 267546b81cf14d90e4726cd89afa3a17ad99e8ac280e4c993ae81b99c43a1338\n\nCOPY rootfs /\n\nVOLUME [\"/bitnami/wordpress\", \"/bitnami/apache\", \"/bitnami/php\"]\n\nEXPOSE 80 443\n\nENTRYPOINT [\"/app-entrypoint.sh\"]\n\nCMD [\"nami\", \"start\", \"--foreground\", \"apache\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      80
    ],
    "volume": [
      "[\"/bitnami/wordpress\", \"/bitnami/apache\", \"/bitnami/php\"]"
    ],
    "run": [
      "bitnami-pkg unpack apache-2.4.23-5 --checksum ce7996de3c2173a72ad742e7ad0b4d48a1947454d4e0001497be74f19f9aa74c",
      "bitnami-pkg unpack php-5.6.26-1 --checksum b7a72ae78f9b19352bd400dfe027465c88a8643c0e5d9753f8d12f4ebae542a2",
      "bitnami-pkg install libphp-5.6.26-1 --checksum 327d070f57727f2ed4f0246d0e3f61c5a94f6366d21a7e7e4572fe6c9c8e8c2d",
      "bitnami-pkg install mysql-client-10.1.13-4 --checksum 14b45c91dd78b37f0f2366712cbe9bfdf2cb674769435611955191a65dbf4976",
      "bitnami-pkg unpack wordpress-4.6.1-1 --checksum 267546b81cf14d90e4726cd89afa3a17ad99e8ac280e4c993ae81b99c43a1338"
    ],
    "workdir": [],
    "from": "gcr.io/stacksmith-images/ubuntu:14.04-r10",
    "maintainer": "Bitnami <containers@bitnami.com>",
    "env": {
      "BITNAMI_APP_NAME": "wordpress",
      "": "",
      "BITNAMI_IMAGE_VERSION": "4.6.1-r2",
      "PATH": "/opt/bitnami/php/bin:/opt/bitnami/mysql/bin/:$PATH"
    },
    "copy": "rootfs /",
    "entrypoint": "[\"/app-entrypoint.sh\"]",
    "cmd": "[\"nami\", \"start\", \"--foreground\", \"apache\"]"
  },
  "source_repository_url": "git@github.com:bitnami/bitnami-docker-wordpress.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/bitnami/bitnami-docker-wordpress",
  "docker_repository": "bitnami/wordpress",
  "docker_image": "bitnami/wordpress",
  "parameters_schema": {
    "BITNAMI_APP_NAME": {
      "default": "wordpress",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_IMAGE_VERSION": {
      "default": "4.6.1-r2",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/opt/bitnami/php/bin:/opt/bitnami/mysql/bin/:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "bitnami/wordpress",
  "revision": "development",
  "uris": [
    "https://hub.docker.com/r/bitnami/wordpress",
    "https://hub.docker.com/v2/repositories/bitnami/wordpress",
    "git@github.com:bitnami/bitnami-docker-wordpress.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Image/Container Image/Docker Image"
  ],
  "info_url": "https://hub.docker.com/r/bitnami/wordpress",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}