{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/_/vault",
    "repository_url": "https://hub.docker.com/v2/repositories/library/vault",
    "tags_url": "https://hub.docker.com/v2/repositories/library/vault/tags",
    "user": "library",
    "name": "vault",
    "namespace": "library",
    "status": 1,
    "is_private": false,
    "is_automated": false,
    "star_count": 60,
    "pull_count": 141075,
    "last_updated": "2016-10-05T21:14:05.523634Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "0.6.1",
        "full_size": 14626750,
        "id": 4447429,
        "repository": 812489,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-05T21:14:05.264935Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 14979465,
        "id": 3953347,
        "repository": 812489,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-05T21:13:51.986841Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "0.6.2",
        "full_size": 14979465,
        "id": 5261798,
        "repository": 812489,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-05T21:13:42.670735Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "0.6",
        "full_size": 14979465,
        "id": 4447425,
        "repository": 812489,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-05T21:13:36.872109Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "0.6.0",
        "full_size": 14261113,
        "id": 4447408,
        "repository": 812489,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-05T21:13:12.214459Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v0.6.0",
        "full_size": 14258210,
        "id": 3953321,
        "repository": 812489,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-07-22T03:01:59.474129Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ]
  },
  "docker_image": "vault",
  "name": "vault Docker container",
  "description": "Vault is a tool for securely accessing secrets via a unified interface and tight access control.",
  "readme": "# Supported tags and respective `Dockerfile` links\n\n-\t[`0.6.0` (*0.6/Dockerfile*)](https://github.com/hashicorp/docker-vault/blob/3d12aa78cdbdce22b3d3e30f1093843f21b0a8fa/0.6/Dockerfile)\n-\t[`0.6`, `0.6.2`, `latest` (*0.6.2/Dockerfile*)](https://github.com/hashicorp/docker-vault/blob/3d3957180d689ecddb537aa799a878171280e8a3/0.6.2/Dockerfile)\n-\t[`0.6.1` (*0.6.1/Dockerfile*)](https://github.com/hashicorp/docker-vault/blob/3d12aa78cdbdce22b3d3e30f1093843f21b0a8fa/0.6.1/Dockerfile)\n\nFor more information about this image and its history, please see [the relevant manifest file (`library/vault`)](https://github.com/docker-library/official-images/blob/master/library/vault). This image is updated via [pull requests to the `docker-library/official-images` GitHub repo](https://github.com/docker-library/official-images/pulls?q=label%3Alibrary%2Fvault).\n\nFor detailed information about the virtual/transfer sizes and individual layers of each of the above supported tags, please see [the `repos/vault/tag-details.md` file](https://github.com/docker-library/repo-info/blob/master/repos/vault/tag-details.md) in [the `docker-library/repo-info` GitHub repo](https://github.com/docker-library/repo-info).\n\n# Vault\n\nVault is a tool for securely accessing secrets. A secret is anything that you want to tightly control access to, such as API keys, passwords, certificates, and more. Vault provides a unified interface to any secret, while providing tight access control and recording a detailed audit log. For more information, please see:\n\n-\t[Vault documentation](https://www.vaultproject.io/)\n-\t[Vault on GitHub](https://github.com/hashicorp/vault)\n\n![logo](https://raw.githubusercontent.com/docker-library/docs/726714ced14b1e14b6dd99fc82f20f14f1d3cfb1/vault/logo.png)\n\n# Using the Container\n\nWe chose Alpine as a lightweight base with a reasonably small surface area for security concerns, but with enough functionality for development and interactive debugging.\n\nVault always runs under [dumb-init](https://github.com/Yelp/dumb-init), which handles reaping zombie processes and forwards signals on to all processes running in the container. This binary is built by HashiCorp and signed with our [GPG key](https://www.hashicorp.com/security.html), so you can verify the signed package used to build a given base image.\n\nRunning the Vault container with no arguments will give you a Vault server in [development mode](https://www.vaultproject.io/docs/concepts/dev-server.html). The provided entry point script will also look for Vault subcommands and run `vault` with that subcommand. For example, you can execute `docker run vault\nstatus` and it will run the `vault status` command inside the container. The entry point also adds some special configuration options as detailed in the sections below when running the `server` subcommand. Any other command gets `exec`-ed inside the container under `dumb-init`.\n\nThe container exposes two optional `VOLUME`s:\n\n-\t`/vault/logs`, to use for writing persistent audit logs. By default nothing is written here; the `file` audit backend must be enabled with a path under this directory.\n-\t`/vault/file`, to use for writing persistent storage data when using the`file` data storage plugin. By default nothing is written here (a `dev` server uses an in-memory data store); the `file` data storage backend must be enabled in Vault's configuration before the container is started.\n\nThe container has a Vault configuration directory set up at `/vault/config` and the server will load any HCL or JSON configuration files placed here by binding a volume or by composing a new image and adding files. Alternatively, configuration can be added by passing the configuration JSON via environment variable `VAULT_LOCAL_CONFIG`. Please note that due to a bug in the current release of Vault (0.6.0), you should *not* use the name `local.json` for any configuration file in this directory.\n\n## Running Vault for Development\n\n```console\n$ docker run -d --name=dev-vault vault\n```\n\nThis runs a completely in-memory Vault server, which is useful for development but should not be used in production.\n\nWhen running in development mode, two additional options can be set via environment variables:\n\n-\t`VAULT_DEV_ROOT_TOKEN_ID`: This sets the ID of the initial generated root token to the given value\n-\t`VAULT_DEV_LISTEN_ADDRESS`: This sets the IP:port of the development server listener\n\nAs an example:\n\n```console\n$ docker run -e 'VAULT_DEV_ROOT_TOKEN_ID=myroot' -e 'VAULT_DEV_LISTEN_ADDRESS=127.0.0.1:1234' vault\n```\n\n## Running Vault in Server Mode\n\n```console\n$ docker run --cap-add=IPC_LOCK  -e 'VAULT_LOCAL_CONFIG={\"backend\": {\"file\": {\"path\": \"/vault/file\"}}, \"default_lease_ttl\": \"168h\", \"max_lease_ttl\": \"720h\"}' vault server\n```\n\nThis runs a Vault server using the `file` storage backend at path `/vault/file`, with a default secret lease duration of one week and a maximum of 30 days.\n\nNote the `--cap-add=IPC_LOCK`: this is required in order for Vault to lock memory, which prevents it from being swapped to disk. This is highly recommended. In a non-development environment, if you do not wish to use this functionality, you must add `\"disable_mlock: true\"` to the configuration information.\n\nAt startup, the server will read configuration HCL and JSON files from `/vault/config` (any information passed into `VAULT_LOCAL_CONFIG` is written into `local.json` in this directory and read as part of reading the directory for configuration files). Please see Vault's [configuration documentation](https://www.vaultproject.io/docs/config/index.html) for a full list of options.\n\n# License\n\nView [license information](https://raw.githubusercontent.com/hashicorp/vault/master/LICENSE) for the software contained in this image.\n\n# Supported Docker versions\n\nThis image is officially supported on Docker version 1.12.2.\n\nSupport for older versions (down to 1.6) is provided on a best-effort basis.\n\nPlease see [the Docker installation documentation](https://docs.docker.com/installation/) for details on how to upgrade your Docker daemon.\n\n# User Feedback\n\n## Issues\n\nIf you have any problems with or questions about this image, please contact us through a [GitHub issue](https://github.com/hashicorp/docker-vault/issues). If the issue is related to a CVE, please check for [a `cve-tracker` issue on the `official-images` repository first](https://github.com/docker-library/official-images/issues?q=label%3Acve-tracker).\n\nYou can also reach many of the official image maintainers via the `#docker-library` IRC channel on [Freenode](https://freenode.net).\n\n## Contributing\n\nYou are invited to contribute new features, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.\n\nBefore you start to code, we recommend discussing your plans through a [GitHub issue](https://github.com/hashicorp/docker-vault/issues), especially for more ambitious contributions. This gives other contributors a chance to point you in the right direction, give you feedback on your design, and help you find out if someone else is working on the same thing.\n\n## Documentation\n\nDocumentation for this image is stored in the [`vault/` directory](https://github.com/docker-library/docs/tree/master/vault) of the [`docker-library/docs` GitHub repo](https://github.com/docker-library/docs). Be sure to familiarize yourself with the [repository's `README.md` file](https://github.com/docker-library/docs/blob/master/README.md) before attempting a pull request.",
  "type": "docker",
  "docker_name": "vault",
  "revision": "0.6.1",
  "uris": [
    "https://hub.docker.com/r/_/vault",
    "https://hub.docker.com/v2/repositories/library/vault"
  ],
  "labels": [
    "Docker"
  ],
  "info_url": "https://hub.docker.com/r/_/vault",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}