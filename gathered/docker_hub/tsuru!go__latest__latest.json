{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/tsuru/go",
    "repository_url": "https://hub.docker.com/v2/repositories/tsuru/go",
    "tags_url": "https://hub.docker.com/v2/repositories/tsuru/go/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/tsuru/go/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/tsuru/go/autobuild",
    "user": "tsuru",
    "name": "go",
    "namespace": "tsuru",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 887,
    "last_updated": "2016-10-17T12:36:59.679589Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 465397542,
        "id": 1364098,
        "repository": 406294,
        "creator": 205081,
        "last_updater": 114,
        "last_updated": "2016-10-17T12:36:59.312115Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "tsuru/platforms"
  },
  "name": "tsuru/go Docker container",
  "description": "Image for the Go platform in tsuru PaaS.",
  "readme": "#Go platform\n\nThe Go platform supports two kinds of deployment: binary deployment and code\ndeployment, where tsuru will build your application in the target.\n\n##Binary deployment\n\nFor binary deployment, ensure your binary is named \"tsuru-app\" (``go build -o\ntsuru-app`` should do the trick) and matches the target platform (usually\nlinux_amd64), you can have a customized name if you also deploy a Procfile,\nsomething like:\n\n\t% ls\n\tProcfile main.go\n\t% GOOS=linux GOARCH=amd64 go build -o myapp main.go\n\t% cat Procfile\n\tweb: ./myapp\n\t% tsuru app-deploy -a [app-name] myapp Procfile\n\n##Code deployment\n\nIf you just run a ``git push`` of your code, tsuru will try to download all of\nyour dependencies using ``go get`` and build your application. You can\ncustomize this behavior, see the next section for more details.\n\nSuppose that you have this code structure:\n\n\t% ls\n\tmain.go\n\t% cat main.go\n\t# some code that starts a \"hello world\" webserver\n\t% git add main.go\n\t% git commit -m \"add my webserver\"\n\t% git push tsuru master\n\nAfter invoking ``git push``, tsuru will receive your code and tell the platform\nto follow the setup process, that will:\n\n- download all the dependencies using ``go get``\n- build the application, expecting the root of your project to be a main\n  package\n\n##Code deployment with customized compilation step\n\nYou can also use tsuru hooks to customize the compilation and a Procfile to\ncustomize the execution of your application, here's an example:\n\n\t% tree\n\t.\n\t├── Procfile\n\t├── src\n\t│   └── main.go\n\t└── tsuru.yaml\n\n\t1 directory, 3 files\n\t% cat tsuru.yaml\n\thooks:\n\t  build:\n\t    - go get github.com/bmizerany/pat\n\t    - go build -o $HOME/myapp src/main.go\n\t% cat Procfile\n\tweb: $HOME/myapp -host 0.0.0.0 -port $PORT\n\t% git push tsuru master\n\nAt this point, tsuru will parse the tsuru.yaml file and invoke the build hooks\nto build your application, and then use the command specified in the Procfile\nto start it.\n",
  "dockerfile": "# Copyright 2016 tsuru authors. All rights reserved.\n# Use of this source code is governed by a BSD-style\n# license that can be found in the LICENSE file.\n\nFROM\ttsuru/base-platform\nADD\t. /var/lib/tsuru/go\nRUN\tcp /var/lib/tsuru/go/deploy /var/lib/tsuru\nRUN\t/var/lib/tsuru/go/install\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": []
  },
  "source_repository_url": "https://github.com/tsuru/platforms.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/tsuru/platforms",
  "docker_repository": "tsuru/go",
  "docker_image": "tsuru/go",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "tsuru/go",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/tsuru/go",
    "https://hub.docker.com/v2/repositories/tsuru/go",
    "https://github.com/tsuru/platforms.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/Container Image"
  ],
  "info_url": "https://hub.docker.com/r/tsuru/go",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}