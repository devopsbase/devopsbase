{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/nemanjan00/jenkins",
    "repository_url": "https://hub.docker.com/v2/repositories/nemanjan00/jenkins",
    "tags_url": "https://hub.docker.com/v2/repositories/nemanjan00/jenkins/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/nemanjan00/jenkins/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/nemanjan00/jenkins/autobuild",
    "user": "nemanjan00",
    "name": "jenkins",
    "namespace": "nemanjan00",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 145,
    "last_updated": "2016-10-07T18:11:05.929430Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 324983225,
        "id": 1791848,
        "repository": 492221,
        "creator": 26980,
        "last_updater": 26980,
        "last_updated": "2016-10-07T18:11:01.762278Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "nemanjan00/jenkins"
  },
  "name": "nemanjan00/jenkins Docker container",
  "description": "Jenkins with sudo",
  "readme": "# Jenkins PHP environment based on [Official Jenkins Docker image](https://registry.hub.docker.com/_/jenkins/)\n\nThe Jenkins Continuous Integration and Delivery server.\n\nThis image shipped with additional tools:\n\n* ant\n* php5-cli\n* php5-mysql\n* php5-gd\n* php5-intl\n* php5-curl\n* php5-xcache\n* php5-xdebug\n* composer\n* phpunit\n* pdepend\n* phploc\n* phpmd\n* phpcpd\n* php_codesniffer\n* sudo\n\n# Usage\n\n```\ndocker run -p 8080:8080 minity/jenkins-php-ant\n```\n\nThis will store the workspace in /var/jenkins_home. All Jenkins data lives in there - including plugins and configuration.\nYou will probably want to make a Data Volume Container (recommended)\n\n```\ndocker run --name=jenkins.data -v /var/jenkins_home busybox chmod 1000:1000 /var/jenkins_home\n```\n\nand then run a server bound to it\n\n```\ndocker run -p 8080:8080 --volumes-from jenkins.data minity/jenkins-php-ant\n```\n\nFor detail information see [Official Jenkins Docker image README](https://github.com/cloudbees/jenkins-ci.org-docker/tree/weekly).\n",
  "dockerfile": "FROM jenkins\n\nUSER root\n\nRUN apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -yq sudo ant php5-cli php5-mysql php5-gd php5-intl php5-curl php5-xcache \\\n    && rm -rf /var/lib/apt/lists/* && rm -rf /var/cache/apt/*\n\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" >> /etc/sudoers\n\nRUN sed -i 's/xcache.size  =               60M/xcache.size  =                 0/' /etc/php5/mods-available/xcache.ini\n\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer && chown jenkins /usr/bin/composer\n\nUSER jenkins\n\nCOPY entrypoint.sh /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nENV JAVA_TOOL_OPTIONS -Dfile.encoding=UTF-8\n\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "apt-get update -q     && DEBIAN_FRONTEND=noninteractive apt-get install -yq sudo ant php5-cli php5-mysql php5-gd php5-intl php5-curl php5-xcache     && rm -rf /var/lib/apt/lists/* && rm -rf /var/cache/apt/*",
      "echo \"jenkins ALL=NOPASSWD: ALL\" >> /etc/sudoers",
      "sed -i 's/xcache.size  =               60M/xcache.size  =                 0/' /etc/php5/mods-available/xcache.ini",
      "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer && chown jenkins /usr/bin/composer"
    ],
    "workdir": [],
    "from": "jenkins",
    "user": "jenkins",
    "copy": "entrypoint.sh /entrypoint.sh",
    "entrypoint": "[\"/entrypoint.sh\"]",
    "env": {
      "JAVA_TOOL_OPTIONS": "-Dfile.encoding"
    }
  },
  "source_repository_url": "https://github.com/nemanjan00/jenkins.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/nemanjan00/jenkins",
  "docker_repository": "nemanjan00/jenkins",
  "docker_image": "nemanjan00/jenkins",
  "parameters_schema": {
    "JAVA_TOOL_OPTIONS": {
      "default": "-Dfile.encoding",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "nemanjan00/jenkins",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/nemanjan00/jenkins",
    "https://hub.docker.com/v2/repositories/nemanjan00/jenkins",
    "https://github.com/nemanjan00/jenkins.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Integration/Jenkins"
  ],
  "info_url": "https://hub.docker.com/r/nemanjan00/jenkins",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}