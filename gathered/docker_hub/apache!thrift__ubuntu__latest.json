{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/apache/thrift",
    "repository_url": "https://hub.docker.com/v2/repositories/apache/thrift",
    "tags_url": "https://hub.docker.com/v2/repositories/apache/thrift/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/apache/thrift/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/apache/thrift/autobuild",
    "user": "apache",
    "name": "thrift",
    "namespace": "apache",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 310,
    "last_updated": "2016-10-13T22:03:04.127489Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "ubuntu",
        "full_size": 861241835,
        "id": 2668383,
        "repository": 556375,
        "creator": 33664,
        "last_updater": 33664,
        "last_updated": "2016-10-13T22:03:02.374718Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 58786913,
        "id": 2169260,
        "repository": 556375,
        "creator": 33664,
        "last_updater": 33664,
        "last_updated": "2016-10-13T21:34:48.476153Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "apache/thrift"
  },
  "name": "apache/thrift Docker container",
  "description": "Apache Thrift",
  "readme": "Apache Thrift\n=============\n\nLast Modified: 2014-03-16\n\nLicense\n=======\n\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements. See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership. The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License. You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied. See the License for the\nspecific language governing permissions and limitations\nunder the License.\n\nIntroduction\n============\n\nThrift is a lightweight, language-independent software stack with an\nassociated code generation mechanism for RPC. Thrift provides clean\nabstractions for data transport, data serialization, and application\nlevel processing. The code generation system takes a simple definition\nlanguage as its input and generates code across programming languages that\nuses the abstracted stack to build interoperable RPC clients and servers.\n\nThrift is specifically designed to support non-atomic version changes\nacross client and server code.\n\nFor more details on Thrift's design and implementation, take a gander at\nthe Thrift whitepaper included in this distribution or at the README.md files\nin your particular subdirectory of interest.\n\nHierarchy\n=========\n\nthrift/\n\n  compiler/\n\n    Contains the Thrift compiler, implemented in C++.\n\n  lib/\n\n    Contains the Thrift software library implementation, subdivided by\n    language of implementation.\n\n    cpp/\n    go/\n    java/\n    php/\n    py/\n    rb/\n\n  test/\n\n    Contains sample Thrift files and test code across the target programming\n    languages.\n\n  tutorial/\n\n    Contains a basic tutorial that will teach you how to develop software\n    using Thrift.\n\nRequirements\n============\n\nSee http://thrift.apache.org/docs/install for an up-to-date list of build requirements.\n\nResources\n=========\n\nMore information about Thrift can be obtained on the Thrift webpage at:\n\n     http://thrift.apache.org\n\nAcknowledgments\n===============\n\nThrift was inspired by pillar, a lightweight RPC tool written by Adam D'Angelo,\nand also by Google's protocol buffers.\n\nInstallation\n============\n\nIf you are building from the first time out of the source repository, you will\nneed to generate the configure scripts.  (This is not necessary if you\ndownloaded a tarball.)  From the top directory, do:\n\n    ./bootstrap.sh\n\nOnce the configure scripts are generated, thrift can be configured.\nFrom the top directory, do:\n\n    ./configure\n\nYou may need to specify the location of the boost files explicitly.\nIf you installed boost in /usr/local, you would run configure as follows:\n\n    ./configure --with-boost=/usr/local\n\nNote that by default the thrift C++ library is typically built with debugging\nsymbols included. If you want to customize these options you should use the\nCXXFLAGS option in configure, as such:\n\n    ./configure CXXFLAGS='-g -O2'\n    ./configure CFLAGS='-g -O2'\n    ./configure CPPFLAGS='-DDEBUG_MY_FEATURE'\n\nTo enable gcov required options -fprofile-arcs -ftest-coverage enable them:\n\n    ./configure  --enable-coverage\n\nRun ./configure --help to see other configuration options\n\nPlease be aware that the Python library will ignore the --prefix option\nand just install wherever Python's distutils puts it (usually along\nthe lines of /usr/lib/pythonX.Y/site-packages/).  If you need to control\nwhere the Python modules are installed, set the PY_PREFIX variable.\n(DESTDIR is respected for Python and C++.)\n\nMake thrift:\n\n\tmake\n\nFrom the top directory, become superuser and do:\n\n\tmake install\n\nNote that some language packages must be installed manually using build tools\nbetter suited to those languages (at the time of this writing, this applies\nto Java, Ruby, PHP).\n\nLook for the README.md file in the lib/<language>/ folder for more details on the\ninstallation of each language library package.\n\nTesting\n=======\n\nThere are a large number of client library tests that can all be run\nfrom the top-level directory.\n\n          make -k check\n\nThis will make all of the libraries (as necessary), and run through\nthe unit tests defined in each of the client libraries. If a single\nlanguage fails, the make check will continue on and provide a synopsis\nat the end.\n\nTo run the cross-language test suite, please run:\n\n          make cross\n\nThis will run a set of tests that use different language clients and\nservers.\n",
  "dockerfile": "# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Apache Thrift Docker build environment for Centos\n#\n# Known missing client libraries:\n#  - None\n\nFROM buildpack-deps:trusty-scm\nMAINTAINER Apache Thrift <dev@thrift.apache.org>\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Add apt sources\n# Erlang\nRUN echo 'deb http://packages.erlang-solutions.com/debian trusty contrib' > /etc/apt/sources.list.d/erlang_solutions.list && \\\n    curl -sSL https://packages.erlang-solutions.com/debian/erlang_solutions.asc | apt-key add -\n# Dart\nRUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list && \\\n    sed -i /etc/apt/sources.list.d/dart_stable.list -e 's/https:/http:/g'\n\n# Consider using mirror nearby when building locally\n# TODO: Provide option via --build-arg=...\n# RUN sed -i /etc/apt/sources.list -e 's!http://archive.ubuntu.com/ubuntu/!http://your/mirror/!g'\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n`# General dependencies` \\\n      bison \\\n      build-essential \\\n      clang \\\n      cmake \\\n      debhelper \\\n      flex \\\n      ninja-build \\\n      pkg-config \\\n`# Included in buildpack-deps` \\\n`#      autoconf` \\\n`#      automake` \\\n`#      g++` \\\n`#      git` \\\n`#      libtool` \\\n`#      make`\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n`# C++ dependencies` \\\n`# libevent and OpenSSL are needed by D too` \\\n      libboost-dev \\\n      libboost-filesystem-dev \\\n      libboost-program-options-dev \\\n      libboost-system-dev \\\n      libboost-test-dev \\\n      libboost-thread-dev \\\n      libevent-dev \\\n      libssl-dev \\\n      qt5-default \\\n      qtbase5-dev \\\n      qtbase5-dev-tools\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n`# Java dependencies` \\\n      ant \\\n      ant-optional \\\n      openjdk-7-jdk \\\n      maven\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n`# Python dependencies` \\\n`# TODO:` \\\n`# Install twisted and zope.interface via pip. we need twisted at ./configure time, otherwise` \\\n`# py.twisted tests are skipped.` \\\n      python-all \\\n      python-all-dbg \\\n      python-all-dev \\\n      python-pip \\\n      python-setuptools \\\n      python-twisted \\\n      python-zope.interface \\\n      python3-all \\\n      python3-all-dbg \\\n      python3-all-dev \\\n      python3-setuptools \\\n      python3-pip\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n`# Ruby dependencies` \\\n      ruby \\\n      ruby-dev \\\n`# Perl dependencies` \\\n      libbit-vector-perl \\\n      libclass-accessor-class-perl \\\n      libcrypt-ssleay-perl \\\n      libio-socket-ssl-perl \\\n      libnet-ssleay-perl\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n`# Php dependencies` \\\n      php5 \\\n      php5-dev \\\n      php5-cli \\\n      php-pear \\\n      re2c \\\n      phpunit \\\n`# GlibC dependencies` \\\n      libglib2.0-dev\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n`# Erlang dependencies` \\\n      erlang-base \\\n      erlang-eunit \\\n      erlang-dev \\\n      erlang-tools \\\n      rebar\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n`# Haskell dependencies` \\\n      ghc \\\n      cabal-install \\\n`# Haxe dependencies` \\\n      neko \\\n      neko-dev \\\n      libneko0\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n`# Node.js dependencies` \\\n      nodejs \\\n      nodejs-dev \\\n      nodejs-legacy\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n`# CSharp dependencies` \\\n      libmono-system-web2.0-cil \\\n      mono-devel\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n`# D dependencies` \\\n      xdg-utils \\\n`# Dart dependencies` \\\n      dart \\\n`# Lua dependencies` \\\n      lua5.2 \\\n      lua5.2-dev \\\n`# MinGW dependencies` \\\n      mingw32 \\\n      mingw32-binutils \\\n      mingw32-runtime \\\n      nsis \\\n`# Clean up` \\\n    && rm -rf /var/cache/apt/* && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /tmp/* && \\\n    rm -rf /var/tmp/*\n\n# Ruby\nRUN gem install bundler --no-ri --no-rdoc\n\n# Python optional dependencies\nRUN pip2 install -U ipaddress backports.ssl_match_hostname tornado\nRUN pip3 install -U backports.ssl_match_hostname tornado\n\n# Go\nRUN curl -sSL https://storage.googleapis.com/golang/go1.4.3.linux-amd64.tar.gz | tar -C /usr/local/ -xz\nENV PATH /usr/local/go/bin:$PATH\n\n# Haxe\nRUN mkdir -p /usr/lib/haxe && \\\n    curl http://haxe.org/website-content/downloads/3.2.0/downloads/haxe-3.2.0-linux64.tar.gz | \\\n    tar -C /usr/lib/haxe --strip-components=1 -xz && \\\n    ln -s /usr/lib/haxe/haxe /usr/bin/haxe && \\\n    ln -s /usr/lib/haxe/haxelib /usr/bin/haxelib && \\\n    mkdir -p /usr/lib/haxe/lib  && \\\n    chmod -R 777 /usr/lib/haxe/lib && \\\n    haxelib setup /usr/lib/haxe/lib && \\\n    haxelib install hxcpp\n\n# Node.js\nRUN curl -sSL https://www.npmjs.com/install.sh | sh\n\n# D\nRUN curl -sSL http://downloads.dlang.org/releases/2.x/2.070.0/dmd_2.070.0-0_amd64.deb -o /tmp/dmd_2.070.0-0_amd64.deb && \\\n    dpkg -i /tmp/dmd_2.070.0-0_amd64.deb && \\\n    rm /tmp/dmd_2.070.0-0_amd64.deb && \\\n    curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\\n    curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \\\n    mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\\n    mv libevent-master/deimos/* openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\\n    mv libevent-master/C/* openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \\\n    rm -rf libevent-master openssl-master && \\\n    echo 'gcc -Wl,--no-as-needed $*' > /usr/local/bin/gcc-dmd && \\\n    chmod 755 /usr/local/bin/gcc-dmd && \\\n    echo 'CC=/usr/local/bin/gcc-dmd' >> /etc/dmd.conf\n\n# Dart\nENV PATH /usr/lib/dart/bin:$PATH\n\nENV THRIFT_ROOT /thrift\nRUN mkdir -p $THRIFT_ROOT/src\nCOPY Dockerfile $THRIFT_ROOT/\nWORKDIR $THRIFT_ROOT/src\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "echo 'deb http://packages.erlang-solutions.com/debian trusty contrib' > /etc/apt/sources.list.d/erlang_solutions.list &&     curl -sSL https://packages.erlang-solutions.com/debian/erlang_solutions.asc | apt-key add -",
      "curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - &&     curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list &&     sed -i /etc/apt/sources.list.d/dart_stable.list -e 's/https:/http:/g'",
      "apt-get update && apt-get install -y --no-install-recommends `# General dependencies`       bison       build-essential       clang       cmake       debhelper       flex       ninja-build       pkg-config `# Included in buildpack-deps` `#      autoconf` `#      automake` `#      g++` `#      git` `#      libtool` `#      make`",
      "apt-get update && apt-get install -y --no-install-recommends `# C++ dependencies` `# libevent and OpenSSL are needed by D too`       libboost-dev       libboost-filesystem-dev       libboost-program-options-dev       libboost-system-dev       libboost-test-dev       libboost-thread-dev       libevent-dev       libssl-dev       qt5-default       qtbase5-dev       qtbase5-dev-tools",
      "apt-get update && apt-get install -y --no-install-recommends `# Java dependencies`       ant       ant-optional       openjdk-7-jdk       maven",
      "apt-get update && apt-get install -y --no-install-recommends `# Python dependencies` `# TODO:` `# Install twisted and zope.interface via pip. we need twisted at ./configure time, otherwise` `# py.twisted tests are skipped.`       python-all       python-all-dbg       python-all-dev       python-pip       python-setuptools       python-twisted       python-zope.interface       python3-all       python3-all-dbg       python3-all-dev       python3-setuptools       python3-pip",
      "apt-get update && apt-get install -y --no-install-recommends `# Ruby dependencies`       ruby       ruby-dev `# Perl dependencies`       libbit-vector-perl       libclass-accessor-class-perl       libcrypt-ssleay-perl       libio-socket-ssl-perl       libnet-ssleay-perl",
      "apt-get update && apt-get install -y --no-install-recommends `# Php dependencies`       php5       php5-dev       php5-cli       php-pear       re2c       phpunit `# GlibC dependencies`       libglib2.0-dev",
      "apt-get update && apt-get install -y --no-install-recommends `# Erlang dependencies`       erlang-base       erlang-eunit       erlang-dev       erlang-tools       rebar",
      "apt-get update && apt-get install -y --no-install-recommends `# Haskell dependencies`       ghc       cabal-install `# Haxe dependencies`       neko       neko-dev       libneko0",
      "apt-get update && apt-get install -y --no-install-recommends `# Node.js dependencies`       nodejs       nodejs-dev       nodejs-legacy",
      "apt-get update && apt-get install -y --no-install-recommends `# CSharp dependencies`       libmono-system-web2.0-cil       mono-devel",
      "apt-get update && apt-get install -y --no-install-recommends `# D dependencies`       xdg-utils `# Dart dependencies`       dart `# Lua dependencies`       lua5.2       lua5.2-dev `# MinGW dependencies`       mingw32       mingw32-binutils       mingw32-runtime       nsis `# Clean up`     && rm -rf /var/cache/apt/* &&     rm -rf /var/lib/apt/lists/* &&     rm -rf /tmp/* &&     rm -rf /var/tmp/*",
      "gem install bundler --no-ri --no-rdoc",
      "pip2 install -U ipaddress backports.ssl_match_hostname tornado",
      "pip3 install -U backports.ssl_match_hostname tornado",
      "curl -sSL https://storage.googleapis.com/golang/go1.4.3.linux-amd64.tar.gz | tar -C /usr/local/ -xz",
      "mkdir -p /usr/lib/haxe &&     curl http://haxe.org/website-content/downloads/3.2.0/downloads/haxe-3.2.0-linux64.tar.gz |     tar -C /usr/lib/haxe --strip-components=1 -xz &&     ln -s /usr/lib/haxe/haxe /usr/bin/haxe &&     ln -s /usr/lib/haxe/haxelib /usr/bin/haxelib &&     mkdir -p /usr/lib/haxe/lib  &&     chmod -R 777 /usr/lib/haxe/lib &&     haxelib setup /usr/lib/haxe/lib &&     haxelib install hxcpp",
      "curl -sSL https://www.npmjs.com/install.sh | sh",
      "curl -sSL http://downloads.dlang.org/releases/2.x/2.070.0/dmd_2.070.0-0_amd64.deb -o /tmp/dmd_2.070.0-0_amd64.deb &&     dpkg -i /tmp/dmd_2.070.0-0_amd64.deb &&     rm /tmp/dmd_2.070.0-0_amd64.deb &&     curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz &&     curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz &&     mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C &&     mv libevent-master/deimos/* openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ &&     mv libevent-master/C/* openssl-master/C/* /usr/include/dmd/druntime/import/C/ &&     rm -rf libevent-master openssl-master &&     echo 'gcc -Wl,--no-as-needed $*' > /usr/local/bin/gcc-dmd &&     chmod 755 /usr/local/bin/gcc-dmd &&     echo 'CC=/usr/local/bin/gcc-dmd' >> /etc/dmd.conf",
      "mkdir -p $THRIFT_ROOT/src"
    ],
    "workdir": [
      "$THRIFT_ROOT/src"
    ],
    "from": "buildpack-deps:trusty-scm",
    "maintainer": "Apache Thrift <dev@thrift.apache.org>",
    "env": {
      "DEBIAN_FRONTEND": "noninteractive",
      "PATH": "/usr/lib/dart/bin:$PATH",
      "THRIFT_ROOT": "/thrift"
    },
    "copy": "Dockerfile $THRIFT_ROOT/"
  },
  "source_repository_url": "https://github.com/apache/thrift.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/apache/thrift",
  "docker_repository": "apache/thrift",
  "docker_image": "apache/thrift",
  "parameters_schema": {
    "DEBIAN_FRONTEND": {
      "default": "noninteractive",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/usr/lib/dart/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "THRIFT_ROOT": {
      "default": "/thrift",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "apache/thrift",
  "revision": "ubuntu",
  "uris": [
    "https://hub.docker.com/r/apache/thrift",
    "https://hub.docker.com/v2/repositories/apache/thrift",
    "https://github.com/apache/thrift.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Web Server/Apache HTTP Server"
  ],
  "info_url": "https://hub.docker.com/r/apache/thrift",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}