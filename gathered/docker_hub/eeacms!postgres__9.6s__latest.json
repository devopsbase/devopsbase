{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/eeacms/postgres",
    "repository_url": "https://hub.docker.com/v2/repositories/eeacms/postgres",
    "tags_url": "https://hub.docker.com/v2/repositories/eeacms/postgres/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/eeacms/postgres/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/eeacms/postgres/autobuild",
    "user": "eeacms",
    "name": "postgres",
    "namespace": "eeacms",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 4,
    "pull_count": 8584,
    "last_updated": "2016-10-05T07:57:19.343189Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "9.6s",
        "full_size": 101556771,
        "id": 5243195,
        "repository": 201331,
        "creator": 170105,
        "last_updater": 170105,
        "last_updated": "2016-10-05T07:57:19.017324Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "9.6",
        "full_size": 101556762,
        "id": 5243142,
        "repository": 201331,
        "creator": 170105,
        "last_updater": 170105,
        "last_updated": "2016-10-05T07:54:09.239415Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "9.2",
        "full_size": 100375340,
        "id": 5243125,
        "repository": 201331,
        "creator": 170105,
        "last_updater": 170105,
        "last_updated": "2016-10-05T07:53:24.259171Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "9.1",
        "full_size": 100192741,
        "id": 5243124,
        "repository": 201331,
        "creator": 170105,
        "last_updater": 170105,
        "last_updated": "2016-10-05T07:53:22.711491Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "9.3",
        "full_size": 100535657,
        "id": 5243123,
        "repository": 201331,
        "creator": 170105,
        "last_updater": 170105,
        "last_updated": "2016-10-05T07:53:22.087430Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "9.2s",
        "full_size": 100375348,
        "id": 5243121,
        "repository": 201331,
        "creator": 170105,
        "last_updater": 170105,
        "last_updated": "2016-10-05T07:53:18.350284Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "9.1s",
        "full_size": 100192738,
        "id": 5243118,
        "repository": 201331,
        "creator": 170105,
        "last_updater": 170105,
        "last_updated": "2016-10-05T07:53:16.122695Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 101556767,
        "id": 218855,
        "repository": 201331,
        "creator": 170105,
        "last_updater": 170105,
        "last_updated": "2016-10-05T07:50:55.314781Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "9.3s",
        "full_size": 100535656,
        "id": 5226193,
        "repository": 201331,
        "creator": 170105,
        "last_updater": 170105,
        "last_updated": "2016-10-04T15:11:12.105684Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "9.4s",
        "full_size": 100932941,
        "id": 3467365,
        "repository": 201331,
        "creator": 170105,
        "last_updater": 170105,
        "last_updated": "2016-07-21T13:17:08.054411Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "eea/eea.docker.postgres"
  },
  "name": "eeacms/postgres Docker container",
  "description": "Docker image for PostgreSQL (RelStorage ready)",
  "readme": "# PostgreSQL with replication support (ZODB RelStorage ready)\n\nDocker image for PostgreSQL with replication support and ZODB RelStorage ready\n\nThis image is generic, thus you can obviously re-use it within\nyour non-related EEA projects.\n\n## Supported tags and respective Dockerfile links\n\n  - `:latest` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/master/postgres/Dockerfile) (default)\n  - `:9.6s` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.6s/postgres/Dockerfile)\n  - `:9.6` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.6/postgres/Dockerfile)\n  - `:9.5s` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.5s/postgres/Dockerfile)\n  - `:9.5` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.5/postgres/Dockerfile)\n  - `:9.4s` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.4s/postgres/Dockerfile)\n  - `:9.4` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.4/postgres/Dockerfile)\n  - `:9.3s` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.3s/postgres/Dockerfile)\n  - `:9.3` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.3/postgres/Dockerfile)\n  - `:9.2s` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.2s/postgres/Dockerfile)\n  - `:9.2` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.2/postgres/Dockerfile)\n  - `:9.1s` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.1s/postgres/Dockerfile)\n  - `:9.1` [*Dockerfile*](https://github.com/eea/eea.docker.postgres/blob/9.1/postgres/Dockerfile)\n\n## Base docker image\n\n - [hub.docker.com](https://registry.hub.docker.com/u/eeacms/postgres)\n\n## Source code\n\n  - [github.com](http://github.com/eea/eea.docker.postgres)\n\n## Changelog\n\n  - [CHANGELOG.md](https://github.com/eea/eea.docker.postgres/blob/master/CHANGELOG.md)\n\n## Installation\n\n1. Install [Docker](https://www.docker.com/).\n\n2. Install [Docker Compose](https://docs.docker.com/compose/).\n\n## Simple usage\n\n    $ docker run --name=pg1 \\\n                 -e POSTGRES_USER=postgres \\\n                 -e POSTGRES_PASSWORD=postgres \\\n                 -e POSTGRES_DBNAME=datafs zasync \\\n                 -e POSTGRES_DBUSER=zope \\\n                 -e POSTGRES_DBPASS=zope \\\n             eeacms/postgres\n\nOr using docker-compose:\n\n    postgres:\n      image: eeacms/postgres\n      ports:\n      - \"5432:5432\"\n      environment:\n        POSTGRES_USER: postgres\n        POSTGRES_PASSWORD: postgres\n        POSTGRES_DBNAME: datafs zasync\n        POSTGRES_DBUSER: zope\n        POSTGRES_DBPASS: zope\n      volumes:\n      - postgres_data:/var/lib/postgresql/data\n\n## PostgreSQL replication\n\nStart master node:\n\n    $ docker run --name=master \\\n                 -e POSTGRES_USER=postgres \\\n                 -e POSTGRES_PASSWORD=postgres \\\n                 -e POSTGRES_DBNAME=datafs zasync \\\n                 -e POSTGRES_DBUSER=zope \\\n                 -e POSTGRES_DBPASS=zope \\\n                 -e POSTGRES_CONFIG_wal_level=hot_standby \\\n                 -e POSTGRES_CONFIG_max_wal_senders=8 \\\n                 -e POSTGRES_CONFIG_wal_keep_segments=8 \\\n                 -e POSTGRES_CONFIG_hot_standby=on \\\n            eeacms/postgres\n\nStart replica:\n\n    $ docker run --name=replica1 \\\n                 --link=master \\\n                 -e POSTGRES_REPLICATE_FROM=master \\\n                 -e POSTGRES_USER=postgres \\\n                 -e POSTGRES_PASSWORD=postgres \\\n                 -e POSTGRES_CONFIG_wal_level=hot_standby \\\n                 -e POSTGRES_CONFIG_max_wal_senders=8 \\\n                 -e POSTGRES_CONFIG_wal_keep_segments=8 \\\n                 -e POSTGRES_CONFIG_hot_standby=on \\\n        eeacms/postgres\n\nor using docker-compose:\n\n    master:\n      image: eeacms/postgres\n      environment:\n      - POSTGRES_USER=postgres\n      - POSTGRES_PASSWORD=postgres\n      - POSTGRES_DBNAME=datafs zasync\n      - POSTGRES_DBUSER=zope\n      - POSTGRES_DBPASS=zope\n      - POSTGRES_CONFIG_wal_level=hot_standby\n      - POSTGRES_CONFIG_max_wal_senders=8\n      - POSTGRES_CONFIG_wal_keep_segments=8\n      - POSTGRES_CONFIG_hot_standby=on\n      volumes:\n      - master_data:/var/lib/postgresql/data\n\n    replica:\n      image: eeacms/postgres\n      tty: true\n      stdin_open: true\n      links:\n      - master\n      environment:\n      - POSTGRES_USER=postgres\n      - POSTGRES_PASSWORD=postgres\n      - POSTGRES_CONFIG_wal_level=hot_standby\n      - POSTGRES_CONFIG_max_wal_senders=8\n      - POSTGRES_CONFIG_wal_keep_segments=8\n      - POSTGRES_CONFIG_hot_standby=on\n      - POSTGRES_REPLICATE_FROM=master\n      volumes:\n      - replica_data:/var/lib/postgresql/data\n\nCustomize your deployment by changing environment variables.\nSee [Supported environment variables](#env) section bellow.\n\n**You may want to restore existing PostgreSQL database**,\nwithin data container. See section [Restore existing database](#restore)\n\n\n## Persistent data as you wish\nThe PostgreSQL database is kept in a\n[data-only container](https://medium.com/@ramangupta/why-docker-data-containers-are-good-589b3c6c749e)\nnamed *data*. The data container keeps the persistent data for a production environment and\n[must be backed up](https://github.com/paimpozhil/docker-volume-backup).\n\nSo if you are running in a development environment, you can skip the backup and delete\nthe container if you want.\n\nOn a production environment you would probably want to backup the container at regular intervals.\nThe data container can also be easily\n[copied, moved and be reused between different environments](https://docs.docker.com/userguide/dockervolumes/#backup-restore-or-migrate-data-volumes).\n\n\n<a name=\"restore\"></a>\n## Restore existing database\n\n\n### Extract PostgreSQL database from the container\n\n    $ cd eea.docker.postgres\n    $ docker-compose up -d\n    $ docker exec -it eeadockerpostgres_postgres_1 \\\n      bash -c \"gosu postgres pg_dump datafs | gzip > /postgresql.backup/datafs.gz\"\n    $ ls /var/lib/docker/volumes/www-postgres-dump/_data\n\n### Restore PostgreSQL database from backup\n\n**WARNING:**\n**NEVER do this directly on PRODUCTION. This will DROP your existing database**\n\n    $ cd eea.docker.postgres\n    $ docker-compose up -d\n    $ docker cp datafs.gz eeadockerpostgres_postgres_1:/postgresql.backup/\n    $ docker exec eeadockerpostgres_postgres_1 \\\n             gosu postgres /postgresql.restore/database-restore.sh datafs\n\n<a name=\"env\"></a>\n## Supported environment variables\n\n* `POSTGRES_USER` This optional environment variable is used in conjunction\n   with POSTGRES_PASSWORD to set a user and its password. This variable will\n   create the specified user with superuser power and a database with the same name.\n   If it is not specified, then the default user of `postgres` will be used.\n* `POSTGRES_PASSWORD` This environment variable is recommend for you to use\n  the PostgreSQL image. This environment variable sets the superuser password\n  for PostgreSQL. The default superuser is defined by the POSTGRES_USER\n  environment variable. Default `postgres`\n* `POSTGRES_DBNAME` Create multiple databases (space separated) within PostgreSQL with `POSTGRES_DBUSER` as owner.\n  E.g. POSTGRES_DBNAME=datafs zasync\n* `POSTGRES_DBUSER` Owner for `POSTGRES_DBNAME`\n* `POSTGRES_DBPASS` Password for `POSTGRES_DBUSER`\n* `POSTGRES_REPLICATE_FROM` Start a PostgreSQL replica of the given master\n\nYou can also override postgres configuration via environment variables by using\n`POSTGRES_CONFIG_` prefix. Example:\n\n    POSTGRES_CONFIG_MAX_CONNECTIONS=200\n    POSTGRES_CONFIG_SHARED_BUFFERS=4GB\n\nAlso you can configure `recovery.conf` by using `RECOVERY_CONFIG_` environment variables.\n\nSee [PostgreSQL Documentation](http://www.postgresql.org/docs/9.5/static/runtime-config.html) for supported parameters.\nYou should also check [Tuning Your PostgreSQL Server](https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server)\n\nIn the same way you can define maintenance cron jobs by using\n`POSTGRES_CRON_` prefix. Example to backup nighly `datafs` database at 3 AM:\n\n    POSTGRES_CRON_1=0 3 * * * postgres /postgresql.restore/database-backup.sh datafs\n\nor restore Staging DB daily at 5 AM:\n\n    POSTGRES_CRON_2=0 5 * * * postgres /postgresql.restore/database-restore.sh datafs\n\n## Copyright and license\n\nThe Initial Owner of the Original Code is European Environment Agency (EEA).\nAll Rights Reserved.\n\nThe Original Code is free software;\nyou can redistribute it and/or modify it under the terms of the GNU\nGeneral Public License as published by the Free Software Foundation;\neither version 2 of the License, or (at your option) any later\nversion.\n\n\n## Funding\n\n[European Environment Agency (EU)](http://eea.europa.eu)\n",
  "dockerfile": "FROM postgres:9.6\nMAINTAINER \"EEA: IDM2 A-Team\" <eea-edw-a-team-alerts@googlegroups.com>\n\nRUN mkdir -p /postgresql.conf.d /postgresql.restore /postgresql.backup \\\n && chown -R postgres:postgres /postgresql.restore /postgresql.backup \\\n && mv /docker-entrypoint.sh /master-entrypoint.sh\n\nCOPY database-backup.sh database-restore.sh /postgresql.restore/\nCOPY replica-entrypoint.sh /docker-entrypoint.sh /\nCOPY crond.sh setup-env.py /bin/\nCOPY setup-*.sh /docker-entrypoint-initdb.d/\nCOPY default.conf /postgresql.conf.d/\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "mkdir -p /postgresql.conf.d /postgresql.restore /postgresql.backup  && chown -R postgres:postgres /postgresql.restore /postgresql.backup  && mv /docker-entrypoint.sh /master-entrypoint.sh"
    ],
    "workdir": [],
    "from": "postgres:9.6",
    "maintainer": "\"EEA: IDM2 A-Team\" <eea-edw-a-team-alerts@googlegroups.com>",
    "copy": "default.conf /postgresql.conf.d/"
  },
  "source_repository_url": "https://github.com/eea/eea.docker.postgres.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/eea/eea.docker.postgres",
  "docker_repository": "eeacms/postgres",
  "docker_image": "eeacms/postgres",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "eeacms/postgres",
  "revision": "9.6s",
  "uris": [
    "https://hub.docker.com/r/eeacms/postgres",
    "https://hub.docker.com/v2/repositories/eeacms/postgres",
    "https://github.com/eea/eea.docker.postgres.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Data Store/Relational/PostgreSQL",
    "Type/Middleware/Content Management"
  ],
  "info_url": "https://hub.docker.com/r/eeacms/postgres",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}