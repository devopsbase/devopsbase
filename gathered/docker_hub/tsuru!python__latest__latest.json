{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/tsuru/python",
    "repository_url": "https://hub.docker.com/v2/repositories/tsuru/python",
    "tags_url": "https://hub.docker.com/v2/repositories/tsuru/python/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/tsuru/python/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/tsuru/python/autobuild",
    "user": "tsuru",
    "name": "python",
    "namespace": "tsuru",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 2,
    "pull_count": 3447,
    "last_updated": "2016-10-17T12:19:30.982525Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 188715630,
        "id": 1363689,
        "repository": 406142,
        "creator": 205081,
        "last_updater": 114,
        "last_updated": "2016-10-17T12:19:30.345683Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "tsuru/platforms"
  },
  "name": "tsuru/python Docker container",
  "description": "Image for the Python platform in tsuru PaaS.",
  "readme": "# Python platform\n\nThe Python platform uses Python 2.7.x.\n\n## Code deployment\n\nIf you just run a ``git push``  or ``tsuru app-deploy`` of your code, tsuru will try\nto download all of your depencies using ``requirements.txt`` or ``setup script``.\nYou can customize this behavior, see the next section for more details.\n\n## Code deployment with dependencies\n\nThere are two ways to list the applications dependencies: ``requirements.txt`` or ``setup.py``.\nThe priority order is: requirements -> setup. The file should be in the root of deploy files.\n\n### Using requirements.txt\n\nYou can define a file called ``requirements.txt`` that list all pip dependencies of your application,\neach line represents one dependency, here's an example:\n\n\t$ cat requirements.txt\n\tFlask==0.10.1\n\tgunicorn==19.3.0\n\n### Using setup script\n\nYou can also define the setup script to list your depencies, here's an example:\n\n\t$ cat setup.py\n\tfrom setuptools import setup, find_packages\n\tsetup(\n\t\tname=\"app-name\",\n    \tpackages=find_packages(),\n    \tdescription=\"example\",\n  \t\tinclude_package_data=True,\n    \tinstall_requires=[\n        \t\"Flask==0.10.1\",\n        \t\"gunicorn==19.3.0\",\n\t\t],\n\t)\n\nAfter invokin ``git push`` or ``tsuru app-deploy``, tsuru will receive your code and tell the platform\nto install all the depencies using ``pip install -r requirements.txt`` or ``pip instal -e ./``.\n",
  "dockerfile": "# Copyright 2016 tsuru authors. All rights reserved.\n# Use of this source code is governed by a BSD-style\n# license that can be found in the LICENSE file.\n\nFROM\ttsuru/base-platform\nADD\t. /var/lib/tsuru/python\nRUN\tcp /var/lib/tsuru/python/deploy /var/lib/tsuru\nRUN\t/var/lib/tsuru/python/install\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": []
  },
  "source_repository_url": "https://github.com/tsuru/platforms.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/tsuru/platforms",
  "docker_repository": "tsuru/python",
  "docker_image": "tsuru/python",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "tsuru/python",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/tsuru/python",
    "https://hub.docker.com/v2/repositories/tsuru/python",
    "https://github.com/tsuru/platforms.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Python",
    "Mode/Executable/Image/Container Image"
  ],
  "info_url": "https://hub.docker.com/r/tsuru/python",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}