{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/sameersbn/mysql",
    "repository_url": "https://hub.docker.com/v2/repositories/sameersbn/mysql",
    "tags_url": "https://hub.docker.com/v2/repositories/sameersbn/mysql/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/sameersbn/mysql/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/sameersbn/mysql/autobuild",
    "user": "sameersbn",
    "name": "mysql",
    "namespace": "sameersbn",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 39,
    "pull_count": 1217993,
    "last_updated": "2016-10-16T13:45:44.507088Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 96934502,
        "id": 26136,
        "repository": 13434,
        "creator": 3263,
        "last_updater": 3263,
        "last_updated": "2016-10-16T13:45:44.022445Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "sameersbn/docker-mysql"
  },
  "name": "sameersbn/mysql Docker container",
  "description": "",
  "readme": "[![Circle CI](https://circleci.com/gh/sameersbn/docker-mysql.svg?style=svg)](https://circleci.com/gh/sameersbn/docker-mysql) [![Docker Repository on Quay.io](https://quay.io/repository/sameersbn/mysql/status \"Docker Repository on Quay.io\")](https://quay.io/repository/sameersbn/mysql)\n\n# Table of Contents\n\n- [Introduction](#introduction)\n- [Contributing](#contributing)\n- [Changelog](Changelog.md)\n- [Reporting Issues](#reporting-issues)\n- [Installation](#installation)\n- [Quick Start](#quick-start)\n- [Data Store](#data-store)\n- [Creating User and Database at Launch](#creating-user-and-database-at-launch)\n- [Creating remote user with privileged access](#creating-remote-user-with-privileged-access)\n- [Shell Access](#shell-access)\n- [Upgrading](#upgrading)\n\n# Introduction\n\nDockerfile to build a MySQL container image which can be linked to other containers.\n\n# Contributing\n\nIf you find this image useful here's how you can help:\n\n- Send a Pull Request with your awesome new features and bug fixes\n- Help new users with [Issues](https://github.com/sameersbn/docker-mysql/issues) they may encounter\n- Support the development of this image with a [donation](http://www.damagehead.com/donate/)\n\n# Reporting Issues\n\nDocker is a relatively new project and is active being developed and tested by a thriving community of developers and testers and every release of docker features many enhancements and bugfixes.\n\nGiven the nature of the development and release cycle it is very important that you have the latest version of docker installed because any issue that you encounter might have already been fixed with a newer docker release.\n\nFor ubuntu users I suggest [installing docker](https://docs.docker.com/installation/ubuntulinux/) using docker's own package repository since the version of docker packaged in the ubuntu repositories are a little dated.\n\nHere is the shortform of the installation of an updated version of docker on ubuntu.\n\n```bash\nsudo apt-get purge docker.io\ncurl -s https://get.docker.io/ubuntu/ | sudo sh\nsudo apt-get update\nsudo apt-get install lxc-docker\n```\n\nFedora and RHEL/CentOS users should try disabling selinux with `setenforce 0` and check if resolves the issue. If it does than there is not much that I can help you with. You can either stick with selinux disabled (not recommended by redhat) or switch to using ubuntu.\n\nIf using the latest docker version and/or disabling selinux does not fix the issue then please file a issue request on the [issues](https://github.com/sameersbn/docker-mysql/issues) page.\n\nIn your issue report please make sure you provide the following information:\n\n- The host ditribution and release version.\n- Output of the `docker version` command\n- Output of the `docker info` command\n- The `docker run` command you used to run the image (mask out the sensitive bits).\n\n# Installation\n\nAutomated builds of the image are available on [Dockerhub](https://hub.docker.com/r/sameersbn/mysql) and is the recommended method of installation.\n\n> **Note**: Builds are also available on [Quay.io](https://quay.io/repository/sameersbn/mysql)\n\n```bash\ndocker pull sameersbn/mysql:latest\n```\n\nAlternately you can build the image yourself.\n\n```bash\ndocker build -t sameersbn/mysql github.com/sameersbn/docker-mysql\n```\n\n# Quick Start\n\nRun the mysql image\n\n```bash\ndocker run --name mysql -d sameersbn/mysql:latest\n```\n\nYou can access the mysql server as the root user using the following command:\n\n```bash\ndocker run -it --rm --volumes-from=mysql sameersbn/mysql:latest mysql -uroot\n```\n\n# Data Store\n\nYou should mount a volume at `/var/lib/mysql`.\n\nSELinux users are also required to change the security context of the mount point so that it plays nicely with selinux.\n\n```bash\nmkdir -p /opt/mysql/data\nsudo chcon -Rt svirt_sandbox_file_t /opt/mysql/data\n```\n\nThe updated run command looks like this.\n\n```\ndocker run --name mysql -d \\\n  -v /opt/mysql/data:/var/lib/mysql sameersbn/mysql:latest\n```\n\nThis will make sure that the data stored in the database is not lost when the image is stopped and started again.\n\n# Creating User and Database at Launch\n\n> **NOTE**\n>\n> For this feature to work the `debian-sys-maint` user needs to exist. This user is automatically created when the database is installed for the first time (firstrun).\n>\n> However if you were using this image before this feature was added, then it will not work as-is. You are required to create the `debian-sys-maint` user\n>\n>```bash\n>docker run -it --rm --volumes-from=mysql sameersbn/mysql \\\n>  mysql -uroot -e \"GRANT ALL PRIVILEGES on *.* TO 'debian-sys-maint'@'localhost' IDENTIFIED BY '' WITH GRANT OPTION;\"\n>```\n\nTo create a new database specify the database name in the `DB_NAME` variable. The following command creates a new database named *dbname*:\n\n```bash\ndocker run --name mysql -d \\\n  -e 'DB_NAME=dbname' sameersbn/mysql:latest\n```\n\nYou may also specify a comma separated list of database names in the `DB_NAME` variable. The following command creates two new databases named *dbname1* and *dbname2*\n\n```bash\ndocker run --name mysql -d \\\n-e 'DB_NAME=dbname1,dbname2' sameersbn/mysql:latest\n```\n\nTo create a new user you should specify the `DB_USER` and `DB_PASS` variables.\n\n```bash\ndocker run --name mysql -d \\\n  -e 'DB_USER=dbuser' -e 'DB_PASS=dbpass' -e 'DB_NAME=dbname' \\\n  sameersbn/mysql:latest\n```\n\nThe above command will create a user *dbuser* with the password *dbpass* and will also create a database named *dbname*. The *dbuser* user will have full/remote access to the database.\n\n**NOTE**\n- If the `DB_NAME` is not specified, the user will not be created\n- If the user/database user already exists no changes are be made\n- If `DB_PASS` is not specified, an empty password will be set for the user\n\nBy default the new database will be created with the `utf8` character set and `utf8_unicode_ci` collation. You may override these with the `MYSQL_CHARSET` and `MYSQL_COLLATION` variables.\n\n```bash\ndocker run --name mysql -d \\\n  -e 'DB_USER=dbuser' -e 'DB_PASS=dbpass' -e 'DB_NAME=dbname' \\\n  -e 'MYSQL_CHARSET=utf8mb4' -e 'MYSQL_COLLATION=utf8_bin' \\\n  sameersbn/mysql:latest\n```\n\n# Creating remote user with privileged access\n\nTo create a remote user with privileged access, you need to specify the `DB_REMOTE_ROOT_NAME` and `DB_REMOTE_ROOT_PASS` variables, eg.\n\n```bash\ndocker run --name mysql -d \\\n  -e 'DB_REMOTE_ROOT_NAME=root' -e 'DB_REMOTE_ROOT_PASS=secretpassword' \\\n  sameersbn/mysql:latest\n```\n\nOptionally you can specify the `DB_REMOTE_ROOT_HOST` variable to define the address space within which remote access should be permitted. This defaults to `172.17.0.1` and should suffice for most cases.\n\nSituations that would require you to override the default `DB_REMOTE_ROOT_HOST` setting are:\n\n- If you have changed the ip address of the `docker0` interface\n- If you are using host networking, i.e. `--net=host`, etc.\n\n# Shell Access\n\nFor debugging and maintenance purposes you may want access the containers shell. If you are using docker version `1.3.0` or higher you can access a running containers shell using `docker exec` command.\n\n```bash\ndocker exec -it mysql bash\n```\n\nIf you are using an older version of docker, you can use the [nsenter](http://man7.org/linux/man-pages/man1/nsenter.1.html) linux tool (part of the util-linux package) to access the container shell.\n\nSome linux distros (e.g. ubuntu) use older versions of the util-linux which do not include the `nsenter` tool. To get around this @jpetazzo has created a nice docker image that allows you to install the `nsenter` utility and a helper script named `docker-enter` on these distros.\n\nTo install `nsenter` execute the following command on your host,\n\n```bash\ndocker run --rm -v /usr/local/bin:/target jpetazzo/nsenter\n```\n\nNow you can access the container shell using the command\n\n```bash\nsudo docker-enter mysql\n```\n\nFor more information refer https://github.com/jpetazzo/nsenter\n\n# Upgrading\n\nTo upgrade to newer releases, simply follow this 3 step upgrade procedure.\n\n- **Step 1**: Stop the currently running image\n\n```bash\ndocker stop mysql\n```\n\n- **Step 2**: Update the docker image.\n\n```bash\ndocker pull sameersbn/mysql:latest\n```\n\n- **Step 3**: Start the image\n\n```bash\ndocker run --name mysql -d [OPTIONS] sameersbn/mysql:latest\n```\n",
  "dockerfile": "FROM sameersbn/ubuntu:14.04.20161014\nMAINTAINER sameer@damagehead.com\n\nENV MYSQL_USER=mysql \\\n    MYSQL_DATA_DIR=/var/lib/mysql \\\n    MYSQL_RUN_DIR=/run/mysqld \\\n    MYSQL_LOG_DIR=/var/log/mysql\n\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server \\\n && rm -rf ${MYSQL_DATA_DIR} \\\n && rm -rf /var/lib/apt/lists/*\n\nCOPY entrypoint.sh /sbin/entrypoint.sh\nRUN chmod 755 /sbin/entrypoint.sh\n\nEXPOSE 3306/tcp\nVOLUME [\"${MYSQL_DATA_DIR}\", \"${MYSQL_RUN_DIR}\"]\nENTRYPOINT [\"/sbin/entrypoint.sh\"]\nCMD [\"/usr/bin/mysqld_safe\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      3306
    ],
    "volume": [
      "[\"${MYSQL_DATA_DIR}\", \"${MYSQL_RUN_DIR}\"]"
    ],
    "run": [
      "apt-get update  && DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server  && rm -rf ${MYSQL_DATA_DIR}  && rm -rf /var/lib/apt/lists/*",
      "chmod 755 /sbin/entrypoint.sh"
    ],
    "workdir": [],
    "from": "sameersbn/ubuntu:14.04.20161014",
    "maintainer": "sameer@damagehead.com",
    "env": {
      "MYSQL_USER": "mysql",
      "": "",
      "MYSQL_DATA_DIR": "/var/lib/mysql",
      "MYSQL_RUN_DIR": "/run/mysqld",
      "MYSQL_LOG_DIR": "/var/log/mysql"
    },
    "copy": "entrypoint.sh /sbin/entrypoint.sh",
    "entrypoint": "[\"/sbin/entrypoint.sh\"]",
    "cmd": "[\"/usr/bin/mysqld_safe\"]"
  },
  "source_repository_url": "git://github.com/sameersbn/docker-mysql.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/sameersbn/docker-mysql",
  "docker_repository": "sameersbn/mysql",
  "docker_image": "sameersbn/mysql",
  "parameters_schema": {
    "MYSQL_USER": {
      "default": "mysql",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MYSQL_DATA_DIR": {
      "default": "/var/lib/mysql",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MYSQL_RUN_DIR": {
      "default": "/run/mysqld",
      "type": "string",
      "mapping": "environment_variable"
    },
    "MYSQL_LOG_DIR": {
      "default": "/var/log/mysql",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        3306
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "sameersbn/mysql",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/sameersbn/mysql",
    "https://hub.docker.com/v2/repositories/sameersbn/mysql",
    "git://github.com/sameersbn/docker-mysql.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Data Store/Relational/MySQL"
  ],
  "info_url": "https://hub.docker.com/r/sameersbn/mysql",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}