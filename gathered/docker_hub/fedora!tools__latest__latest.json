{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/fedora/tools",
    "repository_url": "https://hub.docker.com/v2/repositories/fedora/tools",
    "tags_url": "https://hub.docker.com/v2/repositories/fedora/tools/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/fedora/tools/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/fedora/tools/autobuild",
    "user": "fedora",
    "name": "tools",
    "namespace": "fedora",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 543,
    "last_updated": "2016-09-18T15:06:11.424510Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 555450379,
        "id": 839659,
        "repository": 310148,
        "creator": 17785,
        "last_updater": 17785,
        "last_updated": "2016-09-18T15:06:11.061747Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "fedora-cloud/Fedora-Dockerfiles"
  },
  "name": "fedora/tools Docker container",
  "description": "Docker image that has systems administration tools used on a Fedora Atomic host.",
  "readme": "dockerfiles-fedora-tools\n========================\n\nFedora Dockerfile for tools image\n\nTools image is intended to be used as [Super Privileged Container](http://developerblog.redhat.com/2014/11/06/introducing-a-super-privileged-container-concept/) (SPC) to extend the set of tools provided by Atomic Host. \n\nTo build, copy the sources down and call:\n\n\n```\n    # docker build --rm -t <username>/tools .\n```\n\nTo run:\n\n1. Not running on Atomic Host? Install the `atomic` tool with:\n   ```\n   # dnf install atomic\n   ```\n2. If you are at Atomic Host, you have `atomic` tool preinstalled and thus you can directly call\n\n   ```\n   # atomic run <username>/tools\n   ```\n\n   to get a shell in the tools container, or\n\n   ```\n   # atomic run <username>/tools <command>\n   ```\n\n   to run a specific command. For example:\n\n   ```\n   # atomic run <username>/tools man systemd\n   ```\n\n`atomic` tool uses image labels to figure out the `docker run` command. You can check the [RUN label](https://github.com/projectatomic/atomic/blob/master/docs/atomic-run.1.md) by calling\n\n```\ndocker inspect -f '{{.Config.Labels.RUN}}' <username>/tools\n```\n",
  "dockerfile": "FROM docker.io/fedora\nMAINTAINER http://fedoraproject.org/wiki/Cloud\n\nENV container docker\nLABEL RUN=\"docker run -it --name NAME --privileged --ipc=host --net=host --pid=host -e HOST=/host -e NAME=NAME -e IMAGE=IMAGE -v /run:/run -v /var/log:/var/log -v /etc/localtime:/etc/localtime -v /:/host IMAGE\"\n\nRUN [ -e /etc/yum.conf ] && sed -i '/tsflags=nodocs/d' /etc/yum.conf || true\n\n# Reinstall all packages to get man pages for them\nRUN dnf -y update && dnf -y reinstall \"*\" && dnf clean all\n\n# Install all useful packages\nRUN dnf -y remove vim-minimal && \\\n    dnf -y install \\\n           abrt \\\n           bash-completion \\\n           bc \\\n           blktrace \\\n           btrfs-progs \\\n           crash \\\n           dnf-plugins-core \\\n           docker \\\n           docker-selinux \\\n           e2fsprogs \\\n           ethtool \\\n           file \\\n           findutils \\\n           fpaste \\\n           gcc \\\n           gdb \\\n           gdb-gdbserver \\\n           git \\\n           glibc-common \\\n           glibc-utils \\\n           hwloc \\\n           iotop \\\n           iproute \\\n           iputils \\\n           kernel \\\n           kubernetes-client \\\n           kubernetes-devel \\\n           kubernetes-master \\\n           kubernetes-node \\\n           less \\\n           ltrace \\\n           mailx \\\n           man-db \\\n           nc \\\n           netsniff-ng \\\n           net-tools \\\n           numactl \\\n           numactl-devel \\\n           ostree \\\n           passwd \\\n           pciutils \\\n           pcp \\\n           perf \\\n           procps-ng \\\n           psmisc \\\n           python-dnf-plugins-extras* \\\n           python-docker-py \\\n           python-rhsm \\\n           rootfiles \\\n           rpm-ostree \\\n           screen \\\n           sos \\\n           strace \\\n           subscription-manager \\\n           sysstat \\\n           systemtap \\\n           systemtap-client \\\n           tar \\\n           tcpdump \\\n           vim-enhanced \\\n           which \\\n           xauth \\\n           && dnf clean all\n\n# Set default command\nCMD [\"/usr/bin/bash\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "[ -e /etc/yum.conf ] && sed -i '/tsflags=nodocs/d' /etc/yum.conf || true",
      "dnf -y update && dnf -y reinstall \"*\" && dnf clean all",
      "dnf -y remove vim-minimal &&     dnf -y install            abrt            bash-completion            bc            blktrace            btrfs-progs            crash            dnf-plugins-core            docker            docker-selinux            e2fsprogs            ethtool            file            findutils            fpaste            gcc            gdb            gdb-gdbserver            git            glibc-common            glibc-utils            hwloc            iotop            iproute            iputils            kernel            kubernetes-client            kubernetes-devel            kubernetes-master            kubernetes-node            less            ltrace            mailx            man-db            nc            netsniff-ng            net-tools            numactl            numactl-devel            ostree            passwd            pciutils            pcp            perf            procps-ng            psmisc            python-dnf-plugins-extras*            python-docker-py            python-rhsm            rootfiles            rpm-ostree            screen            sos            strace            subscription-manager            sysstat            systemtap            systemtap-client            tar            tcpdump            vim-enhanced            which            xauth            && dnf clean all"
    ],
    "workdir": [],
    "from": "docker.io/fedora",
    "maintainer": "http://fedoraproject.org/wiki/Cloud",
    "env": {
      "container": "docker"
    },
    "label": "RUN=\"docker run -it --name NAME --privileged --ipc=host --net=host --pid=host -e HOST=/host -e NAME=NAME -e IMAGE=IMAGE -v /run:/run -v /var/log:/var/log -v /etc/localtime:/etc/localtime -v /:/host IMAGE\"",
    "cmd": "[\"/usr/bin/bash\"]"
  },
  "source_repository_url": "https://github.com/fedora-cloud/Fedora-Dockerfiles.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/fedora-cloud/Fedora-Dockerfiles",
  "docker_repository": "fedora/tools",
  "docker_image": "fedora/tools",
  "parameters_schema": {
    "container": {
      "default": "docker",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "fedora/tools",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/fedora/tools",
    "https://hub.docker.com/v2/repositories/fedora/tools",
    "https://github.com/fedora-cloud/Fedora-Dockerfiles.git"
  ],
  "labels": [
    "Docker",
    "Binding/Region/North America/US",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Infrastructure/Operating System/Linux/Fedora"
  ],
  "info_url": "https://hub.docker.com/r/fedora/tools",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}