{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/dawiddominiak/mongo",
    "repository_url": "https://hub.docker.com/v2/repositories/dawiddominiak/mongo",
    "tags_url": "https://hub.docker.com/v2/repositories/dawiddominiak/mongo/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/dawiddominiak/mongo/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/dawiddominiak/mongo/autobuild",
    "user": "dawiddominiak",
    "name": "mongo",
    "namespace": "dawiddominiak",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 74,
    "last_updated": "2015-10-06T13:20:21.143362Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 95668879,
        "id": 1053841,
        "repository": 346669,
        "creator": 399434,
        "last_updater": 399434,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "dawiddominiak/docker-mongo"
  },
  "name": "dawiddominiak/mongo Docker container",
  "description": "Enchanted official Mongo docker container.",
  "readme": "# Mongo\n### Description\nFrontend for [official docker mongo container](https://hub.docker.com/_/mongo/).\nRunning container executes command starting mongod\nand waits for mongod to listen connections on it's port'.\nThen the scripts creates new users (of given database and admin root) in proper database contexts\nand restart mongo with auth parameter included.\n\n##### The following env variables should be set:\n * DATABASE_NAME - name of database where created root user has \"readWrite\" access to.\n * MONGO_USER - user name of given database.\n * MONGO_PASSWORD - user password of given database.\n * MONGO_ADMIN_USER - root user name\n * MONGO_ADMIN_PASSWORD - root user password\n\nCMD #should not be overridden ([look at Dockerfile](Dockerfile)).",
  "dockerfile": "FROM mongo\nMAINTAINER GPN DATA programmers \"dd@gpndata.com\"\n\nENV APP_HOME /mongo\nRUN mkdir $APP_HOME\n\nWORKDIR $APP_HOME\n\nCOPY . $APP_HOME\nCMD [\"./init.sh\"]",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "mkdir $APP_HOME"
    ],
    "workdir": [
      "$APP_HOME"
    ],
    "from": "mongo",
    "maintainer": "GPN DATA programmers \"dd@gpndata.com\"",
    "env": {
      "APP_HOME": "/mongo"
    },
    "copy": ". $APP_HOME",
    "cmd": "[\"./init.sh\"]"
  },
  "source_repository_url": "https://github.com/dawiddominiak/docker-mongo.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/dawiddominiak/docker-mongo",
  "docker_repository": "dawiddominiak/mongo",
  "docker_image": "dawiddominiak/mongo",
  "parameters_schema": {
    "APP_HOME": {
      "default": "/mongo",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "dawiddominiak/mongo",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/dawiddominiak/mongo",
    "https://hub.docker.com/v2/repositories/dawiddominiak/mongo",
    "https://github.com/dawiddominiak/docker-mongo.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Build/Java/Ant",
    "Type/Middleware/Data Store/Document-oriented/MongoDB"
  ],
  "info_url": "https://hub.docker.com/r/dawiddominiak/mongo",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}