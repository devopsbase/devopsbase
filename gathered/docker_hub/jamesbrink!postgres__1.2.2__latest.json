{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/jamesbrink/postgres",
    "repository_url": "https://hub.docker.com/v2/repositories/jamesbrink/postgres",
    "tags_url": "https://hub.docker.com/v2/repositories/jamesbrink/postgres/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/jamesbrink/postgres/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/jamesbrink/postgres/autobuild",
    "user": "jamesbrink",
    "name": "postgres",
    "namespace": "jamesbrink",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 5,
    "pull_count": 1424,
    "last_updated": "2015-07-03T11:54:06.263968Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "1.2.2",
        "full_size": 178418708,
        "id": 519720,
        "repository": 197849,
        "creator": 9672,
        "last_updater": 9672,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.2.1",
        "full_size": 178419178,
        "id": 508605,
        "repository": 197849,
        "creator": 9672,
        "last_updater": 9672,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.2.0",
        "full_size": 178418884,
        "id": 460828,
        "repository": 197849,
        "creator": 9672,
        "last_updater": 9672,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.1.0",
        "full_size": 177580258,
        "id": 460165,
        "repository": 197849,
        "creator": 9672,
        "last_updater": 9672,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "latest",
        "full_size": 178418709,
        "id": 189337,
        "repository": 197849,
        "creator": 9672,
        "last_updater": 9672,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.0.0",
        "full_size": 177580066,
        "id": 189136,
        "repository": 197849,
        "creator": 9672,
        "last_updater": 9672,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "jamesbrink/docker-postgres"
  },
  "name": "jamesbrink/postgres Docker container",
  "description": "Highly configurable PostgreSQL container.",
  "readme": "Docker Container for PostgreSQL 9.4\n=================\n\nThis is a highly configurable container for [PostgreSQL 9.4](http://www.postgresql.org/).\nIt allows for basic initial user/pass and schema configuration via ENV variables.\n\n##Extensions##\nThis container is preloaded with the following extensions.\n\n* [PostgreSQL-Contrib](http://www.postgresql.org/docs/9.4/static/contrib.html)\n* [PostGIS 2.1](http://postgis.net/)\n\n\n##Usage##\nTo run with default settings\n\n```\ndocker run -P --name postgres jamesbrink/postgres`\n```\n\nTo run with customized settings\n\n```\ndocker run -P --name postgres -e USER=foo -e PASSWORD=bar -e SCHEMA=foo -e ENCODING=UTF8 jamesbrink/postgres\n```\nThis will create a new container with the username and schema of `foo` encoded in UTF-8 and a password of `bar`\n\nTo add PostGIS support to the database pass the environment variable POSTGIS=true.\n```\ndocker run -P --name postgresql -e USER=foo -e PASSWORD=bar -e SCHEMA=foo -e ENCODING=UTF8 -e POSTGIS=true jamesbrink/postgresql\n```\n\nHere is an example of the run. Take note of the user/pass and schema when you start the container as it will not be shown again. Of course you can change these settings and add additional users and schemas at any point.\n\n\n    james@ubuntu:~$ docker run -P --name postgres jamesbrink/postgresql\n    Waiting for PostgreSQL to start\n    2014-04-21 20:36:42 UTC LOG:  database system was shut down at 2014-04-21 04:34:43 UTC\n    2014-04-21 20:36:42 UTC LOG:  autovacuum launcher started\n    2014-04-21 20:36:42 UTC LOG:  database system is ready to accept connections\n    Below are your configured options.\n    ================\n    USER: postgres\n    PASSWORD: postgres\n    SCHEMA: postgres\n    POSTGIS: false\n    ================\n    ALTER ROLE\n\n\n##Container Linking##\nHere are some examples of linking containers to postgresql\n\nFirst we create a container, here I am using a random password generated from openssl\n\n    james@ubuntu:~$ docker run -P --name postgres -e PASSWORD=`openssl rand -hex 10` -e USER=james -e SCHEMA=test jamesbrink/postgresql\n    Waiting for PostgreSQL to start\n    Below are your configured options.\n    ================\n    USER: james\n    PASSWORD: 5387fc737962925e2c70\n    SCHEMA: test\n    POSTGIS: false\n    ENCODING: SQL_ASCII\n    ================\n    2014-04-21 21:07:24 UTC LOG:  database system was shut down at 2014-04-21 04:34:43 UTC\n    2014-04-21 21:07:24 UTC LOG:  autovacuum launcher started\n    2014-04-21 21:07:24 UTC LOG:  database system is ready to accept connections\n    CREATE USER\n\nWith the postgres container up and running, lets create a new container and link it with an alias of `db`.\n\n    james@ubuntu:~$ docker run -i -t --link postgres:db ubuntu /bin/bash\n    \nNow from inside the container ensure you have a postgresql client installed.\n\n    root@47b16d7d1e13:/# apt-get install postgresql-client\n    \nYou can now connect to the database in a variety of ways. lets first inspect the environment. The variables of interest here are all prefixed with `DB_`\n\n    root@47b16d7d1e13:/# env\n    HOSTNAME=47b16d7d1e13\n    DB_NAME=/cocky_babbage/db\n    TERM=xterm\n    DB_PORT_5432_TCP_ADDR=172.17.0.2\n    DB_ENV_SCHEMA=test\n    DB_PORT=tcp://172.17.0.2:5432\n    DB_PORT_5432_TCP=tcp://172.17.0.2:5432\n    PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n    PWD=/\n    DB_ENV_PASSWORD=5387fc737962925e2c70\n    DB_PORT_5432_TCP_PORT=5432\n    SHLVL=1\n    HOME=/\n    DB_ENV_USER=james\n    DB_PORT_5432_TCP_PROTO=tcp\n    _=/usr/bin/env\n\nConnect manually.\n\n    root@47b16d7d1e13:/# psql -h 172.17.0.2 -U james test\n    Password for user james: \n    psql (9.1.13, server 9.3.4)\n    WARNING: psql version 9.1, server version 9.3.\n         Some psql features might not work.\n    SSL connection (cipher: DHE-RSA-AES256-SHA, bits: 256)\n    Type \"help\" for help.\n    test=# \n\nConnect using ENV variables.\n\n    root@47b16d7d1e13:/# PGPASSWORD=$DB_ENV_PASSWORD psql -h $DB_PORT_5432_TCP_ADDR -U $DB_ENV_USER $DB_ENV_SCHEMA\n    psql (9.1.13, server 9.3.4)\n    WARNING: psql version 9.1, server version 9.3.\n         Some psql features might not work.\n    SSL connection (cipher: DHE-RSA-AES256-SHA, bits: 256)\n    Type \"help\" for help.\n    test=# \n    \nCreate an application friendly URI.\n\n    root@47b16d7d1e13:/# export DB_URI=postgres://$DB_ENV_USER:$DB_ENV_PASSWORD@$DB_PORT_5432_TCP_ADDR:$DB_PORT_5432_TCP_PORT/$DB_ENV_SCHEMA\n    root@47b16d7d1e13:/# echo $DB_URI\n    postgres://james:5387fc737962925e2c70@172.17.0.2:5432/test\n\n##Data Volumes##\nThe following directories are setup as volumes and can be accessed from other containers.\n\n* /etc/postgresql\n* /var/lib/postgresql\n* /var/log/postgresql\n \nExample of connecting the volumes to a container.\n\n\n    james@ubuntu:~$ docker run --volumes-from postgres -i -t ubuntu bash\n    root@6c3e9e61530f:/# mount |grep postgresql\n    /dev/disk/by-uuid/cb08824e-c579-4fbc-8fea-668fafa212cc on /etc/postgresql type ext4 (rw,relatime,errors=remount-ro,data=ordered)\n    /dev/disk/by-uuid/cb08824e-c579-4fbc-8fea-668fafa212cc on /var/lib/postgresql type ext4 (rw,relatime,errors=remount-ro,data=ordered)\n    /dev/disk/by-uuid/cb08824e-c579-4fbc-8fea-668fafa212cc on /var/log/postgresql type ext4 (rw,relatime,errors=remount-ro,data=ordered)\n    \n\n    \n##Environment Variables##\nThis is a list of the available environment variables which can be set at runtime using -e KEY=value.\nFor example, to change the default password you can issue `docker run -P --name postgresql -e PASSWORD=mysecretpassword jamesbrink/postgresql`\n\n* `USER`: A superuser role. default: `postgres`\n* `PASSWORD`: The password for the user. default: `postgres`\n* `SCHEMA`: Name of schema to create. default: `postgres`\n* `ENCODING`: Encoding of the schema we are about to create. default: SQL_ASCII\n* `POSTGIS`: Enable PostGIS extensions on the schema.\n\n##Backups##\nBe sure to run regular backups of any production databases. This can be handled in many different ways and I will not go into details here about how you should handle your backups. For additional information on backing up databases refer to the [PostgreSQL 9.4 Documentation on Backups](http://www.postgresql.org/docs/9.4/static/backup.html)\n\n",
  "dockerfile": "# PostgtreSQL 9.4\n#\n# VERSION    1.2.2\n\nFROM debian:jessie\nMAINTAINER James Brink, brink.james@gmail.com\nLABEL version=\"1.2.2\"\nLABEL decription=\"PostgreSQL Server 9.4\"\n\nRUN apt-get update \\\n  && apt-get install -y \\\n  inotify-tools \\\n  postgresql-9.4 \\\n  postgresql-contrib-9.4 \\\n  postgresql-9.4-postgis-2.1 \\\n  postgresql-client-9.4 \\\n  supervisor \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /var/run/supervisor \\\n  && chown -R postgres:postgres /var/run/supervisor\n\nADD docker-assets/ /\n\nRUN chown postgres:postgres /usr/local/bin/postgres.sh /usr/local/etc/pg_backup.config \\\n  && chmod +x /usr/local/bin/postgres.sh \\\n  && chmod +x /usr/local/bin/pg_backup.sh \\\n  && chmod +x /usr/local/bin/log_watch.sh \\\n  && chown -R postgres:postgres /var/run/postgresql /var/backups /usr/local/etc\n\n# Locale setting\nENV LOCALE en_US.UTF-8\n\n# Initial default user/pass and schema\nENV USER postgres\nENV PASSWORD postgres\nENV SCHEMA postgres\nENV POSTGIS false\nENV ENCODING SQL_ASCII\n\n# Database backup settings\nENV BACKUP_ENABLED false\nENV BACKUP_FREQUENCY daily\n\n# TODO implement these\nENV BACKUP_RETENTION 7\nENV BACKUP_EMAIL postgres\nENV ENVIRONMENT development\n\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/9.4/main/postgresql.conf \\\n  && echo \"host all  all    0.0.0.0/0  md5\" >> /etc/postgresql/9.4/main/pg_hba.conf\n\nVOLUME\t[\"/etc/postgresql\", \"/var/log/postgresql\", \"/var/lib/postgresql\", \"/var/backups\"]\n\nRUN touch /var/lib/postgresql/firstrun && chmod 666 /var/lib/postgresql/firstrun\n\nEXPOSE 5432\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "docker-assets/",
        "dest": "/"
      }
    ],
    "expose": [
      5432
    ],
    "volume": [],
    "run": [
      "apt-get update   && apt-get install -y   inotify-tools   postgresql-9.4   postgresql-contrib-9.4   postgresql-9.4-postgis-2.1   postgresql-client-9.4   supervisor   && rm -rf /var/lib/apt/lists/*",
      "mkdir -p /var/run/supervisor   && chown -R postgres:postgres /var/run/supervisor",
      "chown postgres:postgres /usr/local/bin/postgres.sh /usr/local/etc/pg_backup.config   && chmod +x /usr/local/bin/postgres.sh   && chmod +x /usr/local/bin/pg_backup.sh   && chmod +x /usr/local/bin/log_watch.sh   && chown -R postgres:postgres /var/run/postgresql /var/backups /usr/local/etc",
      "echo \"listen_addresses='*'\" >> /etc/postgresql/9.4/main/postgresql.conf   && echo \"host all  all    0.0.0.0/0  md5\" >> /etc/postgresql/9.4/main/pg_hba.conf",
      "touch /var/lib/postgresql/firstrun && chmod 666 /var/lib/postgresql/firstrun"
    ],
    "workdir": [],
    "from": "debian:jessie",
    "maintainer": "James Brink, brink.james@gmail.com",
    "label": "decription=\"PostgreSQL Server 9.4\"",
    "env": {
      "LOCALE": "en_US.UTF-8",
      "USER": "postgres",
      "PASSWORD": "postgres",
      "SCHEMA": "postgres",
      "POSTGIS": "false",
      "ENCODING": "SQL_ASCII",
      "BACKUP_ENABLED": "false",
      "BACKUP_FREQUENCY": "daily",
      "BACKUP_RETENTION": "7",
      "BACKUP_EMAIL": "postgres",
      "ENVIRONMENT": "development"
    },
    "cmd": "[\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]"
  },
  "source_repository_url": "https://github.com/jamesbrink/docker-postgres.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/jamesbrink/docker-postgres",
  "docker_repository": "jamesbrink/postgres",
  "docker_image": "jamesbrink/postgres",
  "parameters_schema": {
    "LOCALE": {
      "default": "en_US.UTF-8",
      "type": "string",
      "mapping": "environment_variable"
    },
    "USER": {
      "default": "postgres",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PASSWORD": {
      "default": "postgres",
      "type": "string",
      "mapping": "environment_variable"
    },
    "SCHEMA": {
      "default": "postgres",
      "type": "string",
      "mapping": "environment_variable"
    },
    "POSTGIS": {
      "default": "false",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ENCODING": {
      "default": "SQL_ASCII",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BACKUP_ENABLED": {
      "default": "false",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BACKUP_FREQUENCY": {
      "default": "daily",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BACKUP_RETENTION": {
      "default": "7",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BACKUP_EMAIL": {
      "default": "postgres",
      "type": "string",
      "mapping": "environment_variable"
    },
    "ENVIRONMENT": {
      "default": "development",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        5432
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "jamesbrink/postgres",
  "revision": "1.2.2",
  "uris": [
    "https://hub.docker.com/r/jamesbrink/postgres",
    "https://hub.docker.com/v2/repositories/jamesbrink/postgres",
    "https://github.com/jamesbrink/docker-postgres.git"
  ],
  "labels": [
    "Docker",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Data Store/Relational/PostgreSQL"
  ],
  "info_url": "https://hub.docker.com/r/jamesbrink/postgres",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}