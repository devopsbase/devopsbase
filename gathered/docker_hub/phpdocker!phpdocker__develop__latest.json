{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/phpdocker/phpdocker",
    "repository_url": "https://hub.docker.com/v2/repositories/phpdocker/phpdocker",
    "tags_url": "https://hub.docker.com/v2/repositories/phpdocker/phpdocker/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/phpdocker/phpdocker/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/phpdocker/phpdocker/autobuild",
    "user": "phpdocker",
    "name": "phpdocker",
    "namespace": "phpdocker",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 8360,
    "last_updated": "2016-10-13T07:37:04.346257Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "develop",
        "full_size": 365699756,
        "id": 2193258,
        "repository": 448546,
        "creator": 555386,
        "last_updater": 555386,
        "last_updated": "2016-10-13T07:37:03.223714Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "7.0",
        "full_size": 365698517,
        "id": 1584115,
        "repository": 448546,
        "creator": 554961,
        "last_updater": 555386,
        "last_updated": "2016-10-13T07:14:31.860675Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.6",
        "full_size": 355681140,
        "id": 1584120,
        "repository": 448546,
        "creator": 554961,
        "last_updater": 555386,
        "last_updated": "2016-10-13T06:51:58.672195Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 365698717,
        "id": 1574864,
        "repository": 448546,
        "creator": 554961,
        "last_updater": 555386,
        "last_updated": "2016-10-13T06:31:02.165421Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.5",
        "full_size": 339943901,
        "id": 1584110,
        "repository": 448546,
        "creator": 554961,
        "last_updater": 555386,
        "last_updated": "2016-07-24T07:11:23.748966Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "5.4",
        "full_size": 366594290,
        "id": 1584116,
        "repository": 448546,
        "creator": 554961,
        "last_updater": 555386,
        "last_updated": "2016-07-24T06:49:59.471779Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "phpdocker/phpdocker"
  },
  "name": "phpdocker/phpdocker Docker container",
  "description": "PHP, MariaDB, Composer, PHP CodeSniffer.",
  "readme": "# phpdocker/phpdocker\n\n## Usage\n\n* Docker image is available at [Docker Hub](https://hub.docker.com/r/phpdocker/phpdocker/).\n* The primary goal of this Docker image is custom image for CI, but you can obviously use it like you want.\n\n## Example\n\n* [Shippable CI](https://bitbucket.org/hranicka/composer-sandbox/src/master/shippable.yml?at=master&fileviewer=file-view-default) custom container\n\n## Tags\n\n* Tags depend on version of PHP included.\n* They are given by git branches.\n* You can see them at [Docker Hub](https://hub.docker.com/r/phpdocker/phpdocker/tags/).\n\n---\n\n## Available Bash scripts\n\n### [check-status-code](bin/check-status-code)\n\nThis performs a HTTP Request and checks returned status code.\n\nReturns non-zero exit code when status is not 200 (OK).\n\nUsage: `URL=\"https://www.example.com\" check-status-code`\n\nReturns non-zero exit code when status is not 403 (Forbidden).\n\nUsage: `URL=\"https://www.example.com\" STATUS=403 check-status-code`\n\n## Built-in applications\n\n* [GIT](https://git-scm.com/)\n* [PHP](http://php.net) (from official [PHP Docker images](https://registry.hub.docker.com/_/php/))\n\t* [XDebug](http://xdebug.org)\n\t\t* XDebug is not enabled by default, see i.e. [Composer docs](https://getcomposer.org/doc/articles/troubleshooting.md#xdebug-impact-on-composer)\n\t\t* You can run script with XDebug enabled like: `php -d$XDEBUG_EXT vendor/bin/phpunit` or `php_xdebug vendor/bin/phpunit`\n\t* [SSH2](http://php.net/ssh2)\n\t* [Redis](http://redis.io)\n\t* [APCu](http://php.net/apcu)\n\t* [Memcached](http://php.net/manual/en/book.memcached.php)\n* [NodeJS](https://nodejs.org)\n\t* [Yarn](https://yarnpkg.com/)\n\t* [Grunt](http://gruntjs.com/)\n\t* [Gulp](http://gulpjs.com/)\n\t* [Bower](http://bower.io)\n* [MariaDB](https://mariadb.org)\n* [Composer](https://getcomposer.org)\n* [PHP_CodeSniffer](https://www.squizlabs.com/php-codesniffer) \n* [PHPUnit](https://phpunit.de)\n\n### PHP\n\n* PHP is started automatically.\n* You can type PHP commands, eg. `php -r \"echo 1;\"`.\n* Each Docker image contains ONLY ONE VERSION OF PHP, so:\n\t* If you need PHP 5.6, use `phpdocker/phpdocker:5.6`.\n\t* If you need PHP 7.0, use `phpdocker/phpdocker:7.0`.\n\n### MariaDB\n\n* MariaDB is not started automatically.\n* Type `service mysql start` if you want start it.\n* Then you can work with DB, eg. `mysql -e 'create database test;'`.\n* Default mysql user is `root` without password.\n\n### Redis\n\n* Redis is not started automatically.\n* Type `service redis-server start` if you want start it.\n* Then you can work with DB, eg. `redis-cli ping`.\n\n### Composer\n\n* Composer is installed globally.\n* You can run it, eg. `composer self-update`.\n\n### PHP_CodeSniffer\n\n* PHP_CodeSniffer is installed globally.\n* You can run it, eg. `phpcs --standard=PSR2 -nsp src tests`.\n\n### PHPUnit\n\n* PHPUnit is installed globally.\n* You can run it, eg. `phpunit --log-junit shippable/testresults/junit.xml --coverage-xml shippable/codecoverage -c tests/configuration.xml tests`.\n",
  "dockerfile": "FROM php:7.0-fpm\n\nMAINTAINER Jaroslav Hranicka <hranicka@outlook.com>\n\nENV DEBIAN_FRONTEND noninteractive\nCOPY bin/* /usr/local/bin/\nRUN chmod -R 700 /usr/local/bin/\n\n\n# Locales\n\tRUN apt-get update \\\n\t\t&& apt-get install -y locales\n\n\tRUN dpkg-reconfigure locales \\\n\t\t&& locale-gen C.UTF-8 \\\n\t\t&& /usr/sbin/update-locale LANG=C.UTF-8\n\n\tRUN echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen \\\n\t\t&& locale-gen\n\n\tENV LC_ALL C.UTF-8\n\tENV LANG en_US.UTF-8\n\tENV LANGUAGE en_US.UTF-8\n\n\n# Common\n\tRUN apt-get update \\\n\t\t&& apt-get install -y \\\n\t\t\topenssl \\\n\t\t\tgit\n\n\n# PHP\n\t# intl\n\tRUN apt-get update \\\n\t\t&& apt-get install -y libicu-dev \\\n\t\t&& docker-php-ext-configure intl \\\n\t\t&& docker-php-ext-install intl\n\n\t# xml\n\tRUN apt-get update \\\n\t\t&& apt-get install -y \\\n\t\tlibxml2-dev \\\n\t\tlibxslt-dev \\\n\t\t&& docker-php-ext-install \\\n\t\t\tdom \\\n\t\t\txmlrpc \\\n\t\t\txsl\n\n\t# images\n\tRUN apt-get update \\\n\t\t&& apt-get install -y \\\n\t\tlibfreetype6-dev \\\n\t\tlibjpeg62-turbo-dev \\\n\t\tlibpng12-dev \\\n\t\tlibgd-dev \\\n\t\t&& docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n\t\t&& docker-php-ext-install \\\n\t\t\tgd \\\n\t\t\texif\n\n\t# database\n\tRUN docker-php-ext-install \\\n\t\tmysqli \\\n\t\tpdo \\\n\t\tpdo_mysql\n\n\t# mcrypt\n\tRUN apt-get update \\\n\t\t&& apt-get install -y libmcrypt-dev \\\n\t\t&& docker-php-ext-install mcrypt\n\n\t# strings\n\tRUN docker-php-ext-install \\\n\t\tgettext \\\n\t\tmbstring\n\n\t# math\n\tRUN apt-get update \\\n\t\t&& apt-get install -y libgmp-dev \\\n\t\t&& ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n\t\t&& docker-php-ext-install \\\n\t\t\tgmp \\\n\t\t\tbcmath\n\n\t# compression\n\tRUN apt-get update \\\n\t\t&& apt-get install -y \\\n\t\tlibbz2-dev \\\n\t\tzlib1g-dev \\\n\t\t&& docker-php-ext-install \\\n\t\t\tzip \\\n\t\t\tbz2\n\n\t# ftp\n\tRUN apt-get update \\\n\t\t&& apt-get install -y \\\n\t\tlibssl-dev \\\n\t\t&& docker-php-ext-install \\\n\t\t\tftp\n\n\t# ssh2\n\tRUN apt-get update \\\n\t\t&& apt-get install -y \\\n\t\tlibssh2-1-dev\n\n\t# others\n\tRUN docker-php-ext-install \\\n\t\tsoap \\\n\t\tsockets \\\n\t\tsysvmsg \\\n\t\tsysvsem \\\n\t\tsysvshm\n\n\t# PECL\n\tRUN docker-php-pecl-install \\\n\t\tssh2-1.0 \\\n\t\tredis-3.0 \\\n\t\tapcu-5.1.5\n\n\t# Memcached\n\t# TODO PECL not available for PHP 7 yet, we must compile it.\n\tRUN apt-get update \\\n\t\t&& apt-get install -y \\\n\t\tlibmemcached-dev \\\n\t\tlibmemcached11\n\n\tRUN cd /tmp \\\n\t\t&& git clone -b php7 https://github.com/php-memcached-dev/php-memcached \\\n\t\t&& cd php-memcached \\\n\t\t&& phpize \\\n\t\t&& ./configure \\\n\t\t&& make \\\n\t\t&& cp /tmp/php-memcached/modules/memcached.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/memcached.so \\\n\t\t&& docker-php-ext-enable memcached\n\n\t# Install XDebug, but not enable by default. Enable using:\n\t# * php -d$XDEBUG_EXT vendor/bin/phpunit\n\t# * php_xdebug vendor/bin/phpunit\n\tRUN pecl install xdebug-2.4.1\n\tENV XDEBUG_EXT zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/xdebug.so\n\tRUN alias php_xdebug=\"php -d$XDEBUG_EXT vendor/bin/phpunit\"\n\n\t# Install composer and put binary into $PATH\n\tRUN curl -sS https://getcomposer.org/installer | php \\\n\t\t&& mv composer.phar /usr/local/bin/ \\\n\t\t&& ln -s /usr/local/bin/composer.phar /usr/local/bin/composer\n\n\t# Install PHP Code sniffer\n\tRUN curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar \\\n\t\t&& chmod 755 phpcs.phar \\\n\t\t&& mv phpcs.phar /usr/local/bin/ \\\n\t\t&& ln -s /usr/local/bin/phpcs.phar /usr/local/bin/phpcs \\\n\t\t&& curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar \\\n\t\t&& chmod 755 phpcbf.phar \\\n\t\t&& mv phpcbf.phar /usr/local/bin/ \\\n\t\t&& ln -s /usr/local/bin/phpcbf.phar /usr/local/bin/phpcbf\n\n\t# Install PHPUnit\n\tRUN curl -OL https://phar.phpunit.de/phpunit.phar \\\n\t\t&& chmod 755 phpunit.phar \\\n\t\t&& mv phpunit.phar /usr/local/bin/ \\\n\t\t&& ln -s /usr/local/bin/phpunit.phar /usr/local/bin/phpunit\n\n\tADD php.ini /usr/local/etc/php/conf.d/docker-php.ini\n\n\n## NodeJS, NPM\n\t# Install NodeJS\n\tRUN curl -sL https://deb.nodesource.com/setup_4.x | bash - \\\n\t\t&& apt-get install -y nodejs\n\n\t# Install Yarn\n\tRUN apt-key adv --keyserver pgp.mit.edu --recv D101F7899D41F3C3 \\\n\t\t&& echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\n\tRUN apt-get update \\\n\t\t&& apt-get install -y yarn\n\n\t# Install Grunt globally\n\tRUN npm install -g grunt-cli\n\n\t# Install Gulp globally\n\tRUN npm install -g gulp-cli\n\n\t# Install Bower globally\n\tRUN npm install -g bower\n\n\n# MariaDB\n\tRUN apt-get update \\\n\t\t&& apt-get install -y software-properties-common \\\n\t\t&& apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db \\\n\t\t&& add-apt-repository 'deb [arch=amd64,i386] http://mirror.vpsfree.cz/mariadb/repo/10.1/debian jessie main'\n\n\tRUN apt-get update \\\n\t\t&& apt-get install -y mariadb-server \\\n\t\t&& mysql_install_db\n\n\tVOLUME /var/lib/mysql\n\n\tADD my.cnf /etc/mysql/conf.d/my.cnf\n\n\tEXPOSE 3306\n\n\n# Redis\n\tRUN apt-get update \\\n\t\t&& apt-get install -y redis-server\n\n\tEXPOSE 6379\n\n\n# Clean all\n\tRUN apt-get clean\n\tRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/cache/*\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "chmod -R 700 /usr/local/bin/"
    ],
    "workdir": [],
    "from": "php:7.0-fpm",
    "maintainer": "Jaroslav Hranicka <hranicka@outlook.com>",
    "env": {
      "DEBIAN_FRONTEND": "noninteractive"
    },
    "copy": "bin/* /usr/local/bin/"
  },
  "source_repository_url": "https://github.com/phpdocker/phpdocker.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/phpdocker/phpdocker",
  "docker_repository": "phpdocker/phpdocker",
  "docker_image": "phpdocker/phpdocker",
  "parameters_schema": {
    "DEBIAN_FRONTEND": {
      "default": "noninteractive",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "phpdocker/phpdocker",
  "revision": "develop",
  "uris": [
    "https://hub.docker.com/r/phpdocker/phpdocker",
    "https://hub.docker.com/v2/repositories/phpdocker/phpdocker",
    "https://github.com/phpdocker/phpdocker.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Runtime/PHP",
    "Type/Middleware/Data Store/Relational/MariaDB"
  ],
  "info_url": "https://hub.docker.com/r/phpdocker/phpdocker",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}