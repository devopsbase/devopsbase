{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/wmark/wordpress-hhvm",
    "repository_url": "https://hub.docker.com/v2/repositories/wmark/wordpress-hhvm",
    "tags_url": "https://hub.docker.com/v2/repositories/wmark/wordpress-hhvm/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/wmark/wordpress-hhvm/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/wmark/wordpress-hhvm/autobuild",
    "user": "wmark",
    "name": "wordpress-hhvm",
    "namespace": "wmark",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 2,
    "pull_count": 370,
    "last_updated": "2016-09-29T00:53:06.460921Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 136612287,
        "id": 2153522,
        "repository": 553823,
        "creator": 196490,
        "last_updater": 196490,
        "last_updated": "2016-09-29T00:53:04.012260Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "wmark/docker-wordpress-hhvm"
  },
  "name": "wmark/wordpress-hhvm Docker container",
  "description": "nginx, Redis, Wordpress, CDN Linker, fcron, automatic backups — for testing purposes",
  "readme": "Nginx, Redis, Wordpress, HHVM\n=============================\n\n**HHVM** runs **Wordpress** behind **Nginx**/BoringSSL.\nComes with plugin for/from **Mailgun.org**, and **CDN Linker**, which caches to **Redis** if you enable that.\n\n[![](https://images.microbadger.com/badges/image/wmark/wordpress-hhvm.svg)](http://microbadger.com/images/wmark/wordpress-hhvm \"Get your own image badge on microbadger.com\")\n\nStarting the container triggers database(s) restore from backups (if available and need be),\nand creates daily backups to another volume (listed below).\n*Cron daemon* is **fcron**.\n\nDo not use this in production!\n\nUsage\n-----\n\nWordpress takes its data needed to connect to MariaDB/MySQL through environment variables,\nas provided by Docker image *MariaDB*.\n\n    The default hostname is `autogenerated.local` and `www.autogenerated.local`.\n\nStart with:\n\n```bash\nmkdir -p /var/customer/me/mysql\nchattr +C $_\n\ndocker run --rm --name my_mariadb \\\n  -e MYSQL_ROOT_PASSWORD=YYYYYYYYYYY \\\n  -e MYSQL_USER=myuser -e MYSQL_PASSWORD=mypasswd \\\n  -e MYSQL_DATABASE=my_wp \\\n  -v /var/customer/me/mysql:/var/lib/mysql \\\n  \"mariadb:10.1\"\n```\n\nAnd finally (all volumes are optional):\n\n```bash\ndocker run --rm --name my_web \\\n  --link \"my_mariadb:MYSQL\" \\\n  -p 80:80 -p 443:443 \\\n  -v /var/customer/me/backup:/var/www/backup \\\n  -v /var/customer/me/log:/var/log \\\n  -v /var/customer/me/hhvm-cache:/var/cache/hhvm \\\n  wmark/wordpress-hhvm\n```\n\nNotable volumes:\n\n 1. `/etc/ssl` — for your own SSL certificates (web.key is the private key, web.crt your certificate followed by your issuer's)\n 2. `/etc/nginx/vhosts.d` — customize Nginx' settings, add your own domain name\n 3. `/var/www/html` — this directory gets served by Nginx/HHVM/PHP\n 4. `/var/cache/hhvm` — HHVM stores its compiled-PHP–files here\n 5. `/var/www/backup` — daily backups of the MySQL or MariaDB database(s) go here, the latest is symlinked as `latest`\n 6. `/var/log` — logfiles\n 7. `/etc/fcrontab` — not really a directory, but in case you want other cronjobs: inject that file\n",
  "dockerfile": "FROM blitznote/debootstrap-amd64:16.04\nMAINTAINER W. Mark Kubacki <wmark@hurrikane.de>\nLABEL org.label-schema.vendor=\"W. Mark Kubacki\" \\\n      org.label-schema.name=\"Wordpress, Nginx, HHVM stack for CI/CD\" \\\n      org.label-schema.vcs-type=\"git\" \\\n      org.label-schema.vcs-url=\"https://github.com/wmark/docker-wordpress-hhvm\"\n\n# In order to avoid creating a single very large layer\n# this has intentionally been split.\n# Subversion is needed for Wordpress, and GIT for some plugins.\n# Redis for caching by CDN Linker Pro.\n# fcron is used to trigger Wordpress' cronjobs and daily backups.\nRUN printf 'Package: *\\nPin: origin \"s.blitznote.com\"\\nPin-Priority: 510\\n' >/etc/apt/preferences.d/prefer-blitznote \\\n && /usr/bin/get-gpg-key 0xcbcb082a1bb943db 0xF1656F24C74CD1D8 | apt-key add \\\n && printf \"deb [arch=$(dpkg --print-architecture)] http://ftp.igh.cnrs.fr/pub/mariadb/repo/10.1/ubuntu xenial main\" >/etc/apt/sources.list.d/mariadb.list \\\n && apt-get -q update \\\n && apt-get -y install \\\n      --allow-downgrades --no-install-recommends \\\n      mariadb-client \\\n && apt-get -y install \\\n      --no-install-recommends \\\n      subversion git nginx-light redis-server fcron \\\n      rsync plzip less unzip patch file psmisc tree \\\n      openssl dhtool \\\n      libjemalloc1=3.* \\\n && apt-mark hold libjemalloc1 \\\n && gpasswd -a fcron users \\\n && rm /usr/sbin/nginx \\\n && curl --silent --show-error --fail --location --compressed \\\n      --header \"Accept: application/octet-stream\" \\\n      --pinnedpubkey \"sha256//fxBZ92Ul/3NOZJsiNJLhv5wHfywCe9PZvHWI6rd6frU=\" \\\n      -o /usr/sbin/nginx \\\n      https://s.blitznote.com/debs/ubuntu/$(dpkg --print-architecture)/nginx \\\n && ((file /usr/sbin/nginx | grep -q -F gzip && mv /usr/sbin/nginx /usr/sbin/nginx.gz && gunzip /usr/sbin/nginx.gz) || true) \\\n && chmod a+x /usr/sbin/nginx \\\n && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN /usr/bin/get-gpg-key 0x5a16e7281be7a449 | apt-key add \\\n && printf \"deb [arch=$(dpkg --print-architecture)] http://dl.hhvm.com/ubuntu xenial main\\n\" >/etc/apt/sources.list.d/hhvm.list \\\n && apt-get -q update \\\n && apt-get -y install \\\n      --no-install-recommends \\\n      hhvm \\\n && sed -i \\\n      -e '/hhvm.repo.central.path/c hhvm.repo.central.path = /var/cache/hhvm/hhvm.hhbc' \\\n      /etc/hhvm/server.ini \\\n && printf \"hhvm.eval.jit = true\\n\" >>/etc/hhvm/server.ini \\\n && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Wordpress\nRUN useradd -u 1001 -s /bin/bash -g users -G fcron,www-data -M --home-dir=/home/owner -N -c \"webspace owner\" owner \\\n && mkdir -p /var/www/html \\\n && curl --silent --show-error --fail --location \\\n      --header \"Accept: application/tar+gzip, application/x-gzip, application/octet-stream\" \\\n      --pinnedpubkey \"sha256//SU4VjMOqJpxC5lQIW5u1X4ogo0sitEsI1fD/FyF44+g=\" \\\n      https://wordpress.org/latest.tar.gz \\\n    | tar --no-same-owner --strip=1 -C /var/www/html -zx \\\n && mkdir -p /var/www/html/wp-content/uploads \\\n && chmod 0755 \\\n      /var/www/html/wp-content/plugins \\\n      /var/www/html/wp-content/themes \\\n      /var/www/html/wp-content/uploads \\\n && sed -i \\\n      -e \"/^define.'DB_NAME'/c define('DB_NAME', getenv('MYSQL_ENV_MYSQL_DATABASE'));\" \\\n      -e \"/^define.'DB_USER'/c define('DB_USER', getenv('MYSQL_ENV_MYSQL_USER'));\" \\\n      -e \"/^define.'DB_PASSWORD'/c define('DB_PASSWORD', getenv('MYSQL_ENV_MYSQL_PASSWORD'));\" \\\n      -e \"/^define.'DB_HOST'/c define('DB_HOST', getenv('MYSQL_PORT_3306_TCP_ADDR').':'.getenv('MYSQL_PORT_3306_TCP_PORT'));\" \\\n      /var/www/html/wp-config-sample.php \\\n && sed -i \\\n      -e \"/<input name=.dbname./s:value=\\\"[^\\\"]*\\\":value=\\\"<?php echo getenv('MYSQL_ENV_MYSQL_DATABASE'); ?>\\\":\" \\\n      -e \"/<input name=.uname./s:value=\\\"[^\\\"]*\\\":value=\\\"<?php echo getenv('MYSQL_ENV_MYSQL_USER'); ?>\\\":\" \\\n      -e \"/<input name=.pwd./s:value=\\\"[^\\\"]*\\\":value=\\\"<?php echo getenv('MYSQL_ENV_MYSQL_PASSWORD'); ?>\\\":\" \\\n      -e \"/<input name=.dbhost./s:value=\\\"[^\\\"]*\\\":value=\\\"<?php echo getenv('MYSQL_PORT_3306_TCP_ADDR').'\\:'.getenv('MYSQL_PORT_3306_TCP_PORT'); ?>\\\":\" \\\n      /var/www/html/wp-admin/setup-config.php \\\n && chown -R owner:www-data /var/www/html \\\n && egrep -m 1 \"^.wp_version\" /var/www/html/wp-includes/version.php | tr -d \"$;' \" | sed -e 's:wp_:wordpress.:'\n\n# … and plugins\nRUN curl --silent --show-error --fail --location \\\n      --header \"Accept: application/zip\" \\\n      --pinnedpubkey \"sha256//SU4VjMOqJpxC5lQIW5u1X4ogo0sitEsI1fD/FyF44+g=\" \\\n      -o /tmp/mailgun.zip \\\n      $(curl -sSfL https://api.wordpress.org/plugins/info/1.0/mailgun.json | jq -r '.download_link') \\\n && unzip /tmp/mailgun.zip -d /var/www/html/wp-content/plugins/ && rm /tmp/mailgun.zip \\\n && cd /var/www/html/wp-content/plugins \\\n && git clone --depth=1 https://github.com/wmark/CDN-Linker.git \\\n && rm -rf CDN-Linker/.git CDN-Linker/test CDN-Linker/test.php \\\n && chown -R owner:www-data /var/www/html/wp-content/plugins\n\n# configuration, start, backup and restore scripts\nADD contrib/fcrontab /usr/contrib/fcrontab\nADD contrib/mariadb/ /usr/contrib/mariadb/\nADD contrib/nginx/ /etc/nginx/\nADD contrib/runit-bootstrap.sh /sbin/runit-bootstrap.sh\nADD contrib/runit/ /etc/service\n\n# dummy certificates (for testing) and a last test\nRUN mkdir -p /etc/ssl/web && chmod 0750 /etc/ssl/web \\\n && openssl ecparam -name prime256v1 -genkey -out \"/etc/ssl/web/web.key\" \\\n && openssl req -new -x509 -nodes -batch -sha256 \\\n      -subj \"/CN=autogenerated.local\" -days 31 \\\n      -key \"/etc/ssl/web/web.key\" \\\n      -out \"/etc/ssl/web/web.crt-bundle\" \\\n && chmod 0600 \"/etc/ssl/web/web.key\" \\\n && dhtool 2048 >/dev/null 2>/etc/ssl/web/dhparam.pem \\\n && /usr/sbin/nginx -t \\\n && /usr/bin/hhvm --version \\\n && rm \"/etc/ssl/web/web.key\" \"/etc/ssl/web/web.crt-bundle\"\n\n# 80    for HTTP, 443 for HTTPS\n# 6379  for the included Redis instance\n# 9000  is the HHVM server port\nEXPOSE 80 443 6379 9000\nVOLUME /var/www/backup /var/www/html /var/log\nCMD [\"/sbin/runit-bootstrap.sh\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "contrib/fcrontab",
        "dest": "/usr/contrib/fcrontab"
      },
      {
        "source": "contrib/mariadb/",
        "dest": "/usr/contrib/mariadb/"
      },
      {
        "source": "contrib/nginx/",
        "dest": "/etc/nginx/"
      },
      {
        "source": "contrib/runit-bootstrap.sh",
        "dest": "/sbin/runit-bootstrap.sh"
      },
      {
        "source": "contrib/runit/",
        "dest": "/etc/service"
      }
    ],
    "expose": [
      80
    ],
    "volume": [
      "/var/www/backup /var/www/html /var/log"
    ],
    "run": [
      "printf 'Package: *\\nPin: origin \"s.blitznote.com\"\\nPin-Priority: 510\\n' >/etc/apt/preferences.d/prefer-blitznote  && /usr/bin/get-gpg-key 0xcbcb082a1bb943db 0xF1656F24C74CD1D8 | apt-key add  && printf \"deb [arch=$(dpkg --print-architecture)] http://ftp.igh.cnrs.fr/pub/mariadb/repo/10.1/ubuntu xenial main\" >/etc/apt/sources.list.d/mariadb.list  && apt-get -q update  && apt-get -y install       --allow-downgrades --no-install-recommends       mariadb-client  && apt-get -y install       --no-install-recommends       subversion git nginx-light redis-server fcron       rsync plzip less unzip patch file psmisc tree       openssl dhtool       libjemalloc1=3.*  && apt-mark hold libjemalloc1  && gpasswd -a fcron users  && rm /usr/sbin/nginx  && curl --silent --show-error --fail --location --compressed       --header \"Accept: application/octet-stream\"       --pinnedpubkey \"sha256//fxBZ92Ul/3NOZJsiNJLhv5wHfywCe9PZvHWI6rd6frU=\"       -o /usr/sbin/nginx       https://s.blitznote.com/debs/ubuntu/$(dpkg --print-architecture)/nginx  && ((file /usr/sbin/nginx | grep -q -F gzip && mv /usr/sbin/nginx /usr/sbin/nginx.gz && gunzip /usr/sbin/nginx.gz) || true)  && chmod a+x /usr/sbin/nginx  && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*",
      "/usr/bin/get-gpg-key 0x5a16e7281be7a449 | apt-key add  && printf \"deb [arch=$(dpkg --print-architecture)] http://dl.hhvm.com/ubuntu xenial main\\n\" >/etc/apt/sources.list.d/hhvm.list  && apt-get -q update  && apt-get -y install       --no-install-recommends       hhvm  && sed -i       -e '/hhvm.repo.central.path/c hhvm.repo.central.path = /var/cache/hhvm/hhvm.hhbc'       /etc/hhvm/server.ini  && printf \"hhvm.eval.jit = true\\n\" >>/etc/hhvm/server.ini  && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*",
      "useradd -u 1001 -s /bin/bash -g users -G fcron,www-data -M --home-dir=/home/owner -N -c \"webspace owner\" owner  && mkdir -p /var/www/html  && curl --silent --show-error --fail --location       --header \"Accept: application/tar+gzip, application/x-gzip, application/octet-stream\"       --pinnedpubkey \"sha256//SU4VjMOqJpxC5lQIW5u1X4ogo0sitEsI1fD/FyF44+g=\"       https://wordpress.org/latest.tar.gz     | tar --no-same-owner --strip=1 -C /var/www/html -zx  && mkdir -p /var/www/html/wp-content/uploads  && chmod 0755       /var/www/html/wp-content/plugins       /var/www/html/wp-content/themes       /var/www/html/wp-content/uploads  && sed -i       -e \"/^define.'DB_NAME'/c define('DB_NAME', getenv('MYSQL_ENV_MYSQL_DATABASE'));\"       -e \"/^define.'DB_USER'/c define('DB_USER', getenv('MYSQL_ENV_MYSQL_USER'));\"       -e \"/^define.'DB_PASSWORD'/c define('DB_PASSWORD', getenv('MYSQL_ENV_MYSQL_PASSWORD'));\"       -e \"/^define.'DB_HOST'/c define('DB_HOST', getenv('MYSQL_PORT_3306_TCP_ADDR').':'.getenv('MYSQL_PORT_3306_TCP_PORT'));\"       /var/www/html/wp-config-sample.php  && sed -i       -e \"/<input name=.dbname./s:value=\\\"[^\\\"]*\\\":value=\\\"<?php echo getenv('MYSQL_ENV_MYSQL_DATABASE'); ?>\\\":\"       -e \"/<input name=.uname./s:value=\\\"[^\\\"]*\\\":value=\\\"<?php echo getenv('MYSQL_ENV_MYSQL_USER'); ?>\\\":\"       -e \"/<input name=.pwd./s:value=\\\"[^\\\"]*\\\":value=\\\"<?php echo getenv('MYSQL_ENV_MYSQL_PASSWORD'); ?>\\\":\"       -e \"/<input name=.dbhost./s:value=\\\"[^\\\"]*\\\":value=\\\"<?php echo getenv('MYSQL_PORT_3306_TCP_ADDR').'\\:'.getenv('MYSQL_PORT_3306_TCP_PORT'); ?>\\\":\"       /var/www/html/wp-admin/setup-config.php  && chown -R owner:www-data /var/www/html  && egrep -m 1 \"^.wp_version\" /var/www/html/wp-includes/version.php | tr -d \"$;' \" | sed -e 's:wp_:wordpress.:'",
      "curl --silent --show-error --fail --location       --header \"Accept: application/zip\"       --pinnedpubkey \"sha256//SU4VjMOqJpxC5lQIW5u1X4ogo0sitEsI1fD/FyF44+g=\"       -o /tmp/mailgun.zip       $(curl -sSfL https://api.wordpress.org/plugins/info/1.0/mailgun.json | jq -r '.download_link')  && unzip /tmp/mailgun.zip -d /var/www/html/wp-content/plugins/ && rm /tmp/mailgun.zip  && cd /var/www/html/wp-content/plugins  && git clone --depth=1 https://github.com/wmark/CDN-Linker.git  && rm -rf CDN-Linker/.git CDN-Linker/test CDN-Linker/test.php  && chown -R owner:www-data /var/www/html/wp-content/plugins",
      "mkdir -p /etc/ssl/web && chmod 0750 /etc/ssl/web  && openssl ecparam -name prime256v1 -genkey -out \"/etc/ssl/web/web.key\"  && openssl req -new -x509 -nodes -batch -sha256       -subj \"/CN=autogenerated.local\" -days 31       -key \"/etc/ssl/web/web.key\"       -out \"/etc/ssl/web/web.crt-bundle\"  && chmod 0600 \"/etc/ssl/web/web.key\"  && dhtool 2048 >/dev/null 2>/etc/ssl/web/dhparam.pem  && /usr/sbin/nginx -t  && /usr/bin/hhvm --version  && rm \"/etc/ssl/web/web.key\" \"/etc/ssl/web/web.crt-bundle\""
    ],
    "workdir": [],
    "from": "blitznote/debootstrap-amd64:16.04",
    "maintainer": "W. Mark Kubacki <wmark@hurrikane.de>",
    "label": "org.label-schema.vendor=\"W. Mark Kubacki\"       org.label-schema.name=\"Wordpress, Nginx, HHVM stack for CI/CD\"       org.label-schema.vcs-type=\"git\"       org.label-schema.vcs-url=\"https://github.com/wmark/docker-wordpress-hhvm\"",
    "cmd": "[\"/sbin/runit-bootstrap.sh\"]"
  },
  "source_repository_url": "https://github.com/wmark/docker-wordpress-hhvm.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/wmark/docker-wordpress-hhvm",
  "docker_repository": "wmark/wordpress-hhvm",
  "docker_image": "wmark/wordpress-hhvm",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        80
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "wmark/wordpress-hhvm",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/wmark/wordpress-hhvm",
    "https://hub.docker.com/v2/repositories/wmark/wordpress-hhvm",
    "https://github.com/wmark/docker-wordpress-hhvm.git"
  ],
  "labels": [
    "Docker",
    "Style/Virtualization Level/Hardware/Hypervisor/Full Virtualization",
    "Type/Devopsware/Test",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Web Server/Nginx",
    "Type/Middleware/Data Store/Key-Value/Redis"
  ],
  "info_url": "https://hub.docker.com/r/wmark/wordpress-hhvm",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}