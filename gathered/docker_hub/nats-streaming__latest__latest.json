{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/_/nats-streaming",
    "repository_url": "https://hub.docker.com/v2/repositories/library/nats-streaming",
    "tags_url": "https://hub.docker.com/v2/repositories/library/nats-streaming/tags",
    "user": "library",
    "name": "nats-streaming",
    "namespace": "library",
    "status": 1,
    "is_private": false,
    "is_automated": false,
    "star_count": 4,
    "pull_count": 1629,
    "last_updated": "2016-10-05T00:04:04.302052Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 2845198,
        "id": 5237874,
        "repository": 958486,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-05T00:04:03.346627Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "0.2.2",
        "full_size": 2845198,
        "id": 5237021,
        "repository": 958486,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-04T23:15:32.362344Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ]
  },
  "docker_image": "nats-streaming",
  "name": "nats-streaming Docker container",
  "description": "NATS Streaming is an open-source, high-performance, cloud native messaging streaming system.",
  "readme": "# Supported tags and respective `Dockerfile` links\n\n-\t[`0.2.2`, `latest` (*Dockerfile*)](https://github.com/nats-io/nats-streaming-docker/blob/d7e21255fec8967f7dbdacdb4501c8e78d821e49/Dockerfile)\n\nFor more information about this image and its history, please see [the relevant manifest file (`library/nats-streaming`)](https://github.com/docker-library/official-images/blob/master/library/nats-streaming). This image is updated via [pull requests to the `docker-library/official-images` GitHub repo](https://github.com/docker-library/official-images/pulls?q=label%3Alibrary%2Fnats-streaming).\n\nFor detailed information about the virtual/transfer sizes and individual layers of each of the above supported tags, please see [the `repos/nats-streaming/tag-details.md` file](https://github.com/docker-library/repo-info/blob/master/repos/nats-streaming/tag-details.md) in [the `docker-library/repo-info` GitHub repo](https://github.com/docker-library/repo-info).\n\n# [NATS Streaming](https://nats.io): A high-performance cloud native messaging streaming system.\n\n![logo](https://raw.githubusercontent.com/docker-library/docs/4a2d30cdf4ff4bc6ae915ada7a058db0c908659d/nats-streaming/logo.png)\n\n`nats-streaming` is a high performance streaming server for the NATS Messaging System.\n\n# Example usage\n\n```bash\n# Run a NATS Streaning server\n# Each server exposes multiple ports\n# 4222 is for clients.\n# 8222 is an HTTP management port for information reporting.\n# use -p or -P as needed.\n\n$ docker run -d nats-streaming\n\nOutput that you would get if you had started with `-ti` instead of `d` (for daemon):\n\n[INF] Starting nats-streaming-server[test-cluster] version 0.2.2\n[INF] Starting nats-server version 0.9.2\n[INF] Starting http monitor on :8222\n[INF] Listening for client connections on 0.0.0.0:4222\n[INF] Server is ready\n[INF] STAN: Message store is MEMORY\n[INF] STAN: Maximum of 1000000 will be stored\n\nTo use a file based store instead, you would run:\n\n$ docker run -d nats-streaming -store file -dir datastore\n\n[INF] Starting nats-streaming-server[test-cluster] version 0.2.2\n[INF] Starting nats-server version 0.9.2\n[INF] Starting http monitor on :8222\n[INF] Listening for client connections on 0.0.0.0:4222\n[INF] Server is ready\n[INF] STAN: Message store is FILE\n[INF] STAN: Maximum of 1000000 will be stored\n\nYou can also connect to a remote NATS Server running in a docker image.\nFirst, run NATS Server:\n\n$ docker run -d --name=nats-main nats\n\nNow, start the Streaming server and link it to the above docker image:\n\n$ docker run -d --link nats-main nats-streaming -ns nats://nats-main:4222 \n\n[INF] Starting nats-streaming-server[test-cluster] version 0.2.2\n[INF] STAN: Message store is MEMORY\n[INF] STAN: Maximum of 1000000 will be stored\n\nNotice that the output shows that the NATS Server was not started, as opposed to the first output.\n\n```\n\n# Commandline Options\n\n```bash\nStreaming Server Options:\n    -cid, --cluster_id  <cluster ID> Cluster ID (default: test-cluster)\n    -st,  --store <type>             Store type: MEMORY|FILE (default: MEMORY)\n          --dir <directory>          For FILE store type, this is the root directory\n    -mc,  --max_channels <number>    Max number of channels (aka subjects, topics, etc...)\n    -msu, --max_subs <number>        Max number of subscriptions per channel\n    -mm,  --max_msgs <number>        Max number of messages per channel\n    -mb,  --max_bytes <number>       Max messages total size per channel\n    -ns,  --nats_server <url>        Connect to this external NATS Server (embedded otherwise)\n\nStreaming Server TLS Options:\n    -secure                          Use a TLS connection to the NATS server without\n                                     verification; weaker than specifying certificates.\n    -tls_client_key                  Client key for the streaming server\n    -tls_client_cert                 Client certificate for the streaming server\n    -tls_client_cacert               Client certificate CA for the streaming server\n\nStreaming Server Logging Options:\n    -SD, --stan_debug                Enable STAN debugging output\n    -SV, --stan_trace                Trace the raw STAN protocol\n    -SDV                             Debug and trace STAN\n    (See additional NATS logging options below)\n\nEmbedded NATS Server Options:\n    -a, --addr <host>                Bind to host address (default: 0.0.0.0)\n    -p, --port <port>                Use port for clients (default: 4222)\n    -P, --pid <file>                 File to store PID\n    -m, --http_port <port>           Use port for http monitoring\n    -ms,--https_port <port>          Use port for https monitoring\n    -c, --config <file>              Configuration file\n\nLogging Options:\n    -l, --log <file>                 File to redirect log output\n    -T, --logtime                    Timestamp log entries (default: true)\n    -s, --syslog                     Enable syslog as log method\n    -r, --remote_syslog <addr>       Syslog server addr (udp://localhost:514)\n    -D, --debug                      Enable debugging output\n    -V, --trace                      Trace the raw protocol\n    -DV                              Debug and trace\n\nAuthorization Options:\n        --user <user>                User required for connections\n        --pass <password>            Password required for connections\n        --auth <token>               Authorization token required for connections\n\nTLS Options:\n        --tls                        Enable TLS, do not verify clients (default: false)\n        --tlscert <file>             Server certificate file\n        --tlskey <file>              Private key for server certificate\n        --tlsverify                  Enable TLS, very client certificates\n        --tlscacert <file>           Client certificate CA for verification\n\nNATS Clustering Options:\n        --routes <rurl-1, rurl-2>    Routes to solicit and connect\n        --cluster <cluster-url>      Cluster URL for solicited routes\n\nCommon Options:\n    -h, --help                       Show this message\n    -v, --version                    Show version\n        --help_tls                   TLS help.\n```\n\n# License\n\nView [license information](https://github.com/nats-io/nats-streaming-server/blob/master/LICENSE) for the software contained in this image.\n\n# Supported Docker versions\n\nThis image is officially supported on Docker version 1.12.2.\n\nSupport for older versions (down to 1.6) is provided on a best-effort basis.\n\nPlease see [the Docker installation documentation](https://docs.docker.com/installation/) for details on how to upgrade your Docker daemon.\n\n# User Feedback\n\n## Issues\n\nIf you have any problems with or questions about this image, please contact us through a [GitHub issue](https://github.com/nats-io/nats-streaming-docker/issues). If the issue is related to a CVE, please check for [a `cve-tracker` issue on the `official-images` repository first](https://github.com/docker-library/official-images/issues?q=label%3Acve-tracker).\n\nYou can also reach many of the official image maintainers via the `#docker-library` IRC channel on [Freenode](https://freenode.net).\n\n## Contributing\n\nYou are invited to contribute new features, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.\n\nBefore you start to code, we recommend discussing your plans through a [GitHub issue](https://github.com/nats-io/nats-streaming-docker/issues), especially for more ambitious contributions. This gives other contributors a chance to point you in the right direction, give you feedback on your design, and help you find out if someone else is working on the same thing.\n\n## Documentation\n\nDocumentation for this image is stored in the [`nats-streaming/` directory](https://github.com/docker-library/docs/tree/master/nats-streaming) of the [`docker-library/docs` GitHub repo](https://github.com/docker-library/docs). Be sure to familiarize yourself with the [repository's `README.md` file](https://github.com/docker-library/docs/blob/master/README.md) before attempting a pull request.",
  "type": "docker",
  "docker_name": "nats-streaming",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/_/nats-streaming",
    "https://hub.docker.com/v2/repositories/library/nats-streaming"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Mode/Executable/Image/VM Image/AMI",
    "Type/Middleware/Messaging"
  ],
  "info_url": "https://hub.docker.com/r/_/nats-streaming",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}