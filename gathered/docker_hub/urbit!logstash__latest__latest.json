{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/urbit/logstash",
    "repository_url": "https://hub.docker.com/v2/repositories/urbit/logstash",
    "tags_url": "https://hub.docker.com/v2/repositories/urbit/logstash/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/urbit/logstash/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/urbit/logstash/autobuild",
    "user": "urbit",
    "name": "logstash",
    "namespace": "urbit",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 146,
    "last_updated": "2016-10-04T09:09:39.299308Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 212083928,
        "id": 3652888,
        "repository": 775051,
        "creator": 868463,
        "last_updater": 868463,
        "last_updated": "2016-10-04T09:09:38.920964Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "urbitassociates/docker-images"
  },
  "name": "urbit/logstash Docker container",
  "description": "Logstash pre-configured for Nginx, PHP-FPM and Lumen (with Monolog).",
  "readme": "Urb-it Docker Images\n====================\n\nThese are Urb-it's Docker images, used mainly for internal development.\n\n## Docker Snippets\nUseful snippets for cleanups etc.\n\n#### Stop all containers\n```\ndocker stop $(docker ps -a -q)\n```\n```\ndocker ps -a -q | xargs docker stop\n```\n\n#### Remove all containers\n```\ndocker rm $(docker ps -a -q)\n```\n```\ndocker ps -a -q | xargs docker rm\n```\n\n#### Remove all images\n```\ndocker rmi $(docker images -q)\n```\n```\ndocker images -q | xargs docker rmi\n```\n\n#### Remove orphaned volumes\n```\ndocker volume rm $(docker volume ls -qf dangling=true)\n```\n```\ndocker volume ls -qf dangling=true | xargs docker volume rm\n```\n\n#### Remove exited containers\n```\ndocker rm -v $(docker ps -a -q -f status=exited)\n```\n```\ndocker ps -a -q -f status=exited | xargs docker rm -v\n```\n\n#### Stop & Remove all containers with base image name <image_name>\n```\ndocker rm $(docker stop $(docker ps -a -q --filter ancestor=<image_name>))\n```\n```\ndocker ps -a -q --filter ancestor=<image_name> | xargs docker stop | xargs docker rm\n```\n\n#### Remove dangling images\n```\ndocker rmi $(docker images -f \"dangling=true\" -q)\n```\n```\ndocker images -f \"dangling=true\" -q | xargs docker rmi\n```\n\n#### Cleanup Volumes\n```\ndocker run -v /var/run/docker.sock:/var/run/docker.sock \\\n           -v /var/lib/docker:/var/lib/docker \\\n           --rm martin/docker-cleanup-volumes\n```\n\n#### Remove all DinD containers\n```\ndocker rm $(docker stop $(docker ps -a -q --filter ancestor=urbit/dind-jenkins))\n```\n\n#### Cleanup exited + orphaned + DinD\n```\ndocker ps -a -q -f status=exited | xargs docker rm -v && \\\ndocker volume ls -qf dangling=true | xargs docker volume rm && \\\ndocker ps -a -q --filter ancestor=urbit/dind-jenkins | xargs docker stop | xargs docker rm\n```\n\n#### Docker-outside-of-Docker\n```\ndocker run -d -v /var/run/docker.sock:/var/run/docker.sock \\\n              -v $(which docker):/usr/bin/docker -p 8080:8080 my-dood-container\n```\n\n#### Docker-inside-Docker\n```\ndocker run --privileged --name my-dind-container -d docker:dind\n```\n```\ndocker run --privileged --name my-dind-container -d urbit/dind-jenkins:latest\n```",
  "dockerfile": "FROM logstash:2\n\nMAINTAINER Simon Forsman <simon@urb-it.com>\n\nRUN plugin install logstash-output-amazon_es\n\nRUN apt-get update && apt-get install -y --no-install-recommends gettext-base \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nCOPY ims.tpl.conf /config/ims.tpl.conf\nCOPY init.sh /init.sh\nRUN chmod +x /init.sh\n\nCMD /init.sh",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [
      "plugin install logstash-output-amazon_es",
      "apt-get update && apt-get install -y --no-install-recommends gettext-base \t&& rm -rf /var/lib/apt/lists/*",
      "chmod +x /init.sh"
    ],
    "workdir": [],
    "from": "logstash:2",
    "maintainer": "Simon Forsman <simon@urb-it.com>",
    "copy": "init.sh /init.sh",
    "cmd": "/init.sh"
  },
  "source_repository_url": "https://github.com/urbitassociates/docker-images.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/urbitassociates/docker-images",
  "docker_repository": "urbit/logstash",
  "docker_image": "urbit/logstash",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "urbit/logstash",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/urbit/logstash",
    "https://hub.docker.com/v2/repositories/urbit/logstash",
    "https://github.com/urbitassociates/docker-images.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Type/Devopsware/Logging/Logstash",
    "Type/Middleware/Runtime/PHP",
    "Type/Middleware/Web Server/Nginx"
  ],
  "info_url": "https://hub.docker.com/r/urbit/logstash",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}