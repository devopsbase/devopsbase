{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/bitnami/tomcat",
    "repository_url": "https://hub.docker.com/v2/repositories/bitnami/tomcat",
    "tags_url": "https://hub.docker.com/v2/repositories/bitnami/tomcat/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/bitnami/tomcat/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/bitnami/tomcat/autobuild",
    "user": "bitnami",
    "name": "tomcat",
    "namespace": "bitnami",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 805,
    "last_updated": "2016-10-17T10:12:58.593996Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "development",
        "full_size": 164287154,
        "id": 1836049,
        "repository": 488350,
        "creator": 563305,
        "last_updater": 257375,
        "last_updated": "2016-10-17T10:12:57.827050Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "_",
        "full_size": 164287765,
        "id": 5450926,
        "repository": 488350,
        "creator": 342683,
        "last_updater": 342683,
        "last_updated": "2016-10-17T08:44:45.285883Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "latest",
        "full_size": 164287196,
        "id": 1836050,
        "repository": 488350,
        "creator": 563305,
        "last_updater": 257375,
        "last_updated": "2016-09-23T21:57:18.858091Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.0.35-r4",
        "full_size": 164287144,
        "id": 5040965,
        "repository": 488350,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-23T21:54:32.200634Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.0.35-r3",
        "full_size": 162437061,
        "id": 4801079,
        "repository": 488350,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-12T17:44:57.437309Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.0.35-r2",
        "full_size": 162437087,
        "id": 4712250,
        "repository": 488350,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-09-07T12:11:58.252058Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.0.35-r1",
        "full_size": 160398747,
        "id": 3796837,
        "repository": 488350,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-07-12T08:29:29.260398Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "8.0.35-r0",
        "full_size": 160363869,
        "id": 3202863,
        "repository": 488350,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-05-28T00:14:01.961860Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          1
        ]
      },
      {
        "name": "7.0.68-0",
        "full_size": 281818194,
        "id": 2420858,
        "repository": 488350,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-03-24T17:52:51.331790Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "7.0.67-0-r02",
        "full_size": 332345818,
        "id": 2035594,
        "repository": 488350,
        "creator": 257375,
        "last_updater": 257375,
        "last_updated": "2016-02-17T20:46:52.169277Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "bitnami/bitnami-docker-tomcat"
  },
  "name": "bitnami/tomcat Docker container",
  "description": "Bitnami Tomcat Docker Image",
  "readme": "[![CircleCI](https://circleci.com/gh/bitnami/bitnami-docker-tomcat/tree/master.svg?style=shield)](https://circleci.com/gh/bitnami/bitnami-docker-tomcat/tree/master)\n[![Docker Hub Automated Build](http://container.checkforupdates.com/badges/bitnami/tomcat)](https://hub.docker.com/r/bitnami/tomcat/)\n\n# What is Tomcat?\n\n> [Apache Tomcat](http://tomcat.apache.org), often referred to as Tomcat, is an open-source web server and servlet container developed by the [Apache Software Foundation (ASF)](https://www.apache.org). Tomcat implements several Java EE specifications including Java Servlet, JavaServer Pages (JSP), Java EL, and WebSocket, and provides a \"pure Java\" HTTP web server environment for Java code to run in.\n\n# TLDR\n\n```bash\ndocker run --name tomcat bitnami/tomcat:latest\n```\n\n## Docker Compose\n\n```yaml\ntomcat:\n  image: bitnami/tomcat:latest\n```\n\n# Get this image\n\nThe recommended way to get the Bitnami Tomcat Docker Image is to pull the prebuilt image from the [Docker Hub Registry](https://hub.docker.com/r/bitnami/tomcat).\n\n```bash\ndocker pull bitnami/tomcat:latest\n```\n\nTo use a specific version, you can pull a versioned tag. You can view the [list of available versions](https://hub.docker.com/r/bitnami/tomcat/tags/) in the Docker Hub Registry.\n\n```bash\ndocker pull bitnami/tomcat:[TAG]\n```\n\nIf you wish, you can also build the image yourself.\n\n```bash\ndocker build -t bitnami/tomcat:latest https://github.com/bitnami/bitnami-docker-tomcat.git\n```\n\n# Persisting your Tomcat configurations and deployments\n\nIf you remove the container all your Tomcat configurations and deployments will be lost. To avoid this you should mount a volume that will persist even after the container is removed.\n\n**Note!**\nIf you have already started using your Tomcat deployment, follow the steps on\n[backing up](#backing-up-your-container) and [restoring](#restoring-a-backup) to pull the data from your running container down to your host.\n\nThe image exposes a volume at `/bitnami/tomcat` for the Tomcat configurations and application deployments. For persistence you can mount a directory at this location from your host. If the mounted directory is empty, it will be initialized on the first run.\n\n```bash\ndocker run -v /path/to/tomcat-persistence:/bitnami/tomcat bitnami/tomcat:latest\n```\n\nor using Docker Compose:\n\n```yaml\ntomcat:\n  image: bitnami/tomcat:latest\n  volumes:\n    - /path/to/tomcat-persistence:/bitnami/tomcat\n```\n\n# Deploying web applications on Tomcat\n\nThe `/bitnami/tomcat/data` directory is configured as the Tomcat webapps deployment directory. At this location, you either copy a so-called *exploded web application*, i.e. non-compressed, or a compressed web application resource (`.WAR`) file and it will automatically be deployed by Tomcat.\n\nAdditionally a helper symlink `/app` is present that points to the webapps deployment directory which enables us to deploy applications on a running Tomcat instance by simply doing:\n\n```bash\ndocker cp /path/to/app.war tomcat:/app\n```\n\n**Note!**\nYou can also deploy web applications on a running Tomcat instance using the Tomcat management interface.\n\n**Further Reading:**\n\n  - [Tomcat Web Application Deployment](https://tomcat.apache.org/tomcat-7.0-doc/deployer-howto.html)\n\n# Accessing your Tomcat server from the host\n\nTo access your web server from your host machine you can ask Docker to map a random port on your host to port `8080` exposed in the container.\n\n```bash\ndocker run --name tomcat -P bitnami/tomcat:latest\n```\n\nRun `docker port` to determine the random ports Docker assigned.\n\n```bash\n$ docker port tomcat\n8080/tcp -> 0.0.0.0:32768\n```\n\nYou can also manually specify the ports you want forwarded from your host to the container.\n\n```bash\ndocker run -p 8080:8080 bitnami/tomcat:latest\n```\n\nAccess your web server in the browser by navigating to [http://localhost:8080](http://localhost:8080/).\n\n# Configuration\n\n## Creating a custom user\n\nBy default, a management user named `user` is created and is not assigned a password. Passing the `TOMCAT_PASSWORD` environment variable when running the image for the first time will set the password of this user to the value of `TOMCAT_PASSWORD`.\n\nAdditionally you can specify a user name for the management user using the `TOMCAT_USERNAME` environment variable. When not specified, the `TOMCAT_PASSWORD` configuration is applied on the default user (`user`).\n\n```bash\ndocker run --name tomcat \\\n  -e TOMCAT_USERNAME=my_user \\\n  -e TOMCAT_PASSWORD=my_password \\\n  bitnami/tomcat:latest\n```\n\nor using Docker Compose:\n\n```yaml\ntomcat:\n  image: bitnami/tomcat:latest\n  environment:\n    - TOMCAT_USERNAME=my_user\n    - TOMCAT_PASSWORD=my_password\n```\n\n## Configuration files\n\nThis image looks for Tomcat configuration files in `/bitnami/tomcat/conf`. You may recall from the [persisting your tomcat configurations and deployments](#persisting-your-tomcat-configurations-and-deployments) section, `/bitnami/tomcat` is the path to the persistence volume.\n\nCreate a directory named `conf/` at this location with your own configuration, or the default configuration will be copied on the first run which can be customized later.\n\n### Step 1: Run the Tomcat image\n\nRun the Tomcat image, mounting a directory from your host.\n\n```bash\ndocker run --name tomcat -v /path/to/tomcat-persistence:/bitnami/tomcat bitnami/tomcat:latest\n```\n\nor using Docker Compose:\n\n```yaml\ntomcat:\n  image: bitnami/tomcat:latest\n  volumes:\n    - /path/to/tomcat-persistence:/bitnami/tomcat\n```\n\n### Step 2: Edit the configuration\n\nEdit the configuration on your host using your favorite editor.\n\neg.\n\n```bash\nvim /path/to/tomcat-persistence/conf/server.xml\n```\n\n### Step 3: Restart Tomcat\n\nAfter changing the configuration, restart your Tomcat container for the changes to take effect.\n\n```bash\ndocker restart tomcat\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose restart tomcat\n```\n\n**Further Reading:**\n\n  - [Tomcat 7 Configuration Reference](https://tomcat.apache.org/tomcat-7.0-doc/config/index.html)\n\n# Logging\n\nThe Bitnami Tomcat Docker image sends the container logs to the `stdout`. To view the logs:\n\n```bash\ndocker logs tomcat\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose logs tomcat\n```\n\nYou can configure the containers [logging driver](https://docs.docker.com/engine/admin/logging/overview/) using the `--log-driver` option if you wish to consume the container logs differently. In the default configuration docker uses the `json-file` driver.\n\n# Maintenance\n\n## Backing up your container\n\nTo backup your configuration and logs, follow these simple steps:\n\n### Step 1: Stop the currently running container\n\n```bash\ndocker stop tomcat\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose stop tomcat\n```\n\n### Step 2: Run the backup command\n\nWe need to mount two volumes in a container we will use to create the backup: a directory on your host to store the backup in, and the volumes from the container we just stopped so we can access the data.\n\n```bash\ndocker run --rm -v /path/to/tomcat-backups:/backups --volumes-from tomcat busybox \\\n  cp -a /bitnami/tomcat /backups/latest\n```\n\nor using Docker Compose:\n\n```bash\ndocker run --rm -v /path/to/tomcat-backups:/backups --volumes-from `docker-compose ps -q tomcat` busybox \\\n  cp -a /bitnami/tomcat /backups/latest\n```\n\n## Restoring a backup\n\nRestoring a backup is as simple as mounting the backup as volumes in the container.\n\n```bash\ndocker run -v /path/to/tomcat-backups/latest:/bitnami/tomcat bitnami/tomcat:latest\n```\n\nor using Docker Compose:\n\n```yaml\ntomcat:\n  image: bitnami/tomcat:latest\n  volumes:\n    - /path/to/tomcat-backups/latest:/bitnami/tomcat\n```\n\n## Upgrade this image\n\nBitnami provides up-to-date versions of Tomcat, including security patches, soon after they are made upstream. We recommend that you follow these steps to upgrade your container.\n\n### Step 1: Get the updated image\n\n```bash\ndocker pull bitnami/tomcat:latest\n```\n\nor if you're using Docker Compose, update the value of the image property to\n`bitnami/tomcat:latest`.\n\n### Step 2: Stop and backup the currently running container\n\nBefore continuing, you should backup your container's configuration and logs.\n\nFollow the steps on [creating a backup](#backing-up-your-container).\n\n### Step 3: Remove the currently running container\n\n```bash\ndocker rm -v tomcat\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose rm -v tomcat\n```\n\n### Step 4: Run the new image\n\nRe-create your container from the new image, [restoring your backup](#restoring-a-backup) if necessary.\n\n```bash\ndocker run --name tomcat bitnami/tomcat:latest\n```\n\nor using Docker Compose:\n\n```bash\ndocker-compose start tomcat\n```\n\n# Testing\n\nThis image is tested for expected runtime behavior, using the [Bats](https://github.com/sstephenson/bats) testing framework. You can run the tests on your machine using the `bats` command.\n\n```\nbats test.sh\n```\n\n# Notable Changes\n\n## 8.0.35-r3\n\n- `TOMCAT_USER` parameter has been renamed to `TOMCAT_USERNAME`.\n\n## 8.0.35-r0\n\n- All volumes have been merged at `/bitnami/tomcat`. Now you only need to mount a single volume at `/bitnami/tomcat` for persistence.\n- The logs are always sent to the `stdout` and are no longer collected in the volume.\n\n# Contributing\n\nWe'd love for you to contribute to this container. You can request new features by creating an [issue](https://github.com/bitnami/bitnami-docker-tomcat/issues), or submit a [pull request](https://github.com/bitnami/bitnami-docker-tomcat/pulls) with your contribution.\n\n# Issues\n\nIf you encountered a problem running this container, you can file an [issue](https://github.com/bitnami/bitnami-docker-tomcat/issues). For us to provide better support, be sure to include the following information in your issue:\n\n- Host OS and version\n- Docker version (`docker version`)\n- Output of `docker info`\n- Version of this container (`echo $BITNAMI_IMAGE_VERSION` inside the container)\n- The command you used to run the container, and any relevant output you saw (masking any sensitive information)\n\n# License\n\nCopyright (c) 2015-2016 Bitnami\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "dockerfile": "FROM gcr.io/stacksmith-images/ubuntu:14.04-r10\nMAINTAINER Bitnami <containers@bitnami.com>\n\nENV BITNAMI_IMAGE_VERSION=8.0.35-r4 \\\n    BITNAMI_APP_NAME=tomcat \\\n    BITNAMI_APP_USER=tomcat\n\nRUN bitnami-pkg install java-1.8.0_101-0 --checksum 66b64f987634e1348141e0feac5581b14e63064ed7abbaf7ba5646e1908219f9\nENV PATH=/opt/bitnami/java/bin:$PATH\n\nRUN bitnami-pkg unpack tomcat-8.0.36-0 --checksum e4402f645bc95011066d60250347039cd47407a6257fb5f477d8b562facdbb17\nRUN ln -sf /opt/bitnami/$BITNAMI_APP_NAME/data /app\n\nENV PATH=/opt/bitnami/$BITNAMI_APP_NAME/bin:$PATH\n\nCOPY rootfs/ /\nENTRYPOINT [\"/app-entrypoint.sh\"]\nCMD [\"nami\", \"start\", \"--foreground\", \"tomcat\"]\n\nVOLUME [\"/bitnami/$BITNAMI_APP_NAME\"]\n\nEXPOSE 8080\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      8080
    ],
    "volume": [
      "[\"/bitnami/$BITNAMI_APP_NAME\"]"
    ],
    "run": [
      "bitnami-pkg install java-1.8.0_101-0 --checksum 66b64f987634e1348141e0feac5581b14e63064ed7abbaf7ba5646e1908219f9",
      "bitnami-pkg unpack tomcat-8.0.36-0 --checksum e4402f645bc95011066d60250347039cd47407a6257fb5f477d8b562facdbb17",
      "ln -sf /opt/bitnami/$BITNAMI_APP_NAME/data /app"
    ],
    "workdir": [],
    "from": "gcr.io/stacksmith-images/ubuntu:14.04-r10",
    "maintainer": "Bitnami <containers@bitnami.com>",
    "env": {
      "BITNAMI_IMAGE_VERSION": "8.0.35-r4",
      "": "",
      "BITNAMI_APP_NAME": "tomcat",
      "BITNAMI_APP_USER": "tomcat",
      "PATH": "/opt/bitnami/$BITNAMI_APP_NAME/bin:$PATH"
    },
    "copy": "rootfs/ /",
    "entrypoint": "[\"/app-entrypoint.sh\"]",
    "cmd": "[\"nami\", \"start\", \"--foreground\", \"tomcat\"]"
  },
  "source_repository_url": "https://github.com/bitnami/bitnami-docker-tomcat.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/bitnami/bitnami-docker-tomcat",
  "docker_repository": "bitnami/tomcat",
  "docker_image": "bitnami/tomcat",
  "parameters_schema": {
    "BITNAMI_IMAGE_VERSION": {
      "default": "8.0.35-r4",
      "type": "string",
      "mapping": "environment_variable"
    },
    "": {
      "default": "",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_APP_NAME": {
      "default": "tomcat",
      "type": "string",
      "mapping": "environment_variable"
    },
    "BITNAMI_APP_USER": {
      "default": "tomcat",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/opt/bitnami/$BITNAMI_APP_NAME/bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        8080
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "bitnami/tomcat",
  "revision": "development",
  "uris": [
    "https://hub.docker.com/r/bitnami/tomcat",
    "https://hub.docker.com/v2/repositories/bitnami/tomcat",
    "https://github.com/bitnami/bitnami-docker-tomcat.git"
  ],
  "labels": [
    "Docker",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Middleware/Application Server/Tomcat"
  ],
  "info_url": "https://hub.docker.com/r/bitnami/tomcat",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}