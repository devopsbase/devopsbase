{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/jordi/golang",
    "repository_url": "https://hub.docker.com/v2/repositories/jordi/golang",
    "tags_url": "https://hub.docker.com/v2/repositories/jordi/golang/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/jordi/golang/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/jordi/golang/autobuild",
    "user": "jordi",
    "name": "golang",
    "namespace": "jordi",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 2,
    "pull_count": 974,
    "last_updated": "2016-09-20T01:27:13.521108Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 328809952,
        "id": 34215,
        "repository": 34319,
        "creator": 15842,
        "last_updater": 15842,
        "last_updated": "2016-09-20T01:27:11.702189Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.4.2_v27.2.1",
        "full_size": 313402278,
        "id": 721668,
        "repository": 34319,
        "creator": 15842,
        "last_updater": 15842,
        "last_updated": "2016-09-20T01:21:55.830128Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "v1.5_v27.2.1",
        "full_size": 328809817,
        "id": 776469,
        "repository": 34319,
        "creator": 15842,
        "last_updater": 15842,
        "last_updated": "2016-09-20T01:16:53.962847Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "jig/docker-golang-devel"
  },
  "name": "jordi/golang Docker container",
  "description": "Go language tools plus LiteIDE for amd64",
  "readme": "docker-golang-devel\n===================\n\nGo language development container (golang) that includes Go compiler and tools and LiteIDE.\n\nSoftware versions:\n\n- Go 1.5\n- LiteIDE x27.2.1\n\nRun\n---\n\nThe container must reside in your workstation (so docker client and server are on the same host).\n\nYou need to run it in a system with XWindows (XWindows Server), where your LiteIDE windows will appear. \n\nSeveral variables and temporal files must be set up in order to the container to \"see\" your display. For convenience a script does all that for you, and calls `docker run ... jordi/golang`. Just:\n\n```\n$ ./dliteide\n```\n\nor better install this script on your PATH.\n\nIf you edit and save your source files, they will remain on your host after the container has been stopped or killed.\n\nPull\n----\n\n\t$ docker pull jordi/golang\n\nBuild\n-----\n\n`git clone` this project, cd into it, and:\n\n\t$ docker build -t golang .\n\n",
  "dockerfile": "FROM jordi/golang-run:v1.5\nMAINTAINER Jordi Íñigo\n\n# Download LiteIDE prerequisites\nRUN apt-get -y install make gdb libqt4-dev\n\n# LiteIDE\nRUN wget http://heanet.dl.sourceforge.net/project/liteide/X27.2.1/liteidex27.2.1.linux-64-qt4.tar.bz2 -q -O - | bunzip2 -c | tar -xf - -C /usr/local\nADD linux64.env /usr/local/liteide/share/liteide/liteenv/linux64.env\nADD liteide.ini /.config/liteide/liteide.ini\n\n# X11\n# This is optional: RUN apt-get install -y xterm gnome-terminal\nRUN apt-get install -y xterm\n\n# shell launch\nENV QT_X11_NO_MITSHM 1\n# CMD [\"/usr/local/liteide/bin/liteide\"]\n\nCOPY start.sh /start\nRUN chmod 700 /start\nCMD [\"/start\"]\n",
  "dockerfile_json": {
    "add": [
      {
        "source": "linux64.env",
        "dest": "/usr/local/liteide/share/liteide/liteenv/linux64.env"
      },
      {
        "source": "liteide.ini",
        "dest": "/.config/liteide/liteide.ini"
      }
    ],
    "expose": [],
    "volume": [],
    "run": [
      "apt-get -y install make gdb libqt4-dev",
      "wget http://heanet.dl.sourceforge.net/project/liteide/X27.2.1/liteidex27.2.1.linux-64-qt4.tar.bz2 -q -O - | bunzip2 -c | tar -xf - -C /usr/local",
      "apt-get install -y xterm",
      "chmod 700 /start"
    ],
    "workdir": [],
    "from": "jordi/golang-run:v1.5",
    "maintainer": "Jordi Íñigo",
    "env": {
      "QT_X11_NO_MITSHM": "1"
    },
    "copy": "start.sh /start",
    "cmd": "[\"/start\"]"
  },
  "source_repository_url": "https://github.com/jig/docker-golang-devel.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/jig/docker-golang-devel",
  "docker_repository": "jordi/golang",
  "docker_image": "jordi/golang",
  "parameters_schema": {
    "QT_X11_NO_MITSHM": {
      "default": "1",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "jordi/golang",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/jordi/golang",
    "https://hub.docker.com/v2/repositories/jordi/golang",
    "https://github.com/jig/docker-golang-devel.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Golang",
    "Binding/Region/North America/US"
  ],
  "info_url": "https://hub.docker.com/r/jordi/golang",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}