{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/_/django",
    "repository_url": "https://hub.docker.com/v2/repositories/library/django",
    "tags_url": "https://hub.docker.com/v2/repositories/library/django/tags",
    "user": "library",
    "name": "django",
    "namespace": "library",
    "status": 1,
    "is_private": false,
    "is_automated": false,
    "star_count": 460,
    "pull_count": 1604327,
    "last_updated": "2016-10-14T18:23:54.785051Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "python2-onbuild",
        "full_size": 283510246,
        "id": 85512,
        "repository": 105647,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:23:54.521790Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "onbuild",
        "full_size": 281832464,
        "id": 85487,
        "repository": 105647,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:23:40.281275Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "python3-onbuild",
        "full_size": 281832464,
        "id": 85428,
        "repository": 105647,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:23:31.373292Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "python2",
        "full_size": 154671645,
        "id": 85496,
        "repository": 105647,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:23:18.450120Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1-python2",
        "full_size": 154671645,
        "id": 85402,
        "repository": 105647,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:23:08.131419Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.10-python2",
        "full_size": 154671645,
        "id": 4157680,
        "repository": 105647,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:22:58.748305Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.10.2-python2",
        "full_size": 154671645,
        "id": 5260504,
        "repository": 105647,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:22:48.068607Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 157878470,
        "id": 85515,
        "repository": 105647,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:22:37.626971Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1",
        "full_size": 157878470,
        "id": 85440,
        "repository": 105647,
        "creator": 7,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:22:26.472355Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.10",
        "full_size": 157878470,
        "id": 4152032,
        "repository": 105647,
        "creator": 621950,
        "last_updater": 621950,
        "last_updated": "2016-10-14T18:22:16.401175Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ]
  },
  "docker_image": "django",
  "name": "django Docker container",
  "description": "Django is a free web application framework, written in Python.",
  "readme": "# **DEPRECATED**\n\nThis image is officially deprecated in favor of [the standard `python` image](https://hub.docker.com/_/python/), and will receive no further updates after 2016-12-31 (Dec 31, 2016). Please adjust your usage accordingly.\n\nFor most usages of this image, it was already not bringing in `django` from this image, but actually from your project's `requirements.txt`, so the only \"value\" being added here was the pre-installing of `mysql-client`, `postgresql-client`, and `sqlite3` for various uses of the `django` framework.\n\nFor example, a `Dockerfile` similar to the following would be a good starting point for a Django project using PostgreSQL:\n\n```dockerfile\nFROM python:3.4\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tpostgresql-client \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nWORKDIR /usr/src/app\nCOPY requirements.txt ./\nRUN pip install -r requirements.txt\nCOPY . .\n\nEXPOSE 8000\nCMD [\"python\", \"manage.py\", \"runserver\", \"0.0.0.0:8000\"]\n```\n\n# Supported tags and respective `Dockerfile` links\n\n-\t[`1.10.2-python3`, `1.10-python3`, `1-python3`, `python3`, `1.10.2`, `1.10`, `1`, `latest` (*3.4/Dockerfile*)](https://github.com/docker-library/django/blob/55ed1a6140b7152aa96a230ddb4d5a1f45fa6e52/3.4/Dockerfile)\n-\t[`python3-onbuild`, `onbuild` (*3.4/onbuild/Dockerfile*)](https://github.com/docker-library/django/blob/4fe080675e4a85ef6ee25c811e9d3d3ef0905794/3.4/onbuild/Dockerfile)\n-\t[`1.10.2-python2`, `1.10-python2`, `1-python2`, `python2` (*2.7/Dockerfile*)](https://github.com/docker-library/django/blob/55ed1a6140b7152aa96a230ddb4d5a1f45fa6e52/2.7/Dockerfile)\n-\t[`python2-onbuild` (*2.7/onbuild/Dockerfile*)](https://github.com/docker-library/django/blob/cecbb2bbbcb69d1b8358398eaf8d9638e3bdd447/2.7/onbuild/Dockerfile)\n\nFor more information about this image and its history, please see [the relevant manifest file (`library/django`)](https://github.com/docker-library/official-images/blob/master/library/django). This image is updated via [pull requests to the `docker-library/official-images` GitHub repo](https://github.com/docker-library/official-images/pulls?q=label%3Alibrary%2Fdjango).\n\nFor detailed information about the virtual/transfer sizes and individual layers of each of the above supported tags, please see [the `repos/django/tag-details.md` file](https://github.com/docker-library/repo-info/blob/master/repos/django/tag-details.md) in [the `docker-library/repo-info` GitHub repo](https://github.com/docker-library/repo-info).\n\n# What is Django?\n\nDjango is a free and open source web application framework, written in Python, which follows the model-view-controller architectural pattern. Django's primary goal is to ease the creation of complex, database-driven websites with an emphasis on reusability and \"pluggability\" of components.\n\n> [wikipedia.org/wiki/Django_(web_framework)](https://en.wikipedia.org/wiki/Django_%28web_framework%29)\n\n![logo](https://raw.githubusercontent.com/docker-library/docs/164cc29281655dc81242824d1b4f90b4e6d8d7eb/django/logo.png)\n\n# How to use this image\n\n## Create a `Dockerfile` in your Django app project\n\n```dockerfile\nFROM django:onbuild\n```\n\nPut this file in the root of your app, next to the `requirements.txt`.\n\nThis image includes multiple `ONBUILD` triggers which should cover most applications. The build will `COPY . /usr/src/app`, `RUN pip install`, `EXPOSE 8000`, and set the default command to `python manage.py runserver`.\n\nYou can then build and run the Docker image:\n\n```console\n$ docker build -t my-django-app .\n$ docker run --name some-django-app -d my-django-app\n```\n\nYou can test it by visiting `http://container-ip:8000` in a browser or, if you need access outside the host, on `http://localhost:8000` with the following command:\n\n```console\n$ docker run --name some-django-app -p 8000:8000 -d my-django-app\n```\n\n## Without a `Dockerfile`\n\nOf course, if you don't want to take advantage of magical and convenient `ONBUILD` triggers, you can always just use `docker run` directly to avoid having to add a `Dockerfile` to your project.\n\n```console\n$ docker run --name some-django-app -v \"$PWD\":/usr/src/app -w /usr/src/app -p 8000:8000 -d django bash -c \"pip install -r requirements.txt && python manage.py runserver 0.0.0.0:8000\"\n```\n\n## Bootstrap a new Django Application\n\nIf you want to generate the scaffolding for a new Django project, you can do the following:\n\n```console\n$ docker run -it --rm --user \"$(id -u):$(id -g)\" -v \"$PWD\":/usr/src/app -w /usr/src/app django django-admin.py startproject mysite\n```\n\nThis will create a sub-directory named `mysite` inside your current directory.\n\n# Image Variants\n\nThe `django` images come in many flavors, each designed for a specific use case.\n\n## `django:<version>`\n\nThis is the defacto image. If you are unsure about what your needs are, you probably want to use this one. It is designed to be used both as a throw away container (mount your source code and start the container to start your app), as well as the base to build other images off of.\n\n## `django:onbuild`\n\nThis image makes building derivative images easier. For most use cases, creating a `Dockerfile` in the base of your project directory with the line `FROM django:onbuild` will be enough to create a stand-alone image for your project.\n\nWhile the `onbuild` variant is really useful for \"getting off the ground running\" (zero to Dockerized in a short period of time), it's not recommended for long-term usage within a project due to the lack of control over *when* the `ONBUILD` triggers fire (see also [`docker/docker#5714`](https://github.com/docker/docker/issues/5714), [`docker/docker#8240`](https://github.com/docker/docker/issues/8240), [`docker/docker#11917`](https://github.com/docker/docker/issues/11917)).\n\nOnce you've got a handle on how your project functions within Docker, you'll probably want to adjust your `Dockerfile` to inherit from a non-`onbuild` variant and copy the commands from the `onbuild` variant `Dockerfile` (moving the `ONBUILD` lines to the end and removing the `ONBUILD` keywords) into your own file so that you have tighter control over them and more transparency for yourself and others looking at your `Dockerfile` as to what it does. This also makes it easier to add additional requirements as time goes on (such as installing more packages before performing the previously-`ONBUILD` steps).\n\n# License\n\nView [license information](https://github.com/django/django/blob/master/LICENSE) for the software contained in this image.\n\n# Supported Docker versions\n\nThis image is officially supported on Docker version 1.12.2.\n\nSupport for older versions (down to 1.6) is provided on a best-effort basis.\n\nPlease see [the Docker installation documentation](https://docs.docker.com/installation/) for details on how to upgrade your Docker daemon.\n\n# User Feedback\n\n## Issues\n\nIf you have any problems with or questions about this image, please contact us through a [GitHub issue](https://github.com/docker-library/django/issues). If the issue is related to a CVE, please check for [a `cve-tracker` issue on the `official-images` repository first](https://github.com/docker-library/official-images/issues?q=label%3Acve-tracker).\n\nYou can also reach many of the official image maintainers via the `#docker-library` IRC channel on [Freenode](https://freenode.net).\n\n## Contributing\n\nYou are invited to contribute new features, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.\n\nBefore you start to code, we recommend discussing your plans through a [GitHub issue](https://github.com/docker-library/django/issues), especially for more ambitious contributions. This gives other contributors a chance to point you in the right direction, give you feedback on your design, and help you find out if someone else is working on the same thing.\n\n## Documentation\n\nDocumentation for this image is stored in the [`django/` directory](https://github.com/docker-library/docs/tree/master/django) of the [`docker-library/docs` GitHub repo](https://github.com/docker-library/docs). Be sure to familiarize yourself with the [repository's `README.md` file](https://github.com/docker-library/docs/blob/master/README.md) before attempting a pull request.",
  "type": "docker",
  "docker_name": "django",
  "revision": "python2-onbuild",
  "uris": [
    "https://hub.docker.com/r/_/django",
    "https://hub.docker.com/v2/repositories/library/django"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Python",
    "Mode/API/Toolkit",
    "Style/Virtualization Level/Application"
  ],
  "info_url": "https://hub.docker.com/r/_/django",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}