{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/monsantoco/logstash",
    "repository_url": "https://hub.docker.com/v2/repositories/monsantoco/logstash",
    "tags_url": "https://hub.docker.com/v2/repositories/monsantoco/logstash/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/monsantoco/logstash/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/monsantoco/logstash/autobuild",
    "user": "monsantoco",
    "name": "logstash",
    "namespace": "monsantoco",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 4,
    "pull_count": 3040693,
    "last_updated": "2015-11-14T12:56:59.273299Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "v1.5.0",
        "full_size": 302593282,
        "id": 119820,
        "repository": 135850,
        "creator": 206754,
        "last_updater": 455019,
        "last_updated": "2015-11-14T12:57:02.811449Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "latest",
        "full_size": 150611602,
        "id": 119829,
        "repository": 135850,
        "creator": 206754,
        "last_updater": 455019,
        "last_updated": "2015-10-26T15:28:18.923702Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.5.1",
        "full_size": 148989847,
        "id": 361365,
        "repository": 135850,
        "creator": 206754,
        "last_updater": 455019,
        "last_updated": "2015-10-26T15:28:17.207035Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.5.2",
        "full_size": 149874034,
        "id": 525892,
        "repository": 135850,
        "creator": 28802,
        "last_updater": 455019,
        "last_updated": "2015-10-26T15:28:15.406458Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.5.3",
        "full_size": 150571296,
        "id": 632936,
        "repository": 135850,
        "creator": 28802,
        "last_updater": 455019,
        "last_updated": "2015-10-26T15:28:09.662398Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.5.4",
        "full_size": 150611281,
        "id": 1177412,
        "repository": 135850,
        "creator": 455019,
        "last_updater": 455019,
        "last_updated": "2015-10-26T15:28:07.185708Z",
        "image_id": null,
        "v2": true,
        "platforms": []
      },
      {
        "name": "1.5.0",
        "full_size": 283693416,
        "id": 361352,
        "repository": 135850,
        "creator": 206754,
        "last_updater": 455019,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "MonsantoCo/docker-logstash"
  },
  "name": "monsantoco/logstash Docker container",
  "description": "Logstash Docker image based on Alpine Linux w/Oracle JDK 8 (~537 MB).",
  "readme": "## Logstash Dockerfile\r\n\r\nThis is a highly configurable [Logstash](https://www.elastic.co/products/logstash) Docker image built using [Docker's automated build](https://registry.hub.docker.com/u/monsantoco/logstash/) process and published to the public [Docker Hub Registry](https://registry.hub.docker.com/).\r\n\r\nIt is usually paired with an [Elasticsearch](https://www.elastic.co/products/elasticsearch) instance (document database) and [Kibana](https://www.elastic.co/products/kibana) (as a frontend) to form what is known as an **ELK stack**.\r\n\r\n\r\n### How to use this image\r\nTo start a basic container, specify `--env LS_ES_CONN_STR=[hostname/IP]:[port]` (separate multiple values with comma, ',') for a remote Elasticsearch instance. This will be applied to the default `logstash.conf` file. For example:\r\n\r\n```sh\r\ndocker run -d --name --publish 5000:5000 --env LS_ES_CONN_STR=elasticsearch.local:9200 monsantoco/logstash\r\n```\r\n\r\n> Note that for connecting to an Elasticsearch cluster you should be using a proxy node or load balancer, but you can use `--env LS_ES_CONN_STR=esnode1:9200,esnode2:9200,esnode3:9200` to connect to multiple ES nodes as well.\r\n\r\nThe included `logstash.conf` file is capable of processing syslog, logstash-forwarder, systemd journal, Logspout Docker logs, and Log4j (just pass-through) content. It is highly recommended that you use your own file for best processing however.\r\n\r\n### Additional Configuration\r\nThe image exposes a few ports required by the default `logstash.conf` file, namely:\r\n\r\n* 5000 (tcp/udp) - Used for syslog\r\n* 5002 (tcp) - Used for [Logstash-Forwarder](https://github.com/elastic/logstash-forwarder)\r\n* 5004 (tcp) - Used for systemd journal\r\n* 5006 (tcp) - Used for [Logspout Docker logs](https://github.com/gliderlabs/logspout)\r\n* 4560 (tcp) - Used for Log4J\r\n\r\nThese exposed ports should be used in your own file though the purpose can of course be different. You can use your own configuration via [command line](https://www.elastic.co/guide/en/logstash/current/_command_line_flags.html) `-e CONFIG_STRING`, a volume mount (--volume $PWD/conf:/etc/logstash/conf.d) or download URL (--env LS_CFG_URL=http://pastebin.com/4EsKPGNF). Local volume mounted `logstash.conf` example:\r\n\r\n```sh\r\ndocker run -d \\\r\n  --publish 5000:5000 \\\r\n  --publish 5000:5000/udp \\\r\n  --publish 5002:5002 \\\r\n  --publish 5004:5004 \\\r\n  --publish 5006:5006 \\\r\n  --publish 4560:4560 \\\r\n  --volume /tmp:/etc/logstash/conf.d \\\r\n  monsantoco/logstash\r\n```\r\n\r\nRemote Logstash configuration file download example:\r\n\r\n```sh\r\ndocker run -d \\\r\n  --publish 5000:5000 \\\r\n  --publish 5000:5000/udp \\\r\n  --publish 5002:5002 \\\r\n  --publish 5004:5004 \\\r\n  --publish 5006:5006 \\\r\n  --publish 4560:4560 \\\r\n  --env LS_CFG_URL=http://pastebin.com/4EsKPGNF \\\r\n  monsantoco/logstash\r\n```\r\n\r\nEnvironment variables are accepted as a means to provide further configuration by reading those starting with `LS_`. Any matching variables will be used as substitution variables within Logstash's configuration file, `logstash.conf' by:\r\n\r\n  1. Removing the `LS_` prefix\r\n  2. Substituting the value within the configuration file (`logstash.conf`)\r\n\r\nThe environment variable substitution also works for your configuration file (host mounted or remote download) as well, for example:\r\n\r\n```sh\r\ndocker run -d \\\r\n  --publish 5000:5000 \\\r\n  --env LS_CFG_URL=http://pastebin.com/4EsKPGNF \\\r\n  --env LS_ES_CONN_STR=elasticsearch.local:9200\r\n  monsantoco/logstash\r\n```\r\n\r\n> Note that the container must be able to access the URL provided, otherwise it will exit with a failure code.\r\n\r\n### A note about Logstash Forwarder\r\nThis image can use either existing SSL keys and certificates, or create new ones for using Logstash-Forwarder. The latter is always done whenever no files are found in the expected location, `/etc/logstash/ssl`. This is an exposed volume so you can do a host volume mount to use your own files. You can also download your own remote files using the `LSF_CERT_URL` (certificate) and `LSF_KEY_URL` (key) environment variables. The container must be able to access all URLs provided, otherwise it will exit with a failure code.\r\n",
  "dockerfile": "# Docker file to create Logstash container.\nFROM cgswong/java:openjre8\n\n# Setup environment\nENV LS_VERSION 1.5.4\nENV LS_HOME /opt/logstash\nENV LS_CFG_BASE_DIR /etc/logstash\nENV LS_CFG_SSL_DIR ${LS_CFG_BASE_DIR}/.ssl\nENV LS_CFG_FILE_DIR ${LS_CFG_BASE_DIR}/conf.d\nENV LS_USER logstash\nENV LS_GROUP logstash\n\n# Install requirements and Logstash\nRUN apk --update add \\\n      curl \\\n      python \\\n      py-pip \\\n      bash &&\\\n    mkdir -p \\\n      ${LS_CFG_SSL_DIR} \\\n      ${LS_CFG_FILE_DIR}  \\\n      /opt &&\\\n    curl -sSL --insecure --location https://download.elasticsearch.org/logstash/logstash/logstash-${LS_VERSION}.tar.gz | tar zxf - -C /opt &&\\\n    ln -s /opt/logstash-${LS_VERSION} ${LS_HOME} &&\\\n    addgroup ${LS_GROUP} &&\\\n    adduser -h ${LS_HOME} -D -s /bin/bash -G ${LS_GROUP} ${LS_USER} &&\\\n    chown -R ${LS_USER}:${LS_GROUP} ${LS_HOME}/ ${LS_CFG_BASE_DIR} &&\\\n    chmod 700 ${LS_CFG_SSL_DIR}\n\n# Configure environment\nCOPY src/ /\n\n# Listen for defaults: 5000/tcp:udp (syslog), 5002/tcp (logstash-forwarder), 5004/tcp (journald), 5006/udp (Logspout), 5200/tcp (log4j)\nEXPOSE 5000 5002 5004 5006 5200\n\n# Expose volumes\nVOLUME [\"${LS_CFG_BASE_DIR}\"]\n\nENTRYPOINT [\"/usr/local/bin/logstash.sh\"]\nCMD [\"\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      5000
    ],
    "volume": [
      "[\"${LS_CFG_BASE_DIR}\"]"
    ],
    "run": [
      "apk --update add       curl       python       py-pip       bash &&    mkdir -p       ${LS_CFG_SSL_DIR}       ${LS_CFG_FILE_DIR}        /opt &&    curl -sSL --insecure --location https://download.elasticsearch.org/logstash/logstash/logstash-${LS_VERSION}.tar.gz | tar zxf - -C /opt &&    ln -s /opt/logstash-${LS_VERSION} ${LS_HOME} &&    addgroup ${LS_GROUP} &&    adduser -h ${LS_HOME} -D -s /bin/bash -G ${LS_GROUP} ${LS_USER} &&    chown -R ${LS_USER}:${LS_GROUP} ${LS_HOME}/ ${LS_CFG_BASE_DIR} &&    chmod 700 ${LS_CFG_SSL_DIR}"
    ],
    "workdir": [],
    "from": "cgswong/java:openjre8",
    "env": {
      "LS_VERSION": "1.5.4",
      "LS_HOME": "/opt/logstash",
      "LS_CFG_BASE_DIR": "/etc/logstash",
      "LS_CFG_SSL_DIR": "${LS_CFG_BASE_DIR}/.ssl",
      "LS_CFG_FILE_DIR": "${LS_CFG_BASE_DIR}/conf.d",
      "LS_USER": "logstash",
      "LS_GROUP": "logstash"
    },
    "copy": "src/ /",
    "entrypoint": "[\"/usr/local/bin/logstash.sh\"]",
    "cmd": "[\"\"]"
  },
  "source_repository_url": "https://github.com/MonsantoCo/docker-logstash.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/MonsantoCo/docker-logstash",
  "docker_repository": "monsantoco/logstash",
  "docker_image": "monsantoco/logstash",
  "parameters_schema": {
    "LS_VERSION": {
      "default": "1.5.4",
      "type": "string",
      "mapping": "environment_variable"
    },
    "LS_HOME": {
      "default": "/opt/logstash",
      "type": "string",
      "mapping": "environment_variable"
    },
    "LS_CFG_BASE_DIR": {
      "default": "/etc/logstash",
      "type": "string",
      "mapping": "environment_variable"
    },
    "LS_CFG_SSL_DIR": {
      "default": "${LS_CFG_BASE_DIR}/.ssl",
      "type": "string",
      "mapping": "environment_variable"
    },
    "LS_CFG_FILE_DIR": {
      "default": "${LS_CFG_BASE_DIR}/conf.d",
      "type": "string",
      "mapping": "environment_variable"
    },
    "LS_USER": {
      "default": "logstash",
      "type": "string",
      "mapping": "environment_variable"
    },
    "LS_GROUP": {
      "default": "logstash",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        5000
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "monsantoco/logstash",
  "revision": "v1.5.0",
  "uris": [
    "https://hub.docker.com/r/monsantoco/logstash",
    "https://hub.docker.com/v2/repositories/monsantoco/logstash",
    "https://github.com/MonsantoCo/docker-logstash.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/Java",
    "Mode/Executable/Image/Container Image/Docker Image",
    "Type/Devopsware/Build/Java/Ant",
    "Type/Devopsware/Logging/Logstash",
    "Type/Infrastructure/Operating System/Linux"
  ],
  "info_url": "https://hub.docker.com/r/monsantoco/logstash",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}