{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/ncolomer/couchbase",
    "repository_url": "https://hub.docker.com/v2/repositories/ncolomer/couchbase",
    "tags_url": "https://hub.docker.com/v2/repositories/ncolomer/couchbase/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/ncolomer/couchbase/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/ncolomer/couchbase/autobuild",
    "user": "ncolomer",
    "name": "couchbase",
    "namespace": "ncolomer",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 10,
    "pull_count": 999,
    "last_updated": "2015-10-16T09:47:30.799593Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 252351280,
        "id": 11508,
        "repository": 9858,
        "creator": 12983,
        "last_updater": 12983,
        "last_updated": null,
        "image_id": null,
        "v2": true,
        "platforms": []
      }
    ],
    "build_name": "ncolomer/docker-templates"
  },
  "name": "ncolomer/couchbase Docker container",
  "description": "Couchbase 2.2.0 community edition (build-837)",
  "readme": "# Couchbase Docker container\n\nThis is a collection of images and scripts to help you run Couchbase 2.2.0 community edition (build-837) in Docker containers.\nDocker containers are great to provision ephemeral topologies for testing and development purpose.\nThis project was partly inspired by [dustin/couchbase](https://gist.github.com/dustin/6605182).\n\n## Prerequisites\n\nYou need to override memlock and nofile limits to make Couchbase run correctly. \nAdd the following lines at the end of the `/etc/init/docker.conf` file:\n\n\tlimit memlock unlimited unlimited\n\tlimit nofile 262144\n\nFinally, restart the Docker daemon: `/etc/init.d/docker restart`.\n\n## Single Couchbase node\n\n1. Create the Couchbase container\n\n\t\tdocker run -d -name cb ncolomer/couchbase\n\n\tThis command starts a Couchbase node as a new cluster and setup a `default` bucket of 128m (can be changed later in the admin interface).\n\tYou can also add the options generated by the `$(./scripts/ports raz)` script to bind Couchbase client ports (8091, 8092, 11210, 11211) to host.\n\n\t\tdocker run -d $(./scripts/ports raz) -name cb ncolomer/couchbase\n\n2. Check the Couchbase instance is up&running\n\n\tUsing Telnet (Memcached text protocol)\n\n\t\t$ telnet $(./scripts/ipof cb) 11211\n\t\t# Check health\n\t\tstats\n\t\t# Set and get a key\n\t\tset test_key 0 0 1\n\t\tget test_key\n\t\t# Disconnect\n\t\tquit\n\n\tUsing `couchbase-cli`\n\n\t\tdocker run -rm ncolomer/couchbase couchbase-cli server-info -c $(./scripts/ipof cb) -u Administrator -p couchbase\n\n\tUsing HTTP\n\n\t\tcurl -u Administrator:couchbase http://$(./scripts/ipof cb):8091/nodes/ns_1@127.0.0.1\n\n\tUsing admin interface: open the output of `echo http://$(./scripts/ipof cb):8091` in your favorite browser. \n\tThe admin login is `Administrator` and the password is `couchbase`.\n\n## 3-node cluster\n\nCreate the containers as following:\n\n\tdocker run -d -name cb1 ncolomer/couchbase\n\tdocker run -d -name cb2 ncolomer/couchbase couchbase-start $(./scripts/ipof cb1)\n\tdocker run -d -name cb3 ncolomer/couchbase couchbase-start $(./scripts/ipof cb1)\n\nThe nodes `cb2` and `cb3` will automatically join the cluster via `cb1`. The cluster needs a rebalance to be fully operationnal. To do so, run the following command:\n\n\tdocker run -rm ncolomer/couchbase couchbase-cli rebalance -c $(./scripts/ipof cb1) -u Administrator -p couchbase\n\nNote that you can also trigger a rebalance and show progress from the admin interface.\n\n## Two 2-node cluster (XDCR base)\n\nCreate the containers as following:\n\n\tdocker run -d $(./scripts/ports raz) -name cb11 ncolomer/couchbase\n\tdocker run -d -name cb12 ncolomer/couchbase couchbase-start $(./scripts/ipof cb11)\n\tdocker run -d $(./scripts/ports) -name cb21 ncolomer/couchbase\n\tdocker run -d -name cb22 ncolomer/couchbase couchbase-start $(./scripts/ipof cb21)\n\nThe node `cb12` automatically joins the cluster #1 via `cb11` and the node `cb22` automatically joins the cluster #2 via `cb11`. The clusters #1 and #2 both need a rebalance to be fully operationnal. To do so, run the following commands:\n\n\tdocker run -rm ncolomer/couchbase couchbase-cli rebalance -c $(./scripts/ipof cb11) -u Administrator -p couchbase\n\tdocker run -rm ncolomer/couchbase couchbase-cli rebalance -c $(./scripts/ipof cb21) -u Administrator -p couchbase\n\n* Open the URL `http://$CB11_URL:8091` (replace `$CB11_URL` by the output of `./scripts/ipof cb11`) in your favorite browser\n* Setup the XDCR as described in the [Set Source and Destination Clusters](http://docs.couchbase.com/couchbase-manual-2.2/#set-source-and-destination-clusters) documentation page. You will have to provide at lease one IP of a node in the cluster #2, the IP returned by `./scripts/ipof cb21` is a good choice.\n* Note you can also do all this stuff using command line. See the documentation for the details.\n\n## Some routing magic\n\nIf you host Docker on a Virtual Machine (a Vagrant managed VM for instance), you can make docker containers reachable from your VM's host by routing request to the docker bridge:\n\n\tsudo route add -net $DOCKER_BRIDGE $VM_IP\n\nExample:\n\n\tsudo route add -net 172.17.0.0 192.168.10.10\n\n",
  "dockerfile": "# Couchbase \n#\n# VERSION\t\t1.0\n\nFROM centos\nMAINTAINER Nicolas Colomer ncolomer@ymail.com\n\nENV CB_VERSION\t\t2.2.0\nENV CB_RELEASE_URL\thttp://packages.couchbase.com/releases\nENV CB_PACKAGE\t\tcouchbase-server-community_${CB_VERSION}_x86_64.rpm\nENV CB_USERNAME\t\tAdministrator\nENV CB_PASSWORD\t\tcouchbase\n\n# Install couchbase\nRUN yum install -y wget pkgconfig\nRUN rpm --install $CB_RELEASE_URL/$CB_VERSION/$CB_PACKAGE\nRUN ln -s /opt/couchbase/bin/couchbase-cli /usr/local/bin/\n\n# Put start script\nADD sources/couchbase-start /usr/local/bin/\n\n# See http://docs.couchbase.com/couchbase-manual-2.5/cb-install/#xdcr\nEXPOSE 8091 8092 11210 11211\n\nUSER root\nCMD couchbase-start \n",
  "dockerfile_json": {
    "add": [
      {
        "source": "sources/couchbase-start",
        "dest": "/usr/local/bin/"
      }
    ],
    "expose": [
      8091
    ],
    "volume": [],
    "run": [
      "yum install -y wget pkgconfig",
      "rpm --install $CB_RELEASE_URL/$CB_VERSION/$CB_PACKAGE",
      "ln -s /opt/couchbase/bin/couchbase-cli /usr/local/bin/"
    ],
    "workdir": [],
    "from": "centos",
    "maintainer": "Nicolas Colomer ncolomer@ymail.com",
    "env": {},
    "user": "root",
    "cmd": "couchbase-start "
  },
  "source_repository_url": "git://github.com/ncolomer/docker-templates.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/ncolomer/docker-templates",
  "docker_repository": "ncolomer/couchbase",
  "docker_image": "ncolomer/couchbase",
  "parameters_schema": {
    "exposed_ports": {
      "default": [
        8091
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "ncolomer/couchbase",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/ncolomer/couchbase",
    "https://hub.docker.com/v2/repositories/ncolomer/couchbase",
    "git://github.com/ncolomer/docker-templates.git"
  ],
  "labels": [
    "Docker",
    "Type/Devopsware/Build",
    "Type/Middleware/Data Store/Document-oriented/Couchbase",
    "Type/Middleware/Data Store/Document-oriented/HBase"
  ],
  "info_url": "https://hub.docker.com/r/ncolomer/couchbase",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}