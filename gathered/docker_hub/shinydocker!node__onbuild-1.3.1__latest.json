{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/shinydocker/node",
    "repository_url": "https://hub.docker.com/v2/repositories/shinydocker/node",
    "tags_url": "https://hub.docker.com/v2/repositories/shinydocker/node/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/shinydocker/node/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/shinydocker/node/autobuild",
    "user": "shinydocker",
    "name": "node",
    "namespace": "shinydocker",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 0,
    "pull_count": 1177,
    "last_updated": "2016-09-13T23:25:41.893670Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "onbuild-1.3.1",
        "full_size": 109922153,
        "id": 4831942,
        "repository": 393587,
        "creator": 499898,
        "last_updater": 499898,
        "last_updated": "2016-09-13T23:23:58.124118Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.3.1",
        "full_size": 109922083,
        "id": 4831888,
        "repository": 393587,
        "creator": 499898,
        "last_updater": 499898,
        "last_updated": "2016-09-13T23:21:46.276084Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "onbuild",
        "full_size": 109922155,
        "id": 1305723,
        "repository": 393587,
        "creator": 499898,
        "last_updater": 499898,
        "last_updated": "2016-09-13T22:45:39.024101Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "builder",
        "full_size": 119332671,
        "id": 1305421,
        "repository": 393587,
        "creator": 499898,
        "last_updater": 499898,
        "last_updated": "2016-09-13T22:43:13.862285Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "builder-1.2.0",
        "full_size": 119330205,
        "id": 4722707,
        "repository": 393587,
        "creator": 499898,
        "last_updater": 499898,
        "last_updated": "2016-09-07T21:06:44.573784Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "onbuild-1.3.0",
        "full_size": 109825310,
        "id": 4700711,
        "repository": 393587,
        "creator": 499898,
        "last_updater": 499898,
        "last_updated": "2016-09-06T21:24:55.132875Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "onbuild-1.2.1",
        "full_size": 110162111,
        "id": 4655980,
        "repository": 393587,
        "creator": 499898,
        "last_updater": 499898,
        "last_updated": "2016-09-02T22:01:27.028952Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "1.2.1",
        "full_size": 109848995,
        "id": 3913836,
        "repository": 393587,
        "creator": 499898,
        "last_updater": 499898,
        "last_updated": "2016-07-19T23:18:08.866341Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "latest",
        "full_size": 109848992,
        "id": 1299244,
        "repository": 393587,
        "creator": 499898,
        "last_updater": 499898,
        "last_updated": "2016-07-19T23:16:09.537162Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      },
      {
        "name": "master",
        "full_size": 109848890,
        "id": 1299228,
        "repository": 393587,
        "creator": 499898,
        "last_updater": 499898,
        "last_updated": "2016-07-19T23:14:28.813922Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "shiny-docker/node"
  },
  "name": "shinydocker/node Docker container",
  "description": "Node.js server able to run as unprivileged user on ports 80 and 443",
  "readme": "## Description\nBasic Node JS server template.\nRuns as unprivileged `node` user, so it is a little more secure. Runs on port 80 by default\n\nAs of onbuild-1.1.0, nothing is npm installed globally, so running mocha and other scripts will require an npm script entry, or specifying the bin manually\n\n## Usage\n* Run by itself or as a parent docker image, exposes volume /var/www as code directory\n* Runs `npm start` by default (with authbind), exposes ports 80 and 443\n  * If `npm install` is required, add that as a `prestart` script in the project's package.json\n* Running as root user during development when attaching a volume to the host may prevent permission problems, but ensure that everything will still work when running in production as the `node` user\n\n## `onbuild` tag\nBuild an app and run it out of the box.\n* Base the child image on shinydocker/node:onbuild-1.2.1\n* Place app code in root of build\n  * At a minimum, add `package.json` for npm `start` script (including a `prestart` script for `npm install` if needed)\n  * Add .dockerignore to keep any desired files from being added to the image\n* Build app and run as normal, e.g. `docker build -t dev ./ && docker run -d -p 80:80 dev`\n\n## Debugging\n* Run debugger web server listening in background with an npm script containing `node-inspector --web-port 8080 > /dev/null 2>&1 &`, or run in separate screen (not sure how to suppress output)\n* Start script with debugging enabled, e.g. `npm run debug` where the `debug` script is set to `node debug index.js`\n* Go to server.com:8080/?port=5858 to see debugger window, run script to start server\n  * Expose port 8080 through docker as needed\n* Replicate the conditions at server.com under which the debugger should break (note: might be unable to set breakpoints in anonymous functions until they have been declared, i.e. when server has started)\n",
  "dockerfile": "FROM node:6.3.1-slim\n\n#install node dependencies\n#allow node user to run services on port 80 and 443 (when prefixed with 'authbind')\nRUN \\\n  #npm install -g npm && \\\n  cd $(npm root -g)/npm && \\\n  npm install fs-extra && \\\n  sed -i -e s/graceful-fs/fs-extra/ -e s/fs\\.rename/fs.move/ ./lib/utils/rename.js && \\\n  cd - && \\\n  mkdir -p /var/www && \\\n  useradd -ms /sbin/nologin node && \\\n  chown -R node:node /var/www && \\\n  apt-get update && \\\n  apt-get install -y authbind git && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  touch /etc/authbind/byport/443 && \\\n  touch /etc/authbind/byport/80 && \\\n  chown -R node:node /etc/authbind/byport/ && \\\n  chmod -R 755 /etc/authbind/byport/ && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nWORKDIR /var/www/\n\nEXPOSE 80\nEXPOSE 443\n\nENV NODE_ENV production\nENV PATH /var/www/node_modules/.bin:$PATH\n\n#npm install might depend on more than just package.json (e.g. bower.json), so just copy everything\nONBUILD COPY ./ /var/www\nONBUILD USER root\nONBUILD RUN chown -R node:node /var/www\n\nUSER node\nONBUILD USER node\n\nONBUILD RUN cd /var/www; npm install --production\n\nENTRYPOINT [\"authbind\", \"--deep\"]\nCMD [\"npm\", \"start\"]\n",
  "dockerfile_json": {
    "add": [],
    "expose": [
      80,
      443
    ],
    "volume": [],
    "run": [
      "  #npm install -g npm &&   cd $(npm root -g)/npm &&   npm install fs-extra &&   sed -i -e s/graceful-fs/fs-extra/ -e s/fs\\.rename/fs.move/ ./lib/utils/rename.js &&   cd - &&   mkdir -p /var/www &&   useradd -ms /sbin/nologin node &&   chown -R node:node /var/www &&   apt-get update &&   apt-get install -y authbind git &&   rm -rf /var/lib/apt/lists/* &&   touch /etc/authbind/byport/443 &&   touch /etc/authbind/byport/80 &&   chown -R node:node /etc/authbind/byport/ &&   chmod -R 755 /etc/authbind/byport/ &&   apt-get clean &&   rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
    ],
    "workdir": [
      "/var/www/"
    ],
    "from": "node:6.3.1-slim",
    "env": {
      "NODE_ENV": "production",
      "PATH": "/var/www/node_modules/.bin:$PATH"
    },
    "onbuild": "RUN cd /var/www; npm install --production",
    "user": "node",
    "entrypoint": "[\"authbind\", \"--deep\"]",
    "cmd": "[\"npm\", \"start\"]"
  },
  "source_repository_url": "https://github.com/shiny-docker/node.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/shiny-docker/node",
  "docker_repository": "shinydocker/node",
  "docker_image": "shinydocker/node",
  "parameters_schema": {
    "NODE_ENV": {
      "default": "production",
      "type": "string",
      "mapping": "environment_variable"
    },
    "PATH": {
      "default": "/var/www/node_modules/.bin:$PATH",
      "type": "string",
      "mapping": "environment_variable"
    },
    "exposed_ports": {
      "default": [
        80,
        443
      ],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "shinydocker/node",
  "revision": "onbuild-1.3.1",
  "uris": [
    "https://hub.docker.com/r/shinydocker/node",
    "https://hub.docker.com/v2/repositories/shinydocker/node",
    "https://github.com/shiny-docker/node.git"
  ],
  "labels": [
    "Docker",
    "Type/Middleware/Runtime/JavaScript/Node.js",
    "Binding/Region/North America/US"
  ],
  "info_url": "https://hub.docker.com/r/shinydocker/node",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}