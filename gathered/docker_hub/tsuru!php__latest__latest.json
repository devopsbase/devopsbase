{
  "dockerhub": {
    "web_url": "https://hub.docker.com/r/tsuru/php",
    "repository_url": "https://hub.docker.com/v2/repositories/tsuru/php",
    "tags_url": "https://hub.docker.com/v2/repositories/tsuru/php/tags",
    "dockerfile_url": "https://hub.docker.com/v2/repositories/tsuru/php/dockerfile",
    "autobuild_url": "https://hub.docker.com/v2/repositories/tsuru/php/autobuild",
    "user": "tsuru",
    "name": "php",
    "namespace": "tsuru",
    "status": 1,
    "is_private": false,
    "is_automated": true,
    "star_count": 1,
    "pull_count": 1071,
    "last_updated": "2016-10-17T12:44:31.296957Z",
    "permissions": {
      "read": true,
      "write": false,
      "admin": false
    },
    "tags": [
      {
        "name": "latest",
        "full_size": 67492541,
        "id": 1363671,
        "repository": 406308,
        "creator": 205081,
        "last_updater": 114,
        "last_updated": "2016-10-17T12:44:30.947319Z",
        "image_id": null,
        "v2": true,
        "platforms": [
          5
        ]
      }
    ],
    "build_name": "tsuru/platforms"
  },
  "name": "tsuru/php Docker container",
  "description": "Image for the PHP platform in tsuru PaaS.",
  "readme": "# PHP platform\n\nThe PHP platform is built to be able to manage multiple front-end and interpretors. You can manage them in your `tsuru.yml` configuration file.\n\n```yml\nphp:\n    frontend:\n        name: nginx\n    interpretor:\n        name: fpm54\n    composer: true\n```\n\n## Front ends\n\nThe following frontends are currently supported:\n- `apache`: Apache\n- `nginx`: Nginx\n\nYou can chose between them by setting the `php.frontend.name` parameter:\n```yml\nphp:\n    frontend:\n        name: apache\n```\n\nEach frontend supports options that can be set in the `php.frontend.options` parameters.\n\nAll these options are not required, and can be used the following way:\n```yml\nphp:\n    frontend:\n        name: apache\n        options:\n            vhost_file: /path/to/vhost.conf\n            modules:\n                - rewrite\n```\n\n### Apache options\n\n- `vhost_file`: The relative path of your Apache virtual host configuration file\n- `modules`: An array of module names, such as `rewrite` for instance\n\n### Nginx options\n\n- `vhost_file`: The relative path of your Nginx virtual host configuration file\n\n## Interpretors\n\nThe following PHP interpretors are supported:\n\n- `fpm54`: PHP 5.4 though PHP-FPM\n- `fpm55`: PHP 5.5 though PHP-FPM\n- `hhvm`: HipHop Virtual Machine (PHP 5.4)\n\nYou can chose between them by setting the `php.interpretor.name` parameter:\n```yml\nphp:\n    interpretor:\n        name: fpm54\n```\n\nThese interpretors can also have options configured in the `php.interpretor.options` parameter.\n\nIf you choose `fpm54` interpretor, use `extensions` option to install php5 extensions instead of using `requirements.apt`\n\nAll these options are not required and can be used the following ways\n```yml\nphp:\n    interpretor:\n        name: fpm54\n        options:\n            ini_file: /path/to/file.ini\n            extensions:\n                - php5-mysql\n```\n\n## `fpm54` options\n\n- `ini_file`: The relative path of your `php.ini` file in your project, that will replace the default one\n- `extensions`: A list of php5 extensions you need\n\n## `fpm55` options\n\n- `ini_file`: The relative path of your `php.ini` file in your project, that will replace the default one\n- `extensions`: A list of php5 extensions you need\n\n## `hhvm` options\n\n- `ini_file`: The relative path of your `php.ini` file in your project, that will replace the default one\n\n## General options\n\nIn addition to the `frontend` and `interpretor` options, there's an other one:\n\n- `composer`: A boolean that is by default to true. If the value is true, it'll run a `composer install` if there's a `composer.json` file at the root of your application.\n\n## Backward compatibility\n\nTo keep the backward compatibility, there's also a `apache-mod-php` frontend that is in fact the Apache with modphp enabled, that remove the need of an interpretor.\nThat's currently the default configuration if no parameter is set.\n\n## Next steps\n\nWith the current implementation, it's quite easy to add another interpretor for instance.\n",
  "dockerfile": "# Copyright 2016 tsuru authors. All rights reserved.\n# Use of this source code is governed by a BSD-style\n# license that can be found in the LICENSE file.\n\nFROM    tsuru/base-platform\nRUN\techo 'deb http://ppa.launchpad.net/ondrej/php5-5.6/ubuntu trusty main' >> /etc/apt/sources.list\nADD\t. /var/lib/tsuru/php\nRUN\tcp /var/lib/tsuru/php/deploy /var/lib/tsuru\nRUN\tcp /var/lib/tsuru/php/interpretor/fpm5/php5_apt_preferences /etc/apt/preferences.d/php5\nRUN\t/var/lib/tsuru/php/install\n",
  "dockerfile_json": {
    "add": [],
    "expose": [],
    "volume": [],
    "run": [],
    "workdir": [],
    "from": "   tsuru/base-platform"
  },
  "source_repository_url": "https://github.com/tsuru/platforms.git",
  "source_repository_type": "git",
  "source_repository_provider": "github",
  "source_repository_web_url": "https://github.com/tsuru/platforms",
  "docker_repository": "tsuru/php",
  "docker_image": "tsuru/php",
  "parameters_schema": {
    "exposed_ports": {
      "default": [],
      "type": "json_array"
    }
  },
  "type": "docker",
  "docker_name": "tsuru/php",
  "revision": "latest",
  "uris": [
    "https://hub.docker.com/r/tsuru/php",
    "https://hub.docker.com/v2/repositories/tsuru/php",
    "https://github.com/tsuru/platforms.git"
  ],
  "labels": [
    "Docker",
    "Binding/Provider/HP",
    "Mode/Executable/Image/Container Image",
    "Type/Middleware/Runtime/PHP"
  ],
  "info_url": "https://hub.docker.com/r/tsuru/php",
  "requires": [
    {
      "kind": "host",
      "label": "Docker Engine"
    }
  ],
  "latest": true,
  "gatherbase_origin": "docker-hub"
}