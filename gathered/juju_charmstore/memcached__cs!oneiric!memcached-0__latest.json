{
  "name": "memcached Juju charm",
  "juju_charm_name": "memcached",
  "revision": "cs:oneiric/memcached-0",
  "latest": true,
  "uris": [
    "https://jujucharms.com/memcached",
    "https://jujucharms.com/memcached/oneiric",
    "https://jujucharms.com/memcached/oneiric/0",
    "https://api.jujucharms.com/v5/memcached",
    "https://api.jujucharms.com/v5/oneiric/memcached",
    "https://api.jujucharms.com/v5/oneiric/memcached-0"
  ],
  "labels": [
    "Juju charm",
    "Type/Infrastructure/Operating System/macOS",
    "Binding/Provider/HP",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/CLI",
    "Style/Virtualization Level/Application",
    "Type/Devopsware/Build/Java/Ant",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Runtime/Perl",
    "Type/Middleware/Web Server/Apache HTTP Server",
    "Type/Middleware/Data Store",
    "Type/Middleware/Cache/Memcached"
  ],
  "info_url": "https://jujucharms.com/memcached",
  "package_url": "https://api.jujucharms.com/v5/oneiric/memcached-0/archive",
  "created": "2015-06-17T09:34:57.219Z",
  "updated": "2015-06-17T09:34:57.219Z",
  "description": "A high-performance memory object caching system\n\nDanga Interactive developed memcached to enhance the speed of LiveJournal.com, a site which was already doing 20 million+ dynamic page views per day for 1 million users with a bunch of webservers and a bunch of database servers. memcached dropped the database load to almost nothing, yielding faster page load times for users, better resource utilization, and faster access to the databases on a memcache miss.\nmemcached optimizes specific high-load serving applications that are designed to take advantage of its versatile no-locking memory access system. Clients are available in several different programming languages, to suit the needs of the specific application. Traditionally this has been used in mod_perl apps to avoid storing large chunks of data in Apache memory, and to share this burden across several machines.",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "oneiric",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= oneiric"
    }
  ],
  "parameters": {
    "connection-limit": {
      "type": "int",
      "description": "maximum simultaneous connections (memcached option -c)",
      "default": 1024,
      "mapping": "charm_option"
    },
    "disable-auto-cleanup": {
      "type": "string",
      "description": "do not remove things automatically from the cache on OOM\n(memcached option -M)\n",
      "default": "no",
      "mapping": "charm_option"
    },
    "disable-cas": {
      "type": "string",
      "description": "disable use of CAS (and reduce the per-item size by 8 bytes)",
      "default": "no",
      "mapping": "charm_option"
    },
    "disable-large-pages": {
      "type": "string",
      "description": "The charm will will try to use large pages if given more than 2GB of RAM. You may want to disable this behavior. (memcached option -L)",
      "default": "no",
      "mapping": "charm_option"
    },
    "extra-options": {
      "type": "string",
      "description": "memcached has many other options documented in its man page. You may pass them here as a string which will be appended to memcached's execution.",
      "default": "",
      "mapping": "charm_option"
    },
    "factor": {
      "type": "float",
      "description": "Use <factor> as the multiplier for computing the sizes of memory\nchunks that items are stored in.  A lower value  may result\nin less wasted memory depending on the total amount of memory\navailable and the distribution of item size.\n",
      "default": -1,
      "mapping": "charm_option"
    },
    "min-item-size": {
      "type": "int",
      "description": "Allocate a minimum of <size> bytes for the item key, value,\nand flags. The default  is  48.  If  you have  a  lot of small\nkeys and values, you can get a significant memory efficiency\ngain with a lower value. If you use a high chunk growth factor\n(-f option),  on  the  other  hand,  you  may  want  to\nincrease  the  size  to  allow  a  bigger percentage of your\nitems to fit in the most densely packed (smallest) chunks.\n(memcached option -n)\n",
      "default": -1,
      "mapping": "charm_option"
    },
    "request-limit": {
      "type": "int",
      "description": "limit of requests a single client can make at one time\n(memcached option -R) -1 takes memcached default (20)\n",
      "default": -1,
      "mapping": "charm_option"
    },
    "size": {
      "type": "int",
      "description": "Size of memcache pool in MiB (memcached option -m)",
      "default": 768,
      "mapping": "charm_option"
    },
    "slab-page-size": {
      "type": "int",
      "description": "Override the size of each slab page in bytes. In mundane\nwords, it adjusts  the  maximum  item  size that  memcached\nwill  accept.  You can use the suffixes K and M to specify\nthe size as well, so use 2000000 or 2000K or 2M if you want\na maximum size of 2 MB per object.   It  is  not  recommended\nto raise this limit above 1 MB due just to performance reasons.\nThe default value is 1 MB. (memcached option -I) -1 takes\nthe memcached default.\n",
      "default": -1,
      "mapping": "charm_option"
    },
    "tcp-port": {
      "type": "int",
      "description": "TCP port to listen on. (memcached option -p)",
      "default": 11211,
      "mapping": "charm_option"
    },
    "threads": {
      "type": "int",
      "description": "number of threads to use. default is 4. (memcached option -t)",
      "default": -1,
      "mapping": "charm_option"
    },
    "udp-port": {
      "type": "int",
      "description": "UDP port to listen on (memcached option -U)",
      "default": 0,
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/memcache",
      "juju_interface": "memcache",
      "juju_name": "cache",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/munin-node",
      "juju_interface": "munin-node",
      "juju_name": "munin",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "gatherbase_origin": "juju-charmstore"
}