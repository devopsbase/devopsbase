{
  "name": "nova-volume Juju charm",
  "juju_charm_name": "nova-volume",
  "revision": "cs:precise/nova-volume-6",
  "latest": true,
  "uris": [
    "https://jujucharms.com/nova-volume",
    "https://jujucharms.com/nova-volume/precise",
    "https://jujucharms.com/nova-volume/precise/6",
    "https://api.jujucharms.com/v5/nova-volume",
    "https://api.jujucharms.com/v5/precise/nova-volume",
    "https://api.jujucharms.com/v5/precise/nova-volume-6"
  ],
  "labels": [
    "Juju charm",
    "Type/Middleware/Runtime/Java",
    "Binding/Provider/Amazon/EC2",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/API",
    "Style/Virtualization Level/Hardware/Hypervisor",
    "Type/Devopsware/Test",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Cloud Platform/OpenStack",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Runtime/JavaScript/Node.js",
    "Type/Middleware/Data Store/Relational/MySQL",
    "Type/Middleware/Data Store/Relational/PostgreSQL"
  ],
  "info_url": "https://jujucharms.com/nova-volume",
  "package_url": "https://api.jujucharms.com/v5/precise/nova-volume-6/archive",
  "created": "2015-06-17T09:36:06.631Z",
  "updated": "2015-06-17T09:36:06.631Z",
  "description": "OpenStack Compute - storage\n\nOpenStack is a reliable cloud infrastructure. Its mission is to produce\nthe ubiquitous cloud computing platform that will meet the needs of public\nand private cloud providers regardless of size, by being simple to implement\nand massively scalable.\n.\nOpenStack Compute, codenamed Nova, is a cloud computing fabric controller. In\naddition to its \"native\" API (the OpenStack API), it also supports the Amazon\nEC2 API.\n.\nNova is intended to be modular and easy to extend and adapt. It supports many\ndifferent hypervisors (KVM and Xen to name a few), different database backends\n(SQLite, MySQL, and PostgreSQL, for instance), different types of user\ndatabases (LDAP or SQL), etc.\n.\nThis is the package you will install on your storage nodes.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/rabbitmq",
      "self_resolve": true,
      "juju_interface": "rabbitmq",
      "juju_name": "amqp",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/ceph-client",
      "self_resolve": true,
      "juju_interface": "ceph-client",
      "juju_name": "ceph",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mysql-shared",
      "self_resolve": true,
      "juju_interface": "mysql-shared",
      "juju_name": "shared-db",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "block-device": {
      "type": "string",
      "description": "The *available* block device to create LVM volume group upon.",
      "default": "sdb",
      "mapping": "charm_option"
    },
    "config-flags": {
      "type": "string",
      "description": "Comma separated list of key=value config flags to be set in nova.conf.",
      "default": "None",
      "mapping": "charm_option"
    },
    "db-user": {
      "type": "string",
      "description": "Username for database access",
      "default": "nova",
      "mapping": "charm_option"
    },
    "nova-db": {
      "type": "string",
      "description": "Database name",
      "default": "nova",
      "mapping": "charm_option"
    },
    "openstack-origin": {
      "type": "string",
      "description": "Repository from which to install.  May be one of the following:\ndistro (default), ppa:somecustom/ppa, a deb url sources entry,\nor a supported Cloud Archive release pocket.\n\nSupported Cloud Archive sources include: cloud:precise-folsom,\ncloud:precise-folsom/updates, cloud:precise-folsom/staging,\ncloud:precise-folsom/proposed.\n\nNote that updating this setting to a source that is known to\nprovide a later version of OpenStack will trigger a software\nupgrade.\n",
      "default": "distro",
      "mapping": "charm_option"
    },
    "overwrite": {
      "type": "string",
      "description": "If 'true', charm will attempt to overwrite storage containing previous filesystems or LVM, assuming it is not in use.",
      "default": "false",
      "mapping": "charm_option"
    },
    "rabbit-user": {
      "type": "string",
      "description": "Username used to access rabbitmq queue",
      "default": "nova",
      "mapping": "charm_option"
    },
    "rabbit-vhost": {
      "type": "string",
      "description": "",
      "default": "nova",
      "mapping": "charm_option"
    },
    "volume-group": {
      "type": "string",
      "description": "Name of volume group to create on top of block-device",
      "default": "nova-volumes",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/nova-volume",
      "juju_interface": "nova-volume",
      "juju_name": "nova-volume-service",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "Openstack Nova Volume service provides EBS-like storage to Openstack instances.\n\nThis charm will configure Nova volume on a given unit to serve logical volumes\nover iSCSI via the nova-volume service.  All communication between nova-volume\nand the rest of the Openstack deployment happens over the database and\nmessaging queue thus the charm has two required relations: mysql:shared-db and\nrabbitmq:amqp.\n\nTo deploy along side an existing Openstack deployment, simply:\n\njuju deploy --repository=. local:nova-volume\njuju add-relation mysql nova-volume\njuju add-relation rabbitmq nova-volume\n\nAssuming the rest of the Openstack cloud is functioning properly,\nthe volume service will come online.\n\nOverview of config options and corresponding defaults:\n\nnova-release: distro\n\nFrom which installation source to install the required Nova packages.\nThe default is to install from the Ubuntu archive.  You may also specify\none of the following:\n    - trunk: upstream trunk PPA (ppa:nova-core/trunk)\n    - milestone: upstream milestone PPA (ppa:nova-core/milestone)\n    - milestone-proposed: upstream milestone PPA \n      (ppa:nova-core/milestone-proposed)\n    - A valid PPA with in LP PPA format: ppa:myaccount/ppaname\n    - A custom URL formated ala:\n        'deb http://host/ubuntu oneiric main'\n      You may append a GPG Key ID to the end of the line after a |,\n      and the charm will attempt to import it from keyserver.ubuntu.com.\n    \nblock-device: sdb\n\nNova Volume requires a volume group be created from which to carve out\nlogical volumes.  This block device will be initialized as the physical volume\nthat backs this volume group.\n\nYou may use either /dev/<block-device>, <block-device>, or \n/path/to/file[|size].  In the third format, '|size' is optional, defaulting\nto 5G.  Example: \"/var/lib/nova-volumes/my-vol.img|2G\".  The size parameter\nis passed to 'truncate --size'\n\nvolume-group: nova-volumes\n\nThe volume group to create and use when creating new volumes.\n\noverwrite: false\n\nBy default, LVM2 and the charm will refuse to initialize a block device\nthat has existing LVM signatures or is mounted.  If this is set to true, the\ncharm will attempt to unmount the block device if is mounted and wipe any\ntraces of LVM from it, prior to initializing it as a new volume group. *BEWARE*\n\nrabbit-user: nova\n\nUsername with which to request access to the messaging queue.\n\nrabbit-vhost: nova\n\nName of the RabbitMQ virtual host to access.  This must be the same across all\nNova components.\n\ndb-user: nova\n\nDatabase user with which to request access to the shared MySQL database.\n\nnova-db: nova\n\nDatabase to request access to.  This must be the same across all Nova\ncomponents.\n\n\n",
  "readme": "Openstack Nova Volume service provides EBS-like storage to Openstack instances.\n\nThis charm will configure Nova volume on a given unit to serve logical volumes\nover iSCSI via the nova-volume service.  All communication between nova-volume\nand the rest of the Openstack deployment happens over the database and\nmessaging queue thus the charm has two required relations: mysql:shared-db and\nrabbitmq:amqp.\n\nTo deploy along side an existing Openstack deployment, simply:\n\njuju deploy --repository=. local:nova-volume\njuju add-relation mysql nova-volume\njuju add-relation rabbitmq nova-volume\n\nAssuming the rest of the Openstack cloud is functioning properly,\nthe volume service will come online.\n\nOverview of config options and corresponding defaults:\n\nnova-release: distro\n\nFrom which installation source to install the required Nova packages.\nThe default is to install from the Ubuntu archive.  You may also specify\none of the following:\n    - trunk: upstream trunk PPA (ppa:nova-core/trunk)\n    - milestone: upstream milestone PPA (ppa:nova-core/milestone)\n    - milestone-proposed: upstream milestone PPA \n      (ppa:nova-core/milestone-proposed)\n    - A valid PPA with in LP PPA format: ppa:myaccount/ppaname\n    - A custom URL formated ala:\n        'deb http://host/ubuntu oneiric main'\n      You may append a GPG Key ID to the end of the line after a |,\n      and the charm will attempt to import it from keyserver.ubuntu.com.\n    \nblock-device: sdb\n\nNova Volume requires a volume group be created from which to carve out\nlogical volumes.  This block device will be initialized as the physical volume\nthat backs this volume group.\n\nYou may use either /dev/<block-device>, <block-device>, or \n/path/to/file[|size].  In the third format, '|size' is optional, defaulting\nto 5G.  Example: \"/var/lib/nova-volumes/my-vol.img|2G\".  The size parameter\nis passed to 'truncate --size'\n\nvolume-group: nova-volumes\n\nThe volume group to create and use when creating new volumes.\n\noverwrite: false\n\nBy default, LVM2 and the charm will refuse to initialize a block device\nthat has existing LVM signatures or is mounted.  If this is set to true, the\ncharm will attempt to unmount the block device if is mounted and wipe any\ntraces of LVM from it, prior to initializing it as a new volume group. *BEWARE*\n\nrabbit-user: nova\n\nUsername with which to request access to the messaging queue.\n\nrabbit-vhost: nova\n\nName of the RabbitMQ virtual host to access.  This must be the same across all\nNova components.\n\ndb-user: nova\n\nDatabase user with which to request access to the shared MySQL database.\n\nnova-db: nova\n\nDatabase to request access to.  This must be the same across all Nova\ncomponents.\n\n\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}