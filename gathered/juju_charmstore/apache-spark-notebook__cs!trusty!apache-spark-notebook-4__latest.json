{
  "name": "apache-spark-notebook Juju charm",
  "juju_charm_name": "apache-spark-notebook",
  "revision": "cs:trusty/apache-spark-notebook-4",
  "latest": true,
  "uris": [
    "https://jujucharms.com/apache-spark-notebook",
    "https://jujucharms.com/apache-spark-notebook/trusty",
    "https://jujucharms.com/apache-spark-notebook/trusty/4",
    "https://api.jujucharms.com/v5/apache-spark-notebook",
    "https://api.jujucharms.com/v5/trusty/apache-spark-notebook",
    "https://api.jujucharms.com/v5/trusty/apache-spark-notebook-4"
  ],
  "labels": [
    "Juju charm",
    "bigdata",
    "hadoop",
    "apache",
    "Type/Middleware/Runtime/Python",
    "Mode/Guide/Text/Book",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/API",
    "Type/Devopsware/IDE/Web-based",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Web Server/Apache HTTP Server"
  ],
  "info_url": "https://jujucharms.com/apache-spark-notebook",
  "package_url": "https://api.jujucharms.com/v5/trusty/apache-spark-notebook-4/archive",
  "created": "2016-04-01T22:07:36.104Z",
  "updated": "2016-04-01T22:07:36.104Z",
  "description": "A web-based IPython Notebook for Apache Spark.\n\nThe IPython Notebook is an interactive computational environment, in which\nyou can combine code execution, rich text, mathematics, plots, and rich media.\nIPython Notebook and Sparkâ€™s Python API are a powerful combination for data\nscience.\n",
  "maintainer": {
    "name": "bigdata-charmers"
  },
  "juju_charm_subordinate": true,
  "juju_charm_series": "trusty",
  "juju_charm_owner": "bigdata-charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= trusty"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/spark",
      "self_resolve": true,
      "juju_interface": "spark",
      "juju_name": "spark",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "license": "## Overview\n\nIPython Notebook is a web-based notebook that enables interactive data analytics\nfor Spark. The developers of Apache Spark have given thoughtful consideration to\nPython as a language of choice for data analysis. They have developed the\nPySpark API for working with RDDs in Python, and further support using the\npowerful IPythonshell instead of the builtin Python REPL.\n\nThe developers of IPython have invested considerable effort in building the\nIPython Notebook, a system inspired by Mathematica that allows you to create\n\"executable documents.\" IPython Notebooks can integrate formatted text\n(Markdown), executable code (Python), mathematical formulae (LaTeX), and\ngraphics/visualizations (matplotlib) into a single document that captures the\nflow of an exploration and can be exported as a formatted report or an\nexecutable script.\n\n\n## Usage\n\nThis is a subordinate charm that requires the `apache-spark` interface. This\nmeans that you will need to deploy a base Apache Spark cluster to use\nthe Notebook. An easy way to deploy the recommended environment is to use the\n[apache-hadoop-spark-notebook](https://jujucharms.com/apache-hadoop-spark-notebook)\nbundle. This will deploy the Apache Hadoop platform with an Apache Spark +\nNotebook unit that communicates with the cluster by relating to the\n`apache-hadoop-plugin` subordinate charm:\n\n    juju-quickstart apache-hadoop-spark-notebook\n\nOnce deployment is complete, expose the Notebook:\n\n    juju expose notebook\n\nYou may now access the web interface at\nhttp://{spark_unit_ip_address}:9090. The ip address can be found by running\n`juju status spark | grep public-address`.\n\n\n## Verify the deployment\n\n### Status\n\nThe services provide extended status reporting to indicate when they are ready:\n\n    juju status --format=tabular\n\nThis is particularly useful when combined with `watch` to track the on-going\nprogress of the deployment:\n\n    watch -n 0.5 juju status --format=tabular\n\nThe message for each unit will provide information about that unit's state.\n\n\n## Contact Information\n\n- <bigdata@lists.ubuntu.com>\n\n\n## Help\n\n- [Juju mailing list](https://lists.ubuntu.com/mailman/listinfo/juju)\n- [Juju community](https://jujucharms.com/community)\n",
  "readme": "## Overview\n\nIPython Notebook is a web-based notebook that enables interactive data analytics\nfor Spark. The developers of Apache Spark have given thoughtful consideration to\nPython as a language of choice for data analysis. They have developed the\nPySpark API for working with RDDs in Python, and further support using the\npowerful IPythonshell instead of the builtin Python REPL.\n\nThe developers of IPython have invested considerable effort in building the\nIPython Notebook, a system inspired by Mathematica that allows you to create\n\"executable documents.\" IPython Notebooks can integrate formatted text\n(Markdown), executable code (Python), mathematical formulae (LaTeX), and\ngraphics/visualizations (matplotlib) into a single document that captures the\nflow of an exploration and can be exported as a formatted report or an\nexecutable script.\n\n\n## Usage\n\nThis is a subordinate charm that requires the `apache-spark` interface. This\nmeans that you will need to deploy a base Apache Spark cluster to use\nthe Notebook. An easy way to deploy the recommended environment is to use the\n[apache-hadoop-spark-notebook](https://jujucharms.com/apache-hadoop-spark-notebook)\nbundle. This will deploy the Apache Hadoop platform with an Apache Spark +\nNotebook unit that communicates with the cluster by relating to the\n`apache-hadoop-plugin` subordinate charm:\n\n    juju-quickstart apache-hadoop-spark-notebook\n\nOnce deployment is complete, expose the Notebook:\n\n    juju expose notebook\n\nYou may now access the web interface at\nhttp://{spark_unit_ip_address}:9090. The ip address can be found by running\n`juju status spark | grep public-address`.\n\n\n## Verify the deployment\n\n### Status\n\nThe services provide extended status reporting to indicate when they are ready:\n\n    juju status --format=tabular\n\nThis is particularly useful when combined with `watch` to track the on-going\nprogress of the deployment:\n\n    watch -n 0.5 juju status --format=tabular\n\nThe message for each unit will provide information about that unit's state.\n\n\n## Contact Information\n\n- <bigdata@lists.ubuntu.com>\n\n\n## Help\n\n- [Juju mailing list](https://lists.ubuntu.com/mailman/listinfo/juju)\n- [Juju community](https://jujucharms.com/community)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}