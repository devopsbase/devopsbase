{
  "name": "opendj Juju charm",
  "juju_charm_name": "opendj",
  "revision": "cs:precise/opendj-3",
  "latest": true,
  "uris": [
    "https://jujucharms.com/opendj",
    "https://jujucharms.com/opendj/precise",
    "https://jujucharms.com/opendj/precise/3",
    "https://api.jujucharms.com/v5/opendj",
    "https://api.jujucharms.com/v5/precise/opendj",
    "https://api.jujucharms.com/v5/precise/opendj-3"
  ],
  "labels": [
    "Juju charm",
    "applications",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Style/Virtualization Level/Application",
    "Type/Devopsware/Deployment/Juju",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Data Store"
  ],
  "info_url": "https://jujucharms.com/opendj",
  "package_url": "https://api.jujucharms.com/v5/precise/opendj-3/archive",
  "created": "2015-06-17T09:30:46.191Z",
  "updated": "2015-06-17T09:30:46.191Z",
  "description": "OpenDJ - Directory servies made easy and secure for the web\n\nOpenDJ is the only 100 percent open-source big data platform that combines the security of a proven directory with the accessibility of a database. Lightweight and easy to embed, it allows you to easily share real-time identity data across enterprise, cloud, social and mobile environments - a practical necessity for managing today identity relationship management challenges (IRM). \nWith OpenDJ, you no longer need to be an LDAP expert; choose either LDAP or REST to access identity data using a single solution that can replicate data across on and off-premise applications.\n- See more at: http://forgerock.com/products/open-identity-stack/opendj\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/ldap-v3",
      "self_resolve": true,
      "juju_interface": "ldap-v3",
      "juju_name": "datastore-dj",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "accept_license": {
      "type": "boolean",
      "description": "This otions is mandatory.\n.\nYou have to accept the OpenDJ license terms before installation can proceed.\nThe license terms can be found as part of the source in file named 'license.txt'.\n",
      "default": false,
      "mapping": "charm_option"
    },
    "access_logging": {
      "type": "boolean",
      "description": "Enabling HTTP Access logging for OpenDJ.\n",
      "default": false,
      "mapping": "charm_option"
    },
    "base_dn": {
      "type": "string",
      "description": "OpenDJ 'Base DN'.",
      "default": "dc=example,dc=com",
      "mapping": "charm_option"
    },
    "ldap_port": {
      "type": "int",
      "description": "LDAP port",
      "default": 389,
      "mapping": "charm_option"
    },
    "manager_password": {
      "type": "string",
      "description": "This options is Mandatory.\n.\nYou have to provide a private OpenDJ 'Directory Manager' password before installation can proceed.\n",
      "default": null,
      "mapping": "charm_option"
    },
    "rest_enabled": {
      "type": "boolean",
      "description": "Enabling the RESTful API for OpenDJ.\n",
      "default": false,
      "mapping": "charm_option"
    },
    "rest_port": {
      "type": "int",
      "description": "RESTful API port.",
      "default": 8080,
      "mapping": "charm_option"
    }
  },
  "juju_peers": {
    "replication": {
      "Name": "replication",
      "Role": "peer",
      "Interface": "replication",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "# Overview\n\n##About ForgeRock Open Identity Stack\nForgeRock is pioneering open source identity management through innovation, simplification, and openness for all identity services. Dedicated to democratizing Identity Management for everyone across enterprise, social, mobile, and the cloud, ForgeRock products support mission-critical operations with a fully open source platform. \n\n[ForgeRock’s Open Identity Stack](http://forgerock.com/products/) powers solutions for thousands of the world’s largest companies and government organizations.\n\nOur goal is simple: to deliver the best open source identity stack for securing anything, anywhere, on any device.\n\nThe Open Identity Stack includes the following main products:\n\n- OpenAM is a single, unified access management solution providing authentication, authorization, federation, web services security, fine-grained entitlements, and adaptive authorization all in one self-contained Java application. Included with OpenAM, the Open Identity Gateway (OpenIG) is a high-performance gateway with specialized session management and credential replay functionality. \n\n- OpenDJ is an LDAP directory server — the first-ever directory natively supporting REST — with a flexible access model that lets developers choose between REST, SCIM, LDAP or web services. The 100% Java-based LDAPv3-compliant server is extremely efficient with minimal CPU, memory and on-disk footprint. \n\n- OpenIDM is the only 100% open source, lightweight, user administration and provisioning solution purpose-built for Internet scale. It’s easy to embed and deploy, with a small footprint and out-of-the-box REST interfaces that use standard Java development tools. OpenIDM uses the Open Identity Connectors Framework and Toolkit (OpenICF) to aid development of resource connectors. \n\n## ForgeRock OpenDJ\n\nOpenDJ is an LDAPv3 and REST compliant directory service, developed for the Java platform, providing a high-performance, highly available, and secure store for the identities managed by your organization. Easy to install and configure, and combined with the utility of the Java platform, OpenDJ is the simplest, fastest directory to deploy and manage. Core to the management of identity information, OpenDJ directory services are used in many different use cases— whether it is for a large-scale cloud service directory, a consumer-facing directory, or an enterprise or network operating system (NOS) directory. With a 100% Java code base, OpenDJ runs on many platforms, including virtualized environments. All software and data are architecture-independent, so migration to a different OS or a different server is as simple as copying an instance to the new server. This increases the deployment flexibility, as well as the portability between different operating systems and system architectures.\n\n**Key OpenDJ Features**\n\n- Performance\nOpenDJ is optimized for performance at scale with data integrity and security. With millisecond response times and read/write performance in the 10’s of thousands per second, OpenDJ satisfies the most rigorous performance requirements across industries from telecom and financial services to large-scale consumer-facing applications.\n \n- Replication Services\nBy replicating data across multiple directory server instances, key user data is preserved in case of an outage. OpenDJ provides advanced replication options including multi-master, fractional, and assured. N-Way multi-master replication provides high-availability and disaster recovery capabilities. Fractional replication enables only specific attributes to be replicated and assured replication can be used to guarantee data availability even in the remote case of a server crash.\n \n- Security\nOpenDJ stores identity data securely, with varying levels of authentication and authorization, including SSL, StartTLS, and certificate-based. It protects passwords through encryption and advanced access control security policies. All configuration changes are audited and archived, offering easy rollback to a working configuration.\n \n- Delegated Authentication\nOpenDJ permits delegate authentication to another LDAP directory service, such as Active Directory, with a feature called pass-through authentication. The key benefit of pass-through authentication is to remove the security risks associated with synchronizing passwords (including possible capture and transfer of clear text passwords). With pass-through authentication, OpenDJ replays a user’s simple bind operation against the remote directory service. If the bind is successful, OpenDJ considers the user authenticated to perform subsequent operations like searches and updates in OpenDJ.\n \n- Password Policy\nOpenDJ password policies govern not only passwords, but also account lockout, and how OpenDJ provides notification about account status.\n \n- Administration\nThe OpenDJ GUI-based installer and control panel simplifies installation and server configuration down to a few minutes. The command line utilities enable complete access to all server management controls and monitoring locally or remotely. OpenDJ also offers advanced backup and restore functions such as automated, compressed, signed, and encrypted backups that improve data reliability and security.\n \n- Monitoring\nBy supporting the widely adopted monitoring standards SNMP and JMX, OpenDJ can easily integrate into your existing monitoring infrastructure. Configure custom alerts to inform administrators about specific directory service events such as password expiration, access controls disablement, backend database corruption detection, and much more.\n \n- Developer Access\nOpenDJ provides data access through multiple protocols: REST, LDAP, and Web Services. It fully complies with LDAPv3, DSMLv2, and SCIM standards to ensure maximum interoperability with client applications. The OpenDJ SDK provides a high-performance, easy-to-use library of classes and interfaces for accessing and implementing LDAP directory services.\n\n##Futher documentation \n\nCan be found available online here:\n- [Documentation home](http://docs.forgerock.org)\n- [Release note](http://docs.forgerock.org/en/opendj/2.6.1/release-notes/index/index.html)\n- [Installation guide](http://docs.forgerock.org/en/opendj/2.6.0/install-guide/index/index.html)\n- [Administration guide](http://docs.forgerock.org/en/opendj/2.6.0/admin-guide/index/index.html)\n\n##Subscription\n\nForgeRock can offer a subscription for those who want to use ForgeRock products for production.\nCheck out here: [Subscriptions](http://forgerock.com/products/subscriptions/).\n\n# Usage\n\nTo be able to install OpenDJ you have to accept the license term as outlined in the license file.\nYou can either accept the license terms on the commmand line or by the checkboc in the Juju-gui.\n\nIn addition you have to set a \"private\" admin password for your deployment, either on the command or in th Juju-gui.\n\nStep by step instructions on using the charm are:\n\n    juju deploy opendj\n    juju set opendj accept_license='true' manager_password='secret'\n\nBy default OpenDJ exposes a fully compliant LDAPv3 service on the standard port defined (389). When exposing this port OpenDJ can be used as a standard LDAPv3 service.\n\nThis OpenDJ charm imports a set of sample users and they all share the same password 'Passw0rd'.\n\nThis OpenDJ charm supports a relationship to OpenAM to be added as a user data store. The deployment of this OpenDJ charm includes some sample users, all users can be found in the subject listings in OpenAM after the relationship is establish in the web console at the following place. These sample OpenDJ users will be added after a successful relationship is established in the default authentication chain in OpenAM. You can verify the users in the OpenAM web console in the following location both with and without a relationship:\n\n- 'Access Control' -> '/ (Top Level Realm)' -> 'Subjects'\n\nThe datastore itself is created in \n\n- 'Access Control' -> '/ (Top Level Realm)' -> 'Data stores'\n\nand named 'opendj' with the hostname of the OpenDJ instance added to it. \n\n\nMany more relationships for both datastores and authentication services will be added in the future. Any contribution are welcome.\n\n## Scale out Usage\n\nOpenDJ supports many different topologies for HA. This charm has support for a multimaster configuration setup, when adding more instances to a deployment. The current release of this charm needs further testing of this feature.\n\n## Known Limitations and Issues\n\nThis release of OpenDJ is meant for evaluation purposes only and will violate the license terms if used in a production environment. There is no limitation in features of the product.\n\nOther limitations of this charm\n- Autoscaling currently works but could be improved\n\n# Configuration\n\nIn addition to the license agreement and the 'Directory Manager' password, you can change or set the following configuration options:\n\n-  ldap_port, defaults to 389\n-  base_dn, defaults to 'dc=example,dc=com'\n-  rest_enabled, defaults to 'false'\n-  rest_port, defaults to 8080\n-  access_logging, defaults to 'false'\n\nYou should then be able to bind to OpenDJ on default port 389 with any applications or a directory browser like ['Apache Directory Studio'](http://directory.apache.org/studio/) etc.\n\nIf 'rest_enabled' is turned on, the default port is set to 8080. The full documentation on the RESTful API support in OpenDJ is found online here: [OpenDJ - Performing RESTful Operations](http://docs.forgerock.org/en/opendj/2.6.0/admin-guide/index/chap-rest-operations.html).\n\n# Contact Information\n\n- Stein Myrseth <stein.myrseth@forgerock.com>\n- [Github](https://github.com/justme99/juju)\n\n## ForgeRock\n- [ForgeRock Homepage](http://forgerock.com)\n- [ForgeRock Community](http://forgerock.org)\n",
  "readme": "# Overview\n\n##About ForgeRock Open Identity Stack\nForgeRock is pioneering open source identity management through innovation, simplification, and openness for all identity services. Dedicated to democratizing Identity Management for everyone across enterprise, social, mobile, and the cloud, ForgeRock products support mission-critical operations with a fully open source platform. \n\n[ForgeRock’s Open Identity Stack](http://forgerock.com/products/) powers solutions for thousands of the world’s largest companies and government organizations.\n\nOur goal is simple: to deliver the best open source identity stack for securing anything, anywhere, on any device.\n\nThe Open Identity Stack includes the following main products:\n\n- OpenAM is a single, unified access management solution providing authentication, authorization, federation, web services security, fine-grained entitlements, and adaptive authorization all in one self-contained Java application. Included with OpenAM, the Open Identity Gateway (OpenIG) is a high-performance gateway with specialized session management and credential replay functionality. \n\n- OpenDJ is an LDAP directory server — the first-ever directory natively supporting REST — with a flexible access model that lets developers choose between REST, SCIM, LDAP or web services. The 100% Java-based LDAPv3-compliant server is extremely efficient with minimal CPU, memory and on-disk footprint. \n\n- OpenIDM is the only 100% open source, lightweight, user administration and provisioning solution purpose-built for Internet scale. It’s easy to embed and deploy, with a small footprint and out-of-the-box REST interfaces that use standard Java development tools. OpenIDM uses the Open Identity Connectors Framework and Toolkit (OpenICF) to aid development of resource connectors. \n\n## ForgeRock OpenDJ\n\nOpenDJ is an LDAPv3 and REST compliant directory service, developed for the Java platform, providing a high-performance, highly available, and secure store for the identities managed by your organization. Easy to install and configure, and combined with the utility of the Java platform, OpenDJ is the simplest, fastest directory to deploy and manage. Core to the management of identity information, OpenDJ directory services are used in many different use cases— whether it is for a large-scale cloud service directory, a consumer-facing directory, or an enterprise or network operating system (NOS) directory. With a 100% Java code base, OpenDJ runs on many platforms, including virtualized environments. All software and data are architecture-independent, so migration to a different OS or a different server is as simple as copying an instance to the new server. This increases the deployment flexibility, as well as the portability between different operating systems and system architectures.\n\n**Key OpenDJ Features**\n\n- Performance\nOpenDJ is optimized for performance at scale with data integrity and security. With millisecond response times and read/write performance in the 10’s of thousands per second, OpenDJ satisfies the most rigorous performance requirements across industries from telecom and financial services to large-scale consumer-facing applications.\n \n- Replication Services\nBy replicating data across multiple directory server instances, key user data is preserved in case of an outage. OpenDJ provides advanced replication options including multi-master, fractional, and assured. N-Way multi-master replication provides high-availability and disaster recovery capabilities. Fractional replication enables only specific attributes to be replicated and assured replication can be used to guarantee data availability even in the remote case of a server crash.\n \n- Security\nOpenDJ stores identity data securely, with varying levels of authentication and authorization, including SSL, StartTLS, and certificate-based. It protects passwords through encryption and advanced access control security policies. All configuration changes are audited and archived, offering easy rollback to a working configuration.\n \n- Delegated Authentication\nOpenDJ permits delegate authentication to another LDAP directory service, such as Active Directory, with a feature called pass-through authentication. The key benefit of pass-through authentication is to remove the security risks associated with synchronizing passwords (including possible capture and transfer of clear text passwords). With pass-through authentication, OpenDJ replays a user’s simple bind operation against the remote directory service. If the bind is successful, OpenDJ considers the user authenticated to perform subsequent operations like searches and updates in OpenDJ.\n \n- Password Policy\nOpenDJ password policies govern not only passwords, but also account lockout, and how OpenDJ provides notification about account status.\n \n- Administration\nThe OpenDJ GUI-based installer and control panel simplifies installation and server configuration down to a few minutes. The command line utilities enable complete access to all server management controls and monitoring locally or remotely. OpenDJ also offers advanced backup and restore functions such as automated, compressed, signed, and encrypted backups that improve data reliability and security.\n \n- Monitoring\nBy supporting the widely adopted monitoring standards SNMP and JMX, OpenDJ can easily integrate into your existing monitoring infrastructure. Configure custom alerts to inform administrators about specific directory service events such as password expiration, access controls disablement, backend database corruption detection, and much more.\n \n- Developer Access\nOpenDJ provides data access through multiple protocols: REST, LDAP, and Web Services. It fully complies with LDAPv3, DSMLv2, and SCIM standards to ensure maximum interoperability with client applications. The OpenDJ SDK provides a high-performance, easy-to-use library of classes and interfaces for accessing and implementing LDAP directory services.\n\n##Futher documentation \n\nCan be found available online here:\n- [Documentation home](http://docs.forgerock.org)\n- [Release note](http://docs.forgerock.org/en/opendj/2.6.1/release-notes/index/index.html)\n- [Installation guide](http://docs.forgerock.org/en/opendj/2.6.0/install-guide/index/index.html)\n- [Administration guide](http://docs.forgerock.org/en/opendj/2.6.0/admin-guide/index/index.html)\n\n##Subscription\n\nForgeRock can offer a subscription for those who want to use ForgeRock products for production.\nCheck out here: [Subscriptions](http://forgerock.com/products/subscriptions/).\n\n# Usage\n\nTo be able to install OpenDJ you have to accept the license term as outlined in the license file.\nYou can either accept the license terms on the commmand line or by the checkboc in the Juju-gui.\n\nIn addition you have to set a \"private\" admin password for your deployment, either on the command or in th Juju-gui.\n\nStep by step instructions on using the charm are:\n\n    juju deploy opendj\n    juju set opendj accept_license='true' manager_password='secret'\n\nBy default OpenDJ exposes a fully compliant LDAPv3 service on the standard port defined (389). When exposing this port OpenDJ can be used as a standard LDAPv3 service.\n\nThis OpenDJ charm imports a set of sample users and they all share the same password 'Passw0rd'.\n\nThis OpenDJ charm supports a relationship to OpenAM to be added as a user data store. The deployment of this OpenDJ charm includes some sample users, all users can be found in the subject listings in OpenAM after the relationship is establish in the web console at the following place. These sample OpenDJ users will be added after a successful relationship is established in the default authentication chain in OpenAM. You can verify the users in the OpenAM web console in the following location both with and without a relationship:\n\n- 'Access Control' -> '/ (Top Level Realm)' -> 'Subjects'\n\nThe datastore itself is created in \n\n- 'Access Control' -> '/ (Top Level Realm)' -> 'Data stores'\n\nand named 'opendj' with the hostname of the OpenDJ instance added to it. \n\n\nMany more relationships for both datastores and authentication services will be added in the future. Any contribution are welcome.\n\n## Scale out Usage\n\nOpenDJ supports many different topologies for HA. This charm has support for a multimaster configuration setup, when adding more instances to a deployment. The current release of this charm needs further testing of this feature.\n\n## Known Limitations and Issues\n\nThis release of OpenDJ is meant for evaluation purposes only and will violate the license terms if used in a production environment. There is no limitation in features of the product.\n\nOther limitations of this charm\n- Autoscaling currently works but could be improved\n\n# Configuration\n\nIn addition to the license agreement and the 'Directory Manager' password, you can change or set the following configuration options:\n\n-  ldap_port, defaults to 389\n-  base_dn, defaults to 'dc=example,dc=com'\n-  rest_enabled, defaults to 'false'\n-  rest_port, defaults to 8080\n-  access_logging, defaults to 'false'\n\nYou should then be able to bind to OpenDJ on default port 389 with any applications or a directory browser like ['Apache Directory Studio'](http://directory.apache.org/studio/) etc.\n\nIf 'rest_enabled' is turned on, the default port is set to 8080. The full documentation on the RESTful API support in OpenDJ is found online here: [OpenDJ - Performing RESTful Operations](http://docs.forgerock.org/en/opendj/2.6.0/admin-guide/index/chap-rest-operations.html).\n\n# Contact Information\n\n- Stein Myrseth <stein.myrseth@forgerock.com>\n- [Github](https://github.com/justme99/juju)\n\n## ForgeRock\n- [ForgeRock Homepage](http://forgerock.com)\n- [ForgeRock Community](http://forgerock.org)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}