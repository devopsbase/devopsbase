{
  "name": "juju Juju charm",
  "juju_charm_name": "juju",
  "revision": "cs:precise/juju-2",
  "latest": true,
  "uris": [
    "https://jujucharms.com/juju",
    "https://jujucharms.com/juju/precise",
    "https://jujucharms.com/juju/precise/2",
    "https://api.jujucharms.com/v5/juju",
    "https://api.jujucharms.com/v5/precise/juju",
    "https://api.jujucharms.com/v5/precise/juju-2"
  ],
  "labels": [
    "Juju charm",
    "application_development",
    "Binding/Provider",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/CLI",
    "Type/Devopsware/Test",
    "Type/Devopsware/Integration/Jenkins",
    "Type/Devopsware/Deployment/Juju"
  ],
  "info_url": "https://jujucharms.com/juju",
  "package_url": "https://api.jujucharms.com/v5/precise/juju-2/archive",
  "created": "2015-06-17T09:34:56.979Z",
  "updated": "2015-06-17T09:34:56.979Z",
  "description": "juju client\n\nRun juju inside of juju.\n\nThis is a charm to install and manage a juju client.  Use this\nto run the juju cli against environments passed as config.\n\nAs a subordinate, this can enable a juju cli for any service.\nThis is typically useful as a subordinate to jenkins-slave for\ncharmtesting or to turn byobu-classroom into juju-classroom.\n\nAs a standalone charm, this can be useful when experimenting\nwith different environments/providers.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": true,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/juju-info",
      "self_resolve": true,
      "juju_interface": "juju-info",
      "juju_name": "local-info",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "juju_environment": {
      "type": "string",
      "description": "juju environment to use for testing charms.  empty defaults to local provider only.",
      "default": "",
      "mapping": "charm_option"
    },
    "local_charms": {
      "type": "string",
      "description": "nonempty means _all_ charms will be checked out locally under ~/charms.  Note, this option causes startup to take several minutes while all charms are cloned from launchpad.",
      "default": "",
      "mapping": "charm_option"
    },
    "precache_lxc": {
      "type": "string",
      "description": "should we precache lxc?  non-empty is yes.  Note, this option causes startup to take several minutes while the first lxc ubuntu image is downloaded/built.",
      "default": "",
      "mapping": "charm_option"
    },
    "tmpfs_size": {
      "type": "string",
      "description": "size of tmpfs partition to use for lxc... formatted like \"5g\".  empty means no tmpfs is used.",
      "default": "",
      "mapping": "charm_option"
    }
  },
  "license": "\n# juju charm\n\nRun juju inside of juju.\n\nThis is a charm to install and manage a juju client.  Use this\nto run the juju cli against environments passed as config.\n\nAs a subordinate, this can enable a juju cli for any service.\nThis is typically useful as a subordinate to jenkins-slave for\ncharmtesting or to turn byobu-classroom into juju-classroom.\n\nAs a standalone charm, this can be useful when experimenting\nwith different environments/providers.\n\n\n# Examples\n\n## Simple juju-classroom\n\n    laptop$ juju bootstrap\n    laptop$ juju deploy byobu-classroom juju-classroom\n    laptop$ juju deploy juju juju-client\n    laptop$ juju add-relation juju-classroom juju-client\n\n    laptop$ juju ssh juju-classroom/0\n    <ec2-addr>$ echo \"Ok, folks... now watch me demo juju using the local provider\"\n    <ec2-addr>$ juju bootstrap\n    <ec2-addr>$ juju deploy mysql\n    <ec2-addr>$ juju status\n\n## juju-classroom using other environments\n\nWrite the following to ~/juju-classroom-ec2.yaml\n\n    juju-client:\n      juju_environment: |\n        default: ec2\n        environments:\n          local:\n            type: local\n            data-dir: /var/lib/jenkins/.juju/local-precise\n            admin-secret: 0abcdefghijklmnopqrstuvwxyz123456789\n            control-bucket: local-precise-bucket\n            default-series: precise\n          ec2:\n            type: ec2\n            admin-secret: <admin-secret-hash>\n            control-bucket: <juju-classroom-bucketname>\n            access-key: <ec2 access key>\n            secret-key: <ec2 secret key>\n            default-series: precise\n\nand then change the simple deployment above to use this config:\n\n    laptop$ juju deploy --config ~/juju-classroom-ec2.yaml juju juju-client\n\nnow the service's juju cli will run against the new default environment\n\n\n# TODO\n\n",
  "readme": "\n# juju charm\n\nRun juju inside of juju.\n\nThis is a charm to install and manage a juju client.  Use this\nto run the juju cli against environments passed as config.\n\nAs a subordinate, this can enable a juju cli for any service.\nThis is typically useful as a subordinate to jenkins-slave for\ncharmtesting or to turn byobu-classroom into juju-classroom.\n\nAs a standalone charm, this can be useful when experimenting\nwith different environments/providers.\n\n\n# Examples\n\n## Simple juju-classroom\n\n    laptop$ juju bootstrap\n    laptop$ juju deploy byobu-classroom juju-classroom\n    laptop$ juju deploy juju juju-client\n    laptop$ juju add-relation juju-classroom juju-client\n\n    laptop$ juju ssh juju-classroom/0\n    <ec2-addr>$ echo \"Ok, folks... now watch me demo juju using the local provider\"\n    <ec2-addr>$ juju bootstrap\n    <ec2-addr>$ juju deploy mysql\n    <ec2-addr>$ juju status\n\n## juju-classroom using other environments\n\nWrite the following to ~/juju-classroom-ec2.yaml\n\n    juju-client:\n      juju_environment: |\n        default: ec2\n        environments:\n          local:\n            type: local\n            data-dir: /var/lib/jenkins/.juju/local-precise\n            admin-secret: 0abcdefghijklmnopqrstuvwxyz123456789\n            control-bucket: local-precise-bucket\n            default-series: precise\n          ec2:\n            type: ec2\n            admin-secret: <admin-secret-hash>\n            control-bucket: <juju-classroom-bucketname>\n            access-key: <ec2 access key>\n            secret-key: <ec2 secret key>\n            default-series: precise\n\nand then change the simple deployment above to use this config:\n\n    laptop$ juju deploy --config ~/juju-classroom-ec2.yaml juju juju-client\n\nnow the service's juju cli will run against the new default environment\n\n\n# TODO\n\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}