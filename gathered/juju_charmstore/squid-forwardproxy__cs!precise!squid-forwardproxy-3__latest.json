{
  "name": "squid-forwardproxy Juju charm",
  "juju_charm_name": "squid-forwardproxy",
  "revision": "cs:precise/squid-forwardproxy-3",
  "latest": true,
  "uris": [
    "https://jujucharms.com/squid-forwardproxy",
    "https://jujucharms.com/squid-forwardproxy/precise",
    "https://jujucharms.com/squid-forwardproxy/precise/3",
    "https://api.jujucharms.com/v5/squid-forwardproxy",
    "https://api.jujucharms.com/v5/precise/squid-forwardproxy",
    "https://api.jujucharms.com/v5/precise/squid-forwardproxy-3"
  ],
  "labels": [
    "Juju charm",
    "cache-proxy",
    "Binding/Provider/HP",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/CLI",
    "Type/Devopsware/Deployment/Juju",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Proxy",
    "Type/Middleware/Cache"
  ],
  "info_url": "https://jujucharms.com/squid-forwardproxy",
  "package_url": "https://api.jujucharms.com/v5/precise/squid-forwardproxy-3/archive",
  "created": "2015-08-21T14:46:17.807Z",
  "updated": "2015-08-21T14:46:17.807Z",
  "description": "Full featured Web Proxy cache (HTTP proxy)\n\nSquid is a high-performance proxy caching server for web clients, supporting FTP, gopher, and HTTP data objects.  Squid version 3 is a major rewrite of Squid in C++ and introduces a number of new features including ICAP and ESI support.\nRequires the following relation settings from clients:\n\n  ip: service ip address\n  port: service port\n  sitenames: space-delimited list of vhosts to whitelist\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "parameters": {
    "auth_list": {
      "type": "string",
      "description": "YAML-formatted list of squid auth dictionaries.  For example: '[{dstdomain: [www.ubuntu.com], src: [1.2.3.4, 5.6.7.0/24]}, {url_regex: [\"https?://[^/]+[.]internal(/.*)?\"], src: [192.168.0.0/16]}]' NOTE: you can use the following oneliner to verify your YAML string:\n      python -c 'import yaml;import sys;print yaml.dump(yaml.load(sys.argv[1]))' '<string>'\n",
      "default": "",
      "mapping": "charm_option"
    },
    "avg_obj_size_kb": {
      "type": "int",
      "description": "Estimated average size of a cached object.",
      "default": 16,
      "mapping": "charm_option"
    },
    "cache_dir": {
      "type": "string",
      "description": "The top-level directory where cache swap files will be stored.",
      "default": "/var/spool/squid3",
      "mapping": "charm_option"
    },
    "cache_mem_mb": {
      "type": "int",
      "description": "Maximum size of in-memory object cache (MB). Should be smaller than cache_size_mb.",
      "default": 256,
      "mapping": "charm_option"
    },
    "cache_size_mb": {
      "type": "int",
      "description": "Maximum size of the on-disk object cache (MB).",
      "default": 512,
      "mapping": "charm_option"
    },
    "log_format": {
      "type": "string",
      "description": "Format of the squid log.",
      "default": "%>a %ui %un [%tl] \"%rm %ru HTTP/%rv\" %>Hs %<st \"%{Referer}>h\" \"%{User-Agent}>h\" %Ss:%Sh",
      "mapping": "charm_option"
    },
    "max_obj_size_kb": {
      "type": "int",
      "description": "Maximum size of an object to be cached (KB).",
      "default": 8192,
      "mapping": "charm_option"
    },
    "nagios_check_url": {
      "type": "string",
      "description": "The URL to check squid has access to\n",
      "default": "http://www.ubuntu.com",
      "mapping": "charm_option"
    },
    "nagios_context": {
      "type": "string",
      "description": "Used by the nrpe-external-master subordinate charm. A string that will be prepended to instance name to set the host name in nagios. So for instance the hostname would be something like:\n    juju-postgresql-0\nIf you're running multiple environments with the same services in them this allows you to differentiate between them.\n",
      "default": "juju",
      "mapping": "charm_option"
    },
    "nagios_service_type": {
      "type": "string",
      "description": "What service this component forms part of e.g. productsearch, uccs etc. Used by nrpe\n",
      "default": "generic",
      "mapping": "charm_option"
    },
    "port": {
      "type": "int",
      "description": "Squid listening port.",
      "default": 3128,
      "mapping": "charm_option"
    },
    "refresh_patterns": {
      "type": "string",
      "description": "YAML-formatted list of refresh patterns. For example: '{\"http://www.ubuntu.com\": {min: 0, percent: 20, max: 60}, \"http://www.canonical.com\": {min: 0, percent: 20, max: 120}}' NOTE: you can use the following oneliner to verify your YAML string:\n      python -c 'import yaml;import sys;print yaml.dump(yaml.load(sys.argv[1]))' '<string>'\n",
      "default": "",
      "mapping": "charm_option"
    },
    "snmp_allowed_ips": {
      "type": "string",
      "description": "Single, or json-formatted list of, IP (with optional subnet mask) allowed to query SNMP.",
      "default": "",
      "mapping": "charm_option"
    },
    "snmp_community": {
      "type": "string",
      "description": "SNMP community string for monitoring the service.",
      "default": "",
      "mapping": "charm_option"
    },
    "target_objs_per_dir": {
      "type": "int",
      "description": "Target number of objects to store in L2 directories.",
      "default": 400,
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "cached-website",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/nrpe-external-master",
      "juju_interface": "nrpe-external-master",
      "juju_name": "nrpe-external-master",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Overview\n\nSquid is a high-performance proxy caching server for web clients, supporting\nFTP, gopher, and HTTP data objects.\n \nSquid version 3 is a major rewrite of Squid in C++ and introduces a number of\nnew features including ICAP and ESI support.\n\nhttp://www.squid-cache.org/\n\n# Usage\n\n## General\n\nThis charm provides squid in a forward proxy setup. \n\nhttp://en.wikipedia.org/wiki/Proxy_server#Open_proxies\n\nThe most common scenario is having a service that you do not want to grant\ndirect Internet access use the forward proxy. It can both filter outgoing\nhttp requests and cache frequent requests to the same targets.\n\nAnother scenario is providing a proxy server for an office environment.\n\nThe charm can be deployed in a single or multi-unit setup.\n\nTo deploy a single unit:\n\n    juju deploy squid-forwardproxy\n\nTo add more units:\n\n    juju add-unit squid-forwardproxy \n\nOnce deployed, you can ssh into the deployed service:\n\n    juju ssh <unit>\n\nTo list running units:\n\n    juju status\n\nTo start monitoring Squid using Nagios:\n\n    juju deploy nrpe-external-master\n    juju add-relation squid-forwardproxy nrpe-external-master\n\n\n\nThis charm requires the following relation settings from clients:\n\n    ip: service ip address\n    port: service port\n    sitenames: space-delimited list of sites to whitelist\n\nThe options that can be configured in config.yaml should be self-explanatory. If not, please file a bug against this charm.\n\n## Monitoring\n\nThis charm provides relations that support monitoring via Nagios using nrpe_external_master as a subordinate charm.\n",
  "readme": "# Overview\n\nSquid is a high-performance proxy caching server for web clients, supporting\nFTP, gopher, and HTTP data objects.\n \nSquid version 3 is a major rewrite of Squid in C++ and introduces a number of\nnew features including ICAP and ESI support.\n\nhttp://www.squid-cache.org/\n\n# Usage\n\n## General\n\nThis charm provides squid in a forward proxy setup. \n\nhttp://en.wikipedia.org/wiki/Proxy_server#Open_proxies\n\nThe most common scenario is having a service that you do not want to grant\ndirect Internet access use the forward proxy. It can both filter outgoing\nhttp requests and cache frequent requests to the same targets.\n\nAnother scenario is providing a proxy server for an office environment.\n\nThe charm can be deployed in a single or multi-unit setup.\n\nTo deploy a single unit:\n\n    juju deploy squid-forwardproxy\n\nTo add more units:\n\n    juju add-unit squid-forwardproxy \n\nOnce deployed, you can ssh into the deployed service:\n\n    juju ssh <unit>\n\nTo list running units:\n\n    juju status\n\nTo start monitoring Squid using Nagios:\n\n    juju deploy nrpe-external-master\n    juju add-relation squid-forwardproxy nrpe-external-master\n\n\n\nThis charm requires the following relation settings from clients:\n\n    ip: service ip address\n    port: service port\n    sitenames: space-delimited list of sites to whitelist\n\nThe options that can be configured in config.yaml should be self-explanatory. If not, please file a bug against this charm.\n\n## Monitoring\n\nThis charm provides relations that support monitoring via Nagios using nrpe_external_master as a subordinate charm.\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}