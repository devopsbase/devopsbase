{
  "name": "transcode Juju charm",
  "juju_charm_name": "transcode",
  "revision": "cs:precise/transcode-1",
  "latest": true,
  "uris": [
    "https://jujucharms.com/transcode",
    "https://jujucharms.com/transcode/precise",
    "https://jujucharms.com/transcode/precise/1",
    "https://api.jujucharms.com/v5/transcode",
    "https://api.jujucharms.com/v5/precise/transcode",
    "https://api.jujucharms.com/v5/precise/transcode-1"
  ],
  "labels": [
    "Juju charm",
    "applications",
    "Type/Middleware/Runtime/Java",
    "Binding/Provider/Amazon/ECS",
    "Binding/Region/North America/US",
    "Mode/Guide/Video",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Build/Java/Ant",
    "Type/Devopsware/Deployment/Juju"
  ],
  "info_url": "https://jujucharms.com/transcode",
  "package_url": "https://api.jujucharms.com/v5/precise/transcode-1/archive",
  "created": "2015-06-17T09:36:03.35Z",
  "updated": "2015-06-17T09:36:03.35Z",
  "description": "high quality, scalable, parallel video transcoder\n\nVideo transcoding is a complicated, resource intensive options.\nThis charm breaks a video into N chunks, and farms out video transcoding\nto N workers.  It can take video files of many different types.  The output\nwill always be a web-viewable .mp4, using h264 and aac codecs.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mount",
      "self_resolve": true,
      "juju_interface": "mount",
      "juju_name": "shared-fs",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "input_url": {
      "type": "string",
      "description": "input file; path to local file in /srv, or remote URL to fetch",
      "default": "http://people.canonical.com/~kirkland/Experience_ubuntu.ogg",
      "mapping": "charm_option"
    },
    "output_size": {
      "type": "string",
      "description": "output frame size, see avconv(1)",
      "default": "copy",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "website",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "workers": {
      "Name": "workers",
      "Role": "peer",
      "Interface": "transcode",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "# Overview\n\nThis charm will transcode videos of basically any format and codec, to an HTML5-compatible mp4 file, using the h264 video codec, and the aac audio codec.\n\n# Usage\n\n- Install\n\n   juju deploy nfs\n   juju deploy -n 4 transcode\n   juju add-relation nfs transcode\n\n- Copy a video file into any node's /srv/ directory\n\n- The results will be in the /srv/ directory, with a file ending in .mp4\n\n- You can watch the progress, view, and download the output by pointing a web browser at any node\n\n## Scale out Usage\n\nThe performance of the transcoding will scale linearly, with the number of transcode units.  For instance, a video that takes 10 minutes to transcode with a single node, will transcode in 1 minute with 10 nodes.\n\n   juju add-unit -n 10 transcode\n\n# Configuration\n\n- Update the input_url and/or output_size configuration variables\n\n   juju set transcode input_url=/srv/foo.avi output_size=copy\n   juju set transcode input_url=http://people.canonical.com/~kirkland/diditdoneit.mpg\n   juju set transcode input_url=http://people.canonical.com/~kirkland/big_buck_bunny_1080p_stereo.ogg output_size=960x540\n   juju set transcode input_url=http://people.canonical.com/~kirkland/big_buck_bunny_1080p_surround.avi output_size=640x360\n\n## Known Limitations and Issues\n\nThis charm currently supports transcoding most formats to mp4/h264/aac, and scaling the video to a different size.  There are a few non-free formats (e.g. divx) which are not easily supported on Linux.\n\nVideo's served over HTTPS will cause an arbitrary error at present.\n\nWith the Transcoder leveraging NFS - this charm is not suitable for the Local provider / LXC containers.\n\n# Contact Information\n\nThis charm was written by Dustin Kirkland, and uses libav for transcoding.\n\n## Upstream Project Name\n\n- https://libav.org/\n- https://libav.org/contact.html\n",
  "readme": "# Overview\n\nThis charm will transcode videos of basically any format and codec, to an HTML5-compatible mp4 file, using the h264 video codec, and the aac audio codec.\n\n# Usage\n\n- Install\n\n   juju deploy nfs\n   juju deploy -n 4 transcode\n   juju add-relation nfs transcode\n\n- Copy a video file into any node's /srv/ directory\n\n- The results will be in the /srv/ directory, with a file ending in .mp4\n\n- You can watch the progress, view, and download the output by pointing a web browser at any node\n\n## Scale out Usage\n\nThe performance of the transcoding will scale linearly, with the number of transcode units.  For instance, a video that takes 10 minutes to transcode with a single node, will transcode in 1 minute with 10 nodes.\n\n   juju add-unit -n 10 transcode\n\n# Configuration\n\n- Update the input_url and/or output_size configuration variables\n\n   juju set transcode input_url=/srv/foo.avi output_size=copy\n   juju set transcode input_url=http://people.canonical.com/~kirkland/diditdoneit.mpg\n   juju set transcode input_url=http://people.canonical.com/~kirkland/big_buck_bunny_1080p_stereo.ogg output_size=960x540\n   juju set transcode input_url=http://people.canonical.com/~kirkland/big_buck_bunny_1080p_surround.avi output_size=640x360\n\n## Known Limitations and Issues\n\nThis charm currently supports transcoding most formats to mp4/h264/aac, and scaling the video to a different size.  There are a few non-free formats (e.g. divx) which are not easily supported on Linux.\n\nVideo's served over HTTPS will cause an arbitrary error at present.\n\nWith the Transcoder leveraging NFS - this charm is not suitable for the Local provider / LXC containers.\n\n# Contact Information\n\nThis charm was written by Dustin Kirkland, and uses libav for transcoding.\n\n## Upstream Project Name\n\n- https://libav.org/\n- https://libav.org/contact.html\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}