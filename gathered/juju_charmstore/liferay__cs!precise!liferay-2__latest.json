{
  "name": "liferay Juju charm",
  "juju_charm_name": "liferay",
  "revision": "cs:precise/liferay-2",
  "latest": true,
  "uris": [
    "https://jujucharms.com/liferay",
    "https://jujucharms.com/liferay/precise",
    "https://jujucharms.com/liferay/precise/2",
    "https://api.jujucharms.com/v5/liferay",
    "https://api.jujucharms.com/v5/precise/liferay",
    "https://api.jujucharms.com/v5/precise/liferay-2"
  ],
  "labels": [
    "Juju charm",
    "applications",
    "Type/Middleware/Runtime/Java",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Integration",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Content Management"
  ],
  "info_url": "https://jujucharms.com/liferay",
  "package_url": "https://api.jujucharms.com/v5/precise/liferay-2/archive",
  "created": "2015-06-17T09:30:50.487Z",
  "updated": "2015-06-17T09:30:50.487Z",
  "description": "Liferay Portal, an open source, Java-based web development platform\n\nInstalls Liferay Portal, a Java-based, open source enterprise portal. Liferay provides a powerful Web CMS, collaboration, and enterprise integration functionality with a lightweight footprint and flexible development model.  See http://liferay.com for details.",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mysql",
      "self_resolve": true,
      "juju_interface": "mysql",
      "juju_name": "db",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "http-port": {
      "type": "int",
      "description": "TCP HTTP port on which Liferay responds.\n",
      "default": 8080,
      "mapping": "charm_option"
    },
    "java-opts": {
      "type": "string",
      "description": "Java VM options for Liferay.\n",
      "default": "-Dfile.encoding=UTF8 -Dorg.apache.catalina.loader.WebappClassLoader.ENABLE_CLEAR_REFERENCES=false -Duser.timezone=GMT -Xmx2g -XX:MaxPermSize=512m",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "website",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Liferay Portal\n\n[Liferay\nPortal](http://www.liferay.com/community/liferay-projects/liferay-portal) is an\nopen source enterprise web platform for building business solutions that deliver\nimmediate results and long-term value. Liferay Portal started out as a personal\ndevelopment project in 2000 and was open sourced in 2001.\n\nTo get started, check out the project's community homepage at\n[http://liferay.org](http://liferay.org)!\n\nThis Juju Charm will install the pre-built Liferay Portal bundle, including\nApache Tomcat. To use this Charm once it is installed, use your web browser and\nvisit http://<host>:8080 where <host> is the hostname or IP address of the Juju\nservice node running Liferay (discoverable via `juju status`).\n\n## Installing the Liferay Charm\n\nThis Liferay Charm has a dependency on the MySQL charm. To create a Juju\nenvironment and get started using Liferay, run the following:\n\n    $ juju bootstrap\n    $ juju deploy mysql\n    $ juju deploy liferay\n    $ juju add-relation liferay mysql\n\nThis will create your Juju environment, deploy MySQL and Liferay, and connect\nthem together via add-relation. For more information on Juju commands, visit\n[The Juju Site](https://juju.ubuntu.com/).\n    \nAfter a while, Liferay will be up and running on the machine instance that\nwas created for it. You can discover the network address of Liferay by running\n\n    $juju status\n    \nLook for the `public-address` setting for the Liferay service, and access\nLiferay using `http://`hostname_or_ip`:8080`. Note that on the first Liferay\npage you get, the MySQL configuration values are already set to the values\nnecessary to connect Liferay to MySQL and should not be changed. Other settings\ncan be changed as needed, such as the screen name or password of the default\nuser, the name of the portal, and so on.\n\nIf something goes wrong, you can view the log files using\n\n    $juju debug-log --replay\n\n## Charm Service Configuration Options\n\nThis charm supports the following configuration options:\n\n* `http-port` - The port on which Liferay will listen for HTTP connections (Default:\n`8080`).\n* `java-opts` - Option string to pass to the Java VM command line during startup.\nSee the `config.yaml` file for the default settings. This option can be used to,\nfor example, set the default Java VM heap size, or tune garbage collection.\n\nTo configure Liferay at deploy time, first create a yaml-formatted text file\nspecifying the values you wish to use.\n\n    liferay:\n      http-port: 5050\n      java-opts: -Dfile.encoding=UTF8 -Dorg.apache.catalina.loader.WebappClassLoader.ENABLE_CLEAR_REFERENCES=false -Duser.timezone=GMT -Xmx2g -XX:MaxPermSize=512m\n\nThen issue the deploy command, specifying the file: `juju deploy --config myconfig.yaml liferay`\n\nTo modify service configuration after the charm has been deployed, use the\n`juju set` command. For example: `juju set liferay http-port=4321`\n\n## Upgrading the Liferay Charm\n\nWhen a new version of the Liferay Charm is available, you can upgrade to it\nusing the following command:\n\n    $ juju upgrade-charm liferay\n\nThis command will upgrade to the latest release of the Liferay charm. If the\ncharm also contains support for a newer version of Liferay, the Liferay service\nassociated with the charm will also be upgraded, by downloading the new version\nof Liferay, migrating configuration from the previous version of Liferay,\nand starting the new Liferay version in place of the old Liferay version. For\nmore information on how Liferay upgrades itself, see the\n[Upgrading Liferay](http://www.liferay.com/documentation/liferay-portal/6.1/user-guide/-/ai/upgrading-lifer-5)\nchapter in Liferay's official documentation.\n\nCurrently, the charm will copy your portal-ext.properties files and your\nLiferay `data` directory, but not modify their contents. Future releases of\nthis charm will add additional logic to deal with future Liferay upgrade\nscenarios.\n\n## Stopping the Liferay Charm\n\nThe Liferay Charm supports all of the lifecycle operations of Juju, so\nadding/removing relations, and starting/stopping services will cause Liferay\nto start and/or stop as needed. To stop the Liferay service, use the\n`juju destroy-service liferay` command. \n\n## Source Code\n\nLiferay's main source code resides in two repositories:\n[liferay-portal](https://github.com/liferay/liferay-portal) and\n[liferay-plugins](https://github.com/liferay/liferay-plugins). Liferay has\nadditional repositories for the following:\n\n* [AlloyUI](https://github.com/liferay/alloy-ui)\n* [Documentation](https://github.com/liferay/liferay-docs)\n* [Git Tools](https://github.com/liferay/git-tools)\n* [Liferay Faces](https://github.com/liferay/liferay-faces)\n* [Liferay IDE](https://github.com/liferay/liferay-ide)\n* [Maven Support](https://github.com/liferay/liferay-maven-support)\n\nLiferay Portal *releases* are built from the liferay-portal repository and\ninclude select plugins from the liferay-plugins repository. You can build\nLiferay Portal, its plugins, and/or any of the other supporting technologies\nfrom their respective repositories.\n\n## Bug Tracker\n\nHave a bug? Please file an issue at\n[http://issues.liferay.com](http://issues.liferay.com) following [Liferay's JIRA\nGuidelines](http://www.liferay.com/community/wiki/-/wiki/Main/JIRA).\n\n## Twitter\n\nStay updated on announcements and more by following Liferay on Twitter,\n[@Liferay](http://twitter.com/Liferay).\n\n## Blog\n\nRead detailed announcements, discussions, and more on [Liferay's Blog\nStream](http://www.liferay.com/community/blogs).\n\n## Forum\n\nHave questions? Ask them on our very active\n[forums](http://www.liferay.com/community/forums)!\n\n## IRC\n\nServer: `irc.freenode.net`\n\nChannel: `#liferay`\n\n## Contributing\n\nLiferay welcomes any and all contributions! Please read the [CONTRIBUTING\nguide](https://github.com/liferay/liferay-portal/blob/master/CONTRIBUTING.markdown)\nfor details on developing and submitting your contributions.\n\n## Liferay Portal Community Edition License\n\nThis library, *Liferay Portal Community Edition*, is free software (\"Licensed\nSoftware\"); you can redistribute it and/or modify it under the terms of the [GNU\nLesser General Public License](http://www.gnu.org/licenses/lgpl-2.1.html) as\npublished by the Free Software Foundation; either version 2.1 of the License, or\n(at your option) any later version.\n\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; including but not limited to, the implied warranty of MERCHANTABILITY,\nNONINFRINGEMENT, or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General\nPublic License for more details.\n\nYou should have received a copy of the [GNU Lesser General Public\nLicense](http://www.gnu.org/licenses/lgpl-2.1.html) along with this library; if\nnot, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth\nFloor, Boston, MA 02110-1301 USA\n",
  "readme": "# Liferay Portal\n\n[Liferay\nPortal](http://www.liferay.com/community/liferay-projects/liferay-portal) is an\nopen source enterprise web platform for building business solutions that deliver\nimmediate results and long-term value. Liferay Portal started out as a personal\ndevelopment project in 2000 and was open sourced in 2001.\n\nTo get started, check out the project's community homepage at\n[http://liferay.org](http://liferay.org)!\n\nThis Juju Charm will install the pre-built Liferay Portal bundle, including\nApache Tomcat. To use this Charm once it is installed, use your web browser and\nvisit http://<host>:8080 where <host> is the hostname or IP address of the Juju\nservice node running Liferay (discoverable via `juju status`).\n\n## Installing the Liferay Charm\n\nThis Liferay Charm has a dependency on the MySQL charm. To create a Juju\nenvironment and get started using Liferay, run the following:\n\n    $ juju bootstrap\n    $ juju deploy mysql\n    $ juju deploy liferay\n    $ juju add-relation liferay mysql\n\nThis will create your Juju environment, deploy MySQL and Liferay, and connect\nthem together via add-relation. For more information on Juju commands, visit\n[The Juju Site](https://juju.ubuntu.com/).\n    \nAfter a while, Liferay will be up and running on the machine instance that\nwas created for it. You can discover the network address of Liferay by running\n\n    $juju status\n    \nLook for the `public-address` setting for the Liferay service, and access\nLiferay using `http://`hostname_or_ip`:8080`. Note that on the first Liferay\npage you get, the MySQL configuration values are already set to the values\nnecessary to connect Liferay to MySQL and should not be changed. Other settings\ncan be changed as needed, such as the screen name or password of the default\nuser, the name of the portal, and so on.\n\nIf something goes wrong, you can view the log files using\n\n    $juju debug-log --replay\n\n## Charm Service Configuration Options\n\nThis charm supports the following configuration options:\n\n* `http-port` - The port on which Liferay will listen for HTTP connections (Default:\n`8080`).\n* `java-opts` - Option string to pass to the Java VM command line during startup.\nSee the `config.yaml` file for the default settings. This option can be used to,\nfor example, set the default Java VM heap size, or tune garbage collection.\n\nTo configure Liferay at deploy time, first create a yaml-formatted text file\nspecifying the values you wish to use.\n\n    liferay:\n      http-port: 5050\n      java-opts: -Dfile.encoding=UTF8 -Dorg.apache.catalina.loader.WebappClassLoader.ENABLE_CLEAR_REFERENCES=false -Duser.timezone=GMT -Xmx2g -XX:MaxPermSize=512m\n\nThen issue the deploy command, specifying the file: `juju deploy --config myconfig.yaml liferay`\n\nTo modify service configuration after the charm has been deployed, use the\n`juju set` command. For example: `juju set liferay http-port=4321`\n\n## Upgrading the Liferay Charm\n\nWhen a new version of the Liferay Charm is available, you can upgrade to it\nusing the following command:\n\n    $ juju upgrade-charm liferay\n\nThis command will upgrade to the latest release of the Liferay charm. If the\ncharm also contains support for a newer version of Liferay, the Liferay service\nassociated with the charm will also be upgraded, by downloading the new version\nof Liferay, migrating configuration from the previous version of Liferay,\nand starting the new Liferay version in place of the old Liferay version. For\nmore information on how Liferay upgrades itself, see the\n[Upgrading Liferay](http://www.liferay.com/documentation/liferay-portal/6.1/user-guide/-/ai/upgrading-lifer-5)\nchapter in Liferay's official documentation.\n\nCurrently, the charm will copy your portal-ext.properties files and your\nLiferay `data` directory, but not modify their contents. Future releases of\nthis charm will add additional logic to deal with future Liferay upgrade\nscenarios.\n\n## Stopping the Liferay Charm\n\nThe Liferay Charm supports all of the lifecycle operations of Juju, so\nadding/removing relations, and starting/stopping services will cause Liferay\nto start and/or stop as needed. To stop the Liferay service, use the\n`juju destroy-service liferay` command. \n\n## Source Code\n\nLiferay's main source code resides in two repositories:\n[liferay-portal](https://github.com/liferay/liferay-portal) and\n[liferay-plugins](https://github.com/liferay/liferay-plugins). Liferay has\nadditional repositories for the following:\n\n* [AlloyUI](https://github.com/liferay/alloy-ui)\n* [Documentation](https://github.com/liferay/liferay-docs)\n* [Git Tools](https://github.com/liferay/git-tools)\n* [Liferay Faces](https://github.com/liferay/liferay-faces)\n* [Liferay IDE](https://github.com/liferay/liferay-ide)\n* [Maven Support](https://github.com/liferay/liferay-maven-support)\n\nLiferay Portal *releases* are built from the liferay-portal repository and\ninclude select plugins from the liferay-plugins repository. You can build\nLiferay Portal, its plugins, and/or any of the other supporting technologies\nfrom their respective repositories.\n\n## Bug Tracker\n\nHave a bug? Please file an issue at\n[http://issues.liferay.com](http://issues.liferay.com) following [Liferay's JIRA\nGuidelines](http://www.liferay.com/community/wiki/-/wiki/Main/JIRA).\n\n## Twitter\n\nStay updated on announcements and more by following Liferay on Twitter,\n[@Liferay](http://twitter.com/Liferay).\n\n## Blog\n\nRead detailed announcements, discussions, and more on [Liferay's Blog\nStream](http://www.liferay.com/community/blogs).\n\n## Forum\n\nHave questions? Ask them on our very active\n[forums](http://www.liferay.com/community/forums)!\n\n## IRC\n\nServer: `irc.freenode.net`\n\nChannel: `#liferay`\n\n## Contributing\n\nLiferay welcomes any and all contributions! Please read the [CONTRIBUTING\nguide](https://github.com/liferay/liferay-portal/blob/master/CONTRIBUTING.markdown)\nfor details on developing and submitting your contributions.\n\n## Liferay Portal Community Edition License\n\nThis library, *Liferay Portal Community Edition*, is free software (\"Licensed\nSoftware\"); you can redistribute it and/or modify it under the terms of the [GNU\nLesser General Public License](http://www.gnu.org/licenses/lgpl-2.1.html) as\npublished by the Free Software Foundation; either version 2.1 of the License, or\n(at your option) any later version.\n\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; including but not limited to, the implied warranty of MERCHANTABILITY,\nNONINFRINGEMENT, or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General\nPublic License for more details.\n\nYou should have received a copy of the [GNU Lesser General Public\nLicense](http://www.gnu.org/licenses/lgpl-2.1.html) along with this library; if\nnot, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth\nFloor, Boston, MA 02110-1301 USA\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}