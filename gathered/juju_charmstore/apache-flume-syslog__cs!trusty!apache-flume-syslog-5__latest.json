{
  "name": "apache-flume-syslog Juju charm",
  "juju_charm_name": "apache-flume-syslog",
  "revision": "cs:trusty/apache-flume-syslog-5",
  "latest": true,
  "uris": [
    "https://jujucharms.com/apache-flume-syslog",
    "https://jujucharms.com/apache-flume-syslog/trusty",
    "https://jujucharms.com/apache-flume-syslog/trusty/5",
    "https://api.jujucharms.com/v5/apache-flume-syslog",
    "https://api.jujucharms.com/v5/trusty/apache-flume-syslog",
    "https://api.jujucharms.com/v5/trusty/apache-flume-syslog-5"
  ],
  "labels": [
    "Juju charm",
    "applications",
    "bigdata",
    "apache",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Logging",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Web Server/Apache HTTP Server"
  ],
  "info_url": "https://jujucharms.com/apache-flume-syslog",
  "package_url": "https://api.jujucharms.com/v5/trusty/apache-flume-syslog-5/archive",
  "created": "2016-06-13T16:05:33.261Z",
  "updated": "2016-06-13T16:05:33.261Z",
  "description": "Ingest syslog events with Apache Flume\n\nUses a Syslog source, memory channel, and Avro sink in Apache Flume\nto ingest log data.\n",
  "maintainer": {
    "name": "bigdata-charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "trusty",
  "juju_charm_owner": "bigdata-charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= trusty"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/flume-agent",
      "self_resolve": true,
      "juju_interface": "flume-agent",
      "juju_name": "flume-sink",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "channel_capacity": {
      "type": "string",
      "description": "The maximum number of events stored in the channel.\n",
      "default": "1000",
      "mapping": "charm_option"
    },
    "channel_transaction_capacity": {
      "type": "string",
      "description": "The maximum number of events the channel will take from a source or\ngive to a sink per transaction.\n",
      "default": "100",
      "mapping": "charm_option"
    },
    "event_dir": {
      "type": "string",
      "description": "The HDFS subdirectory under /user/flume where events will be stored.\n",
      "default": "flume-syslog",
      "mapping": "charm_option"
    },
    "resources_mirror": {
      "type": "string",
      "description": "URL from which to fetch resources (e.g., Flume binaries) instead of S3\n",
      "default": "",
      "mapping": "charm_option"
    },
    "source_port": {
      "type": "string",
      "description": "Port on which the agent source is listening. If relating to the\n'rsyslog-forwarder-ha' charm, this must be '514'.\n",
      "default": "514",
      "mapping": "charm_option"
    },
    "source_type": {
      "type": "string",
      "description": "Agent source type. Can be 'syslogudp' or 'syslogtcp'. If\nrelating to the 'rsyslog-forwarder-ha' charm, this must be 'syslogudp'.\n",
      "default": "syslogudp",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/syslog",
      "juju_interface": "syslog",
      "juju_name": "syslog",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "## Overview\n\nFlume is a distributed, reliable, and available service for efficiently\ncollecting, aggregating, and moving large amounts of log data. It has a simple\nand flexible architecture based on streaming data flows. It is robust and fault\ntolerant with tunable reliability mechanisms and many failover and recovery\nmechanisms. It uses a simple extensible data model that allows for online\nanalytic application. Learn more at [flume.apache.org](http://flume.apache.org).\n\nThis charm provides a Flume agent designed to receive remote syslog events and\nsend them to the `apache-flume-hdfs` agent for storage into the shared\nfilesystem (HDFS) of a connected Hadoop cluster. Think of this charm as a\nreplacement for `rsyslog`, sending syslog events to HDFS instead of writing\nthem to a local filesystem.\n\n\n## Deployment\n\nThis charm is uses the Hadoob base layer and the HDFS interface to pull its dependencies\nand act as a client to a Hadoop namenode:\n\nYou may manually deploy the recommended environment as follows:\n\n    juju deploy apache-hadoop-namenode namenode\n    juju deploy apache-hadoop-resourcemanager resourcemgr\n    juju deploy apache-hadoop-slave slave\n    juju deploy apache-hadoop-plugin plugin\n\n    juju add-relation namenode slave\n    juju add-relation resourcemgr slave\n    juju add-relation resourcemgr namenode\n    juju add-relation plugin resourcemgr\n    juju add-relation plugin namenode\n\n\nDeploy Flume hdfs:\n\n    juju deploy apache-flume-hdfs flume-hdfs\n    juju add-relation flume-hdfs plugin\n\nNow that the base environment has been deployed (either via quickstart or\nmanually), you are ready to add the `apache-flume-syslog` charm and\nrelate it to the `flume-hdfs` agent:\n\n    juju deploy apache-flume-syslog flume-syslog\n    juju add-relation flume-syslog flume-hdfs\n\nYou are now ready to ingest remote syslog events! Note the deployment at this\nstage isn't very useful. You'll need to relate this charm to any other service\nthat is configured to send data via the `syslog` interface.\n\n\n## Usage\n\nAs an example use case, let's ingest our `hdfs-master` syslog events into HDFS.\nDeploy the `rsyslog-forwarder-ha` subordinate charm, relate it to\n`hdfs-master`, and then link the `syslog` interfaces:\n\n    juju deploy rsyslog-forwarder-ha\n    juju add-relation rsyslog-forwarder-ha namenode\n    juju add-relation rsyslog-forwarder-ha flume-syslog\n\nAny syslog data generated on the `namenode` unit will now be ingested into\nHDFS via the `flume-syslog` and `flume-hdfs` charms. Flume may include multiple\nsyslog events in each file written to HDFS. This is configurable with various\noptions on the `flume-hdfs` charm. See descriptions of the `roll_*` options on\nthe [apache-flume-hdfs](https://jujucharms.com/apache-flume-hdfs/) charm store\npage for more details.\n\nFlume will write files to HDFS in the following location:\n`/user/flume/<event_dir>/<yyyy-mm-dd>/FlumeData.<id>`. The `<event_dir>`\nsubdirectory is configurable and set to `flume-syslog` by default for this\ncharm.\n\n\n## Test the deployment\n\nTo verify this charm is working as intended, trigger a syslog event on the\nmonitored unit (`hdfs-master` in our deployment scenario):\n\n    juju ssh namenode/0 'echo flume-test'\n\nNow SSH to the `flume-hdfs` unit, locate an event, and cat it:\n\n    juju ssh flume-hdfs/0\n    hdfs dfs -ls /user/flume/<event_dir>               # <-- find a date\n    hdfs dfs -ls /user/flume/<event_dir>/<yyyy-mm-dd>  # <-- find an event\n    hdfs dfs -cat /user/flume/<event_dir>/<yyyy-mm-dd>/FlumeData.<id>\n\nYou should be able to find a timestamped message about SSH'ing into the\n`namenode` unit that corresponds to the trigger you issued above. Note that\nthis workload isn't limited to ssh-related events. You'll get every syslog\nevent from the `namenode` unit. Happy logging!\n\n\n## Contact Information\n\n- <bigdata@lists.ubuntu.com>\n\n\n## Help\n\n- [Apache Flume home page](http://flume.apache.org/)\n- [Apache Flume bug tracker](https://issues.apache.org/jira/browse/flume)\n- [Apache Flume mailing lists](https://flume.apache.org/mailinglists.html)\n- `#juju` on `irc.freenode.net`\n",
  "readme": "## Overview\n\nFlume is a distributed, reliable, and available service for efficiently\ncollecting, aggregating, and moving large amounts of log data. It has a simple\nand flexible architecture based on streaming data flows. It is robust and fault\ntolerant with tunable reliability mechanisms and many failover and recovery\nmechanisms. It uses a simple extensible data model that allows for online\nanalytic application. Learn more at [flume.apache.org](http://flume.apache.org).\n\nThis charm provides a Flume agent designed to receive remote syslog events and\nsend them to the `apache-flume-hdfs` agent for storage into the shared\nfilesystem (HDFS) of a connected Hadoop cluster. Think of this charm as a\nreplacement for `rsyslog`, sending syslog events to HDFS instead of writing\nthem to a local filesystem.\n\n\n## Deployment\n\nThis charm is uses the Hadoob base layer and the HDFS interface to pull its dependencies\nand act as a client to a Hadoop namenode:\n\nYou may manually deploy the recommended environment as follows:\n\n    juju deploy apache-hadoop-namenode namenode\n    juju deploy apache-hadoop-resourcemanager resourcemgr\n    juju deploy apache-hadoop-slave slave\n    juju deploy apache-hadoop-plugin plugin\n\n    juju add-relation namenode slave\n    juju add-relation resourcemgr slave\n    juju add-relation resourcemgr namenode\n    juju add-relation plugin resourcemgr\n    juju add-relation plugin namenode\n\n\nDeploy Flume hdfs:\n\n    juju deploy apache-flume-hdfs flume-hdfs\n    juju add-relation flume-hdfs plugin\n\nNow that the base environment has been deployed (either via quickstart or\nmanually), you are ready to add the `apache-flume-syslog` charm and\nrelate it to the `flume-hdfs` agent:\n\n    juju deploy apache-flume-syslog flume-syslog\n    juju add-relation flume-syslog flume-hdfs\n\nYou are now ready to ingest remote syslog events! Note the deployment at this\nstage isn't very useful. You'll need to relate this charm to any other service\nthat is configured to send data via the `syslog` interface.\n\n\n## Usage\n\nAs an example use case, let's ingest our `hdfs-master` syslog events into HDFS.\nDeploy the `rsyslog-forwarder-ha` subordinate charm, relate it to\n`hdfs-master`, and then link the `syslog` interfaces:\n\n    juju deploy rsyslog-forwarder-ha\n    juju add-relation rsyslog-forwarder-ha namenode\n    juju add-relation rsyslog-forwarder-ha flume-syslog\n\nAny syslog data generated on the `namenode` unit will now be ingested into\nHDFS via the `flume-syslog` and `flume-hdfs` charms. Flume may include multiple\nsyslog events in each file written to HDFS. This is configurable with various\noptions on the `flume-hdfs` charm. See descriptions of the `roll_*` options on\nthe [apache-flume-hdfs](https://jujucharms.com/apache-flume-hdfs/) charm store\npage for more details.\n\nFlume will write files to HDFS in the following location:\n`/user/flume/<event_dir>/<yyyy-mm-dd>/FlumeData.<id>`. The `<event_dir>`\nsubdirectory is configurable and set to `flume-syslog` by default for this\ncharm.\n\n\n## Test the deployment\n\nTo verify this charm is working as intended, trigger a syslog event on the\nmonitored unit (`hdfs-master` in our deployment scenario):\n\n    juju ssh namenode/0 'echo flume-test'\n\nNow SSH to the `flume-hdfs` unit, locate an event, and cat it:\n\n    juju ssh flume-hdfs/0\n    hdfs dfs -ls /user/flume/<event_dir>               # <-- find a date\n    hdfs dfs -ls /user/flume/<event_dir>/<yyyy-mm-dd>  # <-- find an event\n    hdfs dfs -cat /user/flume/<event_dir>/<yyyy-mm-dd>/FlumeData.<id>\n\nYou should be able to find a timestamped message about SSH'ing into the\n`namenode` unit that corresponds to the trigger you issued above. Note that\nthis workload isn't limited to ssh-related events. You'll get every syslog\nevent from the `namenode` unit. Happy logging!\n\n\n## Contact Information\n\n- <bigdata@lists.ubuntu.com>\n\n\n## Help\n\n- [Apache Flume home page](http://flume.apache.org/)\n- [Apache Flume bug tracker](https://issues.apache.org/jira/browse/flume)\n- [Apache Flume mailing lists](https://flume.apache.org/mailinglists.html)\n- `#juju` on `irc.freenode.net`\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}