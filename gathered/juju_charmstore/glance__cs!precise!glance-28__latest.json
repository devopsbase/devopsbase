{
  "name": "glance Juju charm",
  "juju_charm_name": "glance",
  "revision": "cs:precise/glance-28",
  "latest": true,
  "uris": [
    "https://jujucharms.com/glance",
    "https://jujucharms.com/glance/precise",
    "https://jujucharms.com/glance/precise/28",
    "https://api.jujucharms.com/v5/glance",
    "https://api.jujucharms.com/v5/precise/glance",
    "https://api.jujucharms.com/v5/precise/glance-28"
  ],
  "labels": [
    "Juju charm",
    "miscellaneous",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Image",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Cloud Platform/OpenStack",
    "Type/Middleware/Runtime/JavaScript/Node.js",
    "Type/Middleware/Data Store/Object Store"
  ],
  "info_url": "https://jujucharms.com/glance",
  "package_url": "https://api.jujucharms.com/v5/precise/glance-28/archive",
  "created": "2015-06-17T09:35:49.975Z",
  "updated": "2015-06-17T09:35:49.975Z",
  "description": "OpenStack Image Registry and Delivery Service\n\nThe Glance project provides an image registration and discovery service\n(Parallax) and an image delivery service (Teller). These services are used\nin conjunction by Nova to deliver images from object stores, such as\nOpenStack's Swift service, to Nova's compute nodes.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/rabbitmq",
      "self_resolve": true,
      "juju_interface": "rabbitmq",
      "juju_name": "amqp",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/ceph-client",
      "self_resolve": true,
      "juju_interface": "ceph-client",
      "juju_name": "ceph",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/hacluster",
      "self_resolve": true,
      "juju_interface": "hacluster",
      "juju_name": "ha",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/keystone",
      "self_resolve": true,
      "juju_interface": "keystone",
      "juju_name": "identity-service",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/swift-proxy",
      "self_resolve": true,
      "juju_interface": "swift-proxy",
      "juju_name": "object-store",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mysql-shared",
      "self_resolve": true,
      "juju_interface": "mysql-shared",
      "juju_name": "shared-db",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "ceph-osd-replication-count": {
      "type": "int",
      "description": "This value dictates the number of replicas ceph must make of any\nobject it stores within the images rbd pool. Of course, this only\napplies if using Ceph as a backend store. Note that once the images\nrbd pool has been created, changing this value will not have any\neffect (although it can be changed in ceph by manually configuring\nyour ceph cluster).\n",
      "default": 2,
      "mapping": "charm_option"
    },
    "database": {
      "type": "string",
      "description": "Glance database name.",
      "default": "glance",
      "mapping": "charm_option"
    },
    "database-user": {
      "type": "string",
      "description": "Database username",
      "default": "glance",
      "mapping": "charm_option"
    },
    "ha-bindiface": {
      "type": "string",
      "description": "Default network interface on which HA cluster will bind to communication\nwith the other members of the HA Cluster.\n",
      "default": "eth0",
      "mapping": "charm_option"
    },
    "ha-mcastport": {
      "type": "int",
      "description": "Default multicast port number that will be used to communicate between\nHA Cluster nodes.\n",
      "default": 5402,
      "mapping": "charm_option"
    },
    "openstack-origin": {
      "type": "string",
      "description": "Repository from which to install.  May be one of the following:\ndistro (default), ppa:somecustom/ppa, a deb url sources entry,\nor a supported Cloud Archive release pocket.\n\nSupported Cloud Archive sources include: cloud:precise-folsom,\ncloud:precise-folsom/updates, cloud:precise-folsom/staging,\ncloud:precise-folsom/proposed.\n\nNote that updating this setting to a source that is known to\nprovide a later version of OpenStack will trigger a software\nupgrade.\n",
      "default": "distro",
      "mapping": "charm_option"
    },
    "rabbit-user": {
      "type": "string",
      "description": "Username to request access on rabbitmq-server.",
      "default": "glance",
      "mapping": "charm_option"
    },
    "rabbit-vhost": {
      "type": "string",
      "description": "RabbitMQ virtual host to request access on rabbitmq-server.",
      "default": "openstack",
      "mapping": "charm_option"
    },
    "region": {
      "type": "string",
      "description": "OpenStack Region",
      "default": "RegionOne",
      "mapping": "charm_option"
    },
    "ssl_cert": {
      "type": "string",
      "description": "SSL certificate to install and use for API ports.  Setting this value\nand ssl_key will enable reverse proxying, point Glance's entry in the\nKeystone catalog to use https, and override any certficiate and key\nissued by Keystone (if it is configured to do so).\n",
      "default": null,
      "mapping": "charm_option"
    },
    "ssl_key": {
      "type": "string",
      "description": "SSL key to use with certificate specified as ssl_cert.",
      "default": null,
      "mapping": "charm_option"
    },
    "use-syslog": {
      "type": "boolean",
      "description": "By default, all services will log into their corresponding log files.\nSetting this to True will force all services to log to the syslog.\n",
      "default": false,
      "mapping": "charm_option"
    },
    "vip": {
      "type": "string",
      "description": "Virtual IP to use to front Glance API in ha configuration",
      "default": null,
      "mapping": "charm_option"
    },
    "vip_cidr": {
      "type": "int",
      "description": "Netmask that will be used for the Virtual IP",
      "default": 24,
      "mapping": "charm_option"
    },
    "vip_iface": {
      "type": "string",
      "description": "Network Interface where to place the Virtual IP",
      "default": "eth0",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/glance",
      "juju_interface": "glance",
      "juju_name": "image-service",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "cluster": {
      "Name": "cluster",
      "Role": "peer",
      "Interface": "glance-ha",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "Overview\n--------\n\nThis charm provides the Glance image service for OpenStack.  It is intended to\nbe used alongside the other OpenStack components, starting with the Essex\nrelease in Ubuntu 12.04.\n\nUsage\n-----\n\nGlance may be deployed in a number of ways.  This charm focuses on 3 main\nconfigurations.  All require the existence of the other core OpenStack\nservices deployed via Juju charms, specifically: mysql, keystone and\nnova-cloud-controller.  The following assumes these services have already\nbeen deployed.\n\nLocal Storage\n=============\n\nIn this configuration, Glance uses the local storage available on the server\nto store image data:\n\n    juju deploy glance\n    juju add-relation glance keystone\n    juju add-relation glance mysql\n    juju add-relation glance nova-cloud-controller\n\nSwift backed storage\n====================\n\nGlance can also use Swift Object storage for image storage.  Swift is often\ndeployed as part of an OpenStack cloud and provides increased resilience and\nscale when compared to using local disk storage.  This configuration assumes\nthat you have already deployed Swift using the swift-proxy and swift-storage\ncharms:\n\n    juju deploy glance\n    juju add-relation glance keystone\n    juju add-relation glance mysql\n    juju add-relation glance nova-cloud-controller\n    juju add-relation glance swift-proxy\n\nThis configuration can be used to support Glance in HA/Scale-out deployments.\n\nCeph backed storage\n===================\n\nIn this configuration, Glance uses Ceph based object storage to provide\nscalable, resilient storage of images.  This configuration assumes that you\nhave already deployed Ceph using the ceph charm:\n\n    juju deploy glance\n    juju add-relation glance keystone\n    juju add-relation glance mysql\n    juju add-relation glance nova-cloud-controller\n    juju add-relation glance ceph\n\nThis configuration can also be used to support Glance in HA/Scale-out\ndeployments.\n\nGlance HA/Scale-out\n===================\n\nThe Glance charm can also be used in a HA/scale-out configuration using\nthe hacluster charm:\n\n    juju deploy -n 3 glance\n    juju deploy hacluster haglance\n    juju set glance vip=<virtual IP address to access glance over>\n    juju add-relation glance haglance\n    juju add-relation glance mysql\n    juju add-relation glance keystone\n    juju add-relation glance nova-cloud-controller\n    juju add-relation glance ceph|swift-proxy\n\nIn this configuration, 3 service units host the Glance image service;\nAPI requests are load balanced across all 3 service units via the\nconfigured virtual IP address (which is also registered into Keystone\nas the endpoint for Glance).\n\nNote that Glance in this configuration must be used with either Ceph or\nSwift providing backing image storage.\n\nContact Information\n-------------------\n\nAuthor: Adam Gandelman <adamg@canonical.com>\nReport bugs at: http://bugs.launchpad.net/charms\nLocation: http://jujucharms.com\n",
  "readme": "Overview\n--------\n\nThis charm provides the Glance image service for OpenStack.  It is intended to\nbe used alongside the other OpenStack components, starting with the Essex\nrelease in Ubuntu 12.04.\n\nUsage\n-----\n\nGlance may be deployed in a number of ways.  This charm focuses on 3 main\nconfigurations.  All require the existence of the other core OpenStack\nservices deployed via Juju charms, specifically: mysql, keystone and\nnova-cloud-controller.  The following assumes these services have already\nbeen deployed.\n\nLocal Storage\n=============\n\nIn this configuration, Glance uses the local storage available on the server\nto store image data:\n\n    juju deploy glance\n    juju add-relation glance keystone\n    juju add-relation glance mysql\n    juju add-relation glance nova-cloud-controller\n\nSwift backed storage\n====================\n\nGlance can also use Swift Object storage for image storage.  Swift is often\ndeployed as part of an OpenStack cloud and provides increased resilience and\nscale when compared to using local disk storage.  This configuration assumes\nthat you have already deployed Swift using the swift-proxy and swift-storage\ncharms:\n\n    juju deploy glance\n    juju add-relation glance keystone\n    juju add-relation glance mysql\n    juju add-relation glance nova-cloud-controller\n    juju add-relation glance swift-proxy\n\nThis configuration can be used to support Glance in HA/Scale-out deployments.\n\nCeph backed storage\n===================\n\nIn this configuration, Glance uses Ceph based object storage to provide\nscalable, resilient storage of images.  This configuration assumes that you\nhave already deployed Ceph using the ceph charm:\n\n    juju deploy glance\n    juju add-relation glance keystone\n    juju add-relation glance mysql\n    juju add-relation glance nova-cloud-controller\n    juju add-relation glance ceph\n\nThis configuration can also be used to support Glance in HA/Scale-out\ndeployments.\n\nGlance HA/Scale-out\n===================\n\nThe Glance charm can also be used in a HA/scale-out configuration using\nthe hacluster charm:\n\n    juju deploy -n 3 glance\n    juju deploy hacluster haglance\n    juju set glance vip=<virtual IP address to access glance over>\n    juju add-relation glance haglance\n    juju add-relation glance mysql\n    juju add-relation glance keystone\n    juju add-relation glance nova-cloud-controller\n    juju add-relation glance ceph|swift-proxy\n\nIn this configuration, 3 service units host the Glance image service;\nAPI requests are load balanced across all 3 service units via the\nconfigured virtual IP address (which is also registered into Keystone\nas the endpoint for Glance).\n\nNote that Glance in this configuration must be used with either Ceph or\nSwift providing backing image storage.\n\nContact Information\n-------------------\n\nAuthor: Adam Gandelman <adamg@canonical.com>\nReport bugs at: http://bugs.launchpad.net/charms\nLocation: http://jujucharms.com\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}