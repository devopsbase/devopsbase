{
  "name": "ntp Juju charm",
  "juju_charm_name": "ntp",
  "revision": "cs:precise/ntp-3",
  "latest": true,
  "uris": [
    "https://jujucharms.com/ntp",
    "https://jujucharms.com/ntp/precise",
    "https://jujucharms.com/ntp/precise/3",
    "https://api.jujucharms.com/v5/ntp",
    "https://api.jujucharms.com/v5/precise/ntp",
    "https://api.jujucharms.com/v5/precise/ntp-3"
  ],
  "labels": [
    "Juju charm",
    "misc",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Style/Virtualization Level/Hardware/Network",
    "Type/Devopsware/Deployment/Juju",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://jujucharms.com/ntp",
  "package_url": "https://api.jujucharms.com/v5/precise/ntp-3/archive",
  "created": "2015-06-17T09:36:08.857Z",
  "updated": "2015-06-17T09:36:08.857Z",
  "description": "Network Time Protocol\n\nNTP, the Network Time Protocol, is used to keep computer clocks accurate\nby synchronizing them over the Internet or a local network, or by\nfollowing an accurate hardware receiver that interprets GPS, DCF-77,\nNIST or similar time signals.\n.\nThis charm can be deployed alongside principle charms to enable NTP\nmanagement across deployed services.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": true,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/juju-info",
      "self_resolve": true,
      "juju_interface": "juju-info",
      "juju_name": "juju-info",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/ntp",
      "self_resolve": true,
      "juju_interface": "ntp",
      "juju_name": "master",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "source": {
      "type": "string",
      "description": "Space separated list of NTP servers to use as source for time.",
      "default": null,
      "mapping": "charm_option"
    }
  },
  "license": "Overview\n--------\n\nNTP provides network based time services to ensure synchronization of time\nacross computers.\n\nUsage\n-----\n\nThe ntp charm is a subordinate charm that is design for use with other\nprinciple charms.  It can be used in two ways:\n\nStandalone\n==========\n\nIn this mode the ntp charm is used to configure NTP in other service units to\ntalk directly to a set of NTP time sources:\n\n    juju deploy ntp\n    juju add-relation ntp myservice\n\nBy default this is the standard set of NTP pool servers that are configured in\nthe ntp Ubuntu package.\n\nHowever, if you have a handy atomic clock on your network which you would prefer\nto trust then you can use that instead:\n\n    juju set ntp source=myatomiclock.local.net\n\nYou can also specify multiple sources:\n\n    juju set ntp source=\"mac1.local.net mac2.local.net mac3.local.net\"\n\nSources should be space separated.\n\nMastered\n========\n\nIn the event that you don't wish every server on your network to talk directly to\nyour trusted time sources, you can use this charm in-conjunction with the ntpmaster\ncharm:\n\n    juju deploy ntp\n    juju deploy ntpmaster\n    juju add-relation ntp ntpmaster\n\nThis allows you to gate NTP services to a single set of servers within your control.\n\nThis might have application in more secure network environments where general\noutbound network access to the Internet is not avaliable or desirable and you don't\nhave a good internal time source such as an atomic clock.\n\nYou can of course have more that one ntpmaster:\n\n    juju add-unit ntpmaster\n\nAll services that the ntp charm is subordinate to will be configured to sync with\nall avaliable masters.\n\nThe ntpmaster charm supports the same \"source\" configuration that the ntp charm does.\n",
  "readme": "Overview\n--------\n\nNTP provides network based time services to ensure synchronization of time\nacross computers.\n\nUsage\n-----\n\nThe ntp charm is a subordinate charm that is design for use with other\nprinciple charms.  It can be used in two ways:\n\nStandalone\n==========\n\nIn this mode the ntp charm is used to configure NTP in other service units to\ntalk directly to a set of NTP time sources:\n\n    juju deploy ntp\n    juju add-relation ntp myservice\n\nBy default this is the standard set of NTP pool servers that are configured in\nthe ntp Ubuntu package.\n\nHowever, if you have a handy atomic clock on your network which you would prefer\nto trust then you can use that instead:\n\n    juju set ntp source=myatomiclock.local.net\n\nYou can also specify multiple sources:\n\n    juju set ntp source=\"mac1.local.net mac2.local.net mac3.local.net\"\n\nSources should be space separated.\n\nMastered\n========\n\nIn the event that you don't wish every server on your network to talk directly to\nyour trusted time sources, you can use this charm in-conjunction with the ntpmaster\ncharm:\n\n    juju deploy ntp\n    juju deploy ntpmaster\n    juju add-relation ntp ntpmaster\n\nThis allows you to gate NTP services to a single set of servers within your control.\n\nThis might have application in more secure network environments where general\noutbound network access to the Internet is not avaliable or desirable and you don't\nhave a good internal time source such as an atomic clock.\n\nYou can of course have more that one ntpmaster:\n\n    juju add-unit ntpmaster\n\nAll services that the ntp charm is subordinate to will be configured to sync with\nall avaliable masters.\n\nThe ntpmaster charm supports the same \"source\" configuration that the ntp charm does.\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}