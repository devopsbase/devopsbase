{
  "name": "git Juju charm",
  "juju_charm_name": "git",
  "revision": "cs:trusty/git-1",
  "latest": true,
  "uris": [
    "https://jujucharms.com/git",
    "https://jujucharms.com/git/trusty",
    "https://jujucharms.com/git/trusty/1",
    "https://api.jujucharms.com/v5/git",
    "https://api.jujucharms.com/v5/trusty/git",
    "https://api.jujucharms.com/v5/trusty/git-1"
  ],
  "labels": [
    "Juju charm",
    "application_development",
    "storage",
    "Type/Middleware/Runtime/Java",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Version Control/Git",
    "Type/Devopsware/Deployment/Juju"
  ],
  "info_url": "https://jujucharms.com/git",
  "package_url": "https://api.jujucharms.com/v5/trusty/git-1/archive",
  "created": "2015-09-03T18:01:15.462Z",
  "updated": "2015-09-03T18:01:15.462Z",
  "description": "fast, scalable, distributed revision control system\n\nThe git charm deploys and controls a git-over-ssh server.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "trusty",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= trusty"
    }
  ],
  "parameters": {
    "repository_dir": {
      "type": "string",
      "description": "Directory for storing git repositories.",
      "default": "/var/git/",
      "mapping": "charm_option"
    }
  },
  "license": "The git charm deploys a server with git set up to serve over ssh.\nIn addition to that, the charm exposes actions that make handling the\nmanagement of users and repositories easy.\n\nThe charms uses and depends on actions, a feature not yet present in juju-core 1.22.\nTo use it, download and build the juju-core 1.23 or later branch (https://github.com/juju/juju/tree/1.23).\n\nDeploying the charm is as easy as:\njuju deploy cs:trusty/git\n\nGetting the list of defined actions:\n\n    $ juju action defined git\n    juju action defined git\n    add-repo: Create a git repository.\n    add-repo-user: Give a user permissions to access a repository.\n    add-user: Create a new user.\n    get-repo: Return the repository's path.\n    list-repo-users: List all users who have access to a repository.\n    list-repos: List existing git repositories.\n    list-user-repos: List all the repositories a user has access to.\n    list-users: List all users.\n    remove-repo: Remove a git repository.\n    remove-repo-user: Revoke a user's permissions to access a repository.\n    remove-user: Remove a user.\n\nConfiguration values\n====================\n\nThe charm exposes a single configuration value - the repository directory:\n\n    $ juju get git\n    juju get git\n    charm: git\n    service: git\n    settings:\n      repository_dir:\n        default: true\n        description: Directory for storing git repositories.\n        type: string\n        value: /var/git/`\n\nRepository management\n=====================\n\nCreating a repository\n---------------------\n\nThe add-repo action creates a repository with the specified name.\n\n    $ juju action do git/0 add-repo repo=myproject\n    juju action do git/0 add-repo repo=myproject\n    Action queued with id: 09b9916a-dc25-4113-8233-cc16f6ad11a4\n    $ juju action fetch 09b9916a-dc25-4113-8233-cc16f6ad11a4\n    juju action fetch 09b9916a-dc25-4113-8233-cc16f6ad11a4\n    results:\n      dir: /var/git/myproject.git\n    status: completed\n    timing:\n      completed: 2015-07-10 10:28:11 -0600 MDT\n      enqueued: 2015-07-10 10:28:06 -0600 MDT\n      started: 2015-07-10 10:28:09 -0600 MDT\n\nThe action results will indicate the location of the repository on the server.\n\nRemoving a repository\n---------------------\n\nTo remove a repository, use the remove-repo command.\n\n    $ juju action do git/0 remove-repo repo=myproject sure=yes\n    juju action do git/0 remove-repo repo=myproject\n    Action queued with id: f5b3cb3f-8386-49e7-813b-407347094248\n    $ juju action fetch f5b3cb3f-8386-49e7-813b-407347094248\n    juju action fetch f5b3cb3f-8386-49e7-813b-407347094248\n    status: completed\n    timing:\n      completed: 2015-07-10 10:39:36 -0600 MDT\n      enqueued: 2015-07-10 10:39:29 -0600 MDT\n      started: 2015-07-10 10:39:34 -0600 MDT\n\nSince this is an irreversible operation, an additional parameter (sure) is required.\n\nListing all available repositories\n----------------------------------\n\nTo list all repositories handled by the charm, use the list-repos command.\n\n    $ juju action do git/0 list-repos\n    juju action do git/0 list-repos\n    Action queued with id: 6cc783f2-5d68-4850-89e8-fe5d5c79e174\n    $ juju action fetch 6cc783f2-5d68-4850-89e8-fe5d5c79e174\n    juju action fetch 6cc783f2-5d68-4850-89e8-fe5d5c79e174\n    results:\n      myproject: /var/git/myproject.git\n      mysecretproject: /var/git/mysecretproject.git\n    status: completed\n    timing:\n      completed: 2015-07-10 10:48:46 -0600 MDT\n      enqueued: 2015-07-10 10:48:40 -0600 MDT\n      started: 2015-07-10 10:48:44 -0600 MDT\n\nThe actions's output with show a list of git repositories and their paths.\n\nGetting information for a repository\n------------------------------------\n\nTo get the information for a single repository, use the get-repo action:\n\n    $ juju action do git/0 get-repo repo=myproject\n    juju action do git/0 get-repo repo=myproject\n    Action queued with id: 7cb488c6-6e9b-4de8-8488-3c854364231d\n    $ juju action fetch 7cb488c6-6e9b-4de8-8488-3c854364231d\n    juju action fetch 7cb488c6-6e9b-4de8-8488-3c854364231d\n    results:\n      myproject: /var/git/myproject.git\n    status: completed\n    timing:\n      completed: 2015-07-10 10:53:11 -0600 MDT\n      enqueued: 2015-07-10 10:53:05 -0600 MDT\n      started: 2015-07-10 10:53:09 -0600 MDT\n\nManaging users\n==============\n\nAdding users\n------------\n\nThe add-user command creates a user.\n\n    $ juju action do git/0 add-user user=me key=\"`cat ~/.ssh/id_rsa.pub`\"\n    juju action do git/0 add-user user=me key=\"`cat ~/.ssh/id_rsa.pub`\"\n    Action queued with id: ff361e1d-0957-4c29-832b-bcfefe8a1751\n    $ juju action fetch ff361e1d-0957-4c29-832b-bcfefe8a1751\n    juju action fetch ff361e1d-0957-4c29-832b-bcfefe8a1751\n    status: completed\n    timing:\n      completed: 2015-07-10 10:31:06 -0600 MDT\n      enqueued: 2015-07-10 10:31:01 -0600 MDT\n      started: 2015-07-10 10:31:04 -0600 MDT\n\nAdding a user requires two parameters: the name and the public ssh key. Since actions don't support file parameters,\nyou will need to pass the key string as the key parameter.\n\nRemoving users\n--------------\n\nTo remove a user, user the remove-user action.\n\n    $ juju action do git/0 remove-user user=me sure=yes\n    juju action do git/0 remove-user user=me\n    Action queued with id: c5f8c740-9659-4714-8b64-8c0921308bab\n    $ juju action fetch c5f8c740-9659-4714-8b64-8c0921308bab\n    juju action fetch c5f8c740-9659-4714-8b64-8c0921308bab\n    status: completed\n    timing:\n      completed: 2015-07-10 10:54:51 -0600 MDT\n      enqueued: 2015-07-10 10:54:44 -0600 MDT\n      started: 2015-07-10 10:54:49 -0600 MDT\n\nSince this is an irreversible operation, an additional parameter (sure) is required.\n\n\nShowing all users\n-----------------\n\nTo list all users, use the list-users action.\n\n    $ juju action do git/0 list-users\n    juju action do git/0 list-users\n    Action queued with id: e50ef05a-c012-4a89-82cd-016ca60f7e06\n    $ juju action fetch e50ef05a-c012-4a89-82cd-016ca60f7e06\n    juju action fetch e50ef05a-c012-4a89-82cd-016ca60f7e06\n    results:\n      users: me, him\n    status: completed\n    timing:\n      completed: 2015-07-10 10:59:01 -0600 MDT\n      enqueued: 2015-07-10 10:58:57 -0600 MDT\n      started: 2015-07-10 10:58:59 -0600 MDT\n\nManaging user repository access\n===============================\n\nManaging users and repositories is just half of the story. To have a useful git service, we need\nto be able to grant users access to a repository.\n\nGranting users access to a repository\n-------------------------------------\n\nTo grant a user access to a repository, we use the add-repo-user action and pass it two parameters:\nthe username and repository name.\n\n    $ juju action do git/0 add-repo-user repo=myproject user=me\n    juju action do git/0 add-repo-user repo=myproject user=me\n    Action queued with id: c8fb9cdd-df9f-4dbb-8925-973e518be73a\n    $ juju action fetch c8fb9cdd-df9f-4dbb-8925-973e518be73a\n    juju action fetch c8fb9cdd-df9f-4dbb-8925-973e518be73a\n    status: completed\n    timing:\n      completed: 2015-07-10 11:03:06 -0600 MDT\n      enqueued: 2015-07-10 11:03:01 -0600 MDT\n      started: 2015-07-10 11:03:04 -0600 MDT\n\nOnce this is done, the user will be able to access the repository:\n\n    $ git remote add upstream me@10.0.3.81:/var/git/myproject.git\n    git remote add upstream me@10.0.3.81:/var/git/myproject.git\n    $ git fetch upstream\n    git fetch upstream\n    Warning: Permanently added '10.0.3.81' (RSA) to the list of known hosts.\n\nRemoving a user's access to a repository\n----------------------------------------\n\nThe remove-repo-user action is similar to add-repo-user: it takes two parameters as well, user and repo.\n\n    $ juju action do git/0 remove-repo-user user=me repo=myproject\n    juju action do git/0 remove-repo-user user=me repo=myproject\n    Action queued with id: 6c8e028c-0a0e-4f24-8317-140507d10e76\n    $ juju action fetch 6c8e028c-0a0e-4f24-8317-140507d10e76\n    juju action fetch 6c8e028c-0a0e-4f24-8317-140507d10e76\n    status: completed\n    timing:\n      completed: 2015-07-10 11:08:11 -0600 MDT\n      enqueued: 2015-07-10 11:08:07 -0600 MDT\n      started: 2015-07-10 11:08:09 -0600 MDT\n\nThis will cause the user to lose access to the repository:\n\n    $ git pull upstream\n    git pull upstream\n    Warning: Permanently added '10.0.3.81' (RSA) to the list of known hosts.\n    fatal: '/var/git/myproject.git' does not appear to be a git repository\n    fatal: Could not read from remote repository.\n     \n    Please make sure you have the correct access rights\n    and the repository exists.\n\nListing all users who have access to a repository\n-------------------------------------------------\n\nThe list-repo-users action will return a list of users who have access to a repository.\n\n    $ juju action do git/0 list-repo-users repo=myproject\n    juju action do git/0 list-repo-users repo=myproject\n    Action queued with id: a97e26f1-5a1a-4174-8cee-d16eada55bf9\n    $ juju action fetch a97e26f1-5a1a-4174-8cee-d16eada55bf9\n    juju action fetch a97e26f1-5a1a-4174-8cee-d16eada55bf9\n    results:\n      users: me, him\n    status: completed\n    timing:\n      completed: 2015-07-10 11:10:57 -0600 MDT\n      enqueued: 2015-07-10 11:10:51 -0600 MDT\n      started: 2015-07-10 11:10:54 -0600 MDT\n\nListing all repositories a user has access to\n---------------------------------------------\n\nIn some cases it may not be sufficient to know which users have access to a repository. So, to\nfind out which repositories a user has access to, user the list-user-repos action.\n\n    $ juju action do git/0 list-user-repos user=me\n    juju action do git/0 list-user-repos user=me\n    Action queued with id: ef308404-ac24-4329-8df9-4df3452f6a4c\n    $ juju action fetch ef308404-ac24-4329-8df9-4df3452f6a4c\n    juju action fetch ef308404-ac24-4329-8df9-4df3452f6a4c\n    results:\n      me: myproject, mysecretproject\n    status: completed\n    timing:\n      completed: 2015-07-10 11:13:31 -0600 MDT\n      enqueued: 2015-07-10 11:13:24 -0600 MDT\n      started: 2015-07-10 11:13:29 -0600 MDT\n",
  "readme": "The git charm deploys a server with git set up to serve over ssh.\nIn addition to that, the charm exposes actions that make handling the\nmanagement of users and repositories easy.\n\nThe charms uses and depends on actions, a feature not yet present in juju-core 1.22.\nTo use it, download and build the juju-core 1.23 or later branch (https://github.com/juju/juju/tree/1.23).\n\nDeploying the charm is as easy as:\njuju deploy cs:trusty/git\n\nGetting the list of defined actions:\n\n    $ juju action defined git\n    juju action defined git\n    add-repo: Create a git repository.\n    add-repo-user: Give a user permissions to access a repository.\n    add-user: Create a new user.\n    get-repo: Return the repository's path.\n    list-repo-users: List all users who have access to a repository.\n    list-repos: List existing git repositories.\n    list-user-repos: List all the repositories a user has access to.\n    list-users: List all users.\n    remove-repo: Remove a git repository.\n    remove-repo-user: Revoke a user's permissions to access a repository.\n    remove-user: Remove a user.\n\nConfiguration values\n====================\n\nThe charm exposes a single configuration value - the repository directory:\n\n    $ juju get git\n    juju get git\n    charm: git\n    service: git\n    settings:\n      repository_dir:\n        default: true\n        description: Directory for storing git repositories.\n        type: string\n        value: /var/git/`\n\nRepository management\n=====================\n\nCreating a repository\n---------------------\n\nThe add-repo action creates a repository with the specified name.\n\n    $ juju action do git/0 add-repo repo=myproject\n    juju action do git/0 add-repo repo=myproject\n    Action queued with id: 09b9916a-dc25-4113-8233-cc16f6ad11a4\n    $ juju action fetch 09b9916a-dc25-4113-8233-cc16f6ad11a4\n    juju action fetch 09b9916a-dc25-4113-8233-cc16f6ad11a4\n    results:\n      dir: /var/git/myproject.git\n    status: completed\n    timing:\n      completed: 2015-07-10 10:28:11 -0600 MDT\n      enqueued: 2015-07-10 10:28:06 -0600 MDT\n      started: 2015-07-10 10:28:09 -0600 MDT\n\nThe action results will indicate the location of the repository on the server.\n\nRemoving a repository\n---------------------\n\nTo remove a repository, use the remove-repo command.\n\n    $ juju action do git/0 remove-repo repo=myproject sure=yes\n    juju action do git/0 remove-repo repo=myproject\n    Action queued with id: f5b3cb3f-8386-49e7-813b-407347094248\n    $ juju action fetch f5b3cb3f-8386-49e7-813b-407347094248\n    juju action fetch f5b3cb3f-8386-49e7-813b-407347094248\n    status: completed\n    timing:\n      completed: 2015-07-10 10:39:36 -0600 MDT\n      enqueued: 2015-07-10 10:39:29 -0600 MDT\n      started: 2015-07-10 10:39:34 -0600 MDT\n\nSince this is an irreversible operation, an additional parameter (sure) is required.\n\nListing all available repositories\n----------------------------------\n\nTo list all repositories handled by the charm, use the list-repos command.\n\n    $ juju action do git/0 list-repos\n    juju action do git/0 list-repos\n    Action queued with id: 6cc783f2-5d68-4850-89e8-fe5d5c79e174\n    $ juju action fetch 6cc783f2-5d68-4850-89e8-fe5d5c79e174\n    juju action fetch 6cc783f2-5d68-4850-89e8-fe5d5c79e174\n    results:\n      myproject: /var/git/myproject.git\n      mysecretproject: /var/git/mysecretproject.git\n    status: completed\n    timing:\n      completed: 2015-07-10 10:48:46 -0600 MDT\n      enqueued: 2015-07-10 10:48:40 -0600 MDT\n      started: 2015-07-10 10:48:44 -0600 MDT\n\nThe actions's output with show a list of git repositories and their paths.\n\nGetting information for a repository\n------------------------------------\n\nTo get the information for a single repository, use the get-repo action:\n\n    $ juju action do git/0 get-repo repo=myproject\n    juju action do git/0 get-repo repo=myproject\n    Action queued with id: 7cb488c6-6e9b-4de8-8488-3c854364231d\n    $ juju action fetch 7cb488c6-6e9b-4de8-8488-3c854364231d\n    juju action fetch 7cb488c6-6e9b-4de8-8488-3c854364231d\n    results:\n      myproject: /var/git/myproject.git\n    status: completed\n    timing:\n      completed: 2015-07-10 10:53:11 -0600 MDT\n      enqueued: 2015-07-10 10:53:05 -0600 MDT\n      started: 2015-07-10 10:53:09 -0600 MDT\n\nManaging users\n==============\n\nAdding users\n------------\n\nThe add-user command creates a user.\n\n    $ juju action do git/0 add-user user=me key=\"`cat ~/.ssh/id_rsa.pub`\"\n    juju action do git/0 add-user user=me key=\"`cat ~/.ssh/id_rsa.pub`\"\n    Action queued with id: ff361e1d-0957-4c29-832b-bcfefe8a1751\n    $ juju action fetch ff361e1d-0957-4c29-832b-bcfefe8a1751\n    juju action fetch ff361e1d-0957-4c29-832b-bcfefe8a1751\n    status: completed\n    timing:\n      completed: 2015-07-10 10:31:06 -0600 MDT\n      enqueued: 2015-07-10 10:31:01 -0600 MDT\n      started: 2015-07-10 10:31:04 -0600 MDT\n\nAdding a user requires two parameters: the name and the public ssh key. Since actions don't support file parameters,\nyou will need to pass the key string as the key parameter.\n\nRemoving users\n--------------\n\nTo remove a user, user the remove-user action.\n\n    $ juju action do git/0 remove-user user=me sure=yes\n    juju action do git/0 remove-user user=me\n    Action queued with id: c5f8c740-9659-4714-8b64-8c0921308bab\n    $ juju action fetch c5f8c740-9659-4714-8b64-8c0921308bab\n    juju action fetch c5f8c740-9659-4714-8b64-8c0921308bab\n    status: completed\n    timing:\n      completed: 2015-07-10 10:54:51 -0600 MDT\n      enqueued: 2015-07-10 10:54:44 -0600 MDT\n      started: 2015-07-10 10:54:49 -0600 MDT\n\nSince this is an irreversible operation, an additional parameter (sure) is required.\n\n\nShowing all users\n-----------------\n\nTo list all users, use the list-users action.\n\n    $ juju action do git/0 list-users\n    juju action do git/0 list-users\n    Action queued with id: e50ef05a-c012-4a89-82cd-016ca60f7e06\n    $ juju action fetch e50ef05a-c012-4a89-82cd-016ca60f7e06\n    juju action fetch e50ef05a-c012-4a89-82cd-016ca60f7e06\n    results:\n      users: me, him\n    status: completed\n    timing:\n      completed: 2015-07-10 10:59:01 -0600 MDT\n      enqueued: 2015-07-10 10:58:57 -0600 MDT\n      started: 2015-07-10 10:58:59 -0600 MDT\n\nManaging user repository access\n===============================\n\nManaging users and repositories is just half of the story. To have a useful git service, we need\nto be able to grant users access to a repository.\n\nGranting users access to a repository\n-------------------------------------\n\nTo grant a user access to a repository, we use the add-repo-user action and pass it two parameters:\nthe username and repository name.\n\n    $ juju action do git/0 add-repo-user repo=myproject user=me\n    juju action do git/0 add-repo-user repo=myproject user=me\n    Action queued with id: c8fb9cdd-df9f-4dbb-8925-973e518be73a\n    $ juju action fetch c8fb9cdd-df9f-4dbb-8925-973e518be73a\n    juju action fetch c8fb9cdd-df9f-4dbb-8925-973e518be73a\n    status: completed\n    timing:\n      completed: 2015-07-10 11:03:06 -0600 MDT\n      enqueued: 2015-07-10 11:03:01 -0600 MDT\n      started: 2015-07-10 11:03:04 -0600 MDT\n\nOnce this is done, the user will be able to access the repository:\n\n    $ git remote add upstream me@10.0.3.81:/var/git/myproject.git\n    git remote add upstream me@10.0.3.81:/var/git/myproject.git\n    $ git fetch upstream\n    git fetch upstream\n    Warning: Permanently added '10.0.3.81' (RSA) to the list of known hosts.\n\nRemoving a user's access to a repository\n----------------------------------------\n\nThe remove-repo-user action is similar to add-repo-user: it takes two parameters as well, user and repo.\n\n    $ juju action do git/0 remove-repo-user user=me repo=myproject\n    juju action do git/0 remove-repo-user user=me repo=myproject\n    Action queued with id: 6c8e028c-0a0e-4f24-8317-140507d10e76\n    $ juju action fetch 6c8e028c-0a0e-4f24-8317-140507d10e76\n    juju action fetch 6c8e028c-0a0e-4f24-8317-140507d10e76\n    status: completed\n    timing:\n      completed: 2015-07-10 11:08:11 -0600 MDT\n      enqueued: 2015-07-10 11:08:07 -0600 MDT\n      started: 2015-07-10 11:08:09 -0600 MDT\n\nThis will cause the user to lose access to the repository:\n\n    $ git pull upstream\n    git pull upstream\n    Warning: Permanently added '10.0.3.81' (RSA) to the list of known hosts.\n    fatal: '/var/git/myproject.git' does not appear to be a git repository\n    fatal: Could not read from remote repository.\n     \n    Please make sure you have the correct access rights\n    and the repository exists.\n\nListing all users who have access to a repository\n-------------------------------------------------\n\nThe list-repo-users action will return a list of users who have access to a repository.\n\n    $ juju action do git/0 list-repo-users repo=myproject\n    juju action do git/0 list-repo-users repo=myproject\n    Action queued with id: a97e26f1-5a1a-4174-8cee-d16eada55bf9\n    $ juju action fetch a97e26f1-5a1a-4174-8cee-d16eada55bf9\n    juju action fetch a97e26f1-5a1a-4174-8cee-d16eada55bf9\n    results:\n      users: me, him\n    status: completed\n    timing:\n      completed: 2015-07-10 11:10:57 -0600 MDT\n      enqueued: 2015-07-10 11:10:51 -0600 MDT\n      started: 2015-07-10 11:10:54 -0600 MDT\n\nListing all repositories a user has access to\n---------------------------------------------\n\nIn some cases it may not be sufficient to know which users have access to a repository. So, to\nfind out which repositories a user has access to, user the list-user-repos action.\n\n    $ juju action do git/0 list-user-repos user=me\n    juju action do git/0 list-user-repos user=me\n    Action queued with id: ef308404-ac24-4329-8df9-4df3452f6a4c\n    $ juju action fetch ef308404-ac24-4329-8df9-4df3452f6a4c\n    juju action fetch ef308404-ac24-4329-8df9-4df3452f6a4c\n    results:\n      me: myproject, mysecretproject\n    status: completed\n    timing:\n      completed: 2015-07-10 11:13:31 -0600 MDT\n      enqueued: 2015-07-10 11:13:24 -0600 MDT\n      started: 2015-07-10 11:13:29 -0600 MDT\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}