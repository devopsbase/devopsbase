{
  "name": "ddclient Juju charm",
  "juju_charm_name": "ddclient",
  "revision": "cs:precise/ddclient-3",
  "latest": true,
  "uris": [
    "https://jujucharms.com/ddclient",
    "https://jujucharms.com/ddclient/precise",
    "https://jujucharms.com/ddclient/precise/3",
    "https://api.jujucharms.com/v5/ddclient",
    "https://api.jujucharms.com/v5/precise/ddclient",
    "https://api.jujucharms.com/v5/precise/ddclient-3"
  ],
  "labels": [
    "Juju charm",
    "misc",
    "Type/Infrastructure/Operating System/macOS",
    "Binding/Provider",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/CLI",
    "Type/Devopsware/Deployment/Juju",
    "Type/Infrastructure/Network/DNS",
    "Type/Middleware/Cache"
  ],
  "info_url": "https://jujucharms.com/ddclient",
  "package_url": "https://api.jujucharms.com/v5/precise/ddclient-3/archive",
  "created": "2015-06-17T09:37:20.746Z",
  "updated": "2015-06-17T09:37:20.746Z",
  "description": "address updating utility for dynamic DNS services\n\nThis package provides a client to update dynamic IP addresses with\nseveral dynamic DNS service providers, such as DynDNS.com.  This makes\nit possible to use a fixed hostname (such as myhost.dyndns.org) to\naccess a machine with a dynamic IP address.  This client supports both\ndynamic and (near) static services, as  well as MX record and\nalternative name management. It caches the address, and only attempts\nthe update when it has changed.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": true,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/juju-info",
      "self_resolve": true,
      "juju_interface": "juju-info",
      "juju_name": "juju-info",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "daemon": {
      "type": "string",
      "description": "Specifies how often the daemon checks for an ip change.  The daemon interval can be specified as seconds (600s), minutes (5m), hours (1h) or days (1d).  Defaults to 300 seconds.  A value of zero means it not daemonize and only check on relation changes",
      "default": "300",
      "mapping": "charm_option"
    },
    "login": {
      "type": "string",
      "description": "user login name",
      "default": "",
      "mapping": "charm_option"
    },
    "password": {
      "type": "string",
      "description": "user password",
      "default": "",
      "mapping": "charm_option"
    },
    "protocol": {
      "type": "string",
      "description": "update protocol used",
      "default": "zoneedit1",
      "mapping": "charm_option"
    },
    "server": {
      "type": "string",
      "description": "dynamic dns server to update on",
      "default": "dynamic.zoneedit.com",
      "mapping": "charm_option"
    },
    "ssl": {
      "type": "string",
      "description": "do updates over encrypted SSL connection",
      "default": "yes",
      "mapping": "charm_option"
    },
    "use": {
      "type": "string",
      "description": "how the ip address is obtained",
      "default": "web",
      "mapping": "charm_option"
    },
    "web": {
      "type": "string",
      "description": "obtain IP address from this IP checking page or provider",
      "default": "http://checkip.dyndns.com/",
      "mapping": "charm_option"
    },
    "web-skip": {
      "type": "string",
      "description": "skip any IP addreses before this pattern on the page",
      "default": "IP Address",
      "mapping": "charm_option"
    },
    "zone": {
      "type": "string",
      "description": "Zone to add dynamic service names to",
      "default": "",
      "mapping": "charm_option"
    }
  },
  "license": "\nTired of cutting and pasting instance ip addresses or hostnames?\nHate having to manually update DNS entries or client applications?\n\nSetup dynamic DNS to point to your services in four easy steps!\n\n1. Set configuration options for your Dynamic DNS provider, username, password and zone name.\n2. Use a hostname as your servicename\n3. Add a relation to ddclient (dynamic DNS client)\n4. Profit, you just updated your dynamic DNS hostname!\n\nUsage\n-----\n\nFirst, specify what ddclient dynamic DNS provider you want to use.\nYou can find out which providers ddclient supports from the ddclient help: ddclient -h\nSet your authentication information and zone information (defaults to zoneedit), then deploy.\n\n  juju set ddclient \"login=dduffey\"\n  juju set ddclient \"password=fakepassword\"\n  juju set ddclient \"zone=davidduffey.com\"\n  juju deploy ddclient\n\nTo override the defaults and use a different supported dynamic DNS provider, e.g. no-ip.com:\n\n  juju set ddclient \"protocol=noip\"\n  juju set ddclient \"server=dynupdate.no-ip.com\"\n\nSecond, deploy any services as you normally would:\n\n  juju deploy wordpress blog\n  juju deploy mediawiki wiki\n  juju expose blog\n  juju expose wiki\n\nFinally, add relationships that you want to update w/ dynamic dns.\nThis will use the service name and the zone name to register to the provider.\n\n  juju add-relation ddclient blog\n  juju add-relation ddclient wiki\n\nThis will update your dynamic dns provider's entries to point to those\nservices' publicly accessible address.  You can verify (depending on\nyour DNS services' TTL) with:\n\n  dig +trace +answer blog.davidduffey.com\n\nConfig\n------\n\nInstead of setting the username and password at the command line\nyou can create a yaml file and pass it to juju. For example,\ncreate ddclient.yaml with the following,\n\n  ddclient:\n    login: dduffey\n    password: fakepassword\n    zone: davidduffey.com\n    protocol: zoneedit\n    server: www.zoneedit.com\n  \nand then execute\n\n  juju deploy --config ddclient.yaml ddclient\n\n\nCredits\n-------\n\nOriginal ddclient charm by David Duffey, Canonical.\nUpdated charm by Darryl Weaver, Canonical.\n\nKnown Limitations\n-----------------\n\nThis charm currently will only register the first service unit's public address with the Dynamic DNS provider.\nScaling to multiple units is not supported.\n",
  "readme": "\nTired of cutting and pasting instance ip addresses or hostnames?\nHate having to manually update DNS entries or client applications?\n\nSetup dynamic DNS to point to your services in four easy steps!\n\n1. Set configuration options for your Dynamic DNS provider, username, password and zone name.\n2. Use a hostname as your servicename\n3. Add a relation to ddclient (dynamic DNS client)\n4. Profit, you just updated your dynamic DNS hostname!\n\nUsage\n-----\n\nFirst, specify what ddclient dynamic DNS provider you want to use.\nYou can find out which providers ddclient supports from the ddclient help: ddclient -h\nSet your authentication information and zone information (defaults to zoneedit), then deploy.\n\n  juju set ddclient \"login=dduffey\"\n  juju set ddclient \"password=fakepassword\"\n  juju set ddclient \"zone=davidduffey.com\"\n  juju deploy ddclient\n\nTo override the defaults and use a different supported dynamic DNS provider, e.g. no-ip.com:\n\n  juju set ddclient \"protocol=noip\"\n  juju set ddclient \"server=dynupdate.no-ip.com\"\n\nSecond, deploy any services as you normally would:\n\n  juju deploy wordpress blog\n  juju deploy mediawiki wiki\n  juju expose blog\n  juju expose wiki\n\nFinally, add relationships that you want to update w/ dynamic dns.\nThis will use the service name and the zone name to register to the provider.\n\n  juju add-relation ddclient blog\n  juju add-relation ddclient wiki\n\nThis will update your dynamic dns provider's entries to point to those\nservices' publicly accessible address.  You can verify (depending on\nyour DNS services' TTL) with:\n\n  dig +trace +answer blog.davidduffey.com\n\nConfig\n------\n\nInstead of setting the username and password at the command line\nyou can create a yaml file and pass it to juju. For example,\ncreate ddclient.yaml with the following,\n\n  ddclient:\n    login: dduffey\n    password: fakepassword\n    zone: davidduffey.com\n    protocol: zoneedit\n    server: www.zoneedit.com\n  \nand then execute\n\n  juju deploy --config ddclient.yaml ddclient\n\n\nCredits\n-------\n\nOriginal ddclient charm by David Duffey, Canonical.\nUpdated charm by Darryl Weaver, Canonical.\n\nKnown Limitations\n-----------------\n\nThis charm currently will only register the first service unit's public address with the Dynamic DNS provider.\nScaling to multiple units is not supported.\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}