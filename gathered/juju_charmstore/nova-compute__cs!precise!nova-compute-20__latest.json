{
  "name": "nova-compute Juju charm",
  "juju_charm_name": "nova-compute",
  "revision": "cs:precise/nova-compute-20",
  "latest": true,
  "uris": [
    "https://jujucharms.com/nova-compute",
    "https://jujucharms.com/nova-compute/precise",
    "https://jujucharms.com/nova-compute/precise/20",
    "https://api.jujucharms.com/v5/nova-compute",
    "https://api.jujucharms.com/v5/precise/nova-compute",
    "https://api.jujucharms.com/v5/precise/nova-compute-20"
  ],
  "labels": [
    "Juju charm",
    "openstack",
    "Binding/Provider/Amazon/EC2",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/API",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Cloud Platform/OpenStack",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://jujucharms.com/nova-compute",
  "package_url": "https://api.jujucharms.com/v5/precise/nova-compute-20/archive",
  "created": "2015-06-17T09:36:04.287Z",
  "updated": "2015-06-17T09:36:04.287Z",
  "description": "OpenStack compute\n\nOpenStack Compute, codenamed Nova, is a cloud computing fabric controller. In\naddition to its \"native\" API (the OpenStack API), it also supports the Amazon\nEC2 API.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/rabbitmq",
      "self_resolve": true,
      "juju_interface": "rabbitmq",
      "juju_name": "amqp",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/ceph-client",
      "self_resolve": true,
      "juju_interface": "ceph-client",
      "juju_name": "ceph",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/glance",
      "self_resolve": true,
      "juju_interface": "glance",
      "juju_name": "image-service",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/nova-ceilometer",
      "self_resolve": true,
      "juju_interface": "nova-ceilometer",
      "juju_name": "nova-ceilometer",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/nrpe-external-master",
      "self_resolve": true,
      "juju_interface": "nrpe-external-master",
      "juju_name": "nrpe-external-master",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mysql-shared",
      "self_resolve": true,
      "juju_interface": "mysql-shared",
      "juju_name": "shared-db",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "bridge-interface": {
      "type": "string",
      "description": "Bridge interface to be configured",
      "default": "br100",
      "mapping": "charm_option"
    },
    "bridge-ip": {
      "type": "string",
      "description": "IP to be assigned to bridge interface",
      "default": "11.0.0.1",
      "mapping": "charm_option"
    },
    "bridge-netmask": {
      "type": "string",
      "description": "Netmask to be assigned to bridge interface",
      "default": "255.255.255.0",
      "mapping": "charm_option"
    },
    "config-flags": {
      "type": "string",
      "description": "Comma separated list of key=value config flags to be set in nova.conf.",
      "default": null,
      "mapping": "charm_option"
    },
    "database": {
      "type": "string",
      "description": "Database name",
      "default": "nova",
      "mapping": "charm_option"
    },
    "database-user": {
      "type": "string",
      "description": "Username for database access",
      "default": "nova",
      "mapping": "charm_option"
    },
    "enable-live-migration": {
      "type": "boolean",
      "description": "Configure libvirt for live migration.",
      "default": false,
      "mapping": "charm_option"
    },
    "enable-resize": {
      "type": "boolean",
      "description": "Enable instance resizing, which requires that passwordless SSH access be setup between compute hosts.",
      "default": false,
      "mapping": "charm_option"
    },
    "flat-interface": {
      "type": "string",
      "description": "Network interface on which to build bridge",
      "default": "eth1",
      "mapping": "charm_option"
    },
    "migration-auth-type": {
      "type": "string",
      "description": "TCP authentication scheme for libvirt live migration.  Available options\ninclude sasl or none.\n",
      "default": "sasl",
      "mapping": "charm_option"
    },
    "multi-host": {
      "type": "string",
      "description": "Whether to run nova-api and nova-network on the compute nodes.",
      "default": "yes",
      "mapping": "charm_option"
    },
    "nagios_context": {
      "type": "string",
      "description": "Used by the nrpe-external-master subordinate charm.\nA string that will be prepended to instance name to set the host name\nin nagios. So for instance the hostname would be something like:\n    juju-myservice-0\nIf you're running multiple environments with the same services in them\nthis allows you to differentiate between them.\n",
      "default": "juju",
      "mapping": "charm_option"
    },
    "neutron-database": {
      "type": "string",
      "description": "Database name for Neutron (if enabled)",
      "default": "neutron",
      "mapping": "charm_option"
    },
    "neutron-database-user": {
      "type": "string",
      "description": "Username for Neutron database access (if enabled)",
      "default": "neutron",
      "mapping": "charm_option"
    },
    "nova-config": {
      "type": "string",
      "description": "Full path to nova.conf",
      "default": "/etc/nova/nova.conf",
      "mapping": "charm_option"
    },
    "openstack-origin": {
      "type": "string",
      "description": "Repository from which to install.  May be one of the following:\ndistro (default), ppa:somecustom/ppa, a deb url sources entry,\nor a supported Cloud Archive release pocket.\n\nSupported Cloud Archive sources include: cloud:precise-folsom,\ncloud:precise-folsom/updates, cloud:precise-folsom/staging,\ncloud:precise-folsom/proposed.\n\nNote that updating this setting to a source that is known to\nprovide a later version of OpenStack will trigger a software\nupgrade.\n",
      "default": "distro",
      "mapping": "charm_option"
    },
    "rabbit-user": {
      "type": "string",
      "description": "Username used to access rabbitmq queue",
      "default": "nova",
      "mapping": "charm_option"
    },
    "rabbit-vhost": {
      "type": "string",
      "description": "",
      "default": "openstack",
      "mapping": "charm_option"
    },
    "virt-type": {
      "type": "string",
      "description": "Virtualization flavor. Supported: kvm, xen, uml, lxc. qemu",
      "default": "kvm",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/nova-compute",
      "juju_interface": "nova-compute",
      "juju_name": "cloud-compute",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "compute-peer": {
      "Name": "compute-peer",
      "Role": "peer",
      "Interface": "nova",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "gatherbase_origin": "juju-charmstore"
}