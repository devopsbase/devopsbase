{
  "name": "vdbench Juju charm",
  "juju_charm_name": "vdbench",
  "revision": "cs:precise/vdbench-4",
  "latest": true,
  "uris": [
    "https://jujucharms.com/vdbench",
    "https://jujucharms.com/vdbench/precise",
    "https://jujucharms.com/vdbench/precise/4",
    "https://api.jujucharms.com/v5/vdbench",
    "https://api.jujucharms.com/v5/precise/vdbench",
    "https://api.jujucharms.com/v5/precise/vdbench-4"
  ],
  "labels": [
    "Juju charm",
    "misc",
    "Type/Middleware/Runtime/Java",
    "Binding/Provider/HP",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/GUI",
    "Style/Virtualization Level/Hardware/Hypervisor/Paravirtualization",
    "Style/Virtualization Level/Hardware/Network",
    "Type/Devopsware/Deployment/Juju",
    "Type/Infrastructure/Operating System/Windows",
    "Type/Infrastructure/Operating System/Linux",
    "Type/Middleware/Data Store"
  ],
  "info_url": "https://jujucharms.com/vdbench",
  "package_url": "https://api.jujucharms.com/v5/precise/vdbench-4/archive",
  "created": "2015-06-17T09:35:12.514Z",
  "updated": "2015-06-17T09:35:12.514Z",
  "description": "Vdbench is a disk and tape I/O workload generator\n\nVdbench is a disk and tape I/O workload generator for verifying data \nintegrity and measuring performance of direct attached and network\nconnected storage on Windows, Solaris, Linux, AIX, OS/X and HP/UX.\nDownload the source at http://vdbench.sourceforge.net/.\n- Implemented in Java\n- Easy to customize workloads using:\n\n/vdbench [compare] [gui] [dvpost] [edit] [jstack] [parse] [print] \n[sds] [rsh] for some Vdbench utility functions\n- Additional examples and option specifications in the source tar.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "website",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "juju charm: vdbench\n\n1. Deploy example \n2. Additional information\n\n1. Deploy Example Steps:\n\n  juju bootstrap\n  juju deploy vdbench\n  juju expose vdbench  \n  Open web browswer to instance address http://<machine-addr> and view \n   results\n\n2.  Additional information\n\n2a. Deploy with custom I/O workload\n   - Download charm source from http://jujucharms.com/charms via bzr\n   - Add your vdbench workload file (Refer to the vbench.tar file for \n     examples) in the charm root directory\n   - As an example, change the start from './vdbench -t' to \n     './vdbench -f <your custom vdbench test file>'\n   - juju deploy --repository=<dir for charm lookup> \\\n      local:/path/to/vdbench    \n\n",
  "readme": "juju charm: vdbench\n\n1. Deploy example \n2. Additional information\n\n1. Deploy Example Steps:\n\n  juju bootstrap\n  juju deploy vdbench\n  juju expose vdbench  \n  Open web browswer to instance address http://<machine-addr> and view \n   results\n\n2.  Additional information\n\n2a. Deploy with custom I/O workload\n   - Download charm source from http://jujucharms.com/charms via bzr\n   - Add your vdbench workload file (Refer to the vbench.tar file for \n     examples) in the charm root directory\n   - As an example, change the start from './vdbench -t' to \n     './vdbench -f <your custom vdbench test file>'\n   - juju deploy --repository=<dir for charm lookup> \\\n      local:/path/to/vdbench    \n\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}