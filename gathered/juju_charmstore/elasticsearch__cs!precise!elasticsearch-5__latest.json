{
  "name": "elasticsearch Juju charm",
  "juju_charm_name": "elasticsearch",
  "revision": "cs:precise/elasticsearch-5",
  "latest": true,
  "uris": [
    "https://jujucharms.com/elasticsearch",
    "https://jujucharms.com/elasticsearch/precise",
    "https://jujucharms.com/elasticsearch/precise/5",
    "https://api.jujucharms.com/v5/elasticsearch",
    "https://api.jujucharms.com/v5/precise/elasticsearch",
    "https://api.jujucharms.com/v5/precise/elasticsearch-5"
  ],
  "labels": [
    "Juju charm",
    "applications",
    "Type/Infrastructure/Operating System/macOS",
    "Type/Middleware/Runtime/Java",
    "Binding/Provider/Amazon/RDS",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Script",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/API",
    "Type/Devopsware/Build/Java/Ant",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Runtime/JavaScript/Node.js",
    "Type/Middleware/Web Server/Apache HTTP Server",
    "Type/Middleware/Data Store/Document-oriented",
    "Type/Middleware/Search/Elasticsearch"
  ],
  "info_url": "https://jujucharms.com/elasticsearch",
  "package_url": "https://api.jujucharms.com/v5/precise/elasticsearch-5/archive",
  "created": "2015-06-17T09:32:17.347Z",
  "updated": "2015-06-17T09:32:17.347Z",
  "description": "Open Source, Distributed, RESTful, Search Engine built on Apache Lucene\n\nElasticSearch is a distributed RESTful search engine built for the cloud. Features include:\n\n- Distributed and Highly Available Search Engine.\n  - Each index is fully sharded with a configurable number of shards.\n  - Each shard can have one or more replicas.\n  - Read / Search operations performed on either one of the replica shard.\n- Multi Tenant with Multi Types.\n  - Support for more than one index.\n  - Support for more than one type per index.\n  - Index level configuration (number of shards, index storage, â€¦).\n- Various set of APIs\n  - HTTP RESTful API\n  - Native Java API.\n  - All APIs perform automatic node operation rerouting.\n- Document oriented\n  - No need for upfront schema definition.\n  - Schema can be defined per type for customization of the indexing process.\n- Reliable, Asynchronous Write Behind for long term persistency.\n- (Near) Real Time Search.\n- Built on top of Lucene\n  - Each shard is a fully functional Lucene index\n  - All the power of Lucene easily exposed through simple configuration / plugins.\n- Per operation consistency\n  - Single document level operations are atomic, consistent, isolated and durable.\n- Open Source under Apache 2 License.\n- Original charm by Luis Arias <luis@balsamiq.com>\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "parameters": {
    "access-key": {
      "type": "string",
      "description": "Access key for EC2.\n",
      "default": "",
      "mapping": "charm_option"
    },
    "bootstrap-class": {
      "type": "string",
      "description": "Class used by elasticsearch service wrapper, should be org.elasticsearch.bootstrap.ElasticSearch for versions\nless than or equal to 0.18.7\n",
      "default": "org.elasticsearch.bootstrap.ElasticSearchF",
      "mapping": "charm_option"
    },
    "bucket-name": {
      "type": "string",
      "description": "This sets the s3 bucket name for the elasticsearch s3 gateway.\n",
      "default": "",
      "mapping": "charm_option"
    },
    "checksum": {
      "type": "string",
      "description": "SHA1 checksum of elasticsearch download.\n",
      "default": "6518b6f90df21e034b20e9a222b780651a6cdcdb",
      "mapping": "charm_option"
    },
    "checksumwrapper": {
      "type": "string",
      "description": "MD5 checksum of elasticsearch service wrapper download.\n",
      "default": "450fcee5225cc4837e8b61eb64bcc2d2",
      "mapping": "charm_option"
    },
    "cluster-name": {
      "type": "string",
      "description": "This sets the elasticsearch cluster name, which is used to discover and auto-join other nodes.\ndon not change this if you want elasticsearch and kibana to work.\n",
      "default": "elasticsearch",
      "mapping": "charm_option"
    },
    "downloadurl": {
      "type": "string",
      "description": "URL to download elasticsearch from.\n",
      "default": "https://download.elasticsearch.org/elasticsearch/elasticsearch",
      "mapping": "charm_option"
    },
    "region": {
      "type": "string",
      "description": "This sets the region that will be used for discovery on ec2\n",
      "default": "us-east",
      "mapping": "charm_option"
    },
    "secret-key": {
      "type": "string",
      "description": "Secret key for EC2.\n",
      "default": "",
      "mapping": "charm_option"
    },
    "version": {
      "type": "string",
      "description": "This sets the elasticsearch version number that will be used.\nIf you're  going to plug in logstash,  make sure versions match.\n",
      "default": "1.1.0",
      "mapping": "charm_option"
    },
    "zenmasters": {
      "type": "string",
      "description": "comma seperated list of masters.   if you run more than one ES nodes\nand your platform doesn't support multicast discovery,  set this to at \nleast the address of the first node.  default 'false' tells it not\nto do anything.   Once you have a master up you  can use\njuju set elasticsearch zenmasters=\"10.0.3.180\" ...   but try and get\nmulticast or ec2 discovery working first ;). \n",
      "default": "false",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/elasticsearch",
      "juju_interface": "elasticsearch",
      "juju_name": "cluster",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/elasticsearch",
      "juju_interface": "elasticsearch",
      "juju_name": "rest",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Running ElasticSearch\n\nTo deploy elasticsearch locally you just need to:\n\n    juju bootstrap\n    juju deploy elasticsearch\n\nYou can add more units ...  LXC can deal with multicast\n  \n    juju add-unit elasticsearch\n\nTo deploy on ec2 you need to specify a config file with your AWS access key and secret key which are used by\nelasticsearch for discovery.  See the elastisearch on ec2 tutorial for more information:\n\nsee \n\n- http://www.elasticsearch.org/tutorials/2011/08/22/elasticsearch-on-ec2.html\n\nFor instance in an elasticsearch.yaml config file you would have:\n\n    elasticsearch:\n      access-key: Your_AWS_Access_Key\n      secret-key: Your_AWS_Secret_Key\n\nYou can also set a region config parameter in this file if the us-east region is not the one you want to use for\ndiscovery.  See the elasticache aws plugin documentation for more information:\n\n- https://github.com/elasticsearch/elasticsearch-cloud-aws\n\n# Configuration Options\n\nThere is an experimental config item 'zenmasters' which should enable unicast clustering.\n\nOnce the unit has started you can test if everything's working by using curl as below to do a health check\nwhich should give you a similar json response.\n\n    curl -XGET 'http://<ec2 dns or ip of a node>:9200/_cluster/health?pretty=true'\n\n    {\n      \"cluster_name\" : \"es-demo\",\n      \"status\" : \"green\",\n      \"timed_out\" : false,\n      \"number_of_nodes\" : 2,\n      \"number_of_data_nodes\" : 2,\n      \"active_primary_shards\" : 5,\n      \"active_shards\" : 10,\n      \"relocating_shards\" : 0,\n      \"initializing_shards\" : 0,\n      \"unassigned_shards\" : 0\n    }\n\nThe download files for the current version are included in the package,  but they can be downloaded by removing the files, or changing the config to point to a different version.\n\nthere seems to be something a bit buggy with the service wrapper on the first unit ...  if it's not start/stopping properly,  get in there and hard kill any java processes then start it again using the service wrapper.   seems to work fine after doing that.\n\nwill relation join with logstash and kibana charms via the cluster and rest relations.\n\nuse http://ip.addr:9200/_plugin/head to see a good status view of the cluster.\n\n\nsee logstash-indexer charm's README.md file for usage examples.\n",
  "readme": "# Running ElasticSearch\n\nTo deploy elasticsearch locally you just need to:\n\n    juju bootstrap\n    juju deploy elasticsearch\n\nYou can add more units ...  LXC can deal with multicast\n  \n    juju add-unit elasticsearch\n\nTo deploy on ec2 you need to specify a config file with your AWS access key and secret key which are used by\nelasticsearch for discovery.  See the elastisearch on ec2 tutorial for more information:\n\nsee \n\n- http://www.elasticsearch.org/tutorials/2011/08/22/elasticsearch-on-ec2.html\n\nFor instance in an elasticsearch.yaml config file you would have:\n\n    elasticsearch:\n      access-key: Your_AWS_Access_Key\n      secret-key: Your_AWS_Secret_Key\n\nYou can also set a region config parameter in this file if the us-east region is not the one you want to use for\ndiscovery.  See the elasticache aws plugin documentation for more information:\n\n- https://github.com/elasticsearch/elasticsearch-cloud-aws\n\n# Configuration Options\n\nThere is an experimental config item 'zenmasters' which should enable unicast clustering.\n\nOnce the unit has started you can test if everything's working by using curl as below to do a health check\nwhich should give you a similar json response.\n\n    curl -XGET 'http://<ec2 dns or ip of a node>:9200/_cluster/health?pretty=true'\n\n    {\n      \"cluster_name\" : \"es-demo\",\n      \"status\" : \"green\",\n      \"timed_out\" : false,\n      \"number_of_nodes\" : 2,\n      \"number_of_data_nodes\" : 2,\n      \"active_primary_shards\" : 5,\n      \"active_shards\" : 10,\n      \"relocating_shards\" : 0,\n      \"initializing_shards\" : 0,\n      \"unassigned_shards\" : 0\n    }\n\nThe download files for the current version are included in the package,  but they can be downloaded by removing the files, or changing the config to point to a different version.\n\nthere seems to be something a bit buggy with the service wrapper on the first unit ...  if it's not start/stopping properly,  get in there and hard kill any java processes then start it again using the service wrapper.   seems to work fine after doing that.\n\nwill relation join with logstash and kibana charms via the cluster and rest relations.\n\nuse http://ip.addr:9200/_plugin/head to see a good status view of the cluster.\n\n\nsee logstash-indexer charm's README.md file for usage examples.\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}