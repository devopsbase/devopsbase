{
  "name": "elasticsearch Juju charm",
  "juju_charm_name": "elasticsearch",
  "revision": "cs:trusty/elasticsearch-6",
  "latest": true,
  "uris": [
    "https://jujucharms.com/elasticsearch",
    "https://jujucharms.com/elasticsearch/trusty",
    "https://jujucharms.com/elasticsearch/trusty/6",
    "https://api.jujucharms.com/v5/elasticsearch",
    "https://api.jujucharms.com/v5/trusty/elasticsearch",
    "https://api.jujucharms.com/v5/trusty/elasticsearch-6"
  ],
  "labels": [
    "Juju charm",
    "misc",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Web Server/Apache HTTP Server",
    "Type/Middleware/Search/Elasticsearch"
  ],
  "info_url": "https://jujucharms.com/elasticsearch",
  "package_url": "https://api.jujucharms.com/v5/trusty/elasticsearch-6/archive",
  "created": "2015-06-17T09:33:08.732Z",
  "updated": "2015-06-17T09:33:08.732Z",
  "description": "Open Source, Distributed, RESTful, Search Engine built on Apache Lucene\n\nDistributed RESTful search and analytics\nRead more at http://www.elasticsearch.org\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "trusty",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= trusty"
    }
  ],
  "parameters": {
    "apt-key-url": {
      "type": "string",
      "description": "The url for the key for the apt-repository.\n",
      "default": "http://packages.elasticsearch.org/GPG-KEY-elasticsearch",
      "mapping": "charm_option"
    },
    "apt-repository": {
      "type": "string",
      "description": "A deb-line for the apt archive which contains the elasticsearch package.\nThis is necessary until elasticsearch gets into the debian/ubuntu archives.\n",
      "default": "deb http://packages.elasticsearch.org/elasticsearch/1.2/debian stable main",
      "mapping": "charm_option"
    },
    "cluster-name": {
      "type": "string",
      "description": "This sets the elasticsearch cluster name.\n",
      "default": "elasticsearch",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/elasticsearch",
      "juju_interface": "elasticsearch",
      "juju_name": "client",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/nrpe-external-master",
      "juju_interface": "nrpe-external-master",
      "juju_name": "nrpe-external-master",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "peer": {
      "Name": "peer",
      "Role": "peer",
      "Interface": "http",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "# Overview\n\nElasticsearch is a flexible and powerful open source, distributed, real-time\nsearch and analytics engine. Architected from the ground up for use in\ndistributed environments where reliability and scalability are must haves,\nElasticsearch gives you the ability to move easily beyond simple full-text\nsearch. Through its robust set of APIs and query DSLs, plus clients for the\nmost popular programming languages, Elasticsearch delivers on the near\nlimitless promises of search technology.\n\nExcerpt from [elasticsearch.org](http://www.elasticsearch.org/overview/ \"Elasticsearch Overview\")\n\n# Usage\n\nYou can simply deploy one node with:\n\n    juju deploy elasticsearch\n\nYou can also deploy and relate the Kibana dashboard:\n\n    juju deploy kibana\n    juju add-relation kibana elasticsearch\n    juju expose kibana\n\nThis will expose the Kibana web UI, which will then act as a front end to\nall subsequent Elasticsearch units.\n\n## Scale Out Usage\n\nDeploy three or more units with:\n\n    juju deploy -n3 elasticsearch\n\nAnd when they have started you can inspect the cluster health:\n\n    juju run --unit elasticsearch/0 \"curl http://localhost:9200/_cat/health?v\"\n    epoch      timestamp cluster       status node.total node.data shards ...\n    1404728290 10:18:10  elasticsearch green           2         2      0\n\nSee the separate HACKING.md for information about deploying this charm\nfrom a local repository.\n\n### Relating to the Elasticsearch cluster\n\nThis charm currently provides the elasticsearch client interface to the\nconsuming service (cluster-name, host and port). Normally the other service\nwill only need this data from one elasticsearch unit to start as most client\nlibraries then query for the list of backends [1].\n\n[1] http://elasticsearch-py.readthedocs.org/en/latest/api.html#elasticsearch\n\n### Discovery\n\nThis charm uses unicast discovery which utilises the orchestration\nof juju so that whether you deploy on ec2, lxc or any other cloud\nprovider, the functionality for discovering other nodes remains the same.\n\nWhen a new unit first joins the cluster, it will update its config\nwith the other units in the cluster (via the peer-relation-joined\nhook), after which ElasticSearch handles the rest.\n\n# Configuration\n\n## Downloading ElasticSearch\n\nThis charm installs elasticsearch from a configured apt repository.\nBy default, this is the 1.0 repository from elasticsearch.org, but\nyou can configure your own internal repo if you don't want your\ndeployment to be dependent on external resources.\n\nAlternatively, you can include a files/elasticsearch.deb in the\ncharm payload and it will be installed instead.\n\n# Contact Information\n\n## Elasticsearch\n\n- [Elasticsearch website](http://www.elasticsearch.org/)\n- [Source code](http://github.com/elasticsearch)\n- [Mailing List](https://groups.google.com/forum/?fromgroups#!forum/elasticsearch)\n- [Other community resources](http://www.elasticsearch.org/community/)\n",
  "readme": "# Overview\n\nElasticsearch is a flexible and powerful open source, distributed, real-time\nsearch and analytics engine. Architected from the ground up for use in\ndistributed environments where reliability and scalability are must haves,\nElasticsearch gives you the ability to move easily beyond simple full-text\nsearch. Through its robust set of APIs and query DSLs, plus clients for the\nmost popular programming languages, Elasticsearch delivers on the near\nlimitless promises of search technology.\n\nExcerpt from [elasticsearch.org](http://www.elasticsearch.org/overview/ \"Elasticsearch Overview\")\n\n# Usage\n\nYou can simply deploy one node with:\n\n    juju deploy elasticsearch\n\nYou can also deploy and relate the Kibana dashboard:\n\n    juju deploy kibana\n    juju add-relation kibana elasticsearch\n    juju expose kibana\n\nThis will expose the Kibana web UI, which will then act as a front end to\nall subsequent Elasticsearch units.\n\n## Scale Out Usage\n\nDeploy three or more units with:\n\n    juju deploy -n3 elasticsearch\n\nAnd when they have started you can inspect the cluster health:\n\n    juju run --unit elasticsearch/0 \"curl http://localhost:9200/_cat/health?v\"\n    epoch      timestamp cluster       status node.total node.data shards ...\n    1404728290 10:18:10  elasticsearch green           2         2      0\n\nSee the separate HACKING.md for information about deploying this charm\nfrom a local repository.\n\n### Relating to the Elasticsearch cluster\n\nThis charm currently provides the elasticsearch client interface to the\nconsuming service (cluster-name, host and port). Normally the other service\nwill only need this data from one elasticsearch unit to start as most client\nlibraries then query for the list of backends [1].\n\n[1] http://elasticsearch-py.readthedocs.org/en/latest/api.html#elasticsearch\n\n### Discovery\n\nThis charm uses unicast discovery which utilises the orchestration\nof juju so that whether you deploy on ec2, lxc or any other cloud\nprovider, the functionality for discovering other nodes remains the same.\n\nWhen a new unit first joins the cluster, it will update its config\nwith the other units in the cluster (via the peer-relation-joined\nhook), after which ElasticSearch handles the rest.\n\n# Configuration\n\n## Downloading ElasticSearch\n\nThis charm installs elasticsearch from a configured apt repository.\nBy default, this is the 1.0 repository from elasticsearch.org, but\nyou can configure your own internal repo if you don't want your\ndeployment to be dependent on external resources.\n\nAlternatively, you can include a files/elasticsearch.deb in the\ncharm payload and it will be installed instead.\n\n# Contact Information\n\n## Elasticsearch\n\n- [Elasticsearch website](http://www.elasticsearch.org/)\n- [Source code](http://github.com/elasticsearch)\n- [Mailing List](https://groups.google.com/forum/?fromgroups#!forum/elasticsearch)\n- [Other community resources](http://www.elasticsearch.org/community/)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}