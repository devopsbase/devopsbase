{
  "name": "hive Juju charm",
  "juju_charm_name": "hive",
  "revision": "cs:precise/hive-5",
  "latest": true,
  "uris": [
    "https://jujucharms.com/hive",
    "https://jujucharms.com/hive/precise",
    "https://jujucharms.com/hive/precise/5",
    "https://api.jujucharms.com/v5/hive",
    "https://api.jujucharms.com/v5/precise/hive",
    "https://api.jujucharms.com/v5/precise/hive-5"
  ],
  "labels": [
    "Juju charm",
    "databases",
    "Binding/Region/North America/US",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Infrastructure",
    "Type/Middleware/Data Store",
    "Type/Middleware/Data Processing/Hadoop/Hive"
  ],
  "info_url": "https://jujucharms.com/hive",
  "package_url": "https://api.jujucharms.com/v5/precise/hive-5/archive",
  "created": "2015-06-17T09:34:58.39Z",
  "updated": "2015-06-17T09:34:58.39Z",
  "description": "Data warehouse infrastructure built on top of Hadoop\n\nData warehouse infrastructure built on top of Hadoop\n.\nHive is a data warehouse infrastructure built on top of Hadoop that\nprovides tools to enable easy data summarization, adhoc querying and\nanalysis of large datasets data stored in Hadoop files. It provides a\nmechanism to put structure on this data and it also provides a simple\nquery language called Hive QL which is based on SQL and which enables\nusers familiar with SQL to query this data. At the same time, this\nlanguage also allows traditional map/reduce programmers to be able to\nplug in their custom mappers and reducers to do more sophisticated\nanalysis which may not be supported by the built-in capabilities of\nthe language.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mysql",
      "self_resolve": true,
      "juju_interface": "mysql",
      "juju_name": "db",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mapred",
      "self_resolve": true,
      "juju_interface": "mapred",
      "juju_name": "jobtracker",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/hive",
      "self_resolve": true,
      "juju_interface": "hive",
      "juju_name": "metastore",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/dfs",
      "self_resolve": true,
      "juju_interface": "dfs",
      "juju_name": "namenode",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "heap": {
      "type": "int",
      "description": "The maximum heap size in MB to allocate for daemons processes within the\nservice units managed by this charm.\n",
      "default": 1024,
      "mapping": "charm_option"
    },
    "source": {
      "type": "string",
      "description": "Location and packages to install hive:\n.\n * dev:     Install using the hive packages from\n            ppa:hadoop-ubuntu/dev.\n * testing: Install using the hive packages from\n            ppa:hadoop-ubuntu/testing.\n * stable:  Install using the hive packages from\n            ppa:hadoop-ubuntu/stable.\n.\nThe packages provided in the hadoop-ubuntu team PPA's are based\ndirectly on upstream hive releases but are not fully built from\nsource.\n",
      "default": "stable",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/hive",
      "juju_interface": "hive",
      "juju_name": "server",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Overview\n\nData warehouse infrastructure built on top of Hadoop.\n \nHive is a data warehouse infrastructure built on top of Hadoop that\nprovides tools to enable easy data summarization, adhoc querying and\nanalysis of large datasets data stored in Hadoop files. It provides a\nmechanism to put structure on this data and it also provides a simple\nquery language called Hive QL which is based on SQL and which enables\nusers familiar with SQL to query this data. At the same time, this\nlanguage also allows traditional map/reduce programmers to be able to\nplug in their custom mappers and reducers to do more sophisticated\nanalysis which may not be supported by the built-in capabilities of\nthe language.\n\nHive provides:\n\n- HiveQL - An SQL dialect language for querying data in a RDBMS fashion\n- UDF/UDAF/UDTF (User Defined [Aggregate/Table] Functions) - Allows user to\n  create custom Map/Reduce based functions for regular use\n- Ability to do joins (inner/outer/semi) between tables\n- Support (limited) for sub-queries\n- Support for table 'Views'\n- Ability to partition data into Hive partitions or buckets to enable faster\n  querying\n- Hive Web Interface - A web interface to Hive\n- Hive Server - Supports querying using Thrift, JDBC and ODBC clients\n- Hive Metastore - Ability to run a separate Metadata storage process\n-* Hive cli - A Hive commandline that supports HiveQL\n\nSee [http://hive.apache.org]http://hive.apache.org) for more information.\n\nThis charm provides the Hive Server and Metastore roles which form part of an\noverall Hive deployment.\n\n## Usage\n\n\nA Hive deployment consists of a Hive service, a RDBMS (only MySQL is currently\nsupported), an optional Metastore service and a Hadoop cluster.\n\nTo deploy a simple four node Hadoop cluster (see Hadoop charm README for further\ninformation)::\n\n    juju deploy hadoop hadoop-master\n    juju deploy hadoop hadoop-slavecluster\n    juju add-unit -n 2 hadoop-slavecluster\n    juju add-relation hadoop-master:namenode hadoop-slavecluster:datanode\n    juju add-relation hadoop-master:jobtracker hadoop-slavecluster:tasktracker\n\nA Hive server stores metadata in MySQL::\n\n    juju deploy mysql\n    # hive requires ROW binlog\n    juju set mysql binlog-format=ROW\n\nTo deploy a Hive service without a Metastore service::\n\n    # deploy Hive instance\n    juju deploy hive hive-server\n    # associate Hive with MySQL\n    juju add-relation hive-server:db mysql:db\n\n    # associate Hive with HDFS Namenode\n    juju add-relation hive-server:namenode hadoop-master:namenode\n    # associate Hive with Jobtracker\n    juju add-relation hive-server:jobtracker hadoop-master:jobtracker\n\nTo deploy a Hive service with a Metastore service::\n\n    # deploy Metastore instance\n    juju deploy hive hive-metastore\n    # associate Metastore with MySQL\n    juju add-relation hive-metastore:db mysql:db\n\n    # associate Metastore with Namenode\n    juju add-relation hive-metastore:namenode hadoop-master:namenode\n\n    # deploy Hive instance\n    juju deploy hive hive-server\n    # associate Hive with Metastore\n    juju add-relation hive-server:server hive-metastore:metastore\n    # associate Hive with Namenode\n    juju add-relation hive-server:namenode hadoop-master:namenode\n    # associate Hive with Jobtracker\n    juju add-relation hive-server:jobtracker hadoop-master:jobtracker\n\nFurther Hive service units may be deployed::\n\n    juju add-unit hive-server\n\nThis currently only works when using a Metastore service.\n",
  "readme": "# Overview\n\nData warehouse infrastructure built on top of Hadoop.\n \nHive is a data warehouse infrastructure built on top of Hadoop that\nprovides tools to enable easy data summarization, adhoc querying and\nanalysis of large datasets data stored in Hadoop files. It provides a\nmechanism to put structure on this data and it also provides a simple\nquery language called Hive QL which is based on SQL and which enables\nusers familiar with SQL to query this data. At the same time, this\nlanguage also allows traditional map/reduce programmers to be able to\nplug in their custom mappers and reducers to do more sophisticated\nanalysis which may not be supported by the built-in capabilities of\nthe language.\n\nHive provides:\n\n- HiveQL - An SQL dialect language for querying data in a RDBMS fashion\n- UDF/UDAF/UDTF (User Defined [Aggregate/Table] Functions) - Allows user to\n  create custom Map/Reduce based functions for regular use\n- Ability to do joins (inner/outer/semi) between tables\n- Support (limited) for sub-queries\n- Support for table 'Views'\n- Ability to partition data into Hive partitions or buckets to enable faster\n  querying\n- Hive Web Interface - A web interface to Hive\n- Hive Server - Supports querying using Thrift, JDBC and ODBC clients\n- Hive Metastore - Ability to run a separate Metadata storage process\n-* Hive cli - A Hive commandline that supports HiveQL\n\nSee [http://hive.apache.org]http://hive.apache.org) for more information.\n\nThis charm provides the Hive Server and Metastore roles which form part of an\noverall Hive deployment.\n\n## Usage\n\n\nA Hive deployment consists of a Hive service, a RDBMS (only MySQL is currently\nsupported), an optional Metastore service and a Hadoop cluster.\n\nTo deploy a simple four node Hadoop cluster (see Hadoop charm README for further\ninformation)::\n\n    juju deploy hadoop hadoop-master\n    juju deploy hadoop hadoop-slavecluster\n    juju add-unit -n 2 hadoop-slavecluster\n    juju add-relation hadoop-master:namenode hadoop-slavecluster:datanode\n    juju add-relation hadoop-master:jobtracker hadoop-slavecluster:tasktracker\n\nA Hive server stores metadata in MySQL::\n\n    juju deploy mysql\n    # hive requires ROW binlog\n    juju set mysql binlog-format=ROW\n\nTo deploy a Hive service without a Metastore service::\n\n    # deploy Hive instance\n    juju deploy hive hive-server\n    # associate Hive with MySQL\n    juju add-relation hive-server:db mysql:db\n\n    # associate Hive with HDFS Namenode\n    juju add-relation hive-server:namenode hadoop-master:namenode\n    # associate Hive with Jobtracker\n    juju add-relation hive-server:jobtracker hadoop-master:jobtracker\n\nTo deploy a Hive service with a Metastore service::\n\n    # deploy Metastore instance\n    juju deploy hive hive-metastore\n    # associate Metastore with MySQL\n    juju add-relation hive-metastore:db mysql:db\n\n    # associate Metastore with Namenode\n    juju add-relation hive-metastore:namenode hadoop-master:namenode\n\n    # deploy Hive instance\n    juju deploy hive hive-server\n    # associate Hive with Metastore\n    juju add-relation hive-server:server hive-metastore:metastore\n    # associate Hive with Namenode\n    juju add-relation hive-server:namenode hadoop-master:namenode\n    # associate Hive with Jobtracker\n    juju add-relation hive-server:jobtracker hadoop-master:jobtracker\n\nFurther Hive service units may be deployed::\n\n    juju add-unit hive-server\n\nThis currently only works when using a Metastore service.\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}