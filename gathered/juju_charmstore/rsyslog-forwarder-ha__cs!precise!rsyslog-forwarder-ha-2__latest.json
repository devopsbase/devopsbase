{
  "name": "rsyslog-forwarder-ha Juju charm",
  "juju_charm_name": "rsyslog-forwarder-ha",
  "revision": "cs:precise/rsyslog-forwarder-ha-2",
  "latest": true,
  "uris": [
    "https://jujucharms.com/rsyslog-forwarder-ha",
    "https://jujucharms.com/rsyslog-forwarder-ha/precise",
    "https://jujucharms.com/rsyslog-forwarder-ha/precise/2",
    "https://api.jujucharms.com/v5/rsyslog-forwarder-ha",
    "https://api.jujucharms.com/v5/precise/rsyslog-forwarder-ha",
    "https://api.jujucharms.com/v5/precise/rsyslog-forwarder-ha-2"
  ],
  "labels": [
    "Juju charm",
    "system",
    "Binding/Provider/Amazon/RDS",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Logging"
  ],
  "info_url": "https://jujucharms.com/rsyslog-forwarder-ha",
  "package_url": "https://api.jujucharms.com/v5/precise/rsyslog-forwarder-ha-2/archive",
  "created": "2015-06-17T09:33:05.136Z",
  "updated": "2015-06-17T09:33:05.136Z",
  "description": "forwards local syslog to multiple remote syslog servers.\n\nUses rsyslogs facilities to forward to multiple remote syslog servers.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": true,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/juju-info",
      "self_resolve": true,
      "juju_interface": "juju-info",
      "juju_name": "juju-info",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/syslog",
      "self_resolve": true,
      "juju_interface": "syslog",
      "juju_name": "syslog",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "log-locally": {
      "type": "boolean",
      "description": "Should logs be written locally as well as forwarded?",
      "default": false,
      "mapping": "charm_option"
    },
    "replication-mode": {
      "type": "string",
      "description": "Possible options are 'fanout' or 'failover' fanout replicates the log messages over all the defined syslog relations, failover replicates the log messages just if the previous server is down.",
      "default": "fanout",
      "mapping": "charm_option"
    }
  },
  "license": "# General\n\nThis Charm provides support for adding a [rsyslog](http://www.rsyslog.org) forwarder listener to any service.\nIn addition, this charm allows to have multiple rsyslog aggregators servers using two different replication\nmodes ( fanout, failover ).\n\nBy default the 'fanout' replication mode is going to be used, which means that all the\nsyslog messages will be forwarder to any aggregator server using UDP port 514.\n\nFailover mode will forward all the syslog messages to the primary rsyslog server and\nin case of failure will use the secondary rsyslog server.\n\nIn you want to choose to failover mode, this will require that your current\nrsyslog server is binded to TCP port 514.\n\n# Usage method\n\nThis is a subordinate charm, which means it requires to have a service to hook in. On this\nexample we are going to deploy mysql\n\n    juju deploy mysql\n\nThen you must deploy this charm\n\n    juju deploy rsyslog-forwarder-ha\n\nOnce your service is running, you can relate this charm:\n\n    juju add-relation rsyslog-forwarder-ha mysql\n\nThen you can deploy your rsyslog aggregators servers:\n\n    juju deploy rsyslog primary\n    juju deploy rsyslog secondary\n\nOnce your rsyslog aggregators are ready, you can relate them with your forwarder.\n\n    juju add-relation rsyslog-forwarder-ha primary\n    juju add-relation rsyslog-forwarder-ha secondary\n\n\nOnce you have your rsyslog ports opened. You can change the replication-mode variable\non your rsyslog-forwarder-ha charm.\n\n    juju set rsyslog-forwarder-ha replication-mode=\"failover\"\n\n# Contact Information\n\n    Mantainer: jorge.niedbalski@canonical.com\n",
  "readme": "# General\n\nThis Charm provides support for adding a [rsyslog](http://www.rsyslog.org) forwarder listener to any service.\nIn addition, this charm allows to have multiple rsyslog aggregators servers using two different replication\nmodes ( fanout, failover ).\n\nBy default the 'fanout' replication mode is going to be used, which means that all the\nsyslog messages will be forwarder to any aggregator server using UDP port 514.\n\nFailover mode will forward all the syslog messages to the primary rsyslog server and\nin case of failure will use the secondary rsyslog server.\n\nIn you want to choose to failover mode, this will require that your current\nrsyslog server is binded to TCP port 514.\n\n# Usage method\n\nThis is a subordinate charm, which means it requires to have a service to hook in. On this\nexample we are going to deploy mysql\n\n    juju deploy mysql\n\nThen you must deploy this charm\n\n    juju deploy rsyslog-forwarder-ha\n\nOnce your service is running, you can relate this charm:\n\n    juju add-relation rsyslog-forwarder-ha mysql\n\nThen you can deploy your rsyslog aggregators servers:\n\n    juju deploy rsyslog primary\n    juju deploy rsyslog secondary\n\nOnce your rsyslog aggregators are ready, you can relate them with your forwarder.\n\n    juju add-relation rsyslog-forwarder-ha primary\n    juju add-relation rsyslog-forwarder-ha secondary\n\n\nOnce you have your rsyslog ports opened. You can change the replication-mode variable\non your rsyslog-forwarder-ha charm.\n\n    juju set rsyslog-forwarder-ha replication-mode=\"failover\"\n\n# Contact Information\n\n    Mantainer: jorge.niedbalski@canonical.com\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}