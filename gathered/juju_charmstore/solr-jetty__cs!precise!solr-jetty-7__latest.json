{
  "name": "solr-jetty Juju charm",
  "juju_charm_name": "solr-jetty",
  "revision": "cs:precise/solr-jetty-7",
  "latest": true,
  "uris": [
    "https://jujucharms.com/solr-jetty",
    "https://jujucharms.com/solr-jetty/precise",
    "https://jujucharms.com/solr-jetty/precise/7",
    "https://api.jujucharms.com/v5/solr-jetty",
    "https://api.jujucharms.com/v5/precise/solr-jetty",
    "https://api.jujucharms.com/v5/precise/solr-jetty-7"
  ],
  "labels": [
    "Juju charm",
    "application_development",
    "Type/Middleware/Runtime/Java",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/API/Toolkit",
    "Type/Devopsware/Integration",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Application Server/Jetty",
    "Type/Middleware/Application Server/Tomcat",
    "Type/Middleware/Cache",
    "Type/Middleware/Search/Solr"
  ],
  "info_url": "https://jujucharms.com/solr-jetty",
  "package_url": "https://api.jujucharms.com/v5/precise/solr-jetty-7/archive",
  "created": "2015-06-17T09:31:14.637Z",
  "updated": "2015-06-17T09:31:14.637Z",
  "description": "enterprise search server based on Lucene - Jetty integration\n\nSolr is an open source enterprise search server based on the Lucene Java\nsearch library, with XML/HTTP and JSON APIs, hit highlighting, faceted\nsearch, caching, replication, and a web administration interface. It\nruns in a Java servlet container such as Tomcat.  This package\nprovides the Jetty integration files for Solr.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "parameters": {
    "acceptors": {
      "type": "int",
      "description": "The number of threads dedicated to accepting incoming connections. \n",
      "default": null,
      "mapping": "charm_option"
    },
    "check_regex": {
      "type": "string",
      "description": "Health check regex on output from check_url",
      "default": "",
      "mapping": "charm_option"
    },
    "check_url": {
      "type": "string",
      "description": "Health check URL",
      "default": "",
      "mapping": "charm_option"
    },
    "instance_type": {
      "type": "string",
      "description": "Instance type. Used by nrpe-external-master. i.e. production or staging",
      "default": "production",
      "mapping": "charm_option"
    },
    "java-max-heap-mb": {
      "type": "int",
      "description": "Java options Max heap size (-Xmx)\n",
      "default": null,
      "mapping": "charm_option"
    },
    "java-min-heap-mb": {
      "type": "int",
      "description": "Java options min heap size (-Xms)\n",
      "default": null,
      "mapping": "charm_option"
    },
    "nagios_context": {
      "type": "string",
      "description": "Staging or Production. Used by nrpe-external-master.",
      "default": "",
      "mapping": "charm_option"
    },
    "nagios_service_group": {
      "type": "string",
      "description": "Name of nagios service group. Used by nrpe-external-master.",
      "default": "",
      "mapping": "charm_option"
    },
    "schema": {
      "type": "string",
      "description": "Solr XML schema (base64 encoded).\n",
      "default": null,
      "mapping": "charm_option"
    },
    "volume-ephemeral": {
      "type": "boolean",
      "description": "If false, the /var/lib/solr will be symlinked to persistent storage. A \n   configure-error state will be raised if\n   volume-map[$JUJU_UNIT_NAME] is not set (see \"volume-map\"\n   below).\nIf true, solr-jetty will run from its default directory /var/lib/solr/.\n   All data will be destroyed with the instance.\nNote volumes require charmsupport to be installed\n",
      "default": true,
      "mapping": "charm_option"
    },
    "volume-map": {
      "type": "string",
      "description": "YAML map as e.g. \"{ solr-jetty/0: /dev/vdb, solr-jetty/1: /dev/vdb}\". Service units will raise a configure-error if volume-persistent is 'true' and no volume-map value is set. Use 'juju set' to set a value and 'juju resolved' to complete configuration.\n",
      "default": "{}",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/nrpe-external-master",
      "juju_interface": "nrpe-external-master",
      "juju_name": "nrpe-external-master",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "website",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "Juju charm solr-jetty\n=====================\n\nSolr is an open source enterprise search server based on the Lucene Java\nsearch library, with XML/HTTP and JSON APIs, hit highlighting, faceted\nsearch, caching, replication, and a web administration interface. This\ncharm deploys Solr in the Java servlet container Jetty.\n\nThis charm is designed to be deployed as the backend to a second charm,\nits interface should not be exposed directly as there are no controls over\nwho can update the stored data.\n\nHow to deploy the charm\n--------------------------\njuju deploy solr-jetty \n\nHow to configure the charm\n--------------------------\n# Load custom solr schema\njuju set solr-jetty \"schema=$(base64 < my-schema.xml)\"\n\n# Set number of Jetty acceptors\njuju set solr-jetty \"acceptors=20\"\n\n# Explicitly set JVM min heap and max heap size\njuju set solr-jetty java-min-heap-mb=256 java-max-heap-mb=512\n\n# Loading the example mem.xml from apache-solr-1.4.1.tgz\ncurl http://<ip>:8080/solr/update --data-binary @mem.xml -H 'Content-type:text/xml; charset=utf-8'\ncurl http://<ip>:8080/solr/update --data-binary '<commit/>' -H 'Content-type:text/xml; charset=utf-8'\n\n# ... and querying it\ncurl http://<ip>:8080/solr/select?q=memory\n\nExample:\n--------------------------\n# Define schema\necho '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<schema name=\"example\" version=\"1.2\">\n    <types>\n        <fieldType name=\"string\" class=\"solr.StrField\" sortMissingLast=\"true\" omitNorms=\"true\"/>\n        <fieldType name=\"textgen\" class=\"solr.TextField\" positionIncrementGap=\"100\">\n            <analyzer>\n                <charFilter class=\"solr.MappingCharFilterFactory\" mapping=\"mapping-ISOLatin1Accent.txt\"/>\n                <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>\n                <filter class=\"solr.WordDelimiterFilterFactory\" generateWordParts=\"1\"\n                    generateNumberParts=\"1\" catenateWords=\"1\" catenateNumbers=\"1\"\n                    catenateAll=\"0\" splitOnCaseChange=\"0\"/>\n                <filter class=\"solr.LowerCaseFilterFactory\"/>\n                <filter class=\"solr.PorterStemFilterFactory\"/>\n            </analyzer>\n        </fieldType>\n    </types>\n\n\n    <fields>\n        <field name=\"id\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"true\" /> \n        <field name=\"name\" type=\"string\" indexed=\"true\" stored=\"true\"/>\n        <field name=\"description\" type=\"textgen\" indexed=\"true\" stored=\"true\" default=\"\" /> \n    </fields>\n\n    <uniqueKey>id</uniqueKey>\n    <defaultSearchField>description</defaultSearchField>\n</schema>' > snack-schema.xml\n\n# Load schema\njuju set solr-jetty \"schema=$(base64 < snack-schema.xml)\"\n\n# Define data\necho '<add>\n<doc>\n  <field name=\"id\">1</field>\n  <field name=\"name\">Chococapers</field>\n  <field name=\"description\">Delicious caper flavoured chocolate snack</field>\n</doc>\n<doc>\n  <field name=\"id\">2</field>\n  <field name=\"name\">Chillimilk</field>\n  <field name=\"description\">All the goodness of milk with a chilli twist</field>\n</doc>\n<doc>\n  <field name=\"id\">3</field>\n  <field name=\"name\">Caperyogurt</field>\n  <field name=\"description\">Thick yogurt infused with caper goodness </field>\n</doc>\n</add>' > snack-data.xml\n\n# Loading the snack data\ncurl http://<ip>:8080/solr/update --data-binary @snack-data.xml -H 'Content-type:text/xml; charset=utf-8'\ncurl http://<ip>:8080/solr/update --data-binary '<commit/>' -H 'Content-type:text/xml; charset=utf-8'\n\n# You're craving capers but what snack will satisfy you?\ncurl 'http://<ip>:8080/solr/select?q=caper'\n",
  "readme": "Juju charm solr-jetty\n=====================\n\nSolr is an open source enterprise search server based on the Lucene Java\nsearch library, with XML/HTTP and JSON APIs, hit highlighting, faceted\nsearch, caching, replication, and a web administration interface. This\ncharm deploys Solr in the Java servlet container Jetty.\n\nThis charm is designed to be deployed as the backend to a second charm,\nits interface should not be exposed directly as there are no controls over\nwho can update the stored data.\n\nHow to deploy the charm\n--------------------------\njuju deploy solr-jetty \n\nHow to configure the charm\n--------------------------\n# Load custom solr schema\njuju set solr-jetty \"schema=$(base64 < my-schema.xml)\"\n\n# Set number of Jetty acceptors\njuju set solr-jetty \"acceptors=20\"\n\n# Explicitly set JVM min heap and max heap size\njuju set solr-jetty java-min-heap-mb=256 java-max-heap-mb=512\n\n# Loading the example mem.xml from apache-solr-1.4.1.tgz\ncurl http://<ip>:8080/solr/update --data-binary @mem.xml -H 'Content-type:text/xml; charset=utf-8'\ncurl http://<ip>:8080/solr/update --data-binary '<commit/>' -H 'Content-type:text/xml; charset=utf-8'\n\n# ... and querying it\ncurl http://<ip>:8080/solr/select?q=memory\n\nExample:\n--------------------------\n# Define schema\necho '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<schema name=\"example\" version=\"1.2\">\n    <types>\n        <fieldType name=\"string\" class=\"solr.StrField\" sortMissingLast=\"true\" omitNorms=\"true\"/>\n        <fieldType name=\"textgen\" class=\"solr.TextField\" positionIncrementGap=\"100\">\n            <analyzer>\n                <charFilter class=\"solr.MappingCharFilterFactory\" mapping=\"mapping-ISOLatin1Accent.txt\"/>\n                <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>\n                <filter class=\"solr.WordDelimiterFilterFactory\" generateWordParts=\"1\"\n                    generateNumberParts=\"1\" catenateWords=\"1\" catenateNumbers=\"1\"\n                    catenateAll=\"0\" splitOnCaseChange=\"0\"/>\n                <filter class=\"solr.LowerCaseFilterFactory\"/>\n                <filter class=\"solr.PorterStemFilterFactory\"/>\n            </analyzer>\n        </fieldType>\n    </types>\n\n\n    <fields>\n        <field name=\"id\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"true\" /> \n        <field name=\"name\" type=\"string\" indexed=\"true\" stored=\"true\"/>\n        <field name=\"description\" type=\"textgen\" indexed=\"true\" stored=\"true\" default=\"\" /> \n    </fields>\n\n    <uniqueKey>id</uniqueKey>\n    <defaultSearchField>description</defaultSearchField>\n</schema>' > snack-schema.xml\n\n# Load schema\njuju set solr-jetty \"schema=$(base64 < snack-schema.xml)\"\n\n# Define data\necho '<add>\n<doc>\n  <field name=\"id\">1</field>\n  <field name=\"name\">Chococapers</field>\n  <field name=\"description\">Delicious caper flavoured chocolate snack</field>\n</doc>\n<doc>\n  <field name=\"id\">2</field>\n  <field name=\"name\">Chillimilk</field>\n  <field name=\"description\">All the goodness of milk with a chilli twist</field>\n</doc>\n<doc>\n  <field name=\"id\">3</field>\n  <field name=\"name\">Caperyogurt</field>\n  <field name=\"description\">Thick yogurt infused with caper goodness </field>\n</doc>\n</add>' > snack-data.xml\n\n# Loading the snack data\ncurl http://<ip>:8080/solr/update --data-binary @snack-data.xml -H 'Content-type:text/xml; charset=utf-8'\ncurl http://<ip>:8080/solr/update --data-binary '<commit/>' -H 'Content-type:text/xml; charset=utf-8'\n\n# You're craving capers but what snack will satisfy you?\ncurl 'http://<ip>:8080/solr/select?q=caper'\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}