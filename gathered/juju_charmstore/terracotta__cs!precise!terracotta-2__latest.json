{
  "name": "terracotta Juju charm",
  "juju_charm_name": "terracotta",
  "revision": "cs:precise/terracotta-2",
  "latest": true,
  "uris": [
    "https://jujucharms.com/terracotta",
    "https://jujucharms.com/terracotta/precise",
    "https://jujucharms.com/terracotta/precise/2",
    "https://api.jujucharms.com/v5/terracotta",
    "https://api.jujucharms.com/v5/precise/terracotta",
    "https://api.jujucharms.com/v5/precise/terracotta-2"
  ],
  "labels": [
    "Juju charm",
    "applications",
    "Type/Middleware/Runtime/Java",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/API/Toolkit",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Orchestration/Cluster-based",
    "Type/Middleware/Data Store",
    "Type/Middleware/Cache"
  ],
  "info_url": "https://jujucharms.com/terracotta",
  "package_url": "https://api.jujucharms.com/v5/precise/terracotta-2/archive",
  "created": "2015-06-17T09:33:54.281Z",
  "updated": "2015-06-17T09:33:54.281Z",
  "description": "Distributed HA caching/storage platform for Java\n\nDistributed HA caching/storage platform for Java.\n.\nTerracotta provides out of the box clustering for a number of well known Java   \nframeworks, including EHCache, Hibernate and Quartz as well as clustering       \nfor J2EE containers.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "parameters": {
    "dist-md5": {
      "type": "string",
      "description": "MD5 distribution hash.\n",
      "default": "92c6456f1641b7662b4dedec15eaf3f4",
      "mapping": "charm_option"
    },
    "dist-url": {
      "type": "string",
      "description": "Distribution URL.\n",
      "default": "http://d2zwv9pap9ylyd.cloudfront.net/terracotta-3.6.2.tar.gz",
      "mapping": "charm_option"
    },
    "java-opts": {
      "type": "string",
      "description": "Java options for Terracotta JVM.\n",
      "default": "-Xms1024M -Xmx1024M",
      "mapping": "charm_option"
    },
    "persistent-storage": {
      "type": "boolean",
      "description": "Use persistent, disk backed storage, or temporary storage.\n",
      "default": true,
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/terracotta",
      "juju_interface": "terracotta",
      "juju_name": "dso",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "server-array": {
      "Name": "server-array",
      "Role": "peer",
      "Interface": "terracotta-server",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "# Overview\n\nDistributed HA caching/storage platform for Java.\n\nTerracotta provides out of the box clustering for a number of well known Java\nframeworks, including EHCache, Hibernate and Quartz as well as clustering\nfor J2EE containers.\n\nThe Open Source version of Terracotta allows for one active server and multiple\nhot standby servers. Mirror groups, authentication and other features require\na paid license and are not currently supported by this charm.\n \n# Usage\n\nTo deploy a Terracotta service:\n\n    juju deploy terracotta\n\nThen, expose the service, so you can access it from outside:\n\n    juju expose terracotta\n\nAdd one or more hot standby units:\n\n    juju add-unit terracotta\n\nUnits within a service will automatically configure themselves to have one\nactive server and one or more hot standby servers.\n\nThe Terracotta Developer Console can be used to view performance metrics\namongst other monitoring tools. Download and extract the [Terracotta Open Source\ntarball](http://www.terracotta.org/downloads/open-source) and run\n'bin/dev-console.sh'. Specify one of your units as the host and port 9520.\nFor cloud based deployments, you can use a port forwarded ssh tunnel if you add\nthe internal IP of the unit as an alias for localhost in your '/etc/hosts' file.\n\n# Contact Information\n\n## Terracotta\n\n - [Terracotta website](http://terracotta.org/)\n - [Terracotta bug tracker](https://jira.terracotta.org)\n",
  "readme": "# Overview\n\nDistributed HA caching/storage platform for Java.\n\nTerracotta provides out of the box clustering for a number of well known Java\nframeworks, including EHCache, Hibernate and Quartz as well as clustering\nfor J2EE containers.\n\nThe Open Source version of Terracotta allows for one active server and multiple\nhot standby servers. Mirror groups, authentication and other features require\na paid license and are not currently supported by this charm.\n \n# Usage\n\nTo deploy a Terracotta service:\n\n    juju deploy terracotta\n\nThen, expose the service, so you can access it from outside:\n\n    juju expose terracotta\n\nAdd one or more hot standby units:\n\n    juju add-unit terracotta\n\nUnits within a service will automatically configure themselves to have one\nactive server and one or more hot standby servers.\n\nThe Terracotta Developer Console can be used to view performance metrics\namongst other monitoring tools. Download and extract the [Terracotta Open Source\ntarball](http://www.terracotta.org/downloads/open-source) and run\n'bin/dev-console.sh'. Specify one of your units as the host and port 9520.\nFor cloud based deployments, you can use a port forwarded ssh tunnel if you add\nthe internal IP of the unit as an alias for localhost in your '/etc/hosts' file.\n\n# Contact Information\n\n## Terracotta\n\n - [Terracotta website](http://terracotta.org/)\n - [Terracotta bug tracker](https://jira.terracotta.org)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}