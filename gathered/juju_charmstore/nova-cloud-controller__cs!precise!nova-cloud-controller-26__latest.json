{
  "name": "nova-cloud-controller Juju charm",
  "juju_charm_name": "nova-cloud-controller",
  "revision": "cs:precise/nova-cloud-controller-26",
  "latest": true,
  "uris": [
    "https://jujucharms.com/nova-cloud-controller",
    "https://jujucharms.com/nova-cloud-controller/precise",
    "https://jujucharms.com/nova-cloud-controller/precise/26",
    "https://api.jujucharms.com/v5/nova-cloud-controller",
    "https://api.jujucharms.com/v5/precise/nova-cloud-controller",
    "https://api.jujucharms.com/v5/precise/nova-cloud-controller-26"
  ],
  "labels": [
    "Juju charm",
    "openstack",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/API",
    "Style/Virtualization Level/Hardware/Network",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Cloud Platform/OpenStack",
    "Type/Middleware/Runtime/JavaScript/Node.js",
    "Type/Middleware/Data Store/Object Store"
  ],
  "info_url": "https://jujucharms.com/nova-cloud-controller",
  "package_url": "https://api.jujucharms.com/v5/precise/nova-cloud-controller-26/archive",
  "created": "2015-06-17T09:34:37.721Z",
  "updated": "2015-06-17T09:34:37.721Z",
  "description": "Openstack nova controller node.\n\nCloud controller node for Openstack nova.  Contains nova-schedule,\nnova-api, nova-network and nova-objectstore.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/rabbitmq",
      "self_resolve": true,
      "juju_interface": "rabbitmq",
      "juju_name": "amqp",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/cinder",
      "self_resolve": true,
      "juju_interface": "cinder",
      "juju_name": "cinder-volume-service",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/nova-compute",
      "self_resolve": true,
      "juju_interface": "nova-compute",
      "juju_name": "cloud-compute",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/hacluster",
      "self_resolve": true,
      "juju_interface": "hacluster",
      "juju_name": "ha",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/keystone",
      "self_resolve": true,
      "juju_interface": "keystone",
      "juju_name": "identity-service",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/glance",
      "self_resolve": true,
      "juju_interface": "glance",
      "juju_name": "image-service",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/nova-vmware",
      "self_resolve": true,
      "juju_interface": "nova-vmware",
      "juju_name": "nova-vmware",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/nova-volume",
      "self_resolve": true,
      "juju_interface": "nova-volume",
      "juju_name": "nova-volume-service",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/quantum",
      "self_resolve": true,
      "juju_interface": "quantum",
      "juju_name": "quantum-network-service",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mysql-shared",
      "self_resolve": true,
      "juju_interface": "mysql-shared",
      "juju_name": "shared-db",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "bridge-interface": {
      "type": "string",
      "description": "Bridge interface to be configured",
      "default": "br100",
      "mapping": "charm_option"
    },
    "bridge-ip": {
      "type": "string",
      "description": "IP to be assigned to bridge interface",
      "default": "11.0.0.1",
      "mapping": "charm_option"
    },
    "bridge-netmask": {
      "type": "string",
      "description": "Netmask to be assigned to bridge interface",
      "default": "255.255.255.0",
      "mapping": "charm_option"
    },
    "config-flags": {
      "type": "string",
      "description": "Comma separated list of key=value config flags to be set in nova.conf.",
      "default": "None",
      "mapping": "charm_option"
    },
    "database": {
      "type": "string",
      "description": "Database name",
      "default": "nova",
      "mapping": "charm_option"
    },
    "database-user": {
      "type": "string",
      "description": "Username for database access",
      "default": "nova",
      "mapping": "charm_option"
    },
    "ha-bindiface": {
      "type": "string",
      "description": "Default network interface on which HA cluster will bind to communication\nwith the other members of the HA Cluster.\n",
      "default": "eth0",
      "mapping": "charm_option"
    },
    "ha-mcastport": {
      "type": "int",
      "description": "Default multicast port number that will be used to communicate between\nHA Cluster nodes.\n",
      "default": 5404,
      "mapping": "charm_option"
    },
    "network-manager": {
      "type": "string",
      "description": "Network manager for the cloud; supports the following options\n.\n  FlatDHCPManager (nova-network) (default)\n  FlatManager (nova-network)\n  Neutron|Quantum (Full SDN solution)\n.\nWhen using the Neutron option you will most likely want to use\nthe neutron-gateway charm to provide L3 routing and DHCP Services.\n",
      "default": "FlatDHCPManager",
      "mapping": "charm_option"
    },
    "neutron-database": {
      "type": "string",
      "description": "Database name for Neutron (if enabled)",
      "default": "neutron",
      "mapping": "charm_option"
    },
    "neutron-database-user": {
      "type": "string",
      "description": "Username for Neutron database access (if enabled)",
      "default": "neutron",
      "mapping": "charm_option"
    },
    "neutron-external-network": {
      "type": "string",
      "description": "Name of the external network for floating IP addresses provided by Neutron.",
      "default": "ext_net",
      "mapping": "charm_option"
    },
    "nvp-cluster-name": {
      "type": "string",
      "description": "Name of the NVP cluster configuration to create (grizzly only)",
      "default": "example",
      "mapping": "charm_option"
    },
    "nvp-controllers": {
      "type": "string",
      "description": "Space delimited addresses of NVP controllers",
      "default": null,
      "mapping": "charm_option"
    },
    "nvp-l3-uuid": {
      "type": "string",
      "description": "This is uuid of the default NVP L3 Gateway Service.\n",
      "default": null,
      "mapping": "charm_option"
    },
    "nvp-password": {
      "type": "string",
      "description": "Password to connect to NVP controllers with",
      "default": "admin",
      "mapping": "charm_option"
    },
    "nvp-tz-uuid": {
      "type": "string",
      "description": "This is uuid of the default NVP Transport zone that will be used for\ncreating tunneled isolated Quantum networks.  It needs to be created\nin NVP before starting Quantum with the nvp plugin.\n",
      "default": null,
      "mapping": "charm_option"
    },
    "nvp-username": {
      "type": "string",
      "description": "Username to connect to NVP controllers with",
      "default": "admin",
      "mapping": "charm_option"
    },
    "openstack-origin": {
      "type": "string",
      "description": "Repository from which to install.  May be one of the following:\ndistro (default), ppa:somecustom/ppa, a deb url sources entry,\nor a supported Cloud Archive release pocket.\n\nSupported Cloud Archive sources include: cloud:precise-folsom,\ncloud:precise-folsom/updates, cloud:precise-folsom/staging,\ncloud:precise-folsom/proposed.\n\nNote that updating this setting to a source that is known to\nprovide a later version of OpenStack will trigger a software\nupgrade.\n",
      "default": "distro",
      "mapping": "charm_option"
    },
    "quantum-plugin": {
      "type": "string",
      "description": "Quantum plugin to use for network management; supports\n.\n  ovs - OpenvSwitch Plugin\n  nvp - Nicira Network Virtualization Platform\n.\nThis configuration only has context when used with\nnetwork-manager Quantum.\n",
      "default": "ovs",
      "mapping": "charm_option"
    },
    "quantum-security-groups": {
      "type": "string",
      "description": "Use quantum for security group management.\n.\nOnly supported for >= grizzly.\n",
      "default": "no",
      "mapping": "charm_option"
    },
    "rabbit-user": {
      "type": "string",
      "description": "Username used to access rabbitmq queue",
      "default": "nova",
      "mapping": "charm_option"
    },
    "rabbit-vhost": {
      "type": "string",
      "description": "",
      "default": "openstack",
      "mapping": "charm_option"
    },
    "region": {
      "type": "string",
      "description": "OpenStack Region",
      "default": "RegionOne",
      "mapping": "charm_option"
    },
    "ssl_cert": {
      "type": "string",
      "description": "SSL certificate to install and use for API ports.  Setting this value\nand ssl_key will enable reverse proxying, point Glance's entry in the\nKeystone catalog to use https, and override any certficiate and key\nissued by Keystone (if it is configured to do so).\n",
      "default": null,
      "mapping": "charm_option"
    },
    "ssl_key": {
      "type": "string",
      "description": "SSL key to use with certificate specified as ssl_cert.",
      "default": null,
      "mapping": "charm_option"
    },
    "vip": {
      "type": "string",
      "description": "Virtual IP to use to front API services in ha configuration",
      "default": null,
      "mapping": "charm_option"
    },
    "vip_cidr": {
      "type": "int",
      "description": "Netmask that will be used for the Virtual IP",
      "default": 24,
      "mapping": "charm_option"
    },
    "vip_iface": {
      "type": "string",
      "description": "Network Interface where to place the Virtual IP",
      "default": "eth0",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/nova",
      "juju_interface": "nova",
      "juju_name": "cloud-controller",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "cluster": {
      "Name": "cluster",
      "Role": "peer",
      "Interface": "nova-ha",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "gatherbase_origin": "juju-charmstore"
}