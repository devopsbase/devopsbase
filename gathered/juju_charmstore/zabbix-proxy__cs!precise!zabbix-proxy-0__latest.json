{
  "name": "zabbix-proxy Juju charm",
  "juju_charm_name": "zabbix-proxy",
  "revision": "cs:precise/zabbix-proxy-0",
  "latest": true,
  "uris": [
    "https://jujucharms.com/zabbix-proxy",
    "https://jujucharms.com/zabbix-proxy/precise",
    "https://jujucharms.com/zabbix-proxy/precise/0",
    "https://api.jujucharms.com/v5/zabbix-proxy",
    "https://api.jujucharms.com/v5/precise/zabbix-proxy",
    "https://api.jujucharms.com/v5/precise/zabbix-proxy-0"
  ],
  "labels": [
    "Juju charm",
    "monitoring",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Style/Virtualization Level/Hardware/Network",
    "Style/Virtualization Level/Application",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Monitoring/Zabbix",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Proxy"
  ],
  "info_url": "https://jujucharms.com/zabbix-proxy",
  "package_url": "https://api.jujucharms.com/v5/precise/zabbix-proxy-0/archive",
  "created": "2015-06-17T09:30:50.828Z",
  "updated": "2015-06-17T09:30:50.828Z",
  "description": "Network monitoring solution - Zabbix proxy\n\nNetwork monitoring system with many features.\nIt can be used for:\n\n - high level monitoring of IT services;\n - centralized monitoring of your servers and applications;\n - monitoring of SNMP-enabled devices;\n - performance monitoring (process load, network activity, disk\n   activity, memory usage, OS parameters etc.);\n - data visualization.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/agent-passive",
      "self_resolve": true,
      "juju_interface": "agent-passive",
      "juju_name": "agent-passive",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mysql-shared",
      "self_resolve": true,
      "juju_interface": "mysql-shared",
      "juju_name": "database-mysql",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/java-gateway",
      "self_resolve": true,
      "juju_interface": "java-gateway",
      "juju_name": "java-gateway",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/proxy-active",
      "self_resolve": true,
      "juju_interface": "proxy-active",
      "juju_name": "proxy-active",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "AllowRoot": {
      "type": "int",
      "description": "Allow the server to run as 'root'.\n",
      "default": 0,
      "mapping": "charm_option"
    },
    "CacheSize": {
      "type": "string",
      "description": "Size of configuration cache, in bytes.\n",
      "default": "8M",
      "mapping": "charm_option"
    },
    "ConfigFrequency": {
      "type": "int",
      "description": "How often proxy retrieves configuration data from Zabbix server in seconds.\n",
      "default": 3600,
      "mapping": "charm_option"
    },
    "DataSenderFrequency": {
      "type": "int",
      "description": "Proxy will send collected data to the server every N seconds.\n",
      "default": 1,
      "mapping": "charm_option"
    },
    "DebugLevel": {
      "type": "int",
      "description": "Specifies debug level.\n",
      "default": 3,
      "mapping": "charm_option"
    },
    "ExternalScripts": {
      "type": "string",
      "description": "Location of external scripts.\n",
      "default": "/usr/lib/zabbix/externalscripts",
      "mapping": "charm_option"
    },
    "Fping6Location": {
      "type": "string",
      "description": "Location of fping6.\n",
      "default": "/usr/bin/fping6",
      "mapping": "charm_option"
    },
    "FpingLocation": {
      "type": "string",
      "description": "Location of fping.\n",
      "default": "/usr/bin/fping",
      "mapping": "charm_option"
    },
    "HeartbeatFrequency": {
      "type": "int",
      "description": "Frequency of heartbeat messages in seconds.\nUsed for monitoring availability of proxy on server side.\n",
      "default": 60,
      "mapping": "charm_option"
    },
    "HistoryCacheSize": {
      "type": "string",
      "description": "Size of history cache, in bytes.\n",
      "default": "8M",
      "mapping": "charm_option"
    },
    "HistoryTextCacheSize": {
      "type": "string",
      "description": "Size of text history cache, in bytes.\n",
      "default": "16M",
      "mapping": "charm_option"
    },
    "HousekeepingFrequency": {
      "type": "int",
      "description": "How often Zabbix will perform housekeeping procedure (in hours).\n",
      "default": 1,
      "mapping": "charm_option"
    },
    "ListenPort": {
      "type": "int",
      "description": "Listen port for trapper.\n",
      "default": 10051,
      "mapping": "charm_option"
    },
    "LogFileSize": {
      "type": "string",
      "description": "Maximum size of log file in MB.\n",
      "default": "0",
      "mapping": "charm_option"
    },
    "LogSlowQueries": {
      "type": "int",
      "description": "How long a database query may take before being logged (in milliseconds).\n",
      "default": 0,
      "mapping": "charm_option"
    },
    "ProxyLocalBuffer": {
      "type": "int",
      "description": "Proxy will keep data locally for N hours, even if the data have already been synced with the server.\n",
      "default": 0,
      "mapping": "charm_option"
    },
    "ProxyOfflineBuffer": {
      "type": "int",
      "description": "Proxy will keep data for N hours in case if no connectivity with Zabbix server.\nOlder data will be lost.",
      "default": 1,
      "mapping": "charm_option"
    },
    "StartDBSyncers": {
      "type": "int",
      "description": "Number of pre-forked instances of DB Syncers.\n",
      "default": 4,
      "mapping": "charm_option"
    },
    "StartDiscoverers": {
      "type": "int",
      "description": "Number of pre-forked instances of discoverers.\n",
      "default": 1,
      "mapping": "charm_option"
    },
    "StartHTTPPollers": {
      "type": "int",
      "description": "Number of pre-forked instances of HTTP pollers.\n",
      "default": 1,
      "mapping": "charm_option"
    },
    "StartIPMIPollers": {
      "type": "int",
      "description": "Number of pre-forked instances of IPMI pollers.\n",
      "default": 0,
      "mapping": "charm_option"
    },
    "StartPingers": {
      "type": "int",
      "description": "Number of pre-forked instances of ICMP pingers.\n",
      "default": 1,
      "mapping": "charm_option"
    },
    "StartPollersUnreachable": {
      "type": "int",
      "description": "Number of pre-forked instances of pollers for unreachable hosts (including IPMI and Java).\n",
      "default": 1,
      "mapping": "charm_option"
    },
    "StartSNMPTrapper": {
      "type": "int",
      "description": "If set to 1, SNMP trapper process will be started.\n",
      "default": 0,
      "mapping": "charm_option"
    },
    "StartVMwareCollectors": {
      "type": "int",
      "description": "Number of pre-forked vmware collector instances.\n",
      "default": 0,
      "mapping": "charm_option"
    },
    "Timeout": {
      "type": "int",
      "description": "Specifies how long we wait for agent, SNMP device or external check (in seconds).\n",
      "default": 5,
      "mapping": "charm_option"
    },
    "TrapperTimeout": {
      "type": "int",
      "description": "Specifies how many seconds trapper may spend processing new data.\n",
      "default": 300,
      "mapping": "charm_option"
    },
    "UnavailableDelay": {
      "type": "int",
      "description": "How often host is checked for availability during the unavailability period, in seconds.\n",
      "default": 60,
      "mapping": "charm_option"
    },
    "UnreachableDelay": {
      "type": "int",
      "description": "How often host is checked for availability during the unreachability period, in seconds.\n",
      "default": 15,
      "mapping": "charm_option"
    },
    "UnreachablePeriod": {
      "type": "int",
      "description": "After how many seconds of unreachability treat a host as unavailable.\n",
      "default": 45,
      "mapping": "charm_option"
    },
    "User": {
      "type": "string",
      "description": "Drop privileges to a specific, existing user on the system.\n",
      "default": "zabbix",
      "mapping": "charm_option"
    },
    "VMwareCacheSize": {
      "type": "string",
      "description": "Shared memory size for storing VMware data.\n",
      "default": "8M",
      "mapping": "charm_option"
    },
    "VMwareFrequency": {
      "type": "int",
      "description": "Delay in seconds between data gathering from a single VMware service.\n",
      "default": 60,
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/agent-active",
      "juju_interface": "agent-active",
      "juju_name": "agent-active",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/proxy-passive",
      "juju_interface": "proxy-passive",
      "juju_name": "proxy-passive",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Overview\n\n[Zabbix](http://zabbix.com) is software that monitors numerous parameters of a network and the health and integrity of servers.\n\nZabbix proxy is a process that may collect monitoring data from one or more monitored devices and send the information to the Zabbix server, essentially working on behalf of the server. All collected data is buffered locally and then transferred to the Zabbix server the proxy belongs to.\n\nDeploying a proxy is optional, but may be very beneficial to distribute the load of a single Zabbix server. If only proxies collect data, processing on the server becomes less CPU and disk I/O hungry.\n\n# Usage\n\nZabbix Proxy works with Zabbix agent, Zabbix frontend and Zabbix Java Gateway charms.\n\nThe functioning of a basic Zabbix proxy is broken into three distinct components; they are: Zabbix server, web frontend and database storage.\n\n    juju add-relation zabbix-proxy mysql\n    juju add-relation zabbix-proxy frontend\n\nZabbix proxy does not add new Zabbix agent to monitoring. This option is not available in this charm.\n\n    juju add-relation zabbix-proxy:agent-active zabbix-agent\n    juju add-relation zabbix-proxy:proxy-passive zabbix-server\n\nIf relation with Zabbix proxy is destroyed, the charm removes the proxy from configuration and disable all hosts monitored by the proxy.\n\n# Configuration\n\nThere is listed a few major configuration options which can be changed:\n\nTimeout - Spend no more than Timeout seconds on checks processing.\nListenPort - Agent will listen on this port for connections from the server.\n\nAn example,\n    juju set zabbix-proxy Timeout=10\n\n\n### Known Issues / Caveates\n\nZabbix proxy can not be active and passive at the same time. Please avoid add both relations with Zabbix Server at the same time.\nZabbix server/proxy can use different database types, so while relation to database is not added, there is no installed Zabbix server/proxy packages.\nWe recommend to add a relation between Zabbix agent and Zabbix server/proxy after adding relation Zabbix server/proxy with one of available database types.\nThe charm Zabbix server/proxy supports only MySQL database.\n\n#### Web Interface username/password\n\nLogin: Admin\nPassword: zabbix\n\n# Сontact information\n\n- [Zabbix Homepage](http://www.zabbix.com)\n- [Zabbix Bug Tracker](https://support.zabbix.com/)\n- [Zabbix Services](http://www.zabbix.com/services.php)\n",
  "readme": "# Overview\n\n[Zabbix](http://zabbix.com) is software that monitors numerous parameters of a network and the health and integrity of servers.\n\nZabbix proxy is a process that may collect monitoring data from one or more monitored devices and send the information to the Zabbix server, essentially working on behalf of the server. All collected data is buffered locally and then transferred to the Zabbix server the proxy belongs to.\n\nDeploying a proxy is optional, but may be very beneficial to distribute the load of a single Zabbix server. If only proxies collect data, processing on the server becomes less CPU and disk I/O hungry.\n\n# Usage\n\nZabbix Proxy works with Zabbix agent, Zabbix frontend and Zabbix Java Gateway charms.\n\nThe functioning of a basic Zabbix proxy is broken into three distinct components; they are: Zabbix server, web frontend and database storage.\n\n    juju add-relation zabbix-proxy mysql\n    juju add-relation zabbix-proxy frontend\n\nZabbix proxy does not add new Zabbix agent to monitoring. This option is not available in this charm.\n\n    juju add-relation zabbix-proxy:agent-active zabbix-agent\n    juju add-relation zabbix-proxy:proxy-passive zabbix-server\n\nIf relation with Zabbix proxy is destroyed, the charm removes the proxy from configuration and disable all hosts monitored by the proxy.\n\n# Configuration\n\nThere is listed a few major configuration options which can be changed:\n\nTimeout - Spend no more than Timeout seconds on checks processing.\nListenPort - Agent will listen on this port for connections from the server.\n\nAn example,\n    juju set zabbix-proxy Timeout=10\n\n\n### Known Issues / Caveates\n\nZabbix proxy can not be active and passive at the same time. Please avoid add both relations with Zabbix Server at the same time.\nZabbix server/proxy can use different database types, so while relation to database is not added, there is no installed Zabbix server/proxy packages.\nWe recommend to add a relation between Zabbix agent and Zabbix server/proxy after adding relation Zabbix server/proxy with one of available database types.\nThe charm Zabbix server/proxy supports only MySQL database.\n\n#### Web Interface username/password\n\nLogin: Admin\nPassword: zabbix\n\n# Сontact information\n\n- [Zabbix Homepage](http://www.zabbix.com)\n- [Zabbix Bug Tracker](https://support.zabbix.com/)\n- [Zabbix Services](http://www.zabbix.com/services.php)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}