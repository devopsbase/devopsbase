{
  "name": "python-moinmoin Juju charm",
  "juju_charm_name": "python-moinmoin",
  "revision": "cs:precise/python-moinmoin-6",
  "latest": true,
  "uris": [
    "https://jujucharms.com/python-moinmoin",
    "https://jujucharms.com/python-moinmoin/precise",
    "https://jujucharms.com/python-moinmoin/precise/6",
    "https://api.jujucharms.com/v5/python-moinmoin",
    "https://api.jujucharms.com/v5/precise/python-moinmoin",
    "https://api.jujucharms.com/v5/precise/python-moinmoin-6"
  ],
  "labels": [
    "Juju charm",
    "applications",
    "Type/Middleware/Runtime/Python",
    "Mode/Guide/Text",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/API/Toolkit",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Web Server"
  ],
  "info_url": "https://jujucharms.com/python-moinmoin",
  "package_url": "https://api.jujucharms.com/v5/precise/python-moinmoin-6/archive",
  "created": "2015-06-17T09:35:09.581Z",
  "updated": "2015-06-17T09:35:09.581Z",
  "description": "Python clone of WikiWiki - library\n\nA WikiWikiWeb is a collaborative hypertext environment, with an emphasis\non easy access to and modification of information. MoinMoin is a\nPython WikiClone that allows you to easily set up your own wiki, only\nrequiring a Web server and a Python installation.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "parameters": {
    "admin_name": {
      "type": "string",
      "description": "The wiki name of the admin user.",
      "default": "Admin",
      "mapping": "charm_option"
    },
    "extra_settings": {
      "type": "string",
      "description": "For the list of available configuration options see: http://moinmo.in/HelpOnConfiguration.\nAlso, don't forget to starts your configuration lines with a 4 spaces indentation.\n",
      "default": "",
      "mapping": "charm_option"
    },
    "languages": {
      "type": "string",
      "description": "Languages to installed in a space-separated format. \nFor available languages see: http://moinmo.in/4ct10n/AttachFile/LanguageSetup?action=AttachFile\n(write only the language name part)\n",
      "default": "English",
      "mapping": "charm_option"
    },
    "listen_port": {
      "type": "int",
      "description": "The port for the service to listen on.",
      "default": 8080,
      "mapping": "charm_option"
    },
    "loglevel": {
      "type": "string",
      "description": "Default loglevel, to adjust verbosity DEBUG, INFO, WARNING, ERROR, CRITICAL",
      "default": "INFO",
      "mapping": "charm_option"
    },
    "openidrp_authorized_teams": {
      "type": "string",
      "description": "Define the openid authorized teams for the wiki.",
      "default": "False",
      "mapping": "charm_option"
    },
    "use_openid": {
      "type": "string",
      "description": "OpenID authentication used or not.",
      "default": "False",
      "mapping": "charm_option"
    },
    "wiki_name": {
      "type": "string",
      "description": "The name of your wiki.",
      "default": "My MoinMoin wiki",
      "mapping": "charm_option"
    },
    "xapian_search": {
      "type": "string",
      "description": "Set to True to enable the Xapian search engine.",
      "default": "True",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "website",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Overview\nJuju charm for python-moinmoin, charm author: Patrick Hetu <patrick@koumbit.org>\n\n# Deployment\nAfter a successful bootstrap, you can deploy the service without a configuration or alias with:\n\n    juju deploy python-moinmoin\n    juju expose python-moinmoin\n\nThough, it's recommended you create a yaml file with your parameters, for instance if you were to deploy the service as \"mywiki\", the configuration would look like:\n\n    mywiki:\n      wiki_name : \"My MoinMoin wiki\"\n      admin_name: \"Admin\"\n      languages: English French\n      xapian_search: True\n      listen_port: 80\n\nTo then deploy the wiki, with pre-seeded configuration:\n\n    juju deploy --config mywiki.yaml python-moinmoin mywiki\n    juju expose mywiki\n\n# Configuration\nThis service contains several configuration options for controlling the moinmoin install\n\n## wiki_name\nSet the name and title of the wiki\n\n    juju set python_moinmoin wiki_name=\"My new wiki name\"\n\n## admin_name\nName of the admin account\n\n    juju set python_moinmoin admin_name=\"Adminstrator\"\n\n## languages\nList of languages to be installed on the wiki, space delimited\n\n    juju set python_moinmoin languages English Spanish French\n\nTo remove a language you'll need to re-enter the entire list, removing the language you no longer want\n\n    juju set python_moinmoin languages=\"English Spanish\"\n\n# xapian_serach\nEnable xapian serach on your wiki (True or False)\n\n    juju set python_moinmoin xapian_search=\"True\"\n\n# listen_port\nThe port moinmoin should listen on. By default it's 8080\n\n    juju set python_moinmoin listen_port=80\n\n# use_openid\nSetting to say if the wiki is using OpenID authentication or not.\n\n    juju set python_moinmoin use_openid=True\n\n# openidrp_authorized_teams\nWhat OpenID teams are authorized to log in, if use_openid is true.\n\n   juju set python_moinmoin openidrp_authorized_teams=\"['team1', 'team2']\"\n\n# Relations\npython-moinmoin can be related to any of the proxy charms, including but not limited to: haproxy, varnish, and squid. An example of connecting squid-reverseproxy to python-moinmoin is listed below:\n\n    juju deploy squid-reverseproxy squid\n    juju unexpose python-moinmoin\n    juju add-relation python-moinmoin squid\n    juju expose squid\n",
  "readme": "# Overview\nJuju charm for python-moinmoin, charm author: Patrick Hetu <patrick@koumbit.org>\n\n# Deployment\nAfter a successful bootstrap, you can deploy the service without a configuration or alias with:\n\n    juju deploy python-moinmoin\n    juju expose python-moinmoin\n\nThough, it's recommended you create a yaml file with your parameters, for instance if you were to deploy the service as \"mywiki\", the configuration would look like:\n\n    mywiki:\n      wiki_name : \"My MoinMoin wiki\"\n      admin_name: \"Admin\"\n      languages: English French\n      xapian_search: True\n      listen_port: 80\n\nTo then deploy the wiki, with pre-seeded configuration:\n\n    juju deploy --config mywiki.yaml python-moinmoin mywiki\n    juju expose mywiki\n\n# Configuration\nThis service contains several configuration options for controlling the moinmoin install\n\n## wiki_name\nSet the name and title of the wiki\n\n    juju set python_moinmoin wiki_name=\"My new wiki name\"\n\n## admin_name\nName of the admin account\n\n    juju set python_moinmoin admin_name=\"Adminstrator\"\n\n## languages\nList of languages to be installed on the wiki, space delimited\n\n    juju set python_moinmoin languages English Spanish French\n\nTo remove a language you'll need to re-enter the entire list, removing the language you no longer want\n\n    juju set python_moinmoin languages=\"English Spanish\"\n\n# xapian_serach\nEnable xapian serach on your wiki (True or False)\n\n    juju set python_moinmoin xapian_search=\"True\"\n\n# listen_port\nThe port moinmoin should listen on. By default it's 8080\n\n    juju set python_moinmoin listen_port=80\n\n# use_openid\nSetting to say if the wiki is using OpenID authentication or not.\n\n    juju set python_moinmoin use_openid=True\n\n# openidrp_authorized_teams\nWhat OpenID teams are authorized to log in, if use_openid is true.\n\n   juju set python_moinmoin openidrp_authorized_teams=\"['team1', 'team2']\"\n\n# Relations\npython-moinmoin can be related to any of the proxy charms, including but not limited to: haproxy, varnish, and squid. An example of connecting squid-reverseproxy to python-moinmoin is listed below:\n\n    juju deploy squid-reverseproxy squid\n    juju unexpose python-moinmoin\n    juju add-relation python-moinmoin squid\n    juju expose squid\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}