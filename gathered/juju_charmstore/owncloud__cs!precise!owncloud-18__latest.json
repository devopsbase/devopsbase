{
  "name": "owncloud Juju charm",
  "juju_charm_name": "owncloud",
  "revision": "cs:precise/owncloud-18",
  "latest": true,
  "uris": [
    "https://jujucharms.com/owncloud",
    "https://jujucharms.com/owncloud/precise",
    "https://jujucharms.com/owncloud/precise/18",
    "https://api.jujucharms.com/v5/owncloud",
    "https://api.jujucharms.com/v5/precise/owncloud",
    "https://api.jujucharms.com/v5/precise/owncloud-18"
  ],
  "labels": [
    "Juju charm",
    "file-servers",
    "Binding/Provider/HP",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Runtime/PHP",
    "Type/Middleware/Web Server/Apache HTTP Server",
    "Type/Middleware/Proxy/HAProxy",
    "Type/Middleware/Data Store/Relational/MySQL"
  ],
  "info_url": "https://jujucharms.com/owncloud",
  "package_url": "https://api.jujucharms.com/v5/precise/owncloud-18/archive",
  "created": "2015-06-17T09:32:29.597Z",
  "updated": "2015-06-17T09:32:29.597Z",
  "description": "owncloud\n\nThis charm installs Apache2, Apache-Mod-PHP5, and configures OwnCloud with \nsqlite as a standalone server. Provides relationship hooks with NFS file \nstorage, MySQL Databases, and HAProxy reverse proxy charms. \n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mysql",
      "self_resolve": true,
      "juju_interface": "mysql",
      "juju_name": "db",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mount",
      "self_resolve": true,
      "juju_interface": "mount",
      "juju_name": "shared-fs",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "customssl": {
      "type": "boolean",
      "description": "option to set if custom ssl certificates are going to be used",
      "default": false,
      "mapping": "charm_option"
    },
    "domain": {
      "type": "string",
      "description": "the domain name for your owncloud server",
      "default": "",
      "mapping": "charm_option"
    },
    "downloadurl": {
      "type": "string",
      "description": "url from which owncloud will be downloaded",
      "default": "http://download.owncloud.org/community/owncloud-7.0.1.tar.bz2",
      "mapping": "charm_option"
    },
    "password": {
      "type": "string",
      "description": "default administrative password",
      "default": "",
      "mapping": "charm_option"
    },
    "port": {
      "type": "int",
      "description": "apache listening port",
      "default": 80,
      "mapping": "charm_option"
    },
    "sha1sum": {
      "type": "string",
      "description": "the sha1sum for the file in the download link",
      "default": "fb9ec0bdf8aff99321b26a375703fc2c2afe02ae",
      "mapping": "charm_option"
    },
    "src": {
      "type": "string",
      "description": "source from where the charm will install the package",
      "default": "repo",
      "mapping": "charm_option"
    },
    "sslcert": {
      "type": "string",
      "description": "ssl cert to be used if custom is on",
      "default": "",
      "mapping": "charm_option"
    },
    "sslkey": {
      "type": "string",
      "description": "ssl key to be used if custom is on",
      "default": "",
      "mapping": "charm_option"
    },
    "user": {
      "type": "string",
      "description": "default administrative user",
      "default": "owncloud",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "website",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# OwnCloud\n\n- Author: Atul Jha <koolhead17@gmail.com>\n- Maintainer: José Antonio Rey <jose@ubuntu.com>\n\n# Overview\n\nownCloud provides universal access to your files via the web, your computer or\nyour mobile devices — wherever you are. It also provides a platform to easily\nview & sync your contacts, calendars and bookmarks across all your devices and\nenables basic editing right on the web.\n\nThis charm installs Apache2, Apache-Mod-PHP5, and configures OwnCloud with\nsqlite as a standalone server. Provides relationship hooks with NFS file\nstorage, MySQL Databases, and HAProxy reverse proxy charms.\n\n# Configuration\n\nThis charm comes with different configuration options. Optional configuration\noptions include:\n\n`domain`: This is the domain or IP address for your ownCloud instance. If you\ndo not know what it is, execute `juju status` to find out the public address. If\nnot provided, the charm will refuse to configure.\n\n`downloadurl`: This is the download URL that the charm will use in case the src\noption is set to `source`. It defaults to the 6.0.4 URL.\n\n`sha1sum`: This is the SHA1SUM for the `downloadurl` file. It defaults to the\nSHA1SUM for the 6.0.4 file.\n\n`port`: This is the alias port that will be used for the ownCloud instance. It\nwill redirect to 443, which is the HTTPS port. It defaults to 80.\n\n`src`: This is the source from which the package will be installed. You can\nchoose between `repo`, which will install it from a repository built by\nownCloud, or `source`, which will download the tarball and extract it. It\ndefaults to `repo`.\n\n`customssl`: This charm provides default SSL support for ownCloud. This means\nthat if you do not provide a custom SSL key and certificate, a self-signed one\nwill be auto-generated for you. If you want to use a custom SSL certificate,\nplease set this option to `true`. It defaults to `false`.\n\n`sslkey`: If `customssl` is set to true, this is the SSL key that will be used.\nIf not provided and `customssl` is true, the charm will refuse to configure.\n\n`sslcert`: If `customssl` is set to true, this is the SSL cert that will be\nused. If not provided and `customssl` is true, the charm will refuse to\nconfigure.\n\n`user`: This user will be used in case you want to do a setup of Shared\nInstances. If not provided, it will be defaulted to `ownCloud`.\n\n`password`: This password will be used in case you want to do a setup of\nShared Instances. If not provided, it will be randomly generated when a DB\nrelation is joined.\n\nYou can put any of this options in a config.yaml file and specify it at the\nmoment of deploying. Otherwise, you can change them by executing:\n\n    juju set owncloud [option]=[value]\n\n# Usage\n\n## Standalone Instance\n\nFirst, bootstrap your environment:\n\n    juju bootstrap\n\nThen, deploy ownCloud by executing the following command:\n    \n    juju deploy owncloud\n\nFinally, expose the service:\n\n    juju expose owncloud\n\nAccess OwnCloud service directly, and complete the setup, providing user\ncredentials and initializing sqlite database.\n\n## Shared Instances\n\nIf you want to deploy shared instances, execute the following commands after\ndoing a Standalone Instance setup:\n\n    juju deploy mysql\n    juju add-relation mysql owncloud\n\n    juju deploy nfs\n    juju add-relation nfs owncloud\n\nWe're now done! To find out the address for your ownCloud instance, execute\n`juju status` and navigate to it.\n\n# Scale out Usage\n\nIn order to do a scalabe deploy of ownCloud, execute the following commands\n\n    juju bootstrap\n    juju deploy owncloud\n    juju deploy mysql\n    juju deploy haproxy\n    juju add-relation mysql owncloud\n    juju add-relation haproxy owncloud\n    juju add-unit owncloud\n\n# Internet Connection Requirements\n\nThis charm downloads files from the Internet, and requires Internet connectivity\nin order to properly install. The requirements vary for each setup type.\n\n## When installing from the source\n\nWhen installing from the source packages available for download, this charm will\nconnect to the following Internet sites:\n\n * download.owncloud.org with port 443\n * The Ubuntu repositories or a private mirror of them\n\n## When installing from the repository\n\nownCloud offers the option to install from a repository. This is the default\nconfiguration value for the charm. With this, the charm will connect to the\nfollowing Internet sites:\n\n * download.opensuse.org with port 80\n * download.opensuse.org as a repository\n * The Ubuntu repositories or a private mirror of them\n\n# Known Limitations\n\nIf you have been using a standalone instance and want to migrate to a shared\ninstance, please note that adding the mysql relation will not preserve the file\nstructure in the database. This means that your file listing will not be\navailable. Make sure to have this in mind when doing the migration.\n\nAlso, if you leave the `customssl` option set to false or provide a self-signed\nSSL certificate, ownCloud will throw a WebDAV error after creating the admin\nusername and password. Ignore this error as it does not affect the working of\nownCloud (it is silently fixed), and enter your website again.\n\nIf port is different than 80, it looks like the instance throws an SSL\nerror when connecting. Recommendation is to set the `port` value to 80 to avoid\nproblems.\n\nFinally, on the tests side, the tests will fail on the local provider due to\nNFS not being able to deploy correctly (this is an NFS-related issue).\n\n#TODO\nGenericize shared-fs-relation-* for non-nfs shared-fs providers\n",
  "readme": "# OwnCloud\n\n- Author: Atul Jha <koolhead17@gmail.com>\n- Maintainer: José Antonio Rey <jose@ubuntu.com>\n\n# Overview\n\nownCloud provides universal access to your files via the web, your computer or\nyour mobile devices — wherever you are. It also provides a platform to easily\nview & sync your contacts, calendars and bookmarks across all your devices and\nenables basic editing right on the web.\n\nThis charm installs Apache2, Apache-Mod-PHP5, and configures OwnCloud with\nsqlite as a standalone server. Provides relationship hooks with NFS file\nstorage, MySQL Databases, and HAProxy reverse proxy charms.\n\n# Configuration\n\nThis charm comes with different configuration options. Optional configuration\noptions include:\n\n`domain`: This is the domain or IP address for your ownCloud instance. If you\ndo not know what it is, execute `juju status` to find out the public address. If\nnot provided, the charm will refuse to configure.\n\n`downloadurl`: This is the download URL that the charm will use in case the src\noption is set to `source`. It defaults to the 6.0.4 URL.\n\n`sha1sum`: This is the SHA1SUM for the `downloadurl` file. It defaults to the\nSHA1SUM for the 6.0.4 file.\n\n`port`: This is the alias port that will be used for the ownCloud instance. It\nwill redirect to 443, which is the HTTPS port. It defaults to 80.\n\n`src`: This is the source from which the package will be installed. You can\nchoose between `repo`, which will install it from a repository built by\nownCloud, or `source`, which will download the tarball and extract it. It\ndefaults to `repo`.\n\n`customssl`: This charm provides default SSL support for ownCloud. This means\nthat if you do not provide a custom SSL key and certificate, a self-signed one\nwill be auto-generated for you. If you want to use a custom SSL certificate,\nplease set this option to `true`. It defaults to `false`.\n\n`sslkey`: If `customssl` is set to true, this is the SSL key that will be used.\nIf not provided and `customssl` is true, the charm will refuse to configure.\n\n`sslcert`: If `customssl` is set to true, this is the SSL cert that will be\nused. If not provided and `customssl` is true, the charm will refuse to\nconfigure.\n\n`user`: This user will be used in case you want to do a setup of Shared\nInstances. If not provided, it will be defaulted to `ownCloud`.\n\n`password`: This password will be used in case you want to do a setup of\nShared Instances. If not provided, it will be randomly generated when a DB\nrelation is joined.\n\nYou can put any of this options in a config.yaml file and specify it at the\nmoment of deploying. Otherwise, you can change them by executing:\n\n    juju set owncloud [option]=[value]\n\n# Usage\n\n## Standalone Instance\n\nFirst, bootstrap your environment:\n\n    juju bootstrap\n\nThen, deploy ownCloud by executing the following command:\n    \n    juju deploy owncloud\n\nFinally, expose the service:\n\n    juju expose owncloud\n\nAccess OwnCloud service directly, and complete the setup, providing user\ncredentials and initializing sqlite database.\n\n## Shared Instances\n\nIf you want to deploy shared instances, execute the following commands after\ndoing a Standalone Instance setup:\n\n    juju deploy mysql\n    juju add-relation mysql owncloud\n\n    juju deploy nfs\n    juju add-relation nfs owncloud\n\nWe're now done! To find out the address for your ownCloud instance, execute\n`juju status` and navigate to it.\n\n# Scale out Usage\n\nIn order to do a scalabe deploy of ownCloud, execute the following commands\n\n    juju bootstrap\n    juju deploy owncloud\n    juju deploy mysql\n    juju deploy haproxy\n    juju add-relation mysql owncloud\n    juju add-relation haproxy owncloud\n    juju add-unit owncloud\n\n# Internet Connection Requirements\n\nThis charm downloads files from the Internet, and requires Internet connectivity\nin order to properly install. The requirements vary for each setup type.\n\n## When installing from the source\n\nWhen installing from the source packages available for download, this charm will\nconnect to the following Internet sites:\n\n * download.owncloud.org with port 443\n * The Ubuntu repositories or a private mirror of them\n\n## When installing from the repository\n\nownCloud offers the option to install from a repository. This is the default\nconfiguration value for the charm. With this, the charm will connect to the\nfollowing Internet sites:\n\n * download.opensuse.org with port 80\n * download.opensuse.org as a repository\n * The Ubuntu repositories or a private mirror of them\n\n# Known Limitations\n\nIf you have been using a standalone instance and want to migrate to a shared\ninstance, please note that adding the mysql relation will not preserve the file\nstructure in the database. This means that your file listing will not be\navailable. Make sure to have this in mind when doing the migration.\n\nAlso, if you leave the `customssl` option set to false or provide a self-signed\nSSL certificate, ownCloud will throw a WebDAV error after creating the admin\nusername and password. Ignore this error as it does not affect the working of\nownCloud (it is silently fixed), and enter your website again.\n\nIf port is different than 80, it looks like the instance throws an SSL\nerror when connecting. Recommendation is to set the `port` value to 80 to avoid\nproblems.\n\nFinally, on the tests side, the tests will fail on the local provider due to\nNFS not being able to deploy correctly (this is an NFS-related issue).\n\n#TODO\nGenericize shared-fs-relation-* for non-nfs shared-fs providers\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}