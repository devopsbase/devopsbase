{
  "name": "redis-master Juju charm",
  "juju_charm_name": "redis-master",
  "revision": "cs:precise/redis-master-7",
  "latest": true,
  "uris": [
    "https://jujucharms.com/redis-master",
    "https://jujucharms.com/redis-master/precise",
    "https://jujucharms.com/redis-master/precise/7",
    "https://api.jujucharms.com/v5/redis-master",
    "https://api.jujucharms.com/v5/precise/redis-master",
    "https://api.jujucharms.com/v5/precise/redis-master-7"
  ],
  "labels": [
    "Juju charm",
    "databases",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Style/Virtualization Level/Hardware/Network",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Data Store/In-Memory",
    "Type/Middleware/Data Store/Key-Value/Redis",
    "Type/Middleware/Cache"
  ],
  "info_url": "https://jujucharms.com/redis-master",
  "package_url": "https://api.jujucharms.com/v5/precise/redis-master-7/archive",
  "created": "2015-06-17T09:36:28.305Z",
  "updated": "2015-06-17T09:36:28.305Z",
  "description": "Persistent key-value database with network interface\n\nRedis is a key-value database in a similar vein to memcache but the\ndataset is non-volatile. Redis additionally provides native support\nfor atomically manipulating and querying data structures such as lists\nand sets.  The dataset is stored entirely in memory and periodically\nflushed to disk.\nThis charm provides the master/stand-alone service\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/redis",
      "juju_interface": "redis",
      "juju_name": "db",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/redis",
      "juju_interface": "redis",
      "juju_name": "redis-admin",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/redis",
      "juju_interface": "redis",
      "juju_name": "redis-master",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Overview\n\nRedis (<http://redis.io>) is an open source, advanced key-value cache and \nstore. It is often referred to as a data structure server since keys can \ncontain strings, hashes, lists, sets, sorted sets, bitmaps and hyperloglogs. \nIn order to achieve its outstanding performance, Redis works with an in-memory\ndataset that can be written to disk. Redis also supports master-slave \nasynchronous replication.\n\nRedis can be configured in a master or slave configuration.  This charm \nprovides a single stand alone master implementation of Redis software. Go to \nthe Redis web pages for more information on [replication](http://redis.io/topics/replication).\n\n# Usage\n\nTo deploy this charm first bootstrap your Juju environment and issue the\nfollowing command:\n\n    juju deploy redis-master\n\n\nExpose the master if you need to contact them for some reason.\n\n    juju expose redis-master\n\n\n# Replication\n\nRedis can be set up with master-slave replication in Juju.  This allows the\nRedis slave to be an exact copy of master server.  A master can have multiple\nslaves.  \n\nSee the [redis-slave](http://manage.jujucharms.com/charms/precise/redis-slave) charm for more details about how to configure the Juju charms with replication.\n\n# Testing Redis\n\nTo test if Redis software is functioning properly telnet to the redis ip\naddress using port 6379:\n\n    telnet redis-master-ip 6379\n\nYou can also install the redis-tools package `apt-get install redis-tools` \nand connect using the Redis client command:\n\n    redis-cli\n\nFrom there you can issue [Redis commands](http://redis.io/commands) to test \nthat Redis is working as intended.\n\n## Known Limitations and Issues\n\nIf you run into problems or issues:\n\nGo to the [issue database on github](https://github.com/antirez/redis/issues) to check for problems related to the Redis software.\n\nGo to the [redis-master page on launchpad](https://bugs.launchpad.net/charms/+source/redis-master) to check for redis-master related bugs. \n\nThe Redis log file can be found on the deployed instance at:  \n`/var/log/redis/redis-server.log` \n\n## Configuration\n\nThere are no configuration options for the redis-master charm.  Just deploy\nthe charm in Juju and you will have a working Redis installation!\n\n## Contact Information\n\nThe charm was originally created by Juan Negron <juan.negron@canonical.com>\n\n# Redis Information\n\n- Redis [home page](http://redis.io/)\n- Redis [github bug tracker](https://github.com/antirez/redis/issues)\n- Redis [documentation](http://redis.io/documentation)\n- Redis [mailing list](http://groups.google.com/group/redis-db)\n- Using IRC join the #redis channel on Freenode ([web access link](http://webchat.freenode.net/?channels=redis))\n",
  "readme": "# Overview\n\nRedis (<http://redis.io>) is an open source, advanced key-value cache and \nstore. It is often referred to as a data structure server since keys can \ncontain strings, hashes, lists, sets, sorted sets, bitmaps and hyperloglogs. \nIn order to achieve its outstanding performance, Redis works with an in-memory\ndataset that can be written to disk. Redis also supports master-slave \nasynchronous replication.\n\nRedis can be configured in a master or slave configuration.  This charm \nprovides a single stand alone master implementation of Redis software. Go to \nthe Redis web pages for more information on [replication](http://redis.io/topics/replication).\n\n# Usage\n\nTo deploy this charm first bootstrap your Juju environment and issue the\nfollowing command:\n\n    juju deploy redis-master\n\n\nExpose the master if you need to contact them for some reason.\n\n    juju expose redis-master\n\n\n# Replication\n\nRedis can be set up with master-slave replication in Juju.  This allows the\nRedis slave to be an exact copy of master server.  A master can have multiple\nslaves.  \n\nSee the [redis-slave](http://manage.jujucharms.com/charms/precise/redis-slave) charm for more details about how to configure the Juju charms with replication.\n\n# Testing Redis\n\nTo test if Redis software is functioning properly telnet to the redis ip\naddress using port 6379:\n\n    telnet redis-master-ip 6379\n\nYou can also install the redis-tools package `apt-get install redis-tools` \nand connect using the Redis client command:\n\n    redis-cli\n\nFrom there you can issue [Redis commands](http://redis.io/commands) to test \nthat Redis is working as intended.\n\n## Known Limitations and Issues\n\nIf you run into problems or issues:\n\nGo to the [issue database on github](https://github.com/antirez/redis/issues) to check for problems related to the Redis software.\n\nGo to the [redis-master page on launchpad](https://bugs.launchpad.net/charms/+source/redis-master) to check for redis-master related bugs. \n\nThe Redis log file can be found on the deployed instance at:  \n`/var/log/redis/redis-server.log` \n\n## Configuration\n\nThere are no configuration options for the redis-master charm.  Just deploy\nthe charm in Juju and you will have a working Redis installation!\n\n## Contact Information\n\nThe charm was originally created by Juan Negron <juan.negron@canonical.com>\n\n# Redis Information\n\n- Redis [home page](http://redis.io/)\n- Redis [github bug tracker](https://github.com/antirez/redis/issues)\n- Redis [documentation](http://redis.io/documentation)\n- Redis [mailing list](http://groups.google.com/group/redis-db)\n- Using IRC join the #redis channel on Freenode ([web access link](http://webchat.freenode.net/?channels=redis))\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}