{
  "name": "roundcube Juju charm",
  "juju_charm_name": "roundcube",
  "revision": "cs:precise/roundcube-2",
  "latest": true,
  "uris": [
    "https://jujucharms.com/roundcube",
    "https://jujucharms.com/roundcube/precise",
    "https://jujucharms.com/roundcube/precise/2",
    "https://api.jujucharms.com/v5/roundcube",
    "https://api.jujucharms.com/v5/precise/roundcube",
    "https://api.jujucharms.com/v5/precise/roundcube-2"
  ],
  "labels": [
    "Juju charm",
    "applications",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Guide/Text/Book",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/CLI",
    "Style/Virtualization Level/Application",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Email"
  ],
  "info_url": "https://jujucharms.com/roundcube",
  "package_url": "https://api.jujucharms.com/v5/precise/roundcube-2/archive",
  "created": "2015-06-17T09:37:19.211Z",
  "updated": "2015-06-17T09:37:19.211Z",
  "description": "skinnable AJAX based webmail solution for IMAP servers\n\nRoundCube Webmail is a browser-based multilingual IMAP client with an\napplication-like user interface. It provides full functionality\nexpected from an e-mail client, including MIME support, address book,\nfolder manipulation and message filters.  The user interface is fully\nskinnable using XHTML and CSS 2.  \n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mysql",
      "self_resolve": true,
      "juju_interface": "mysql",
      "juju_name": "db",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "db_max_length": {
      "type": "int",
      "description": "maximum length of a query in bytes",
      "default": 512000,
      "mapping": "charm_option"
    },
    "db_persistent": {
      "type": "boolean",
      "description": "use persistent db-connections",
      "default": false,
      "mapping": "charm_option"
    },
    "default_host": {
      "type": "string",
      "description": "IMAP mail host chosen to perform the log-in",
      "default": "imap.domain.tld",
      "mapping": "charm_option"
    },
    "default_port": {
      "type": "int",
      "description": "IMAP server port",
      "default": 143,
      "mapping": "charm_option"
    },
    "do_https": {
      "type": "int",
      "description": "Will setup apache with ssl vhost on the port value specified if different from 0 (default ssl port is 443)",
      "default": 0,
      "mapping": "charm_option"
    },
    "force_https": {
      "type": "boolean",
      "description": "with this option enabled, all non-secure connections will be redirected.  set the port for the ssl connection as value of this option if it differs from the default 443",
      "default": false,
      "mapping": "charm_option"
    },
    "optimize_http": {
      "type": "int",
      "description": "enables mod_deflate, mod_headers and mod_expires as recommended for production use.",
      "default": 1,
      "mapping": "charm_option"
    },
    "smtp_pass": {
      "type": "string",
      "description": "SMTP password (if required) if you use %p as the password Roundcube will use the current user's password for login",
      "default": "%p",
      "mapping": "charm_option"
    },
    "smtp_port": {
      "type": "int",
      "description": "SMTP port.",
      "default": 25,
      "mapping": "charm_option"
    },
    "smtp_server": {
      "type": "string",
      "description": "SMTP mail host to send emails",
      "default": "smtp.server.tld",
      "mapping": "charm_option"
    },
    "smtp_user": {
      "type": "string",
      "description": "SMTP username (if required) if you use %u as the username Roundcube will use the current username for login",
      "default": "%u",
      "mapping": "charm_option"
    },
    "ssl_crt": {
      "type": "string",
      "description": "Full path (in the running unit) of the certificate file that Apache will use for https. The file needs to be placed using the juju scp command.",
      "default": "",
      "mapping": "charm_option"
    },
    "ssl_key": {
      "type": "string",
      "description": "Full path (in the running unit) of the certificate key file that Apache will use for https. The file needs to be placed using the juju scp command.",
      "default": "",
      "mapping": "charm_option"
    },
    "use_https": {
      "type": "boolean",
      "description": "tell PHP that it should work as under secure connection even if it doesn't recognize it as secure ($_SERVER['HTTPS'] is not set) e.g. when you're running Roundcube behind a https proxy",
      "default": false,
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "website",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "peer": {
      "Name": "peer",
      "Role": "peer",
      "Interface": "roundcube-peers",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "Juju charm Roundcube\nauthor: Nick Barcet <nick.barcet@canonical.com>\n\n# Usage\n\n1. Setup your site specific parameters in roundcube.yaml\n\n        vi roundcube.yaml\n\n A list of all settable parameter with description is available using\n\n        juju get roundcube\n\n or listing config.yaml\n\n2. Deployment with mysql and haproxy\n\n        juju bootstrap\n        juju deploy --config roundcube.yaml roundcube\n        juju deploy mysql\n        juju deploy haproxy\n        juju add-relation mysql roundcube\n        juju add-relation roundcube haproxy\n        juju expose haproxy\n\n3. Accessing your new roundcube site should be ready at \n   http://[haproxy-machine-addr]/.  To find out the public address of haproxy,\n   look for it in the output of the 'juju status' command.\n\n## Note about HTTPS\nto enable https access to your site, you can set \"do_https\" to the value of the\nhttps port you want to listen to (443 is the default for https).  You will also\nneed to provide the paths to *existing* SSLCertificate (ssl_crt) and key\n(ssl_key). This means that you will have to use juju scp to upload your\ncertificates *before* making the config changes and adding other units.\n\nYou can also use the default ssl snake oil certificates provided by the ssl-cert\npackage:\n\n    # This config activates https on port 443\n    do_https: 443\n    ssl_crt: /etc/ssl/certs/ssl-cert-snakeoil.pem \n    ssl_key: /etc/ssl/private/ssl-cert-snakeoil.key\n\nIf the certificate you provide is invalid, apache will fail to load. If the\npaths you provide are invalid, the https site will no be activated.\n\n    juju debug-log\n\nshould be your friend, go have a look.\n\nThe certificates should be uploaded to the first unit you start, a peer relation \nbetween all units will ensure that they will be reused identically everywhere.\n",
  "readme": "Juju charm Roundcube\nauthor: Nick Barcet <nick.barcet@canonical.com>\n\n# Usage\n\n1. Setup your site specific parameters in roundcube.yaml\n\n        vi roundcube.yaml\n\n A list of all settable parameter with description is available using\n\n        juju get roundcube\n\n or listing config.yaml\n\n2. Deployment with mysql and haproxy\n\n        juju bootstrap\n        juju deploy --config roundcube.yaml roundcube\n        juju deploy mysql\n        juju deploy haproxy\n        juju add-relation mysql roundcube\n        juju add-relation roundcube haproxy\n        juju expose haproxy\n\n3. Accessing your new roundcube site should be ready at \n   http://[haproxy-machine-addr]/.  To find out the public address of haproxy,\n   look for it in the output of the 'juju status' command.\n\n## Note about HTTPS\nto enable https access to your site, you can set \"do_https\" to the value of the\nhttps port you want to listen to (443 is the default for https).  You will also\nneed to provide the paths to *existing* SSLCertificate (ssl_crt) and key\n(ssl_key). This means that you will have to use juju scp to upload your\ncertificates *before* making the config changes and adding other units.\n\nYou can also use the default ssl snake oil certificates provided by the ssl-cert\npackage:\n\n    # This config activates https on port 443\n    do_https: 443\n    ssl_crt: /etc/ssl/certs/ssl-cert-snakeoil.pem \n    ssl_key: /etc/ssl/private/ssl-cert-snakeoil.key\n\nIf the certificate you provide is invalid, apache will fail to load. If the\npaths you provide are invalid, the https site will no be activated.\n\n    juju debug-log\n\nshould be your friend, go have a look.\n\nThe certificates should be uploaded to the first unit you start, a peer relation \nbetween all units will ensure that they will be reused identically everywhere.\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}