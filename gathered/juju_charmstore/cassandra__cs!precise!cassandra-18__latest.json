{
  "name": "cassandra Juju charm",
  "juju_charm_name": "cassandra",
  "revision": "cs:precise/cassandra-18",
  "latest": true,
  "uris": [
    "https://jujucharms.com/cassandra",
    "https://jujucharms.com/cassandra/precise",
    "https://jujucharms.com/cassandra/precise/18",
    "https://api.jujucharms.com/v5/cassandra",
    "https://api.jujucharms.com/v5/precise/cassandra",
    "https://api.jujucharms.com/v5/precise/cassandra-18"
  ],
  "labels": [
    "Juju charm",
    "database",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Data Store/Key-Value/Cassandra"
  ],
  "info_url": "https://jujucharms.com/cassandra",
  "package_url": "https://api.jujucharms.com/v5/precise/cassandra-18/archive",
  "created": "2015-07-22T19:16:44.238Z",
  "updated": "2015-07-22T19:16:44.238Z",
  "description": "distributed storage system for structured data\n\nCassandra is a distributed (peer-to-peer) system for the management and\nstorage of structured data.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "parameters": {
    "allow-single-node": {
      "type": "boolean",
      "description": "Allow cassandra to start in a single-node configuration. When deploying a new service with more than one initial unit (i.e. juju deploy -n 2), this should be set to false.",
      "default": false,
      "mapping": "charm_option"
    },
    "apt-repo-key": {
      "type": "string",
      "description": "Apt repository key, typically needed for apt-repo-spec.\n",
      "default": "749D6EEC0353B12C",
      "mapping": "charm_option"
    },
    "apt-repo-spec": {
      "type": "string",
      "description": "Apt repository to install cassandra package(s) from.\n",
      "default": "deb http://www.apache.org/dist/cassandra/debian 12x main",
      "mapping": "charm_option"
    },
    "auth-access64": {
      "type": "string",
      "description": "base64 encoded content to be written to /etc/casssandra/access.properties\ncreated by e.g.:\n    juju set cassandra auth-access64=\"$(base64 ./access.props)\"\n",
      "default": "",
      "mapping": "charm_option"
    },
    "auth-passwd64": {
      "type": "string",
      "description": "base64 encoded content to be written to /etc/casssandra/passwd.properties\ncreated by e.g.:\n    juju set cassandra auth-passwd64=\"$(base64 ./passwd.props)\"\n",
      "default": "",
      "mapping": "charm_option"
    },
    "auto-memory": {
      "type": "boolean",
      "description": "Automatically configure memory options based on specification of the server infrastructure its running on.\n",
      "default": true,
      "mapping": "charm_option"
    },
    "client-port": {
      "type": "int",
      "description": "Thrift clients port",
      "default": 9160,
      "mapping": "charm_option"
    },
    "cluster-name": {
      "type": "string",
      "description": "Name of the Cassandra Cluster - don't change yet!\n",
      "default": "Cassandra Cluster",
      "mapping": "charm_option"
    },
    "cluster-port": {
      "type": "int",
      "description": "Cluster communication port",
      "default": 7000,
      "mapping": "charm_option"
    },
    "compaction-throughput": {
      "type": "int",
      "description": "Throttles compaction to the given total throughput (in MB/sec) across the entire system. The faster you insert data, the faster you need to compact in order to keep the sstable count down, but in general, setting this to 16 to 32 times the rate you are inserting data is more than sufficient.  Setting this to 0 disables throttling. Note that this account for all types of compaction, including validation compaction.\n",
      "default": 16,
      "mapping": "charm_option"
    },
    "datacenter": {
      "type": "string",
      "description": "The datacenter used by the enpoint_snitch. i.e. \"DC1\"",
      "default": "",
      "mapping": "charm_option"
    },
    "dc_suffix": {
      "type": "string",
      "description": "Add a suffix to a datacenter name. Used by the Ec2Snitch and Ec2MultiRegionSnitch to append a string to the EC2 region name. Used with cassandra >= 1.2.x",
      "default": "",
      "mapping": "charm_option"
    },
    "endpoint_snitch": {
      "type": "string",
      "description": "The cassandra endpoint snitch to use. Currently supported by the charm, SimpleSnitch and GossipingPropertyFileSnitch.",
      "default": "org.apache.cassandra.locator.SimpleSnitch",
      "mapping": "charm_option"
    },
    "extra-jvm-opts": {
      "type": "string",
      "description": "string to be appended to JVM_OPTS, e.g.:\n-javaagent:$CASSANDRA_HOME/lib/jamm-0.2.5.jar\n",
      "default": "",
      "mapping": "charm_option"
    },
    "extra_packages": {
      "type": "string",
      "description": "Extra packages to install. A space delimited list of packages.\n",
      "default": "",
      "mapping": "charm_option"
    },
    "force-seed-nodes": {
      "type": "string",
      "description": "A comma separated list of seed nodes. This is useful if the cluster being created in this juju environment is part of a larger cluser and the seed nodes are remote.\n",
      "default": "",
      "mapping": "charm_option"
    },
    "heap-size": {
      "type": "string",
      "description": "Total size of Java memory heap, for example 1G or 512M. Only used if auto-memory = false.\n",
      "default": "1G",
      "mapping": "charm_option"
    },
    "io-scheduler": {
      "type": "string",
      "description": "Set kernel io scheduler for persistent storage. Only used when volume-ephemeral-storage is False. https://www.kernel.org/doc/Documentation/block/switching-sched.txt\n",
      "default": "cfq",
      "mapping": "charm_option"
    },
    "jmx-port": {
      "type": "int",
      "description": "JMX management port",
      "default": 7199,
      "mapping": "charm_option"
    },
    "nagios_context": {
      "type": "string",
      "description": "a string that will be prepended to instance name to set the host name\nin nagios. So for instance the hostname would be something like:\n    juju-cassandra-0\nIf you're running multiple environments with the same services in them\nthis allows you to differentiate between them.\n",
      "default": "juju",
      "mapping": "charm_option"
    },
    "nagios_heapchk_crit_pct": {
      "type": "int",
      "description": "The pct of heap used to trigger a nagios critcal alert\n",
      "default": 90,
      "mapping": "charm_option"
    },
    "nagios_heapchk_warn_pct": {
      "type": "int",
      "description": "The pct of heap used to trigger a nagios warning\n",
      "default": 80,
      "mapping": "charm_option"
    },
    "new-gen-size": {
      "type": "string",
      "description": "Size of Java new generation memory, for example 100M.  Only used if auto-memory = false.\n",
      "default": "100M",
      "mapping": "charm_option"
    },
    "num-tokens": {
      "type": "int",
      "description": "Number of tokens per node for Cassandra 1.2+. Ignored for earlier versions. 0 disables.\n",
      "default": 256,
      "mapping": "charm_option"
    },
    "package_version": {
      "type": "string",
      "description": "Force specific version of the cassandra package.\n",
      "default": "",
      "mapping": "charm_option"
    },
    "partitioner": {
      "type": "string",
      "description": "The cassandra partitioner to use",
      "default": "org.apache.cassandra.dht.RandomPartitioner",
      "mapping": "charm_option"
    },
    "prefer_local": {
      "type": "boolean",
      "description": "Used with endpoint_snitch=GossipingPropertyFileSnitch to prefer the internal ip when possible, as the Ec2MultiRegionSnitch does. Used with cassandra >= 1.2.x",
      "default": false,
      "mapping": "charm_option"
    },
    "rack": {
      "type": "string",
      "description": "The rack used by the enpoint_snitch. i.e. \"Rack1\"",
      "default": "",
      "mapping": "charm_option"
    },
    "stream-throughput": {
      "type": "int",
      "description": "Throttles all outbound streaming file transfers on nodes to the given total throughput in Mbps. This is necessary because Cassandra does mostly sequential IO when streaming data during bootstrap or  repair, which can lead to saturating the network connection and  degrading rpc performance. When unset, the default is 200 Mbps or 25 MB/s. 0 to disable throttling.\n",
      "default": 200,
      "mapping": "charm_option"
    },
    "token-map-by-unitname": {
      "type": "string",
      "description": "YAML map as e.g. \"{ cassandra/0: 107950406921370402326527496543482482275, cassandra/1: 150485702786487710259449322472453508707 }\". Set initial_token according to the unit name using this map. Cannot be used  if token-map-by-volid is also set. If persistent storage is being used then use token-map-by-volid instead. Useful when rebalancing a ring by hand\n",
      "default": "",
      "mapping": "charm_option"
    },
    "token-map-by-volid": {
      "type": "string",
      "description": "YAML map as e.g. \"{ vol-00000012: 107950406921370402326527496543482482275, vol-00000013: 150485702786487710259449322472453508707 }\". Set initial_token according to the name of the attached volume using this map. Can only be used when using persistent storage and cannot be used if token-map-by-unitname is also set.  Useful when rebalancing a ring by hand\n",
      "default": "",
      "mapping": "charm_option"
    },
    "units-to-update": {
      "type": "string",
      "description": "Comma separated list of unit numbers to update (i.e. modify /etc setup and trigger cassandra restart on config-change or upgrade-charm), or \"all\".\n",
      "default": "all",
      "mapping": "charm_option"
    },
    "use-simpleauth": {
      "type": "boolean",
      "description": "If True, it will use passwd-prop64 and access-prop64 configs\n(base64 encoded) to setup simple authentication by adding to JVM_OPTS:\n-Dpasswd.properties=/etc/casssandra/passwd.properties \\\n-Daccess.properties=/etc/casssandra/access.properties\nSee http://www.datastax.com/docs/1.0/configuration/authentication\n",
      "default": false,
      "mapping": "charm_option"
    },
    "volume-dev-regexp": {
      "type": "string",
      "description": "Block device for attached volumes as seen by the VM, will be \"scanned\" for an unused device when \"volume-map\" is valid for the unit.\n",
      "default": "/dev/vd[b-z]",
      "mapping": "charm_option"
    },
    "volume-ephemeral-storage": {
      "type": "boolean",
      "description": "If False, a configure-error state will be raised if\n   volume-map[$JUJU_UNIT_NAME] is not set (see \"volume-map\"\n   below) - see \"volume-map\" below.\nIf True, service units won't try to use \"volume-map\" (and\n   related variables) to mount and use external (EBS) volumes,\n   thus storage lifetime will equal VM, thus ephemeral.\n   YOU'VE BEEN WARNED.\n",
      "default": true,
      "mapping": "charm_option"
    },
    "volume-map": {
      "type": "string",
      "description": "YAML map as e.g. \"{ cassandra/0: vol-0000010, cassandra/1: vol-0000016 }\". Service units will raise a \"configure-error\" condition if no volume-map value is set for it - it's expected a human to set it properly to resolve it.\n",
      "default": "",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/cassandra",
      "juju_interface": "cassandra",
      "juju_name": "database",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/cassandra",
      "juju_interface": "cassandra",
      "juju_name": "jmx",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/nrpe-external-master",
      "juju_interface": "nrpe-external-master",
      "juju_name": "nrpe-external-master",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "cluster": {
      "Name": "cluster",
      "Role": "peer",
      "Interface": "cassandra-cluster",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "# Overview\n\nThe Apache Cassandra database is the right choice when you need scalability\nand high availability without compromising performance. Linear scalability\nand proven fault-tolerance on commodity hardware or cloud infrastructure\nmake it the perfect platform for mission-critical data. Cassandra's support\nfor replicating across multiple datacenters is best-in-class, providing lower\nlatency for your users and the peace of mind of knowing that you can survive\nregional outages.\n\nCassandra's ColumnFamily data model offers the convenience of column indexes\nwith the performance of log-structured updates, strong support for materialized\nviews, and powerful built-in caching.\n\nSee [cassandra.apache.org](http://cassandra.apache.org) for more information.\n\n# Usage\n\nCassandra deployments are relatively simple in that they consist of a set of\nCassandra nodes which seed from each other to create a ring of servers:\n\n    juju deploy precise/cassandra\n    juju add-unit -n 2 cassandra\n\nThe service units will deploy and will form a single ring.\n\nThe API to Cassandra is supported through Apache Thrift; Thrift is a software\nframework for scalable cross-language services development.\n\nSee [this documentation](http://wiki.apache.org/cassandra/ThriftInterface) for more details of how to use this API.\n\nCassandra recommend using one of the many client options - see\n[ClientOptions](http://wiki.apache.org/cassandra/ClientOptions) for more details.\n\nTo relate the Cassandra charm to a service that understands how to talk to\nCassandra using thrift::\n\n    juju deploy --repository . local:service-that-needs-cassandra\n    juju add-relation service-that-needs-cassandra cassandra\n\n\n### Offline Installation\n\nThe cassandra charm supports offline-capable installation (and cross platform installation's) by the use of 'fat-packing' the charm.\n\nPlace a `cassandra_*.deb` in files. During deployment, the cassandra charm checks for the presence of this file, if present, it utilizes that deb resource instead of reaching out over the wire.\n\nYou can fetch upstream Cassandra debs: [here](http://www.apache.org/dist/cassandra/debian/pool/main/c/cassandra/)\n\n# Known Limitations and Issues\n\nChanging the configuration of a deployed Cassandra cluster is supported; however\nit will result in a restart of each Cassandra node as the changes are implemented\nwhich may result in outages.\n\nThe trusty version of the cassandra charm is completely different than this\ncharm and may not support the same configuration options as this charm does.\n\n# Configuration\n\nCassandra has a pretty good guess at configuring its Java memory settings to\nfit the machine that it has been deployed on.\n\nThe charm does support manual configuration of Java memory settings - see the\nconfig.yaml file for more details::\n\n    cassandra:\n        auto-memory: false\n        heap-size: 8G\n        new-gen-size: 250M\n\nHowever be aware that its recommended that Cassandra always remains in 'real'\nmemory and should never be swapped out to disk so keep this in mind when\nchanging these options.\n\nCassandra sets both is minimum and maximum heap size on startup so will\npre-allocate all memory to avoid freezes during operation (this happens\nduring normal operation as more memory is allocated to heap.\n\nThis charm supports installing a different package version than what is in the\nUbuntu software archives.  You need to specify multiple options at once.\n\n    cassandra:\n        allow-single-node: True\n        cluster-name: juju\n        apt-repo-spec: \"deb http://debian.datastax.com/community stable main\"\n        apt-repo-key: \"7E41C00F85BFC1706C4FFFB3350200F2B999A372\"\n        extra_packages: \"openjdk-7-jre-headless dsc20=2.0.10-1\"\n        package_version: \"2.0.10\"\n\n\n# Contact Information\n\n## Cassandra\n\n- [Apache Cassandra homepage](http://cassandra.apache.org/)\n- [Cassandra Getting Started](http://wiki.apache.org/cassandra/GettingStarted)\n",
  "readme": "# Overview\n\nThe Apache Cassandra database is the right choice when you need scalability\nand high availability without compromising performance. Linear scalability\nand proven fault-tolerance on commodity hardware or cloud infrastructure\nmake it the perfect platform for mission-critical data. Cassandra's support\nfor replicating across multiple datacenters is best-in-class, providing lower\nlatency for your users and the peace of mind of knowing that you can survive\nregional outages.\n\nCassandra's ColumnFamily data model offers the convenience of column indexes\nwith the performance of log-structured updates, strong support for materialized\nviews, and powerful built-in caching.\n\nSee [cassandra.apache.org](http://cassandra.apache.org) for more information.\n\n# Usage\n\nCassandra deployments are relatively simple in that they consist of a set of\nCassandra nodes which seed from each other to create a ring of servers:\n\n    juju deploy precise/cassandra\n    juju add-unit -n 2 cassandra\n\nThe service units will deploy and will form a single ring.\n\nThe API to Cassandra is supported through Apache Thrift; Thrift is a software\nframework for scalable cross-language services development.\n\nSee [this documentation](http://wiki.apache.org/cassandra/ThriftInterface) for more details of how to use this API.\n\nCassandra recommend using one of the many client options - see\n[ClientOptions](http://wiki.apache.org/cassandra/ClientOptions) for more details.\n\nTo relate the Cassandra charm to a service that understands how to talk to\nCassandra using thrift::\n\n    juju deploy --repository . local:service-that-needs-cassandra\n    juju add-relation service-that-needs-cassandra cassandra\n\n\n### Offline Installation\n\nThe cassandra charm supports offline-capable installation (and cross platform installation's) by the use of 'fat-packing' the charm.\n\nPlace a `cassandra_*.deb` in files. During deployment, the cassandra charm checks for the presence of this file, if present, it utilizes that deb resource instead of reaching out over the wire.\n\nYou can fetch upstream Cassandra debs: [here](http://www.apache.org/dist/cassandra/debian/pool/main/c/cassandra/)\n\n# Known Limitations and Issues\n\nChanging the configuration of a deployed Cassandra cluster is supported; however\nit will result in a restart of each Cassandra node as the changes are implemented\nwhich may result in outages.\n\nThe trusty version of the cassandra charm is completely different than this\ncharm and may not support the same configuration options as this charm does.\n\n# Configuration\n\nCassandra has a pretty good guess at configuring its Java memory settings to\nfit the machine that it has been deployed on.\n\nThe charm does support manual configuration of Java memory settings - see the\nconfig.yaml file for more details::\n\n    cassandra:\n        auto-memory: false\n        heap-size: 8G\n        new-gen-size: 250M\n\nHowever be aware that its recommended that Cassandra always remains in 'real'\nmemory and should never be swapped out to disk so keep this in mind when\nchanging these options.\n\nCassandra sets both is minimum and maximum heap size on startup so will\npre-allocate all memory to avoid freezes during operation (this happens\nduring normal operation as more memory is allocated to heap.\n\nThis charm supports installing a different package version than what is in the\nUbuntu software archives.  You need to specify multiple options at once.\n\n    cassandra:\n        allow-single-node: True\n        cluster-name: juju\n        apt-repo-spec: \"deb http://debian.datastax.com/community stable main\"\n        apt-repo-key: \"7E41C00F85BFC1706C4FFFB3350200F2B999A372\"\n        extra_packages: \"openjdk-7-jre-headless dsc20=2.0.10-1\"\n        package_version: \"2.0.10\"\n\n\n# Contact Information\n\n## Cassandra\n\n- [Apache Cassandra homepage](http://cassandra.apache.org/)\n- [Cassandra Getting Started](http://wiki.apache.org/cassandra/GettingStarted)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}