{
  "name": "galera-cluster Juju charm",
  "juju_charm_name": "galera-cluster",
  "revision": "cs:trusty/galera-cluster-1",
  "latest": true,
  "uris": [
    "https://jujucharms.com/galera-cluster",
    "https://jujucharms.com/galera-cluster/trusty",
    "https://jujucharms.com/galera-cluster/trusty/1",
    "https://api.jujucharms.com/v5/galera-cluster",
    "https://api.jujucharms.com/v5/trusty/galera-cluster",
    "https://api.jujucharms.com/v5/trusty/galera-cluster-1"
  ],
  "labels": [
    "Juju charm",
    "databases",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/API/Toolkit",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Orchestration/Cluster-based",
    "Type/Infrastructure/Operating System/Linux/Ubuntu",
    "Type/Middleware/Data Store/Relational/MySQL"
  ],
  "info_url": "https://jujucharms.com/galera-cluster",
  "package_url": "https://api.jujucharms.com/v5/trusty/galera-cluster-1/archive",
  "created": "2015-11-04T21:46:15.722Z",
  "updated": "2015-11-04T21:46:15.722Z",
  "description": "Galera Cluster - Active/Active Synchronous MySQL Replication\n\nGalera Cluster provides an active/active MySQL\ncompatible alternative implemented using the Galera\nsynchronous replication library.\n\nThis charm is based on the Percona Cluster charm by\nJames Page <james.page@ubuntu.com>\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "trusty",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= trusty"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/hacluster",
      "self_resolve": true,
      "juju_interface": "hacluster",
      "juju_name": "ha",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "access-network": {
      "type": "string",
      "description": "The IP address and netmask of the 'access' network (e.g., 192.168.0.0/24)\n.\nThis network will be used for access to database services.\n",
      "default": null,
      "mapping": "charm_option"
    },
    "dataset-size": {
      "type": "string",
      "description": "How much data do you want to keep in memory in the DB. This will be used to tune settings in the database server appropriately. Suffix this value with 'K','M','G', or 'T' to get the relevant kilo/mega/etc. bytes. If suffixed with %, one will get that percentage of RAM devoted to dataset.",
      "default": "80%",
      "mapping": "charm_option"
    },
    "ha-bindiface": {
      "type": "string",
      "description": "Default network interface on which HA cluster will bind to communication with the other members of the HA Cluster.",
      "default": "eth0",
      "mapping": "charm_option"
    },
    "ha-mcastport": {
      "type": "int",
      "description": "Default multicast port number that will be used to communicate between HA Cluster nodes.",
      "default": 5490,
      "mapping": "charm_option"
    },
    "innodb-file-per-table": {
      "type": "boolean",
      "description": "Turns on innodb_file_per_table option, which will make MySQL put each\nInnoDB table into separate .idb file. Existing InnoDB tables will remain\nin ibdata1 file - full dump/import is needed to get rid of large\nibdata1 file\n",
      "default": true,
      "mapping": "charm_option"
    },
    "max-connections": {
      "type": "int",
      "description": "Maximum connections to allow. -1 means use the server's compiled in default.",
      "default": -1,
      "mapping": "charm_option"
    },
    "prefer-ipv6": {
      "type": "boolean",
      "description": "If True enables IPv6 support. The charm will expect network interfaces\nto be configured with an IPv6 address. If set to False (default) IPv4\nis expected.\n.\nNOTE: these charms do not currently support IPv6 privacy extension. In\norder for this charm to function correctly, the privacy extension must be\ndisabled and a non-temporary address must be configured/available on\nyour network interface.\n",
      "default": false,
      "mapping": "charm_option"
    },
    "root-password": {
      "type": "string",
      "description": "Root password for MySQL access; must be configured pre-deployment for Active-Active clusters.",
      "default": null,
      "mapping": "charm_option"
    },
    "source": {
      "type": "string",
      "description": "Additional package install location",
      "default": null,
      "mapping": "charm_option"
    },
    "source-galera": {
      "type": "string",
      "description": "Package install location for Galera Cluster (defaults to distro for >= 14.04)",
      "default": null,
      "mapping": "charm_option"
    },
    "source-galera-key": {
      "type": "string",
      "description": "key for source-galera repository",
      "default": "BC19DDBA",
      "mapping": "charm_option"
    },
    "sst-password": {
      "type": "string",
      "description": "Re-sync account password for new cluster nodes; must be configured pre-deployment for Active-Active clusters.",
      "default": null,
      "mapping": "charm_option"
    },
    "vip": {
      "type": "string",
      "description": "Virtual IP to use to front Galera Cluster in active/active HA configuration",
      "default": null,
      "mapping": "charm_option"
    },
    "vip_cidr": {
      "type": "int",
      "description": "Netmask that will be used for the Virtual IP",
      "default": 24,
      "mapping": "charm_option"
    },
    "vip_iface": {
      "type": "string",
      "description": "Network interface on which to place the Virtual IP",
      "default": "eth0",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/mysql",
      "juju_interface": "mysql",
      "juju_name": "db",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/mysql-root",
      "juju_interface": "mysql-root",
      "juju_name": "db-admin",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/mysql-shared",
      "juju_interface": "mysql-shared",
      "juju_name": "shared-db",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "cluster": {
      "Name": "cluster",
      "Role": "peer",
      "Interface": "galera-cluster",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "Overview\n========\n\nGalera Cluster is a high availability and high scalability solution for\nMySQL clustering. Galera Cluster integrates MySQL with the\nGalera library of MySQL high availability solutions in a single product package\nwhich enables you to create a cost-effective MySQL cluster.\n\nThis charm deploys Galera Cluster onto Ubuntu.\n\nUsage\n=====\n\nWARNING: Its critical that you follow the bootstrap process detailed in this\ndocument in order to end up with a running Active/Active Galera Cluster.\n\nConfiguration\n-------------\n\nThe following configuration parameters are required:\n\n* root-password - Due to the multi-master nature of Galera Cluster, the root-password \nneeds to be specified in advance so that all nodes have the same root password.\n\n* sst-password - This password is used as a shared secret between nodes when performing\nwhole-database transfers between nodes during node deployment.\n\n\nProxy Configuration\n-------------------\n\nIf you are deploying this charm on MAAS or in an environment without direct\naccess to the internet, you will need to allow access to releases.galeracluster.com\nas the charm installs packages directly from the Galera repositories. If you\nare using squid-deb-proxy, follow the steps below:\n\n    echo \"releases.galeracluster.com\" | sudo tee /etc/squid-deb-proxy/mirror-dstdomain.acl.d/40-galera\n    sudo service squid-deb-proxy restart\n\nDeployment\n----------\n\nThe first service unit deployed acts as the seed node for the rest of the\ncluster; in order for the cluster to function correctly, the same MySQL passwords\nmust be used across all nodes:\n\n    cat > galera.yaml << EOF\n    galera-cluster:\n        root-password: my-root-password\n        sst-password: my-sst-password\n    EOF\n\nOnce you have created this file, you can deploy the first seed unit:\n\n    juju deploy --config galera.yaml cs:~codership/galera-cluster\n\nOnce this node is full operational, you can add extra units one at a time to the\ndeployment:\n\n    juju add-unit galera-cluster\n\nA minimum cluster size of three units is recommended.\n\nIn order to access the cluster, you can use the hacluster charm in multicast-capable\ndeployments to provide a single IP address:\n\n    juju set galera-cluster vip=10.0.3.200\n    juju deploy hacluster\n    juju add-relation hacluster galera-cluster\n\nClients can then access using the vip provided. This vip will be passed to\nrelated services:\n\n    juju add-relation keystone galera-cluster\n\n\nLimitations\n============\n\nNote that Galera Cluster is not a 'scale-out' MySQL solution; reads\nand writes are channeled through a single service unit and synchronously\nreplicated to other nodes in the cluster; reads/writes are as slow as the\nslowest node you have in your deployment.\n\n\n",
  "readme": "Overview\n========\n\nGalera Cluster is a high availability and high scalability solution for\nMySQL clustering. Galera Cluster integrates MySQL with the\nGalera library of MySQL high availability solutions in a single product package\nwhich enables you to create a cost-effective MySQL cluster.\n\nThis charm deploys Galera Cluster onto Ubuntu.\n\nUsage\n=====\n\nWARNING: Its critical that you follow the bootstrap process detailed in this\ndocument in order to end up with a running Active/Active Galera Cluster.\n\nConfiguration\n-------------\n\nThe following configuration parameters are required:\n\n* root-password - Due to the multi-master nature of Galera Cluster, the root-password \nneeds to be specified in advance so that all nodes have the same root password.\n\n* sst-password - This password is used as a shared secret between nodes when performing\nwhole-database transfers between nodes during node deployment.\n\n\nProxy Configuration\n-------------------\n\nIf you are deploying this charm on MAAS or in an environment without direct\naccess to the internet, you will need to allow access to releases.galeracluster.com\nas the charm installs packages directly from the Galera repositories. If you\nare using squid-deb-proxy, follow the steps below:\n\n    echo \"releases.galeracluster.com\" | sudo tee /etc/squid-deb-proxy/mirror-dstdomain.acl.d/40-galera\n    sudo service squid-deb-proxy restart\n\nDeployment\n----------\n\nThe first service unit deployed acts as the seed node for the rest of the\ncluster; in order for the cluster to function correctly, the same MySQL passwords\nmust be used across all nodes:\n\n    cat > galera.yaml << EOF\n    galera-cluster:\n        root-password: my-root-password\n        sst-password: my-sst-password\n    EOF\n\nOnce you have created this file, you can deploy the first seed unit:\n\n    juju deploy --config galera.yaml cs:~codership/galera-cluster\n\nOnce this node is full operational, you can add extra units one at a time to the\ndeployment:\n\n    juju add-unit galera-cluster\n\nA minimum cluster size of three units is recommended.\n\nIn order to access the cluster, you can use the hacluster charm in multicast-capable\ndeployments to provide a single IP address:\n\n    juju set galera-cluster vip=10.0.3.200\n    juju deploy hacluster\n    juju add-relation hacluster galera-cluster\n\nClients can then access using the vip provided. This vip will be passed to\nrelated services:\n\n    juju add-relation keystone galera-cluster\n\n\nLimitations\n============\n\nNote that Galera Cluster is not a 'scale-out' MySQL solution; reads\nand writes are channeled through a single service unit and synchronously\nreplicated to other nodes in the cluster; reads/writes are as slow as the\nslowest node you have in your deployment.\n\n\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}