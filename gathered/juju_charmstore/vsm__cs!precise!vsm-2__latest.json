{
  "name": "vsm Juju charm",
  "juju_charm_name": "vsm",
  "revision": "cs:precise/vsm-2",
  "latest": true,
  "uris": [
    "https://jujucharms.com/vsm",
    "https://jujucharms.com/vsm/precise",
    "https://jujucharms.com/vsm/precise/2",
    "https://api.jujucharms.com/v5/vsm",
    "https://api.jujucharms.com/v5/precise/vsm",
    "https://api.jujucharms.com/v5/precise/vsm-2"
  ],
  "labels": [
    "Juju charm",
    "misc",
    "Binding/Provider/HP",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Test",
    "Type/Devopsware/Deployment/Juju"
  ],
  "info_url": "https://jujucharms.com/vsm",
  "package_url": "https://api.jujucharms.com/v5/precise/vsm-2/archive",
  "created": "2015-06-17T09:32:10.807Z",
  "updated": "2015-06-17T09:32:10.807Z",
  "description": "The charm automates the installation of Nexus1K VSM\n\nThis charm automates the installation of Nexus1K VSM(Virtual\nSupervisor Module). It can deploy both primary and secondary\nVSM in a single domain.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "parameters": {
    "n1kv-bridge-name": {
      "type": "string",
      "description": "Bridge name behind which the VSM will be attached",
      "default": "br-int",
      "mapping": "charm_option"
    },
    "n1kv-local-repo": {
      "type": "string",
      "description": "(Optional) Provide the local address of VSM iso package",
      "default": "",
      "mapping": "charm_option"
    },
    "n1kv-phy-intf-bridge": {
      "type": "string",
      "description": "Physical uplink interface for the bridge",
      "default": "eth0",
      "mapping": "charm_option"
    },
    "n1kv-source": {
      "type": "string",
      "description": "Additinal sources: ppa:myteam/ppa, deb http://my.archive.com/ubuntu main|KEYID",
      "default": "distro",
      "mapping": "charm_option"
    },
    "n1kv-version": {
      "type": "string",
      "description": "(Optional) Indicates VSM version. By default picks up the latest",
      "default": "",
      "mapping": "charm_option"
    },
    "n1kv-vsm-console-pts": {
      "type": "int",
      "description": "VSM virtual machine console port",
      "default": 2,
      "mapping": "charm_option"
    },
    "n1kv-vsm-ctrl-interface": {
      "type": "string",
      "description": "Control tap interface name for the VSM VM",
      "default": "vsm-ctrl0",
      "mapping": "charm_option"
    },
    "n1kv-vsm-ctrl-mac": {
      "type": "string",
      "description": "Mac address of Control interface from VSM. By default is assigned randomly.",
      "default": "",
      "mapping": "charm_option"
    },
    "n1kv-vsm-disk-size": {
      "type": "int",
      "description": "Disk size (in GB) for the VSM VM",
      "default": 4,
      "mapping": "charm_option"
    },
    "n1kv-vsm-domain-id": {
      "type": "int",
      "description": "Domain id this Nexus1000v VSM will control",
      "default": 101,
      "mapping": "charm_option"
    },
    "n1kv-vsm-memory-size": {
      "type": "int",
      "description": "Memory size (in KiB) for the VSM VM",
      "default": 4,
      "mapping": "charm_option"
    },
    "n1kv-vsm-mgmt-gateway": {
      "type": "string",
      "description": "(Mandatory) VSM virtual machines management gateway",
      "default": "",
      "mapping": "charm_option"
    },
    "n1kv-vsm-mgmt-interface": {
      "type": "string",
      "description": "Management tap interface name for the VSM VM",
      "default": "vsm-mgmt0",
      "mapping": "charm_option"
    },
    "n1kv-vsm-mgmt-ip": {
      "type": "string",
      "description": "(Mandatory) VSM virtual machine management ip address",
      "default": "",
      "mapping": "charm_option"
    },
    "n1kv-vsm-mgmt-mac": {
      "type": "string",
      "description": "Mac address of Management interface from VSM. By default is assigned randomly.",
      "default": "",
      "mapping": "charm_option"
    },
    "n1kv-vsm-mgmt-netmask": {
      "type": "string",
      "description": "(Mandatory) VSM virtual machines management netmask",
      "default": "",
      "mapping": "charm_option"
    },
    "n1kv-vsm-name": {
      "type": "string",
      "description": "Nexus1000v VSM virtual machine (VM) name",
      "default": "vsm-p",
      "mapping": "charm_option"
    },
    "n1kv-vsm-password": {
      "type": "string",
      "description": "(Mandatory) Password of the admin user for the VSM VM",
      "default": "",
      "mapping": "charm_option"
    },
    "n1kv-vsm-pkt-interface": {
      "type": "string",
      "description": "Packet tap interface name for the VSM VM",
      "default": "vsm-pkt0",
      "mapping": "charm_option"
    },
    "n1kv-vsm-pkt-mac": {
      "type": "string",
      "description": "Mac address of Packet interface from VSM. By default is assigned randomly.",
      "default": "",
      "mapping": "charm_option"
    },
    "n1kv-vsm-role": {
      "type": "string",
      "description": "Nexus1000v VSMs role - primary or secondary",
      "default": "primary",
      "mapping": "charm_option"
    },
    "n1kv-vsm-vcpu-pin": {
      "type": "boolean",
      "description": "Indicates if VSM VM will do vcpu pinning",
      "default": true,
      "mapping": "charm_option"
    },
    "n1kv-vsm-vnc-port": {
      "type": "int",
      "description": "VNC port number to of the VSM console",
      "default": 8901,
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/dvs",
      "juju_interface": "dvs",
      "juju_name": "dvs",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Overview\n\nThere are two major components in a Cisco Nexus 1000V environment: \nVSM (Virtual Switch Supervisor) and VEM (Virtual Ethernet Module).\nVSM is a virtual machine on a baremetal server. VEM runs inside each host. \nVSM, as the name goes, supervises and manages multiple VEMs.\n\nIn the OpenStack deployment environment, VSM prepares north \nbound REST APIs that communicate with OpenStack Nova Cloud \nController for network profile configuration, policy profile \nnotification, network creation, subnet creation, and virtual \nmachine workload administration.\n\nVSM charm installs the Nexus 1000V virtual switch Supervisor \nModule virtual machine onto a MaaS cluster node. A cluster can \nhave up to 2 VSM in active/standby mode (generally in two different servers).\nWhen the active one fails, the standby will take over within bounded time.\n\nVSM charm is not directly dependent of other OpenStack nodes,\nunlike other Cisco charms like VEM or VXGW (VLAN Extended Gateway), \nwhich are subordinate charms. \n\nOnce the VSM charm is deployed it creates a VSM Virtual Machine (VM)\nin the MaaS node. Hence a requirement for VSM to communicate with other\nOpenstack/Cisco charms is to have L3 connectivity with the rest of \nthe MaaS cluster nodes.\n\n# Usage\n\nIn order to use Cisco Openstack solution we would need to install \nVSM on a cluster node as well as VEM module that goes into each \nhost. As today the VSM charm needs to be network reachable to other \nnodes using the regular mgmt host interface. (This interface is \nspecified by the n1kv-phy-intf-bridge configuration parameter of \nthe charm).\n\nIn order to provide High Availability for VSM you'll need to deploy \ntwo VSMs (one will be the primary and another the secondary)\nin two different hosts. \n\nIn order to deploy the VSMs (both primary and secondary), you will \nneed to create a configuration file where you need to provide specific\nconfiguration of your VSM. To differentiate the different primary \nand secondary VSM configuration, we create separate sections for them\non the configuration file and also you deploy as two different service\nnames.\n\nThe VSM charm will automatically create the VSM VM. For that, you'll \nprovide (as a minimum):\n   - a static IP, netmask and gateway address for network reachability\nof this VM (by specifiying the n1kv-vsm-mgmt-ip, n1kv-vsm-mgmt-netmask and\nn1kv-vsm-mgmt-gateway configuration parameters). This VM uses the \ninterface specified in n1kv-phy-intf-bridge as external network \ninterface.\n   - domain id that the VSM operates (by the n1kv-vsm-domain-id configuration parameter)\n   - password for the administrator to ssh to the VSM VM (n1kv-vsm-password)\n   - role which specifies if the VSM will be primary or secondary (n1kv-vsm-role)\n\nFor example, you create a myconfig.yaml configuration file with the \nfollowing the minimal mandatory information:\n\n    vsm-primary:\n        n1kv-vsm-domain-id: 101\n        n1kv-vsm-password: passw0rd\n        n1kv-vsm-name: vsm-p\n        n1kv-vsm-role: primary\n        n1kv-vsm-mgmt-ip: 10.10.10.10\n        n1kv-vsm-mgmt-netmask: 255.255.255.0\n        n1kv-vsm-mgmt-gateway: 10.10.10.1\n        n1kv-phy-intf-bridge: eth0\n        .....\n\n    vsm-secondary:\n        n1kv-vsm-domain-id: 101\n        n1kv-vsm-password: passw0rd\n        n1kv-vsm-name: vsm-s\n        n1kv-vsm-role: secondary\n        n1kv-phy-intf-bridge: eth0\n        .....\n   \n\nCheck the config.yaml file for default configuration values and other \nconfigurable parameters of the VSM charm.\n\nThen you deploy the primary VSM with the following command:\n\n    juju deploy --config myconfig.yaml vsm vsm-primary\n\nThen you deploy the secondary VSM with the following command:\n\n    juju deploy --config myconfig.yaml vsm vsm-secondary\n\nTo put VEM into VSM supervision, you need to do the following:\n\n    juju add-relation vsm vem\n\n# Testing\n\nPrior to submit changes to the charm store for this charm you need to run\nthe automatic testing implemented in the charm. \n\n*IMPORTANT* Notice that there are some requirements for the VSM charm to \nrun the testing scripts. Hence, prior to execute them you need to prepare\nand environment with the following nodes available for charm testing\ndeployment:\n    - A least two nodes\n    - Nodes need to be physical (not virtual machines)\n    - Nodes need to had a tag called \"physical\"\n\nThen you need a YAML file which will be use by the testing suite to verify\nthe changes you made for the VSM charm. You can reuse the existing file \n(myconfig.yaml) used for deployment of the VSM charm or create another one\nspecific for testing. The testing scripts expects the following parameters:\n\n    vsm-primary:\n           n1kv-source: ppa:cisco-ppa/vsm\n           n1kv-vsm-domain-id: 101\n           n1kv-vsm-password: mypassw0rd\n           n1kv-vsm-mgmt-ip: 10.10.10.10\n           n1kv-vsm-mgmt-netmask: \"255.255.255.0\n           n1kv-vsm-mgmt-gateway: 10.10.10.1\n           n1kv-phy-intf-bridge: eth0\n\nAlso, you need to set an environment variable called VSM_AMULET_FILE with\nthe location and name of the yaml file use for testing. \nExample:\n\n`export VSM_AMULET_FILE=\"./amulet.yaml\"`\n\nThen execute the following command to verify the testing scripts:\n\n`make tests`\n\n# Contact Information\n\nAuthor: Marga Millet <millet@cisco.com>  \nReport bugs at: http://bugs.launchpad.net/charms/+source/vsm  \nLocation: http://jujucharms.com/\n\n",
  "readme": "# Overview\n\nThere are two major components in a Cisco Nexus 1000V environment: \nVSM (Virtual Switch Supervisor) and VEM (Virtual Ethernet Module).\nVSM is a virtual machine on a baremetal server. VEM runs inside each host. \nVSM, as the name goes, supervises and manages multiple VEMs.\n\nIn the OpenStack deployment environment, VSM prepares north \nbound REST APIs that communicate with OpenStack Nova Cloud \nController for network profile configuration, policy profile \nnotification, network creation, subnet creation, and virtual \nmachine workload administration.\n\nVSM charm installs the Nexus 1000V virtual switch Supervisor \nModule virtual machine onto a MaaS cluster node. A cluster can \nhave up to 2 VSM in active/standby mode (generally in two different servers).\nWhen the active one fails, the standby will take over within bounded time.\n\nVSM charm is not directly dependent of other OpenStack nodes,\nunlike other Cisco charms like VEM or VXGW (VLAN Extended Gateway), \nwhich are subordinate charms. \n\nOnce the VSM charm is deployed it creates a VSM Virtual Machine (VM)\nin the MaaS node. Hence a requirement for VSM to communicate with other\nOpenstack/Cisco charms is to have L3 connectivity with the rest of \nthe MaaS cluster nodes.\n\n# Usage\n\nIn order to use Cisco Openstack solution we would need to install \nVSM on a cluster node as well as VEM module that goes into each \nhost. As today the VSM charm needs to be network reachable to other \nnodes using the regular mgmt host interface. (This interface is \nspecified by the n1kv-phy-intf-bridge configuration parameter of \nthe charm).\n\nIn order to provide High Availability for VSM you'll need to deploy \ntwo VSMs (one will be the primary and another the secondary)\nin two different hosts. \n\nIn order to deploy the VSMs (both primary and secondary), you will \nneed to create a configuration file where you need to provide specific\nconfiguration of your VSM. To differentiate the different primary \nand secondary VSM configuration, we create separate sections for them\non the configuration file and also you deploy as two different service\nnames.\n\nThe VSM charm will automatically create the VSM VM. For that, you'll \nprovide (as a minimum):\n   - a static IP, netmask and gateway address for network reachability\nof this VM (by specifiying the n1kv-vsm-mgmt-ip, n1kv-vsm-mgmt-netmask and\nn1kv-vsm-mgmt-gateway configuration parameters). This VM uses the \ninterface specified in n1kv-phy-intf-bridge as external network \ninterface.\n   - domain id that the VSM operates (by the n1kv-vsm-domain-id configuration parameter)\n   - password for the administrator to ssh to the VSM VM (n1kv-vsm-password)\n   - role which specifies if the VSM will be primary or secondary (n1kv-vsm-role)\n\nFor example, you create a myconfig.yaml configuration file with the \nfollowing the minimal mandatory information:\n\n    vsm-primary:\n        n1kv-vsm-domain-id: 101\n        n1kv-vsm-password: passw0rd\n        n1kv-vsm-name: vsm-p\n        n1kv-vsm-role: primary\n        n1kv-vsm-mgmt-ip: 10.10.10.10\n        n1kv-vsm-mgmt-netmask: 255.255.255.0\n        n1kv-vsm-mgmt-gateway: 10.10.10.1\n        n1kv-phy-intf-bridge: eth0\n        .....\n\n    vsm-secondary:\n        n1kv-vsm-domain-id: 101\n        n1kv-vsm-password: passw0rd\n        n1kv-vsm-name: vsm-s\n        n1kv-vsm-role: secondary\n        n1kv-phy-intf-bridge: eth0\n        .....\n   \n\nCheck the config.yaml file for default configuration values and other \nconfigurable parameters of the VSM charm.\n\nThen you deploy the primary VSM with the following command:\n\n    juju deploy --config myconfig.yaml vsm vsm-primary\n\nThen you deploy the secondary VSM with the following command:\n\n    juju deploy --config myconfig.yaml vsm vsm-secondary\n\nTo put VEM into VSM supervision, you need to do the following:\n\n    juju add-relation vsm vem\n\n# Testing\n\nPrior to submit changes to the charm store for this charm you need to run\nthe automatic testing implemented in the charm. \n\n*IMPORTANT* Notice that there are some requirements for the VSM charm to \nrun the testing scripts. Hence, prior to execute them you need to prepare\nand environment with the following nodes available for charm testing\ndeployment:\n    - A least two nodes\n    - Nodes need to be physical (not virtual machines)\n    - Nodes need to had a tag called \"physical\"\n\nThen you need a YAML file which will be use by the testing suite to verify\nthe changes you made for the VSM charm. You can reuse the existing file \n(myconfig.yaml) used for deployment of the VSM charm or create another one\nspecific for testing. The testing scripts expects the following parameters:\n\n    vsm-primary:\n           n1kv-source: ppa:cisco-ppa/vsm\n           n1kv-vsm-domain-id: 101\n           n1kv-vsm-password: mypassw0rd\n           n1kv-vsm-mgmt-ip: 10.10.10.10\n           n1kv-vsm-mgmt-netmask: \"255.255.255.0\n           n1kv-vsm-mgmt-gateway: 10.10.10.1\n           n1kv-phy-intf-bridge: eth0\n\nAlso, you need to set an environment variable called VSM_AMULET_FILE with\nthe location and name of the yaml file use for testing. \nExample:\n\n`export VSM_AMULET_FILE=\"./amulet.yaml\"`\n\nThen execute the following command to verify the testing scripts:\n\n`make tests`\n\n# Contact Information\n\nAuthor: Marga Millet <millet@cisco.com>  \nReport bugs at: http://bugs.launchpad.net/charms/+source/vsm  \nLocation: http://jujucharms.com/\n\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}