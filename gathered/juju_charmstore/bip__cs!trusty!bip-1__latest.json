{
  "name": "bip Juju charm",
  "juju_charm_name": "bip",
  "revision": "cs:trusty/bip-1",
  "latest": true,
  "uris": [
    "https://jujucharms.com/bip",
    "https://jujucharms.com/bip/trusty",
    "https://jujucharms.com/bip/trusty/1",
    "https://api.jujucharms.com/v5/bip",
    "https://api.jujucharms.com/v5/trusty/bip",
    "https://api.jujucharms.com/v5/trusty/bip-1"
  ],
  "labels": [
    "Juju charm",
    "chat",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Middleware/Proxy"
  ],
  "info_url": "https://jujucharms.com/bip",
  "package_url": "https://api.jujucharms.com/v5/trusty/bip-1/archive",
  "created": "2015-09-30T17:01:57.541Z",
  "updated": "2015-09-30T17:01:57.541Z",
  "description": "Bip\n\nmultiuser irc proxy with conversation replay and more",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "trusty",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= trusty"
    }
  ],
  "parameters": {
    "backlog_lines": {
      "type": "int",
      "description": "Number of lines to replay after connect, 0 will replay all lines.",
      "default": 0,
      "mapping": "charm_option"
    },
    "backlog_msg_only": {
      "type": "string",
      "description": "If bip is backlogging just messages and notices, or all topic changes, nick changes etc.",
      "default": "false",
      "mapping": "charm_option"
    },
    "listen_port": {
      "type": "int",
      "description": "bip listening port",
      "default": 7778,
      "mapping": "charm_option"
    },
    "listenip": {
      "type": "string",
      "description": "IP to listen on",
      "default": "0.0.0.0",
      "mapping": "charm_option"
    },
    "log_directory": {
      "type": "string",
      "description": "Logging base directory",
      "default": "/var/log/bip/",
      "mapping": "charm_option"
    },
    "log_format": {
      "type": "string",
      "description": "Log format",
      "default": "%n/%Y-%m/%c.%d.log",
      "mapping": "charm_option"
    },
    "network": {
      "type": "string",
      "description": "IRC Networks defined",
      "default": "{\"oftc\": {host: \"irc.oftc.net\", port: 6667}, \"freenode\": {host: \"irc.freenode.net\", port: 6667}}",
      "mapping": "charm_option"
    },
    "pid_file": {
      "type": "string",
      "description": "PID file",
      "default": "/var/run/bip/bip.pid",
      "mapping": "charm_option"
    },
    "user": {
      "type": "string",
      "description": "User definitions",
      "default": "{\"testuser\": {password: \"7b2ec816c15cdc9913738b5740e4f5f1803857bc\", nick: \"testnick\", user: \"testuser\", realname: \"Test Realname for bip\", server: { \"oftc\": { name: \"oftc\", network: \"oftc\", channel: { \"bip\": { name: \"#bip\", key: \"testkey\"}, \"ubuntu\": { name: \"#ubuntu\" }}}}}}",
      "mapping": "charm_option"
    }
  },
  "license": "\n# Overview\n\nBip is a IRC proxy that supports replaying logged conversation when a client\nconnects, multiple clients on one irc server connection, It has a handy\nlogging directory structure. It is multiuser, and has a flexible\nconfiguration. Some of its configuration can be changed at runtime with\nspecial irc commands.\n\n# Usage\n\nBip runs on a single server:\n\n    juju deploy bip\n    juju expose bip\n\n# Configuration\n\n## Network\n\n- `listenip` defines the IP that BIP binds to, defaults to 0.0.0.0\n\n- `listen_port` defines the port that BIP listens on, defaults to 7778\n\n- `pid_file` defines where the pid files is stored, defaults to /var/run/bip/bip.pid\n\n## Logging\n\n- `log_directory` is the logging base directory, defaults to /var/log/bip/\n\n- `log_format` is the logging format, defaults to \"%n/%Y-%m/%c.%d.log\"\n\n## Backlog\n\n- `backlog_lines` is how many lines to keep in the backlog, defaults to 0 \n  or unlimited\n\n- `backlog_msg_only` defines if the backlog will contain just messages,\n  or all nick and topic changes etc.  Defaults to false\n\n- `backlog_always` defines if we backlog messages we've already backlogged,\n  defaults to false.\n\n## User and Network\n\n- `network` defines the available networks, a simple yaml string:\n\n          { \"network_name\": {host: \"irc.somewhere.blah\", port: 6667},\n            \"net_with_ssl\": {host: \"irc.somewhere.blah\", port: 6667, ssl: True}\n          }\n\n- `user` defines the bip users, passwords, and what servers and channels they \n  connect to.  Note the bip password must be generated with `bipmkpw`, so \n  probably on the bip host before updating the config.\n\n        { \"user\":\n            { password: \"password-from-bipmkpw\",\n                nick: \"irc_nick\",\n                user: \"irc_user\",\n                realname: \"irc_real_name\",\n                server: \n                { \"irc_server\": \n                    { name: \"irc_name\",\n                      network: \"irc_network\",\n                      on_connect_send: \"msg Nickserv identify foo\"\n                      channel:\n                        { \"test-channel\": \n                            { name: \"#test-channel\",\n                              key: \"password-for-channel\"\n                            }\n                        }\n                    }\n                 }\n            }\n        }\n\nYou can repeat the user, irc server and channel options as many times as \nyou desire.  The `on_connect_send` option is useful for commands you send \non connection, such as identifying with nick services as per the example.\n\nFor more details, see the bip.conf manpage on the unit.\n\n# Usage\n\nTo use bip, connect to the IP of your bip unit, default port is 7778.\n\nOnce you connect to the proxy, you then need to connect to the particular\nIRC network that you desire by:\n\n    /quote pass user:pass:network\n\nwhere the user and password is defined in the user config variable, and \nthe network is the IRC network with the channels you want.  You will need \nto repeat this for each network defined.\n\n# Contact Information\n- [Bip homepage](https://bip.milkypond.org/)\n\n## Help\n- [Juju mailing list](https://lists.ubuntu.com/mailman/listinfo/juju)\n- [Juju community](https://jujucharms.com/community)\n- IRC #bip on [OFTC](http://www.oftc.net/)\n- [Bip FAQ](https://projects.duckcorp.org/projects/bip/wiki/FAQ)\n",
  "readme": "\n# Overview\n\nBip is a IRC proxy that supports replaying logged conversation when a client\nconnects, multiple clients on one irc server connection, It has a handy\nlogging directory structure. It is multiuser, and has a flexible\nconfiguration. Some of its configuration can be changed at runtime with\nspecial irc commands.\n\n# Usage\n\nBip runs on a single server:\n\n    juju deploy bip\n    juju expose bip\n\n# Configuration\n\n## Network\n\n- `listenip` defines the IP that BIP binds to, defaults to 0.0.0.0\n\n- `listen_port` defines the port that BIP listens on, defaults to 7778\n\n- `pid_file` defines where the pid files is stored, defaults to /var/run/bip/bip.pid\n\n## Logging\n\n- `log_directory` is the logging base directory, defaults to /var/log/bip/\n\n- `log_format` is the logging format, defaults to \"%n/%Y-%m/%c.%d.log\"\n\n## Backlog\n\n- `backlog_lines` is how many lines to keep in the backlog, defaults to 0 \n  or unlimited\n\n- `backlog_msg_only` defines if the backlog will contain just messages,\n  or all nick and topic changes etc.  Defaults to false\n\n- `backlog_always` defines if we backlog messages we've already backlogged,\n  defaults to false.\n\n## User and Network\n\n- `network` defines the available networks, a simple yaml string:\n\n          { \"network_name\": {host: \"irc.somewhere.blah\", port: 6667},\n            \"net_with_ssl\": {host: \"irc.somewhere.blah\", port: 6667, ssl: True}\n          }\n\n- `user` defines the bip users, passwords, and what servers and channels they \n  connect to.  Note the bip password must be generated with `bipmkpw`, so \n  probably on the bip host before updating the config.\n\n        { \"user\":\n            { password: \"password-from-bipmkpw\",\n                nick: \"irc_nick\",\n                user: \"irc_user\",\n                realname: \"irc_real_name\",\n                server: \n                { \"irc_server\": \n                    { name: \"irc_name\",\n                      network: \"irc_network\",\n                      on_connect_send: \"msg Nickserv identify foo\"\n                      channel:\n                        { \"test-channel\": \n                            { name: \"#test-channel\",\n                              key: \"password-for-channel\"\n                            }\n                        }\n                    }\n                 }\n            }\n        }\n\nYou can repeat the user, irc server and channel options as many times as \nyou desire.  The `on_connect_send` option is useful for commands you send \non connection, such as identifying with nick services as per the example.\n\nFor more details, see the bip.conf manpage on the unit.\n\n# Usage\n\nTo use bip, connect to the IP of your bip unit, default port is 7778.\n\nOnce you connect to the proxy, you then need to connect to the particular\nIRC network that you desire by:\n\n    /quote pass user:pass:network\n\nwhere the user and password is defined in the user config variable, and \nthe network is the IRC network with the channels you want.  You will need \nto repeat this for each network defined.\n\n# Contact Information\n- [Bip homepage](https://bip.milkypond.org/)\n\n## Help\n- [Juju mailing list](https://lists.ubuntu.com/mailman/listinfo/juju)\n- [Juju community](https://jujucharms.com/community)\n- IRC #bip on [OFTC](http://www.oftc.net/)\n- [Bip FAQ](https://projects.duckcorp.org/projects/bip/wiki/FAQ)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}