{
  "name": "openstack-dashboard Juju charm",
  "juju_charm_name": "openstack-dashboard",
  "revision": "cs:precise/openstack-dashboard-13",
  "latest": true,
  "uris": [
    "https://jujucharms.com/openstack-dashboard",
    "https://jujucharms.com/openstack-dashboard/precise",
    "https://jujucharms.com/openstack-dashboard/precise/13",
    "https://api.jujucharms.com/v5/openstack-dashboard",
    "https://api.jujucharms.com/v5/precise/openstack-dashboard",
    "https://api.jujucharms.com/v5/precise/openstack-dashboard-13"
  ],
  "labels": [
    "Juju charm",
    "misc",
    "Type/Middleware/Runtime/Python",
    "Mode/Executable/Image",
    "Mode/Executable/Bundle/Juju Charm",
    "Style/Virtualization Level/Hardware/Network",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Cloud Platform/OpenStack"
  ],
  "info_url": "https://jujucharms.com/openstack-dashboard",
  "package_url": "https://api.jujucharms.com/v5/precise/openstack-dashboard-13/archive",
  "created": "2015-06-17T09:33:05.279Z",
  "updated": "2015-06-17T09:33:05.279Z",
  "description": "a Django web interface to OpenStack\n\nThe OpenStack Dashboard provides a full feature web interface for interacting\nwith instances, images, volumes and networks within an OpenStack deployment.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/hacluster",
      "self_resolve": true,
      "juju_interface": "hacluster",
      "juju_name": "ha",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/keystone",
      "self_resolve": true,
      "juju_interface": "keystone",
      "juju_name": "identity-service",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "debug": {
      "type": "string",
      "description": "Show Django debug messages.",
      "default": "no",
      "mapping": "charm_option"
    },
    "default-role": {
      "type": "string",
      "description": "Default role for Horizon operations that will be created in\nKeystone upon introduction of an identity-service relation.\n",
      "default": "Member",
      "mapping": "charm_option"
    },
    "ha-bindiface": {
      "type": "string",
      "description": "Default network interface on which HA cluster will bind to communication\nwith the other members of the HA Cluster.\n",
      "default": "eth0",
      "mapping": "charm_option"
    },
    "ha-mcastport": {
      "type": "int",
      "description": "Default multicast port number that will be used to communicate between\nHA Cluster nodes.\n",
      "default": 5410,
      "mapping": "charm_option"
    },
    "offline-compression": {
      "type": "string",
      "description": "Use pre-generated Less compiled JS and CSS.",
      "default": "yes",
      "mapping": "charm_option"
    },
    "openstack-origin": {
      "type": "string",
      "description": "Repository from which to install.  May be one of the following:\ndistro (default), ppa:somecustom/ppa, a deb url sources entry,\nor a supported Cloud Archive release pocket.\n\nSupported Cloud Archive sources include: cloud:precise-folsom,\ncloud:precise-folsom/updates, cloud:precise-folsom/staging,\ncloud:precise-folsom/proposed.\n\nNote that updating this setting to a source that is known to\nprovide a later version of OpenStack will trigger a software\nupgrade.\n",
      "default": "distro",
      "mapping": "charm_option"
    },
    "secret": {
      "type": "string",
      "description": "Secret for Horizon to use when securing internal data; set this when using multiple dashboard units.",
      "default": null,
      "mapping": "charm_option"
    },
    "ssl_cert": {
      "type": "string",
      "description": "Base64 encoded SSL certificate to install and use for API ports.\n.\n   juju set swift-proxy ssl_cert=\"$(cat cert | base64)\" \\\n                        ssl_key=\"$(cat key | base64)\"\n.\nSetting this value (and ssl_key) will enable reverse proxying, point\nSwifts's entry in the Keystone catalog to use https, and override\nany certficiate and key issued by Keystone (if it is configured to\ndo so).\n",
      "default": null,
      "mapping": "charm_option"
    },
    "ssl_key": {
      "type": "string",
      "description": "Base64 encoded SSL key to use with certificate specified as ssl_cert.\n",
      "default": null,
      "mapping": "charm_option"
    },
    "ubuntu-theme": {
      "type": "string",
      "description": "Use Ubuntu theme for the dashboard.",
      "default": "yes",
      "mapping": "charm_option"
    },
    "vip": {
      "type": "string",
      "description": "Virtual IP to use to front openstack dashboard ha configuration",
      "default": null,
      "mapping": "charm_option"
    },
    "vip_cidr": {
      "type": "int",
      "description": "Netmask that will be used for the Virtual IP",
      "default": 24,
      "mapping": "charm_option"
    },
    "vip_iface": {
      "type": "string",
      "description": "Network Interface where to place the Virtual IP",
      "default": "eth0",
      "mapping": "charm_option"
    },
    "webroot": {
      "type": "string",
      "description": "Directory where application will be accessible, relative to\nhttp://$hostname/.\n",
      "default": "/horizon",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "website",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "cluster": {
      "Name": "cluster",
      "Role": "peer",
      "Interface": "openstack-dashboard-ha",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "Overview\n========\n\nThe OpenStack Dashboard provides a Django based web interface for use by both\nadministrators and users of an OpenStack Cloud.\n\nIt allows you to manage Nova, Glance, Cinder and Neutron resources within the\ncloud.\n\nUsage\n=====\n\nThe OpenStack Dashboard is deployed and related to keystone:\n\n    juju deploy openstack-dashboard\n    juju add-unit openstack-dashboard keystone\n\nThe dashboard will use keystone for user authentication and authorization and\nto interact with the catalog of services within the cloud.\n\nThe dashboard is accessible on:\n\n    http(s)://service_unit_address/horizon\n\nAt a minimum, the cloud must provide Glance and Nova services.\n\nSSL configuration\n=================\n\nTo fully secure your dashboard services, you can provide a SSL key and\ncertificate for installation and configuration.  These are provided as\nbase64 encoded configuration options::\n\n    juju set openstack-dashboard ssl_key=\"$(base64 my.key)\" \\\n        ssl_cert=\"$(base64 my.cert)\"\n\nThe service will be reconfigured to use the supplied information.\n\nHigh Availability\n=================\n\nThe OpenStack Dashboard charm supports HA in-conjunction with the hacluster\ncharm:\n\n    juju deploy hacluster dashboard-hacluster\n    juju set openstack-dashboard vip=\"192.168.1.200\"\n    juju add-relation openstack-dashboard dashboard-hacluster\n    juju add-unit -n 2 openstack-dashboard\n\nAfter addition of the extra 2 units completes, the dashboard will be\naccessible on 192.168.1.200 with full load-balancing across all three units.\n\nPlease refer to the charm configuration for full details on all HA config\noptions.\n\n\nUse with a Load Balancing Proxy\n===============================\n\nInstead of deploying with the hacluster charm for load balancing, its possible\nto also deploy the dashboard with load balancing proxy such as HAProxy:\n\n    juju deploy haproxy\n    juju add-relation haproxy openstack-dashboard\n    juju add-unit -n 2 openstack-dashboard\n\nThis option potentially provides better scale-out than using the charm in\nconjunction with the hacluster charm.\n",
  "readme": "Overview\n========\n\nThe OpenStack Dashboard provides a Django based web interface for use by both\nadministrators and users of an OpenStack Cloud.\n\nIt allows you to manage Nova, Glance, Cinder and Neutron resources within the\ncloud.\n\nUsage\n=====\n\nThe OpenStack Dashboard is deployed and related to keystone:\n\n    juju deploy openstack-dashboard\n    juju add-unit openstack-dashboard keystone\n\nThe dashboard will use keystone for user authentication and authorization and\nto interact with the catalog of services within the cloud.\n\nThe dashboard is accessible on:\n\n    http(s)://service_unit_address/horizon\n\nAt a minimum, the cloud must provide Glance and Nova services.\n\nSSL configuration\n=================\n\nTo fully secure your dashboard services, you can provide a SSL key and\ncertificate for installation and configuration.  These are provided as\nbase64 encoded configuration options::\n\n    juju set openstack-dashboard ssl_key=\"$(base64 my.key)\" \\\n        ssl_cert=\"$(base64 my.cert)\"\n\nThe service will be reconfigured to use the supplied information.\n\nHigh Availability\n=================\n\nThe OpenStack Dashboard charm supports HA in-conjunction with the hacluster\ncharm:\n\n    juju deploy hacluster dashboard-hacluster\n    juju set openstack-dashboard vip=\"192.168.1.200\"\n    juju add-relation openstack-dashboard dashboard-hacluster\n    juju add-unit -n 2 openstack-dashboard\n\nAfter addition of the extra 2 units completes, the dashboard will be\naccessible on 192.168.1.200 with full load-balancing across all three units.\n\nPlease refer to the charm configuration for full details on all HA config\noptions.\n\n\nUse with a Load Balancing Proxy\n===============================\n\nInstead of deploying with the hacluster charm for load balancing, its possible\nto also deploy the dashboard with load balancing proxy such as HAProxy:\n\n    juju deploy haproxy\n    juju add-relation haproxy openstack-dashboard\n    juju add-unit -n 2 openstack-dashboard\n\nThis option potentially provides better scale-out than using the charm in\nconjunction with the hacluster charm.\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}