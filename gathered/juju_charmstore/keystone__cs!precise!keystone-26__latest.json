{
  "name": "keystone Juju charm",
  "juju_charm_name": "keystone",
  "revision": "cs:precise/keystone-26",
  "latest": true,
  "uris": [
    "https://jujucharms.com/keystone",
    "https://jujucharms.com/keystone/precise",
    "https://jujucharms.com/keystone/precise/26",
    "https://api.jujucharms.com/v5/keystone",
    "https://api.jujucharms.com/v5/precise/keystone",
    "https://api.jujucharms.com/v5/precise/keystone-26"
  ],
  "labels": [
    "Juju charm",
    "misc",
    "Binding/Region/North America/US",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/API",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Logging",
    "Type/Devopsware/Cloud Platform/OpenStack"
  ],
  "info_url": "https://jujucharms.com/keystone",
  "package_url": "https://api.jujucharms.com/v5/precise/keystone-26/archive",
  "created": "2015-06-17T09:37:37.22Z",
  "updated": "2015-06-17T09:37:37.22Z",
  "description": "OpenStack identity service\n\nKeystone is an OpenStack project that provides Identity, Token, Catalog and\nPolicy services for use specifically by projects in the OpenStack family. It\nimplements OpenStackâ€™s Identity API.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/hacluster",
      "self_resolve": true,
      "juju_interface": "hacluster",
      "juju_name": "ha",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mysql-shared",
      "self_resolve": true,
      "juju_interface": "mysql-shared",
      "juju_name": "shared-db",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "admin-password": {
      "type": "string",
      "description": "Admin password.  To be used *for testing only*.  Randomly generated by default.",
      "default": "None",
      "mapping": "charm_option"
    },
    "admin-port": {
      "type": "int",
      "description": "Port the bind the Admin API server to",
      "default": 35357,
      "mapping": "charm_option"
    },
    "admin-role": {
      "type": "string",
      "description": "Admin role to be associated with admin and service users",
      "default": "Admin",
      "mapping": "charm_option"
    },
    "admin-token": {
      "type": "string",
      "description": "Admin token.  If set, this token will be used for all services instead of being generated per service.",
      "default": "None",
      "mapping": "charm_option"
    },
    "admin-user": {
      "type": "string",
      "description": "Default admin user to create and manage",
      "default": "admin",
      "mapping": "charm_option"
    },
    "config-file": {
      "type": "string",
      "description": "Location of keystone configuration file",
      "default": "/etc/keystone/keystone.conf",
      "mapping": "charm_option"
    },
    "database": {
      "type": "string",
      "description": "Database name",
      "default": "keystone",
      "mapping": "charm_option"
    },
    "database-user": {
      "type": "string",
      "description": "Database username",
      "default": "keystone",
      "mapping": "charm_option"
    },
    "debug": {
      "type": "string",
      "description": "Enable verbose logging",
      "default": "false",
      "mapping": "charm_option"
    },
    "enable-pki": {
      "type": "string",
      "description": "Enable PKI token signing (Grizzly and beyond)",
      "default": "false",
      "mapping": "charm_option"
    },
    "ha-bindiface": {
      "type": "string",
      "description": "Default network interface on which HA cluster will bind to communication\nwith the other members of the HA Cluster.\n",
      "default": "eth0",
      "mapping": "charm_option"
    },
    "ha-mcastport": {
      "type": "int",
      "description": "Default multicast port number that will be used to communicate between\nHA Cluster nodes.\n",
      "default": 5403,
      "mapping": "charm_option"
    },
    "https-service-endpoints": {
      "type": "string",
      "description": "Manage SSL certificates for all service endpoints.",
      "default": "False",
      "mapping": "charm_option"
    },
    "keystone-admin-role": {
      "type": "string",
      "description": "Role that allows admin operations (access to all operations)",
      "default": "Admin",
      "mapping": "charm_option"
    },
    "keystone-service-admin-role": {
      "type": "string",
      "description": "Role that allows acting as service admin",
      "default": "KeystoneServiceAdmin",
      "mapping": "charm_option"
    },
    "log-level": {
      "type": "string",
      "description": "Log level (WARNING, INFO, DEBUG, ERROR)",
      "default": "WARNING",
      "mapping": "charm_option"
    },
    "openstack-origin": {
      "type": "string",
      "description": "Repository from which to install.  May be one of the following:\ndistro (default), ppa:somecustom/ppa, a deb url sources entry,\nor a supported Cloud Archive release pocket.\n\nSupported Cloud Archive sources include: cloud:precise-folsom,\ncloud:precise-folsom/updates, cloud:precise-folsom/staging,\ncloud:precise-folsom/proposed.\n\nNote that updating this setting to a source that is known to\nprovide a later version of OpenStack will trigger a software\nupgrade.\n",
      "default": "distro",
      "mapping": "charm_option"
    },
    "region": {
      "type": "string",
      "description": "OpenStack Region(s) - separate multiple regions with single space",
      "default": "RegionOne",
      "mapping": "charm_option"
    },
    "service-port": {
      "type": "int",
      "description": "Port the bind the API server to",
      "default": 5000,
      "mapping": "charm_option"
    },
    "service-tenant": {
      "type": "string",
      "description": "Name of tenant to associate service credentials.",
      "default": "services",
      "mapping": "charm_option"
    },
    "token-expiry": {
      "type": "string",
      "description": "Expiration date of generated admin tokens",
      "default": "2017-02-05T00:00",
      "mapping": "charm_option"
    },
    "use-syslog": {
      "type": "boolean",
      "description": "By default, all services will log into their corresponding log files.\nSetting this to True will force all services to log to the syslog.\n",
      "default": false,
      "mapping": "charm_option"
    },
    "verbose": {
      "type": "string",
      "description": "Enable debug logging",
      "default": "false",
      "mapping": "charm_option"
    },
    "vip": {
      "type": "string",
      "description": "Virtual IP to use to front keystone in ha configuration",
      "default": null,
      "mapping": "charm_option"
    },
    "vip_cidr": {
      "type": "int",
      "description": "Netmask that will be used for the Virtual IP",
      "default": 24,
      "mapping": "charm_option"
    },
    "vip_iface": {
      "type": "string",
      "description": "Network Interface where to place the Virtual IP",
      "default": "eth0",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/keystone",
      "juju_interface": "keystone",
      "juju_name": "identity-service",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "cluster": {
      "Name": "cluster",
      "Role": "peer",
      "Interface": "keystone-ha",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "This charm provides Keystone, the Openstack identity service.  It's target\nplatform is Ubuntu Precise + Openstack Essex.  This has not been tested\nusing Oneiric + Diablo.\n\nIt provides two interfaces.\n \n    - identity-service:  Openstack API endpoints request an entry in the \n      Keystone service catalog + endpoint template catalog.  When a relation\n      is established, Keystone receives: service name, region, public_url,\n      admin_url and internal_url.  It first checks that the requested service\n      is listed as a supported service.  This list should stay updated to\n      support current Openstack core services.  If the services is supported,\n      a entry in the service catalog is created, an endpoint template is\n      created and a admin token is generated.   The other end of the relation\n      recieves the token as well as info on which ports Keystone is listening.\n\n    - keystone-service:  This is currently only used by Horizon/dashboard\n      as its interaction with Keystone is different from other Openstack API\n      servicies.  That is, Horizon requests a Keystone role and token exists.\n      During a relation, Horizon requests its configured default role and\n      Keystone responds with a token and the auth + admin ports on which\n      Keystone is listening.\n\nKeystone requires a database.  By default, a local sqlite database is used.\nThe charm supports relations to a shared-db via mysql-shared interface.  When\na new data store is configured, the charm ensures the minimum administrator\ncredentials exist (as configured via charm configuration)\n\nVIP is only required if you plan on multi-unit clusterming. The VIP becomes a highly-available API endpoint.\n",
  "readme": "This charm provides Keystone, the Openstack identity service.  It's target\nplatform is Ubuntu Precise + Openstack Essex.  This has not been tested\nusing Oneiric + Diablo.\n\nIt provides two interfaces.\n \n    - identity-service:  Openstack API endpoints request an entry in the \n      Keystone service catalog + endpoint template catalog.  When a relation\n      is established, Keystone receives: service name, region, public_url,\n      admin_url and internal_url.  It first checks that the requested service\n      is listed as a supported service.  This list should stay updated to\n      support current Openstack core services.  If the services is supported,\n      a entry in the service catalog is created, an endpoint template is\n      created and a admin token is generated.   The other end of the relation\n      recieves the token as well as info on which ports Keystone is listening.\n\n    - keystone-service:  This is currently only used by Horizon/dashboard\n      as its interaction with Keystone is different from other Openstack API\n      servicies.  That is, Horizon requests a Keystone role and token exists.\n      During a relation, Horizon requests its configured default role and\n      Keystone responds with a token and the auth + admin ports on which\n      Keystone is listening.\n\nKeystone requires a database.  By default, a local sqlite database is used.\nThe charm supports relations to a shared-db via mysql-shared interface.  When\na new data store is configured, the charm ensures the minimum administrator\ncredentials exist (as configured via charm configuration)\n\nVIP is only required if you plan on multi-unit clusterming. The VIP becomes a highly-available API endpoint.\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}