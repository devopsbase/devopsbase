{
  "name": "hpcc Juju charm",
  "juju_charm_name": "hpcc",
  "revision": "cs:precise/hpcc-2",
  "latest": true,
  "uris": [
    "https://jujucharms.com/hpcc",
    "https://jujucharms.com/hpcc/precise",
    "https://jujucharms.com/hpcc/precise/2",
    "https://api.jujucharms.com/v5/hpcc",
    "https://api.jujucharms.com/v5/precise/hpcc",
    "https://api.jujucharms.com/v5/precise/hpcc-2"
  ],
  "labels": [
    "Juju charm",
    "applications",
    "Binding/Provider/Amazon",
    "Binding/Provider/HP",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Orchestration/Cluster-based",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://jujucharms.com/hpcc",
  "package_url": "https://api.jujucharms.com/v5/precise/hpcc-2/archive",
  "created": "2015-06-17T09:31:02.154Z",
  "updated": "2015-06-17T09:31:02.154Z",
  "description": "HPCC (High Performance Computing Cluster)\n\nHPCC Systems, an open source High Performance Computing Cluster, is a massive parallel-processing computing \nplatform that solves Big Data problems. HPCC Systems is an enterprise-proven platform for manipulating, \ntransforming, querying, and data warehousing Big Data. Built by LexisNexis, the HPCC platform has helped \nit grow to a $1.5 billion information solutions company.\n.\nThe HPCC Systems architecture incorporates a data query engine (called Thor) and a data delivery engine \n(called Roxie), as well as support components. An HPCC environment can include only Thor clusters, \nor both Thor and Roxie clusters. The HPCC Juju charm creates a cluster which contains both, but you can \ncustomize it after deployment.\n.\nThe HPCC Juju Charm encapsulates best practice configurations for the HPCC Systems Platform. You can use a Juju Charm to stand up an HPCC Platform on:\n.\n* Local Provider (LXC)\n* Amazon Web Services Cloud\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "parameters": {
    "hpcc-version": {
      "type": "string",
      "description": "HPCC package version",
      "default": "5.0.0-3",
      "mapping": "charm_option"
    },
    "package-checksum": {
      "type": "string",
      "description": "HPCC package checksum. The default value is for HPCC CE 5.0.0-3 Ubuntu\n12.04 amd64. You can get other package checksums from:\n     http://hpccsystems.com/download\n",
      "default": "a1a1b06886e9229cb2d01bdf8c9945e4",
      "mapping": "charm_option"
    },
    "roxie-ratio": {
      "type": "float",
      "description": "Ratio for maximum available roxie nodes, which is <number of total nodes> minus <support-nodes>.",
      "default": 1,
      "mapping": "charm_option"
    },
    "slaves-per-node": {
      "type": "int",
      "description": "Number of thor slaves per node. The recommended value is 1.",
      "default": 1,
      "mapping": "charm_option"
    },
    "ssh-key-private": {
      "type": "string",
      "description": "The content of private SSH Key",
      "default": "",
      "mapping": "charm_option"
    },
    "ssh-key-public": {
      "type": "string",
      "description": "The content of public SSH Key",
      "default": "",
      "mapping": "charm_option"
    },
    "support-nodes": {
      "type": "int",
      "description": "Number of nodes to be used for non-Thor and non-Roxie components. The recommended value is 1.",
      "default": 1,
      "mapping": "charm_option"
    },
    "thor-ratio": {
      "type": "float",
      "description": "Ratio for maximum available thor slave nodes, which is <number of total nodes> minus <support-nodes>.",
      "default": 1,
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/hpcc",
      "juju_interface": "hpcc",
      "juju_name": "hpcc",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "hpcc-cluster": {
      "Name": "hpcc-cluster",
      "Role": "peer",
      "Interface": "hpcc-cluster",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "# Overview\n\n[HPCC Systems,](http://HPCCSystems.com) an open source High Performance Computing Cluster, is a massive parallel-processing computing platform that solves Big Data problems. HPCC Systems is an enterprise-proven platform for manipulating, transforming, querying, and data warehousing Big Data. Built by LexisNexis, the HPCC platform has helped it grow to a $1.5 billion information solutions company.\n\nThe HPCC Systems architecture incorporates a data query engine (called Thor) and a data delivery engine (called Roxie), as well as common middleware support components, an external communications layer, client interfaces which provide both end-user services and system management tools, and auxiliary components to support monitoring and to facilitate loading and storing of file system data from external sources.\n\nAn HPCC environment can include only Thor clusters, or both Thor and Roxie clusters. The HPCC Juju charm creates a cluster which contains both, but you can customize it after deployment.\n\nSee [How it Works](http://www.hpccsystems.com/Why-HPCC/How-it-works)  for more details. \n\nSee [System Requirements](http://hpccsystems.com/download/docs/system-requirements) for  hardware details. \n> Please note, your Juju instance must have at least 4GB of RAM. To increase the memory for a unit, run this command:\n   `juju set-constraints mem=4G`\n\nThe HPCC Juju Charm encapsulates best practice configurations for the HPCC  Systems Platform.  You can use a Juju Charm to stand up an HPCC Platform on:\n\n- Local Provider (LXC)\n\n- Amazon Web Services Cloud\r\n\r\n\n# Usage\n\n## General Usage\n\n1. To deploy an HPCC Cluster:\n\n    `juju deploy hpcc <cluster_name>`\n\n    **For example:**\n\n        'juju deploy hpcc cluster1`\n\n1. To check the status , run\n        juju status\n\n        You also can log into the node to check if HPCC is properly installed.\n\n        `juju ssh cluster1/0`\n\nOnce the service is deployed and running, you can find the address for the GUI by running juju status and looking for the public-address field for the juju-gui service\n\n1.  Once HPCC is properly installed, you can add more nodes using this command:\n\n        `juju add-unit <cluster_name> -n <#_of_nodes_to_add>`\n\n    **For example:**\n\n        `juju add-unit cluster1 -n 3`\n\n1. You can expose the HPCC cluster by running:\n\n       `juju expose <cluster_name>`\n\nOnce the service is deployed, running, and exposed, you can find the address for the ECL Watch Web interface by running juju status and looking for the public-address field. Type that address plus :8010 for the port.\n\nFor example, **nnn.nnn.nnn.nnn:8010**.\n\nIf you have multiple nodes, the ECL Watch node will be the lowest IP address (first hpcc node listed).\n\n\n\n# Configuration\n\nWhen you use the `juju add-unit` command to add nodes, scripts are called automatically to provide a default configuration. \n\n### ssh-keys ###\nThe hpcc charm automatically generates a key pair  (*id\\_rsa*  &  *id\\_rsa.pub*) to configure nodes. \n\nIf you already have your own key pair and wish to use it, copy and paste their contents into the two variables (*ssh-key-public* and *ssh-key-private*) in the configuration file (config.yaml) or in the Juju canvas configuration settings.  \n\nAlternately, you can set these using this command: \n\n    juju set <hpcc service name> ssh-key-public=<public key> ssh-key-private=<private key>\n\n###To update from prior version\n\nYou can set the **hpcc-version** in the configuration file (config.yaml) or in the Juju canvas configuration settings.\n\nAlternately, you can set these using this command: \n    juju set <hpcc service name> hpcc-version=<new version> package-checksum=<checksum string>\n\n### Verifying the checksum\nThe charm uses an md5sum to verify the checksum of the HPCC platform  package before installing.  \n\nFor this version of the charm, it is set to check the md5sum for the Community Edition Version 5.0.0-3 for Ubuntu 12.04 amd64. To verify a different version, edition, or OS version, change the value of the md5sum in the package-checksum variable in config.yaml. You can get other package checksums from [http://hpccsystems.com/download](http://hpccsystems.com/download)\n\n###To reconfigure your topology\n\nYou can reconfigure the topology of your system by setting the values for **support-nodes, slaves-per-node, roxie-ratio, thor-ratio** in the configuration file (config.yaml) or in the Juju canvas configuration settings.\n\nAlternately, you can set these using this command: \n\r\n    juju set <hpcc service name> roxie-ratio=<floating point value 0.0 – 1.0> > thor-ratio=<floating point value 0.0 – 1.0>\n\n### Ports\n\nThe charm automatically opens for external access, the following ports:\n\n- Port **8010** for ECLWatch access\n- Port **8002** for WsECL access.\r\n- Port **9876** for direct Roxie access\n- Port **8015** for Configuration Manager access.  \n\n### Next Steps ###\n\nAfter deploying and adding nodes, you can tweak various options to optimize your HPCC deployment to meet your needs.\n \nSee [HPCC Systems Web site](http://HPCCSystems.com) for more details.\n\n\n# HPCC Systems Contact Information\n\n[HPCC Systems Web site](http://HPCCSystems.com)\n\nFor support, visit the HPCC Community Forums:\n[HPCC Community Forums](http://hpccsystems.com/bb/index.php?sid=0bda2dddb2ea50418357171d33b11e5f)\n",
  "readme": "# Overview\n\n[HPCC Systems,](http://HPCCSystems.com) an open source High Performance Computing Cluster, is a massive parallel-processing computing platform that solves Big Data problems. HPCC Systems is an enterprise-proven platform for manipulating, transforming, querying, and data warehousing Big Data. Built by LexisNexis, the HPCC platform has helped it grow to a $1.5 billion information solutions company.\n\nThe HPCC Systems architecture incorporates a data query engine (called Thor) and a data delivery engine (called Roxie), as well as common middleware support components, an external communications layer, client interfaces which provide both end-user services and system management tools, and auxiliary components to support monitoring and to facilitate loading and storing of file system data from external sources.\n\nAn HPCC environment can include only Thor clusters, or both Thor and Roxie clusters. The HPCC Juju charm creates a cluster which contains both, but you can customize it after deployment.\n\nSee [How it Works](http://www.hpccsystems.com/Why-HPCC/How-it-works)  for more details. \n\nSee [System Requirements](http://hpccsystems.com/download/docs/system-requirements) for  hardware details. \n> Please note, your Juju instance must have at least 4GB of RAM. To increase the memory for a unit, run this command:\n   `juju set-constraints mem=4G`\n\nThe HPCC Juju Charm encapsulates best practice configurations for the HPCC  Systems Platform.  You can use a Juju Charm to stand up an HPCC Platform on:\n\n- Local Provider (LXC)\n\n- Amazon Web Services Cloud\r\n\r\n\n# Usage\n\n## General Usage\n\n1. To deploy an HPCC Cluster:\n\n    `juju deploy hpcc <cluster_name>`\n\n    **For example:**\n\n        'juju deploy hpcc cluster1`\n\n1. To check the status , run\n        juju status\n\n        You also can log into the node to check if HPCC is properly installed.\n\n        `juju ssh cluster1/0`\n\nOnce the service is deployed and running, you can find the address for the GUI by running juju status and looking for the public-address field for the juju-gui service\n\n1.  Once HPCC is properly installed, you can add more nodes using this command:\n\n        `juju add-unit <cluster_name> -n <#_of_nodes_to_add>`\n\n    **For example:**\n\n        `juju add-unit cluster1 -n 3`\n\n1. You can expose the HPCC cluster by running:\n\n       `juju expose <cluster_name>`\n\nOnce the service is deployed, running, and exposed, you can find the address for the ECL Watch Web interface by running juju status and looking for the public-address field. Type that address plus :8010 for the port.\n\nFor example, **nnn.nnn.nnn.nnn:8010**.\n\nIf you have multiple nodes, the ECL Watch node will be the lowest IP address (first hpcc node listed).\n\n\n\n# Configuration\n\nWhen you use the `juju add-unit` command to add nodes, scripts are called automatically to provide a default configuration. \n\n### ssh-keys ###\nThe hpcc charm automatically generates a key pair  (*id\\_rsa*  &  *id\\_rsa.pub*) to configure nodes. \n\nIf you already have your own key pair and wish to use it, copy and paste their contents into the two variables (*ssh-key-public* and *ssh-key-private*) in the configuration file (config.yaml) or in the Juju canvas configuration settings.  \n\nAlternately, you can set these using this command: \n\n    juju set <hpcc service name> ssh-key-public=<public key> ssh-key-private=<private key>\n\n###To update from prior version\n\nYou can set the **hpcc-version** in the configuration file (config.yaml) or in the Juju canvas configuration settings.\n\nAlternately, you can set these using this command: \n    juju set <hpcc service name> hpcc-version=<new version> package-checksum=<checksum string>\n\n### Verifying the checksum\nThe charm uses an md5sum to verify the checksum of the HPCC platform  package before installing.  \n\nFor this version of the charm, it is set to check the md5sum for the Community Edition Version 5.0.0-3 for Ubuntu 12.04 amd64. To verify a different version, edition, or OS version, change the value of the md5sum in the package-checksum variable in config.yaml. You can get other package checksums from [http://hpccsystems.com/download](http://hpccsystems.com/download)\n\n###To reconfigure your topology\n\nYou can reconfigure the topology of your system by setting the values for **support-nodes, slaves-per-node, roxie-ratio, thor-ratio** in the configuration file (config.yaml) or in the Juju canvas configuration settings.\n\nAlternately, you can set these using this command: \n\r\n    juju set <hpcc service name> roxie-ratio=<floating point value 0.0 – 1.0> > thor-ratio=<floating point value 0.0 – 1.0>\n\n### Ports\n\nThe charm automatically opens for external access, the following ports:\n\n- Port **8010** for ECLWatch access\n- Port **8002** for WsECL access.\r\n- Port **9876** for direct Roxie access\n- Port **8015** for Configuration Manager access.  \n\n### Next Steps ###\n\nAfter deploying and adding nodes, you can tweak various options to optimize your HPCC deployment to meet your needs.\n \nSee [HPCC Systems Web site](http://HPCCSystems.com) for more details.\n\n\n# HPCC Systems Contact Information\n\n[HPCC Systems Web site](http://HPCCSystems.com)\n\nFor support, visit the HPCC Community Forums:\n[HPCC Community Forums](http://hpccsystems.com/bb/index.php?sid=0bda2dddb2ea50418357171d33b11e5f)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}