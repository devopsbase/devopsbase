{
  "name": "nrpe Juju charm",
  "juju_charm_name": "nrpe",
  "revision": "cs:precise/nrpe-9",
  "latest": true,
  "uris": [
    "https://jujucharms.com/nrpe",
    "https://jujucharms.com/nrpe/precise",
    "https://jujucharms.com/nrpe/precise/9",
    "https://api.jujucharms.com/v5/nrpe",
    "https://api.jujucharms.com/v5/precise/nrpe",
    "https://api.jujucharms.com/v5/precise/nrpe-9"
  ],
  "labels": [
    "Juju charm",
    "misc",
    "Mode/Executable/Bundle/Juju Charm",
    "Style/Virtualization Level/Hardware/Network",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Monitoring/Nagios",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://jujucharms.com/nrpe",
  "package_url": "https://api.jujucharms.com/v5/precise/nrpe-9/archive",
  "created": "2015-06-17T09:36:43.108Z",
  "updated": "2015-06-17T09:36:43.108Z",
  "description": "Nagios Remote Plugin Executor Server\n\nNagios is a host/service/network monitoring and management system.  The\npurpose of this addon is to allow you to execute Nagios plugins on a\nremote host in as transparent a manner as possible.  This program runs\nas a background process on the remote host and processes command\nexecution requests from the check_nrpe plugin on the Nagios host.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": true,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/juju-info",
      "self_resolve": true,
      "juju_interface": "juju-info",
      "juju_name": "general-info",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/local-monitors",
      "self_resolve": true,
      "juju_interface": "local-monitors",
      "juju_name": "local-monitors",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "monitors": {
      "type": "string",
      "description": "Set this to yaml which will be overlayed on top of base-monitors.yaml\n",
      "default": null,
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/monitors",
      "juju_interface": "monitors",
      "juju_name": "monitors",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/nrpe",
      "juju_interface": "nrpe",
      "juju_name": "nrpe",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Overview\n\nThis charm provides an nrpe subordinate to integrate with nagios logging.\n\nAdding the charm as a subordinate to a service will run an nrpe server\non the unit and allow for nagios to query the service using that server.\n\n# Usage\n\nDeploy the charm as a subordinate of an existing service.  In this example\nwe will deploy a Trusty version of the Apache2 charm and add nrpe to it.\nThe relationship, `general-monitors`, provides basic monitoring data.\n\n    juju deploy nagios\n    juju deploy cs:precise/apache2\n    juju deploy cs:precise/nrpe\n    juju add-relation nrpe:general-monitors apache2:juju-info\n    juju add-relation nrpe:monitors nagios:monitors\n    \nIn this second example we will use the `local-monitors` relationship with\nApache2.  The Apache2 charm provides a `local-monitors` relationship that\nwill add additional monitoring checks.\n\n    juju deploy nagios\n    juju deploy cs:precise/apache2\n    juju deploy cs:precise/nrpe\n    juju add-relation nrpe:local-monitors apache2: local-monitors\n    juju add-relation nrpe:monitors nagios:monitors\n\nNote that a series for nagios is not specified as nrpe can communicate\nwith nagios charms of different series.  \n\n# Charm relationship data\n\nThe service provides a 'local-monitors' container scoped interface\nto define the plug-ins that the nrpe server can use. The charm should\n'relation-set monitors=monitors' with a monitors.yaml in the same\nformat as the 'monitors' relation seen in the nagios charm. This will\nbe merged with the base monitors and any monitors configured via the\nmonitors setting from config.yaml.\n",
  "readme": "# Overview\n\nThis charm provides an nrpe subordinate to integrate with nagios logging.\n\nAdding the charm as a subordinate to a service will run an nrpe server\non the unit and allow for nagios to query the service using that server.\n\n# Usage\n\nDeploy the charm as a subordinate of an existing service.  In this example\nwe will deploy a Trusty version of the Apache2 charm and add nrpe to it.\nThe relationship, `general-monitors`, provides basic monitoring data.\n\n    juju deploy nagios\n    juju deploy cs:precise/apache2\n    juju deploy cs:precise/nrpe\n    juju add-relation nrpe:general-monitors apache2:juju-info\n    juju add-relation nrpe:monitors nagios:monitors\n    \nIn this second example we will use the `local-monitors` relationship with\nApache2.  The Apache2 charm provides a `local-monitors` relationship that\nwill add additional monitoring checks.\n\n    juju deploy nagios\n    juju deploy cs:precise/apache2\n    juju deploy cs:precise/nrpe\n    juju add-relation nrpe:local-monitors apache2: local-monitors\n    juju add-relation nrpe:monitors nagios:monitors\n\nNote that a series for nagios is not specified as nrpe can communicate\nwith nagios charms of different series.  \n\n# Charm relationship data\n\nThe service provides a 'local-monitors' container scoped interface\nto define the plug-ins that the nrpe server can use. The charm should\n'relation-set monitors=monitors' with a monitors.yaml in the same\nformat as the 'monitors' relation seen in the nagios charm. This will\nbe merged with the base monitors and any monitors configured via the\nmonitors setting from config.yaml.\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}