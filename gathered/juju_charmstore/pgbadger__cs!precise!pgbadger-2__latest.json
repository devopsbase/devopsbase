{
  "name": "pgbadger Juju charm",
  "juju_charm_name": "pgbadger",
  "revision": "cs:precise/pgbadger-2",
  "latest": true,
  "uris": [
    "https://jujucharms.com/pgbadger",
    "https://jujucharms.com/pgbadger/precise",
    "https://jujucharms.com/pgbadger/precise/2",
    "https://api.jujucharms.com/v5/pgbadger",
    "https://api.jujucharms.com/v5/precise/pgbadger",
    "https://api.jujucharms.com/v5/precise/pgbadger-2"
  ],
  "labels": [
    "Juju charm",
    "database",
    "Type/Infrastructure/Operating System/macOS",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Logging",
    "Type/Middleware/Data Store/Relational/PostgreSQL"
  ],
  "info_url": "https://jujucharms.com/pgbadger",
  "package_url": "https://api.jujucharms.com/v5/precise/pgbadger-2/archive",
  "created": "2015-06-17T09:34:11.422Z",
  "updated": "2015-06-17T09:34:11.422Z",
  "description": "Activity and performance reports and charts for PostgreSQL.\n\npgBadger is a PostgreSQL log analyzer that generates detailed\nperformance and activity reports and charts.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "parameters": {
    "jobs": {
      "type": "int",
      "description": "The number of parallel tasks used to generate the reports.\n",
      "default": 4,
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/syslog",
      "juju_interface": "syslog",
      "juju_name": "syslog",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "website",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Overview\n\n[pgBadger](http://http://dalibo.github.io/pgbadger/) is a log analyzer\nfor PostgreSQL that generates performance and activity reports.\n\nWhen connected to a PostgreSQL service, the pgBadger charm receives\nPostgreSQL log messages in real time and updates the reports every\nfive minutes.\n\nThe reports themselves are web pages available directly from the unit,\nor proxied via another Juju service.\n\n# Usage\n\nDeploying the pgbadger service and attaching it to a PostgreSQL service\nis simple:\n\n    juju deploy postgresql\n    juju deploy pgbadger\n    juju add-relation postgresql pgbadger\n    juju expose pgbadger\n\nYou also need to increase the amount of logging information generated\nby PostgreSQL or your reports will be empty. The following will enable\nall the pgBadger features:\n\n    juju set postgresql log_min_duration_statement=0\n    juju set postgresql log_checkpoints=true\n    juju set postgresql log_connections=true\n    juju set postgresql log_disconnections=true\n    juju set postgresql log_autovacuum_min_duration=0\n    juju set postgresql log_lock_waits=true\n\nYou can then browse to http://<ip-address>/pgbadger to view the reports as\nare generated and updated. If there is database activity, the initial\nreports should be available in 5 minutes.\n\n## Known Limitations and Issues\n\n- log_temp_files is not supported by the PostgreSQL charm, so temp\n  file usage is not reported. Bug LP:1281600\n\n# Configuration\n\n- `jobs`: The number of parallel tasks pgbadger uses. Set this to the\n  number of CPUs you want to use.\n\n\n# Contact Information\n\n## pgBadger\n\n- [pgBadger Home Page](http://dalibo.github.io/pgbadger/)\n- [PostgreSQL Mailing Lists](http://www.postgresql.org/list/)\n",
  "readme": "# Overview\n\n[pgBadger](http://http://dalibo.github.io/pgbadger/) is a log analyzer\nfor PostgreSQL that generates performance and activity reports.\n\nWhen connected to a PostgreSQL service, the pgBadger charm receives\nPostgreSQL log messages in real time and updates the reports every\nfive minutes.\n\nThe reports themselves are web pages available directly from the unit,\nor proxied via another Juju service.\n\n# Usage\n\nDeploying the pgbadger service and attaching it to a PostgreSQL service\nis simple:\n\n    juju deploy postgresql\n    juju deploy pgbadger\n    juju add-relation postgresql pgbadger\n    juju expose pgbadger\n\nYou also need to increase the amount of logging information generated\nby PostgreSQL or your reports will be empty. The following will enable\nall the pgBadger features:\n\n    juju set postgresql log_min_duration_statement=0\n    juju set postgresql log_checkpoints=true\n    juju set postgresql log_connections=true\n    juju set postgresql log_disconnections=true\n    juju set postgresql log_autovacuum_min_duration=0\n    juju set postgresql log_lock_waits=true\n\nYou can then browse to http://<ip-address>/pgbadger to view the reports as\nare generated and updated. If there is database activity, the initial\nreports should be available in 5 minutes.\n\n## Known Limitations and Issues\n\n- log_temp_files is not supported by the PostgreSQL charm, so temp\n  file usage is not reported. Bug LP:1281600\n\n# Configuration\n\n- `jobs`: The number of parallel tasks pgbadger uses. Set this to the\n  number of CPUs you want to use.\n\n\n# Contact Information\n\n## pgBadger\n\n- [pgBadger Home Page](http://dalibo.github.io/pgbadger/)\n- [PostgreSQL Mailing Lists](http://www.postgresql.org/list/)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}