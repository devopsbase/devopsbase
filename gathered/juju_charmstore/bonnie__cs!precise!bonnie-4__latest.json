{
  "name": "bonnie Juju charm",
  "juju_charm_name": "bonnie",
  "revision": "cs:precise/bonnie-4",
  "latest": true,
  "uris": [
    "https://jujucharms.com/bonnie",
    "https://jujucharms.com/bonnie/precise",
    "https://jujucharms.com/bonnie/precise/4",
    "https://api.jujucharms.com/v5/bonnie",
    "https://api.jujucharms.com/v5/precise/bonnie",
    "https://api.jujucharms.com/v5/precise/bonnie-4"
  ],
  "labels": [
    "Juju charm",
    "misc",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju"
  ],
  "info_url": "https://jujucharms.com/bonnie",
  "package_url": "https://api.jujucharms.com/v5/precise/bonnie-4/archive",
  "created": "2015-06-17T09:34:59.236Z",
  "updated": "2015-06-17T09:34:59.236Z",
  "description": "Bonnie++ Benchmark\n\nA subordinate charm that executes Bonnie++ \n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": true,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/juju-info",
      "self_resolve": true,
      "juju_interface": "juju-info",
      "juju_name": "juju-info",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "testtype": {
      "type": "string",
      "description": "Type of bonnie++ test to run, smoke, lite, full, performance, or custom.",
      "default": "smoke",
      "mapping": "charm_option"
    }
  },
  "license": "# Overview\n\nBonnie++  is a program to test filesystems and hard drivess for performance or\nthe lack therof. There are a many different types of  file  system  operations \nwhich  different applications use to different degrees. Bonnie++ tests some of\nthem and for each test gives a result of the amount of work done per second and\nthe percentage of CPU time this took. This particular charm is a subordinate\ncharm.\n\n# Summary of tests\n\nThe first 6 tests are from the original Bonnie: Specifically, these are the\ntypes of filesystem activity that have been observed to be bottlenecks in\nI/O-intensive applications\n\n## Test Details\n\nThe file IO tests consist of the following:\n * Sequential Output\n * Sequential Input\n * Random Seeks\n\n# Charm Options\n\nThe charm for Connie++ allows Bonnie++ to run as a smoke, lite, full, and a\nperformance test. \n\n * Smoke Test: A quick test that makes a quick and simple call to bonnie++. \n * Lite: A short run of bonnie++ \n * Full: A thorough test for the local filesystem\n * Analysis: A performance test of the filesystem\n\n# Usage\n\nThis charm is a subordinate charm. Here is an example of how to deploy bonnie\nwith the Ubuntu charm. \n\nTo deploy:\n\n    juju bootstrap\n    juju deploy ubuntu\n    juju deploy bonnie\n    juju add-relation ubuntu bonnie\n\nThe results are located in the /tmp/Results-{Date and Time} directory. The best\nway to access the results is to do the following:\n\n    juju ssh 0\n    cat /tmp/Results-{Date and Time}/results-{Date and Time}-.log\n\n**NOTE**  {Date and Time} refers to the specific time bonnie++ was executed\n\n## Output\nThe primary output is plain-text in 80 columns which is designed to fit well\nwhen pasted into email and which will work well with Braille displays. The\nsecond type of output is CSV (Comma Seperated Values). \n\nExample Results file for a smoke test: \n\n    Using uid:0, gid:0.\n    Writing a byte at a time...done\n    Writing intelligently...done\n    Rewriting...done\n    Reading a byte at a time...done\n    Reading intelligently...done\n    start 'em...done...done...done...done...done...\n    Create files in sequential order...done.\n    Stat files in sequential order...done.\n    Delete files in sequential order...done.\n    Create files in random order...done.\n    Stat files in random order...done.\n    Delete files in random order...done.\n    Version  1.96       ------Sequential Output------ --Sequential Input- --Random-\n    Concurrency   1     -Per Chr- --Block-- -Rewrite- -Per Chr- --Block-- --Seeks--\n    Machine        Size K/sec %CP K/sec %CP K/sec %CP K/sec %CP K/sec %CP  /sec %CP\n    ubuntu-sample-b 16M   701  95 +++++ +++ +++++ +++  5119  96 +++++ +++  1396   3\n    Latency             51049us     175us     109us    2740us     100us   12042us\n    Version  1.96       ------Sequential Create------ --------Random Create--------\n    ubuntu-sample-bonni -Create-- --Read--- -Delete-- -Create-- --Read--- -Delete--\n    files:max            /sec %CP  /sec %CP  /sec %CP  /sec %CP  /sec %CP  /sec %CP\n           1:65536:0/16   155   0 +++++ +++ +++++ +++   452   2 +++++ +++ +++++ +++\n    Latency               144us     284us     168us     346us     226us      56us\n    1.96,1.96,ubuntu-sample-bonnie-0,1,1361895854,16M,,701,95,+++++,+++,+++++,+++,5119,96,+++++,+++,1396,3,1,65536,,,16,155,0,++++\n    +,+++,+++++,+++,452,2,+++++,+++,+++++,+++,51049us,175us,109us,2740us,100us,12042us,144us,284us,168us,346us,226us,56us\n\n\n\nReference Links:\n[Bonnie++ Documentation](http://www.coker.com.au/bonnie++/readme.html)\n",
  "readme": "# Overview\n\nBonnie++  is a program to test filesystems and hard drivess for performance or\nthe lack therof. There are a many different types of  file  system  operations \nwhich  different applications use to different degrees. Bonnie++ tests some of\nthem and for each test gives a result of the amount of work done per second and\nthe percentage of CPU time this took. This particular charm is a subordinate\ncharm.\n\n# Summary of tests\n\nThe first 6 tests are from the original Bonnie: Specifically, these are the\ntypes of filesystem activity that have been observed to be bottlenecks in\nI/O-intensive applications\n\n## Test Details\n\nThe file IO tests consist of the following:\n * Sequential Output\n * Sequential Input\n * Random Seeks\n\n# Charm Options\n\nThe charm for Connie++ allows Bonnie++ to run as a smoke, lite, full, and a\nperformance test. \n\n * Smoke Test: A quick test that makes a quick and simple call to bonnie++. \n * Lite: A short run of bonnie++ \n * Full: A thorough test for the local filesystem\n * Analysis: A performance test of the filesystem\n\n# Usage\n\nThis charm is a subordinate charm. Here is an example of how to deploy bonnie\nwith the Ubuntu charm. \n\nTo deploy:\n\n    juju bootstrap\n    juju deploy ubuntu\n    juju deploy bonnie\n    juju add-relation ubuntu bonnie\n\nThe results are located in the /tmp/Results-{Date and Time} directory. The best\nway to access the results is to do the following:\n\n    juju ssh 0\n    cat /tmp/Results-{Date and Time}/results-{Date and Time}-.log\n\n**NOTE**  {Date and Time} refers to the specific time bonnie++ was executed\n\n## Output\nThe primary output is plain-text in 80 columns which is designed to fit well\nwhen pasted into email and which will work well with Braille displays. The\nsecond type of output is CSV (Comma Seperated Values). \n\nExample Results file for a smoke test: \n\n    Using uid:0, gid:0.\n    Writing a byte at a time...done\n    Writing intelligently...done\n    Rewriting...done\n    Reading a byte at a time...done\n    Reading intelligently...done\n    start 'em...done...done...done...done...done...\n    Create files in sequential order...done.\n    Stat files in sequential order...done.\n    Delete files in sequential order...done.\n    Create files in random order...done.\n    Stat files in random order...done.\n    Delete files in random order...done.\n    Version  1.96       ------Sequential Output------ --Sequential Input- --Random-\n    Concurrency   1     -Per Chr- --Block-- -Rewrite- -Per Chr- --Block-- --Seeks--\n    Machine        Size K/sec %CP K/sec %CP K/sec %CP K/sec %CP K/sec %CP  /sec %CP\n    ubuntu-sample-b 16M   701  95 +++++ +++ +++++ +++  5119  96 +++++ +++  1396   3\n    Latency             51049us     175us     109us    2740us     100us   12042us\n    Version  1.96       ------Sequential Create------ --------Random Create--------\n    ubuntu-sample-bonni -Create-- --Read--- -Delete-- -Create-- --Read--- -Delete--\n    files:max            /sec %CP  /sec %CP  /sec %CP  /sec %CP  /sec %CP  /sec %CP\n           1:65536:0/16   155   0 +++++ +++ +++++ +++   452   2 +++++ +++ +++++ +++\n    Latency               144us     284us     168us     346us     226us      56us\n    1.96,1.96,ubuntu-sample-bonnie-0,1,1361895854,16M,,701,95,+++++,+++,+++++,+++,5119,96,+++++,+++,1396,3,1,65536,,,16,155,0,++++\n    +,+++,+++++,+++,452,2,+++++,+++,+++++,+++,51049us,175us,109us,2740us,100us,12042us,144us,284us,168us,346us,226us,56us\n\n\n\nReference Links:\n[Bonnie++ Documentation](http://www.coker.com.au/bonnie++/readme.html)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}