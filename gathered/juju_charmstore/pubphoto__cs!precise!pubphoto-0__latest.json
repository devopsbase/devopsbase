{
  "name": "pubphoto Juju charm",
  "juju_charm_name": "pubphoto",
  "revision": "cs:precise/pubphoto-0",
  "latest": true,
  "uris": [
    "https://jujucharms.com/pubphoto",
    "https://jujucharms.com/pubphoto/precise",
    "https://jujucharms.com/pubphoto/precise/0",
    "https://api.jujucharms.com/v5/pubphoto",
    "https://api.jujucharms.com/v5/precise/pubphoto",
    "https://api.jujucharms.com/v5/precise/pubphoto-0"
  ],
  "labels": [
    "Juju charm",
    "applications",
    "Binding/Provider/HP",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://jujucharms.com/pubphoto",
  "package_url": "https://api.jujucharms.com/v5/precise/pubphoto-0/archive",
  "created": "2015-06-17T09:34:08.327Z",
  "updated": "2015-06-17T09:34:08.327Z",
  "description": "A simple way to exchange just-taken photos.\n\nA simple way to exchange just-taken photos in the pub with people you don't\nknow.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "parameters": {
    "domain": {
      "type": "string",
      "description": "Domain in which pubphoto is running. If not set, it will default to the public address of the instance",
      "default": "",
      "mapping": "charm_option"
    },
    "port": {
      "type": "int",
      "description": "The port in which will be running",
      "default": 80,
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "website",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Overview\n\nPubPhoto allows you to share photos or images with just a couple steps, and no\ncomplications. If you upload a photo, a code will be given to you. In order\nfor another user to download or access the photo, they can just access the\nwebpage and enter the code, and the photo will be available for them.\n\nThis charm will deploy and configure PubPhoto for use in the cloud.\n\n# Usage\n\nFirst, bootstrap your environment:\n\n    juju bootstrap\n\nThen, deploy the PubPhoto service:\n\n    juju deploy pubphoto\n\nWait a couple minutes, and discover the address by executing:\n\n    juju status pubphoto\n\nYou can browse to the service by going to the public address. You're all set\nnow!\n\n## Scale out Usage\n\nThis charm will easily scale, so in order to add more units, you can execute:\n\n    juju add-unit pubphoto -n #\n\nwhere # is the number of units you want to add. Once done, you can relate the\nservice with HAProxy, in order to get a single address for the many instances\nthat the service has by doing:\n\n    juju deploy haproxy\n    juju add-relation pubphoto:website haproxy:reverseproxy\n\n# Configuration\n\nThis charm only has two configuration options: `port` and `domain`.\n\n`port`: Use this option to set the port in which you want PubPhoto to run. It\ndefault to port 80.\n\n`domain`: This is the domain name you will use for the service. If it is not\nset, it will default to the public address of the unit. This is useful if you\nare going to scale the service and using HAProxy, for example, where you can set\nthe domain to the domain you will be using in your various units. It does not\naffect the service usability, it is just a string displayed on screen.\n\nIn order to set any of the options, execute the following command:\n\n    juju set [option]=[value]\n\n\n# Contact Information\n\nAuthor: José Antonio Rey <jose@ubuntu.com>  \nReport bugs with the charm at: http://bugs.launchpad.net/charms/+source/pubphoto  \n\n## PubPhoto\n\n- [Git page for PubPhoto](https://github.com/stuartlangridge/pubphoto)\n- [Issue tracker for PubPhoto](https://github.com/stuartlangridge/pubphoto/issues)\n",
  "readme": "# Overview\n\nPubPhoto allows you to share photos or images with just a couple steps, and no\ncomplications. If you upload a photo, a code will be given to you. In order\nfor another user to download or access the photo, they can just access the\nwebpage and enter the code, and the photo will be available for them.\n\nThis charm will deploy and configure PubPhoto for use in the cloud.\n\n# Usage\n\nFirst, bootstrap your environment:\n\n    juju bootstrap\n\nThen, deploy the PubPhoto service:\n\n    juju deploy pubphoto\n\nWait a couple minutes, and discover the address by executing:\n\n    juju status pubphoto\n\nYou can browse to the service by going to the public address. You're all set\nnow!\n\n## Scale out Usage\n\nThis charm will easily scale, so in order to add more units, you can execute:\n\n    juju add-unit pubphoto -n #\n\nwhere # is the number of units you want to add. Once done, you can relate the\nservice with HAProxy, in order to get a single address for the many instances\nthat the service has by doing:\n\n    juju deploy haproxy\n    juju add-relation pubphoto:website haproxy:reverseproxy\n\n# Configuration\n\nThis charm only has two configuration options: `port` and `domain`.\n\n`port`: Use this option to set the port in which you want PubPhoto to run. It\ndefault to port 80.\n\n`domain`: This is the domain name you will use for the service. If it is not\nset, it will default to the public address of the unit. This is useful if you\nare going to scale the service and using HAProxy, for example, where you can set\nthe domain to the domain you will be using in your various units. It does not\naffect the service usability, it is just a string displayed on screen.\n\nIn order to set any of the options, execute the following command:\n\n    juju set [option]=[value]\n\n\n# Contact Information\n\nAuthor: José Antonio Rey <jose@ubuntu.com>  \nReport bugs with the charm at: http://bugs.launchpad.net/charms/+source/pubphoto  \n\n## PubPhoto\n\n- [Git page for PubPhoto](https://github.com/stuartlangridge/pubphoto)\n- [Issue tracker for PubPhoto](https://github.com/stuartlangridge/pubphoto/issues)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}