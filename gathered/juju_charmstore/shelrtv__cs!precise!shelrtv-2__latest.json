{
  "name": "shelrtv Juju charm",
  "juju_charm_name": "shelrtv",
  "revision": "cs:precise/shelrtv-2",
  "latest": true,
  "uris": [
    "https://jujucharms.com/shelrtv",
    "https://jujucharms.com/shelrtv/precise",
    "https://jujucharms.com/shelrtv/precise/2",
    "https://api.jujucharms.com/v5/shelrtv",
    "https://api.jujucharms.com/v5/precise/shelrtv",
    "https://api.jujucharms.com/v5/precise/shelrtv-2"
  ],
  "labels": [
    "Juju charm",
    "applications",
    "Binding/Provider/Amazon/RDS",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://jujucharms.com/shelrtv",
  "package_url": "https://api.jujucharms.com/v5/precise/shelrtv-2/archive",
  "created": "2015-06-17T09:33:37.733Z",
  "updated": "2015-06-17T09:33:37.733Z",
  "description": "Shelr.tv - record your shell and publish it\n\nShelr.tv is a service and a tool for terminal screencasting. Service allow you to share your terminal \nrecords like this (http://shelr.tv/records/4f427daf96a5690001000003)\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mongodb",
      "self_resolve": true,
      "juju_interface": "mongodb",
      "juju_name": "db",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "github-id": {
      "type": "string",
      "description": "Github Application ID (Login-related)",
      "default": "",
      "mapping": "charm_option"
    },
    "github-secret": {
      "type": "string",
      "description": "Github Secret key for API (Login-related)",
      "default": "",
      "mapping": "charm_option"
    },
    "god": {
      "type": "string",
      "description": "Defines which User ID is an Admin",
      "default": "",
      "mapping": "charm_option"
    },
    "google-id": {
      "type": "string",
      "description": "Google Application ID (Login-related)",
      "default": "",
      "mapping": "charm_option"
    },
    "google-secret": {
      "type": "string",
      "description": "Google Secret key for API (Login-related)",
      "default": "",
      "mapping": "charm_option"
    },
    "twitter-id": {
      "type": "string",
      "description": "Twitter Application ID (Login-related)",
      "default": "",
      "mapping": "charm_option"
    },
    "twitter-secret": {
      "type": "string",
      "description": "Twitter Secret key for API (Login-related)",
      "default": "",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/http",
      "juju_interface": "http",
      "juju_name": "website",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "# Introduction\n\nShelr.tv is a service and a tool for terminal screencasting. This charm will\ndeploy the latest Shelr.tv code to provide the web interface found on\nhttp://shelr.tv/\n\n# Deployment\n\n    juju deploy mongodb\n    juju deploy shelrtv\n    juju add-relation shelrtv mongodb\n    juju expose shelrtv\n\n# Configuration\n\nShelr.tv has several additional options for configuration. These are all\noptional as the primary charm will deploy and run without issues; however, if\nyou want to enable different log-in provdiers or configure an \"admin\" see the\nfollowing options. At any time you can run `juju get shelrtv` to investigate all\navailable options for your deployment.\n\n`google-id`, `google-secret`: The Google Application ID and Secret which can be\nobtained by registering your app on Google.\n\n`github-id`, `github-secret`: The Github Application ID and Secret which can be\nobtained by [registering the application on\nGitHub](https://github.com/settings/applications/new).\n\n`twitter-id`, `twitter-secret`: The Twitter Application ID and Secret which can\nbe obtained by [registering the application on\nTwitter](https://dev.twitter.com/apps/new).\n\n`god`: This will apply \"god\" access to the supplied User ID, The user ID can be\nderived from the User profile URL, eg:\nhttp://shelr.tv/users/4f809ab19660802ca6000001. In this example\n4f809ab19660802ca6000001 would be the user's ID and would be supplied as the\nVALUE for this option\n\n\nTo set one or more of these configuration options run the following command\n\n    juju set shelrtv OPTION=VALUE [OPTION=VALUE ...]\n\nWhere OPTION is one of the aforementioned configuration options, and VALUE is the\nvalue you wish to set for that option. You can set as many options as you'd like\nin a single command by continuing to set additional values. An example below:\n\n    juju set shelrtv google-id=YourGoogleApplicationID google-secret=YourSecretKey god=8675309\n\n# Future\n\nThe author reports that pure OpenID support will be added soon, which will negate\nthe need to use github, twitter, and google settings for login.\n\n# Troubleshooting\n\n - Browser says: Can not connect to server: Make sure you've executed `juju expose shelrtv`\n - Browser still says: Can not connect to server: It can sometimes take several\nminutes for the WEBrick Ruby Server to start for the first time, if you've\nrecently performed the add-relation command, waiting up to five minutes before\nreporting a bug is recommended.\n - Local shelr won't publish to my new site: The shelr client was just recently\nupdated to allow for multiple shelr.tv instances, as such, run `gem upgrade` to\npull the latest version down. Once updated get the API key for your user from\nthe deployed Juju instance and the public-address for the instance and run the\nfollowing command:\n    \n        shelr setup [API_KEY] [PUBLIC-ADDRESS]\n    \nThis will setup shelr to push all recordings to your new instance. At this time\nthere is no way to switch hosts on the fly during pushing.\n\n# Contact Information\n## Shelr.tv\n\n - [Shelr.tv website](http://shelr.tv/)\n",
  "readme": "# Introduction\n\nShelr.tv is a service and a tool for terminal screencasting. This charm will\ndeploy the latest Shelr.tv code to provide the web interface found on\nhttp://shelr.tv/\n\n# Deployment\n\n    juju deploy mongodb\n    juju deploy shelrtv\n    juju add-relation shelrtv mongodb\n    juju expose shelrtv\n\n# Configuration\n\nShelr.tv has several additional options for configuration. These are all\noptional as the primary charm will deploy and run without issues; however, if\nyou want to enable different log-in provdiers or configure an \"admin\" see the\nfollowing options. At any time you can run `juju get shelrtv` to investigate all\navailable options for your deployment.\n\n`google-id`, `google-secret`: The Google Application ID and Secret which can be\nobtained by registering your app on Google.\n\n`github-id`, `github-secret`: The Github Application ID and Secret which can be\nobtained by [registering the application on\nGitHub](https://github.com/settings/applications/new).\n\n`twitter-id`, `twitter-secret`: The Twitter Application ID and Secret which can\nbe obtained by [registering the application on\nTwitter](https://dev.twitter.com/apps/new).\n\n`god`: This will apply \"god\" access to the supplied User ID, The user ID can be\nderived from the User profile URL, eg:\nhttp://shelr.tv/users/4f809ab19660802ca6000001. In this example\n4f809ab19660802ca6000001 would be the user's ID and would be supplied as the\nVALUE for this option\n\n\nTo set one or more of these configuration options run the following command\n\n    juju set shelrtv OPTION=VALUE [OPTION=VALUE ...]\n\nWhere OPTION is one of the aforementioned configuration options, and VALUE is the\nvalue you wish to set for that option. You can set as many options as you'd like\nin a single command by continuing to set additional values. An example below:\n\n    juju set shelrtv google-id=YourGoogleApplicationID google-secret=YourSecretKey god=8675309\n\n# Future\n\nThe author reports that pure OpenID support will be added soon, which will negate\nthe need to use github, twitter, and google settings for login.\n\n# Troubleshooting\n\n - Browser says: Can not connect to server: Make sure you've executed `juju expose shelrtv`\n - Browser still says: Can not connect to server: It can sometimes take several\nminutes for the WEBrick Ruby Server to start for the first time, if you've\nrecently performed the add-relation command, waiting up to five minutes before\nreporting a bug is recommended.\n - Local shelr won't publish to my new site: The shelr client was just recently\nupdated to allow for multiple shelr.tv instances, as such, run `gem upgrade` to\npull the latest version down. Once updated get the API key for your user from\nthe deployed Juju instance and the public-address for the instance and run the\nfollowing command:\n    \n        shelr setup [API_KEY] [PUBLIC-ADDRESS]\n    \nThis will setup shelr to push all recordings to your new instance. At this time\nthere is no way to switch hosts on the fly during pushing.\n\n# Contact Information\n## Shelr.tv\n\n - [Shelr.tv website](http://shelr.tv/)\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}