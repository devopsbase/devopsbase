{
  "name": "quantum-gateway Juju charm",
  "juju_charm_name": "quantum-gateway",
  "revision": "cs:precise/quantum-gateway-13",
  "latest": true,
  "uris": [
    "https://jujucharms.com/quantum-gateway",
    "https://jujucharms.com/quantum-gateway/precise",
    "https://jujucharms.com/quantum-gateway/precise/13",
    "https://api.jujucharms.com/v5/quantum-gateway",
    "https://api.jujucharms.com/v5/precise/quantum-gateway",
    "https://api.jujucharms.com/v5/precise/quantum-gateway-13"
  ],
  "labels": [
    "Juju charm",
    "openstack",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/API",
    "Style/Virtualization Level/Hardware/Network",
    "Type/Devopsware/Build/Java/Ant",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Monitoring",
    "Type/Devopsware/Cloud Platform/OpenStack",
    "Type/Infrastructure/Operating System",
    "Type/Infrastructure/Network"
  ],
  "info_url": "https://jujucharms.com/quantum-gateway",
  "package_url": "https://api.jujucharms.com/v5/precise/quantum-gateway-13/archive",
  "created": "2015-06-17T09:36:19.811Z",
  "updated": "2015-06-17T09:36:19.811Z",
  "description": "Virtual Networking for OpenStack - Neutron Gateway\n\nNeutron is a virtual network service for Openstack, and a part of\nNetstack. Just like OpenStack Nova provides an API to dynamically\nrequest and configure virtual servers, Neutron provides an API to\ndynamically request and configure virtual networks. These networks\nconnect \"interfaces\" from other OpenStack services (e.g., virtual NICs\nfrom Nova VMs). The Neutron API supports extensions to provide\nadvanced network capabilities (e.g., QoS, ACLs, network monitoring,\netc.)\n.\nThis charm provides central Neutron networking services as part\nof a Neutron based Openstack deployment\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/rabbitmq",
      "self_resolve": true,
      "juju_interface": "rabbitmq",
      "juju_name": "amqp",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/mysql-shared",
      "self_resolve": true,
      "juju_interface": "mysql-shared",
      "juju_name": "shared-db",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "ext-port": {
      "type": "string",
      "description": "External port to use for routing of instance\ntraffic to the external public network.\n",
      "default": null,
      "mapping": "charm_option"
    },
    "external-network-id": {
      "type": "string",
      "description": "Optional configuration to set the external-network-id. Only needed when\nconfiguring multiple external networks and should be used in conjunction\nwith run-internal-router.\n",
      "default": null,
      "mapping": "charm_option"
    },
    "openstack-origin": {
      "type": "string",
      "description": "Optional configuration to support use of additional sources such as:\n.\n  - ppa:myteam/ppa\n  - cloud:precise-folsom/proposed\n  - cloud:precise-folsom\n  - deb http://my.archive.com/ubuntu main|KEYID\n.\nNote that quantum/neutron is only supported >= Folsom.\n",
      "default": "distro",
      "mapping": "charm_option"
    },
    "plugin": {
      "type": "string",
      "description": "Network configuration plugin to use for quantum.\nSupported values include:\n.\n  ovs - OpenVSwitch\n  nvp - Nicira NVP\n",
      "default": "ovs",
      "mapping": "charm_option"
    },
    "rabbit-user": {
      "type": "string",
      "description": "",
      "default": "neutron",
      "mapping": "charm_option"
    },
    "rabbit-vhost": {
      "type": "string",
      "description": "",
      "default": "openstack",
      "mapping": "charm_option"
    },
    "run-internal-router": {
      "type": "string",
      "description": "Optional configuration to support how the L3 agent option\nhandle_internal_only_routers is configured.\nall    => Set to be true everywhere\nnone   => Set to be false everywhere\nleader => Set to be true on one node (the leader) and false everywhere\n          else.\nUse leader and none when configuring multiple floating pools\n",
      "default": "all",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/quantum",
      "juju_interface": "quantum",
      "juju_name": "quantum-network-service",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "juju_peers": {
    "cluster": {
      "Name": "cluster",
      "Role": "peer",
      "Interface": "quantum-gateway-ha",
      "Optional": false,
      "Limit": 1,
      "Scope": "global"
    }
  },
  "license": "Overview\n--------\n\nNeutron provides flexible software defined networking (SDN) for OpenStack.\n\nThis charm is designed to be used in conjunction with the rest of the OpenStack\nrelated charms in the charm store) to virtualized the network that Nova Compute\ninstances plug into.\n\nIts designed as a replacement for nova-network; however it does not yet\nsupport all of the features as nova-network (such as multihost) so may not\nbe suitable for all.\n\nNeutron supports a rich plugin/extension framework for propriety networking\nsolutions and supports (in core) Nicira NVP, NEC, Cisco and others...\n\nThe Openstack charms currently only support the fully free OpenvSwitch plugin\nand implements the 'Provider Router with Private Networks' use case.\n\nSee the upstream [Neutron documentation](http://docs.openstack.org/trunk/openstack-network/admin/content/use_cases_single_router.html)\nfor more details.\n\n\nUsage\n-----\n\nIn order to use Neutron with Openstack, you will need to deploy the\nnova-compute and nova-cloud-controller charms with the network-manager\nconfiguration set to 'Neutron':\n\n    nova-cloud-controller:\n        network-manager: Neutron\n\nThis decision must be made prior to deploying Openstack with Juju as\nNeutron is deployed baked into these charms from install onwards:\n\n    juju deploy nova-compute\n    juju deploy --config config.yaml nova-cloud-controller\n    juju add-relation nova-compute nova-cloud-controller\n\nThe Neutron Gateway can then be added to the deploying:\n\n    juju deploy quantum-gateway\n    juju add-relation quantum-gateway mysql\n    juju add-relation quantum-gateway rabbitmq-server\n    juju add-relation quantum-gateway nova-cloud-controller\n\nThe gateway provides two key services; L3 network routing and DHCP services.\n\nThese are both required in a fully functional Neutron Openstack deployment.\n\nIf multiple floating pools are needed then an L3 agent (which corresponds to\na quantum-gateway for the sake of this charm) is needed for each one. Each\ngateway needs to be deployed as a seperate service so that the external\nnetwork id can be set differently for each gateway e.g.\n\n    juju deploy quantum-gateway quantum-gateway-extnet1\n    juju add-relation quantum-gateway-extnet1 mysql\n    juju add-relation quantum-gateway-extnet1 rabbitmq-server\n    juju add-relation quantum-gateway-extnet1 nova-cloud-controller\n    juju deploy quantum-gateway quantum-gateway-extnet2\n    juju add-relation quantum-gateway-extnet2 mysql\n    juju add-relation quantum-gateway-extnet2 rabbitmq-server\n    juju add-relation quantum-gateway-extnet2 nova-cloud-controller\n\n    Create extnet1 and extnet2 via neutron client and take a note of their ids\n\n    juju set quantum-gateway-extnet1 \"run-internal-router=leader\"\n    juju set quantum-gateway-extnet2 \"run-internal-router=none\"\n    juju set quantum-gateway-extnet1 \"external-network-id=<extnet1 id>\"\n    juju set quantum-gateway-extnet2 \"external-network-id=<extnet2 id>\"\n\nSee upstream [Neutron multi extnet](http://docs.openstack.org/trunk/config-reference/content/adv_cfg_l3_agent_multi_extnet.html)\n\nTODO\n----\n\n * Provide more network configuration use cases.\n * Support VLAN in addition to GRE+OpenFlow for L2 separation.\n",
  "readme": "Overview\n--------\n\nNeutron provides flexible software defined networking (SDN) for OpenStack.\n\nThis charm is designed to be used in conjunction with the rest of the OpenStack\nrelated charms in the charm store) to virtualized the network that Nova Compute\ninstances plug into.\n\nIts designed as a replacement for nova-network; however it does not yet\nsupport all of the features as nova-network (such as multihost) so may not\nbe suitable for all.\n\nNeutron supports a rich plugin/extension framework for propriety networking\nsolutions and supports (in core) Nicira NVP, NEC, Cisco and others...\n\nThe Openstack charms currently only support the fully free OpenvSwitch plugin\nand implements the 'Provider Router with Private Networks' use case.\n\nSee the upstream [Neutron documentation](http://docs.openstack.org/trunk/openstack-network/admin/content/use_cases_single_router.html)\nfor more details.\n\n\nUsage\n-----\n\nIn order to use Neutron with Openstack, you will need to deploy the\nnova-compute and nova-cloud-controller charms with the network-manager\nconfiguration set to 'Neutron':\n\n    nova-cloud-controller:\n        network-manager: Neutron\n\nThis decision must be made prior to deploying Openstack with Juju as\nNeutron is deployed baked into these charms from install onwards:\n\n    juju deploy nova-compute\n    juju deploy --config config.yaml nova-cloud-controller\n    juju add-relation nova-compute nova-cloud-controller\n\nThe Neutron Gateway can then be added to the deploying:\n\n    juju deploy quantum-gateway\n    juju add-relation quantum-gateway mysql\n    juju add-relation quantum-gateway rabbitmq-server\n    juju add-relation quantum-gateway nova-cloud-controller\n\nThe gateway provides two key services; L3 network routing and DHCP services.\n\nThese are both required in a fully functional Neutron Openstack deployment.\n\nIf multiple floating pools are needed then an L3 agent (which corresponds to\na quantum-gateway for the sake of this charm) is needed for each one. Each\ngateway needs to be deployed as a seperate service so that the external\nnetwork id can be set differently for each gateway e.g.\n\n    juju deploy quantum-gateway quantum-gateway-extnet1\n    juju add-relation quantum-gateway-extnet1 mysql\n    juju add-relation quantum-gateway-extnet1 rabbitmq-server\n    juju add-relation quantum-gateway-extnet1 nova-cloud-controller\n    juju deploy quantum-gateway quantum-gateway-extnet2\n    juju add-relation quantum-gateway-extnet2 mysql\n    juju add-relation quantum-gateway-extnet2 rabbitmq-server\n    juju add-relation quantum-gateway-extnet2 nova-cloud-controller\n\n    Create extnet1 and extnet2 via neutron client and take a note of their ids\n\n    juju set quantum-gateway-extnet1 \"run-internal-router=leader\"\n    juju set quantum-gateway-extnet2 \"run-internal-router=none\"\n    juju set quantum-gateway-extnet1 \"external-network-id=<extnet1 id>\"\n    juju set quantum-gateway-extnet2 \"external-network-id=<extnet2 id>\"\n\nSee upstream [Neutron multi extnet](http://docs.openstack.org/trunk/config-reference/content/adv_cfg_l3_agent_multi_extnet.html)\n\nTODO\n----\n\n * Provide more network configuration use cases.\n * Support VLAN in addition to GRE+OpenFlow for L2 separation.\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}