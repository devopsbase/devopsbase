{
  "name": "nrpe-external-master Juju charm",
  "juju_charm_name": "nrpe-external-master",
  "revision": "cs:precise/nrpe-external-master-17",
  "latest": true,
  "uris": [
    "https://jujucharms.com/nrpe-external-master",
    "https://jujucharms.com/nrpe-external-master/precise",
    "https://jujucharms.com/nrpe-external-master/precise/17",
    "https://api.jujucharms.com/v5/nrpe-external-master",
    "https://api.jujucharms.com/v5/precise/nrpe-external-master",
    "https://api.jujucharms.com/v5/precise/nrpe-external-master-17"
  ],
  "labels": [
    "Juju charm",
    "monitoring",
    "Mode/Executable/Bundle/Juju Charm",
    "Style/Virtualization Level/Hardware/Network",
    "Type/Devopsware/Deployment/Juju",
    "Type/Devopsware/Monitoring/Nagios",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://jujucharms.com/nrpe-external-master",
  "package_url": "https://api.jujucharms.com/v5/precise/nrpe-external-master-17/archive",
  "created": "2015-06-17T09:34:54.123Z",
  "updated": "2015-06-17T09:34:54.123Z",
  "description": "Nagios Remote Plugin Executor Server\n\nNagios is a host/service/network monitoring and management system.  The\npurpose of this addon is to allow you to execute Nagios plugins on a\nremote host in as transparent a manner as possible.  This program runs\nas a background process on the remote host and processes command\nexecution requests from the check_nrpe plugin on the Nagios host. It's\nspecifically designed to connect to an external master.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": true,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/juju-info",
      "self_resolve": true,
      "juju_interface": "juju-info",
      "juju_name": "general-info",
      "juju_role": "requirer",
      "juju_limit": 1
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/requires/nrpe-external-master",
      "self_resolve": true,
      "juju_interface": "nrpe-external-master",
      "juju_name": "nrpe-external-master",
      "juju_role": "requirer",
      "juju_limit": 1
    }
  ],
  "parameters": {
    "disk_root": {
      "type": "string",
      "description": "Root disk check. This can be made to also check non-root disk systems\nas follows:\n    -u GB -w 20% -c 15% -r '/srv/juju/vol-' -C -u GB -w 25% -c 20%\nThe string '-p /' will be appended to this check, so you must finish\nthe string taking that into account. See the nagios check_disk plugin\nhelp for further details.\n",
      "default": "-u GB -w 25% -c 20% -K 5%",
      "mapping": "charm_option"
    },
    "hostcheck_inherit": {
      "type": "string",
      "description": "Hostcheck to inherit",
      "default": "server",
      "mapping": "charm_option"
    },
    "hostgroups": {
      "type": "string",
      "description": "Comma separated list of hostgroups to add for these hosts",
      "default": "",
      "mapping": "charm_option"
    },
    "load": {
      "type": "string",
      "description": "Load check. Parameters for the check_load script or 'auto' to allow the\ncharm to generate parameters based on the processor count.\nFor example, '-w 8,8,8 -c 15,15,15' sets the WARNING threshold to 8 and\nCRITICAL to 15.\n",
      "default": "auto",
      "mapping": "charm_option"
    },
    "nagios_address_type": {
      "type": "string",
      "description": "Determines whether the nagios host check should use the private\nor public IP address of an instance.  Can be \"private\" or \"public\".\n",
      "default": "private",
      "mapping": "charm_option"
    },
    "nagios_host_context": {
      "type": "string",
      "description": "a string that will be prepended to instance name to set the host name\nin nagios. So for instance the hostname would be something like:\n    juju-postgresql-0\nIf you're running multiple environments with the same services in them\nthis allows you to differentiate between them.\n",
      "default": "juju",
      "mapping": "charm_option"
    },
    "nagios_hostname_type": {
      "type": "string",
      "description": "Determines whether a server is identified by its unit name or\nhost name.  If you're in a virtual environment, \"unit\" is\nprobably best.  If you're using MaaS, you may prefer \"host\".\n",
      "default": "unit",
      "mapping": "charm_option"
    },
    "nagios_master": {
      "type": "string",
      "description": "IP address of the nagios master to allow rsyncs from",
      "default": "None",
      "mapping": "charm_option"
    },
    "procs": {
      "type": "string",
      "description": "Number of processes check or 'auto' for the charm to generate thresholds based on processor count",
      "default": "auto",
      "mapping": "charm_option"
    },
    "server_port": {
      "type": "int",
      "description": "port that nagios-nrpe-server will listen on",
      "default": 5666,
      "mapping": "charm_option"
    },
    "swap": {
      "type": "string",
      "description": "Swap check",
      "default": "-w 90% -c 75%",
      "mapping": "charm_option"
    },
    "users": {
      "type": "string",
      "description": "Users check",
      "default": "-w 20 -c 25",
      "mapping": "charm_option"
    },
    "zombies": {
      "type": "string",
      "description": "Zombie processes check",
      "default": "-w 3 -c 6 -s Z",
      "mapping": "charm_option"
    }
  },
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/monitors",
      "juju_interface": "monitors",
      "juju_name": "monitors",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/nrpe",
      "juju_interface": "nrpe",
      "juju_name": "nrpe",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "This is a pretty special purpose charm currently, and most likely you'll want\nto look at lp:charms/nrpe to see if it fits your needs better. This will be\nmerged into that one in the not too distant future.\n\nSome other caveats:\n - It's included in the CharmStore as an example of a workaround for the lack\n   of cross-environment relations.\n - It might be obsoleted if/when cross-environment relations land in Juju core\n - It currently requires the application of out of band security groups. As an\n   example, if your nagios master has an IP of 10.10.10.10 you'd want to expose\n   rsync and nrpe from that machine only using the following commands (in\n   Openstack, as an example - will vary by provider) so that you are only\n   opening them to the specific server, rather than any IP:\n    nova secgroup-add-rule juju-${JUJU_ENV} tcp 873 873 10.10.10.10/32\n    nova secgroup-add-rule juju-${JUJU_ENV} tcp 5666 5666 10.10.10.10/32\n\nThis charm provides a means of interacting with a Nagios server that's managed\noutside of the Juju environment. This can be useful if you have a situation\nwhere you have a number of different Juju environments that you want to connect\nto the same nagios instance until https://bugs.launchpad.net/juju/+bug/1049340\nis fixed.\n\nIt's a subordinate charm, and works by creating a base set of checks in\n/etc/nagios/nrpe.d, including check_load, check_users, check_disk_root. All of\nthe options for these are configurable but sensible defaults have been set in\nconfig.yaml.\n\nThe most important config option that you'll want to set is the \"nagios_master\"\noption. This should be the hostname or the IP address of the Nagios server that\nyou want to connect to. It will be added to the \"allowed_hosts\" configuration\noption of /etc/nagios/nrpe.cfg. An rsync stanza will also then be created\nallowing the Nagios server to pick up configs from /var/lib/nagios/export (as\na target called \"external-nagios\"), which will also be configured to allow\nconnections from the hostname or IP address as specified for the\n\"nagios_master\" variable.\n\nIt's up to you to configure the Nagios master to pull the configs needed, which\nwill then cause it to connect back to the instances in question to run the nrpe\nchecks you've defined.\n\nYou will also want to modify the primary charms in question to create\nservice-specific checks. They should do this in the\nnrpe-external-master-relation-changed hook, by dumping the checks they need\ninto /etc/nagios/nrpe.d, and the server side configs to call those checks into\n/var/lib/nagios/export.\n",
  "readme": "This is a pretty special purpose charm currently, and most likely you'll want\nto look at lp:charms/nrpe to see if it fits your needs better. This will be\nmerged into that one in the not too distant future.\n\nSome other caveats:\n - It's included in the CharmStore as an example of a workaround for the lack\n   of cross-environment relations.\n - It might be obsoleted if/when cross-environment relations land in Juju core\n - It currently requires the application of out of band security groups. As an\n   example, if your nagios master has an IP of 10.10.10.10 you'd want to expose\n   rsync and nrpe from that machine only using the following commands (in\n   Openstack, as an example - will vary by provider) so that you are only\n   opening them to the specific server, rather than any IP:\n    nova secgroup-add-rule juju-${JUJU_ENV} tcp 873 873 10.10.10.10/32\n    nova secgroup-add-rule juju-${JUJU_ENV} tcp 5666 5666 10.10.10.10/32\n\nThis charm provides a means of interacting with a Nagios server that's managed\noutside of the Juju environment. This can be useful if you have a situation\nwhere you have a number of different Juju environments that you want to connect\nto the same nagios instance until https://bugs.launchpad.net/juju/+bug/1049340\nis fixed.\n\nIt's a subordinate charm, and works by creating a base set of checks in\n/etc/nagios/nrpe.d, including check_load, check_users, check_disk_root. All of\nthe options for these are configurable but sensible defaults have been set in\nconfig.yaml.\n\nThe most important config option that you'll want to set is the \"nagios_master\"\noption. This should be the hostname or the IP address of the Nagios server that\nyou want to connect to. It will be added to the \"allowed_hosts\" configuration\noption of /etc/nagios/nrpe.cfg. An rsync stanza will also then be created\nallowing the Nagios server to pick up configs from /var/lib/nagios/export (as\na target called \"external-nagios\"), which will also be configured to allow\nconnections from the hostname or IP address as specified for the\n\"nagios_master\" variable.\n\nIt's up to you to configure the Nagios master to pull the configs needed, which\nwill then cause it to connect back to the instances in question to run the nrpe\nchecks you've defined.\n\nYou will also want to modify the primary charms in question to create\nservice-specific checks. They should do this in the\nnrpe-external-master-relation-changed hook, by dumping the checks they need\ninto /etc/nagios/nrpe.d, and the server side configs to call those checks into\n/var/lib/nagios/export.\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}