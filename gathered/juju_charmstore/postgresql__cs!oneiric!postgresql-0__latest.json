{
  "name": "postgresql Juju charm",
  "juju_charm_name": "postgresql",
  "revision": "cs:oneiric/postgresql-0",
  "latest": true,
  "uris": [
    "https://jujucharms.com/postgresql",
    "https://jujucharms.com/postgresql/oneiric",
    "https://jujucharms.com/postgresql/oneiric/0",
    "https://api.jujucharms.com/v5/postgresql",
    "https://api.jujucharms.com/v5/oneiric/postgresql",
    "https://api.jujucharms.com/v5/oneiric/postgresql-0"
  ],
  "labels": [
    "Juju charm",
    "Binding/Region/North America/US",
    "Mode/Executable/Bundle/Juju Charm",
    "Type/Devopsware/Deployment/Juju",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Data Store/Relational/PostgreSQL",
    "Type/Middleware/Data Store/Graph"
  ],
  "info_url": "https://jujucharms.com/postgresql",
  "package_url": "https://api.jujucharms.com/v5/oneiric/postgresql-0/archive",
  "created": "2015-06-17T09:30:54.139Z",
  "updated": "2015-06-17T09:30:54.139Z",
  "description": "object-relational SQL database (supported version)\n\nPostgreSQL is a fully featured object-relational database management\nsystem.  It supports a large part of the SQL standard and is designed\nto be extensible by users in many aspects.  Some of the features are:\nACID transactions, foreign keys, views, sequences, subqueries,\ntriggers, user-defined types and functions, outer joins, multiversion\nconcurrency control.  Graphical user interfaces and bindings for many\nprogramming languages are available as well.\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "oneiric",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= oneiric"
    }
  ],
  "provides": [
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/pgsql",
      "juju_interface": "pgsql",
      "juju_name": "db",
      "juju_role": "provider",
      "juju_limit": 0
    },
    {
      "kind": "peer",
      "uri": "https://jujucharms.com/provides/pgsql",
      "juju_interface": "pgsql",
      "juju_name": "db-admin",
      "juju_role": "provider",
      "juju_limit": 0
    }
  ],
  "license": "\n# Postgresql Service\n\n\n## During db-relation-joined,\n\n\n### the postgresql service provides:\n\n- `host`\n- `user`\n- `database`\n- `password`\n\n### and requires\n\n- `ip`: deprecated way to specify the client ip address to enable\n        access from. This is no longer necessary, you can rely on the\n        implicit 'private-address' relation component.\n\nHere's an example client hook providing that\n\n    #!/bin/sh\n    relation-set ip=`unit-get private-address`\n\n\n## During db-relation-changed,\n\n### provides\n\n### accepts\n\n- `ip`: the client ip address to enable access\n\n",
  "readme": "\n# Postgresql Service\n\n\n## During db-relation-joined,\n\n\n### the postgresql service provides:\n\n- `host`\n- `user`\n- `database`\n- `password`\n\n### and requires\n\n- `ip`: deprecated way to specify the client ip address to enable\n        access from. This is no longer necessary, you can rely on the\n        implicit 'private-address' relation component.\n\nHere's an example client hook providing that\n\n    #!/bin/sh\n    relation-set ip=`unit-get private-address`\n\n\n## During db-relation-changed,\n\n### provides\n\n### accepts\n\n- `ip`: the client ip address to enable access\n\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}