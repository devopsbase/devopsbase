{
  "name": "openvpn Juju charm",
  "juju_charm_name": "openvpn",
  "revision": "cs:precise/openvpn-2",
  "latest": true,
  "uris": [
    "https://jujucharms.com/openvpn",
    "https://jujucharms.com/openvpn/precise",
    "https://jujucharms.com/openvpn/precise/2",
    "https://api.jujucharms.com/v5/openvpn",
    "https://api.jujucharms.com/v5/precise/openvpn",
    "https://api.jujucharms.com/v5/precise/openvpn-2"
  ],
  "labels": [
    "Juju charm",
    "cache-proxy",
    "Type/Infrastructure/Operating System/macOS",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Image/VM Image/AMI",
    "Mode/Executable/Bundle/Juju Charm",
    "Mode/CLI",
    "Mode/API/Toolkit",
    "Mode/API/Endpoint",
    "Style/Virtualization Level/Hardware/Network/VPN",
    "Style/Virtualization Level/Application",
    "Type/Devopsware/Deployment/Juju",
    "Type/Infrastructure/Operating System/Linux",
    "Type/Middleware/User Management"
  ],
  "info_url": "https://jujucharms.com/openvpn",
  "package_url": "https://api.jujucharms.com/v5/precise/openvpn-2/archive",
  "created": "2015-06-17T09:32:23.975Z",
  "updated": "2015-06-17T09:32:23.975Z",
  "description": "OpenVPN Server\n\nOpenVPN is an application to securely tunnel IP networks over a single\nUDP or TCP port. It can be used to access remote sites, make secure\npoint-to-point connections, enhance wireless security, etc.  OpenVPN\nuses all of the encryption, authentication, and certification features\nprovided by the OpenSSL library (any cipher, key size, or HMAC\ndigest).  OpenVPN may use static, pre-shared keys or TLS-based dynamic\nkey exchange. It also supports VPNs with dynamic endpoints (DHCP or\ndial-up clients), tunnels over NAT or connection-oriented stateful\nfirewalls (such as Linux's iptables).\n",
  "maintainer": {
    "name": "charmers"
  },
  "juju_charm_subordinate": false,
  "juju_charm_series": "precise",
  "juju_charm_owner": "charmers",
  "requires": [
    {
      "kind": "host",
      "label": "Infrastructure/Operating System/Linux/Ubuntu",
      "version": "= precise"
    }
  ],
  "parameters": {
    "additional-routes": {
      "type": "string",
      "description": "additional routes to be routed through the VPN (i.e. '1.1.1.0/23, 2.2.2.0/8')",
      "default": "",
      "mapping": "charm_option"
    },
    "client-network": {
      "type": "string",
      "description": "network to use for client addressing; must include a cidr suffix, i.e. X.X.X.X/XX",
      "default": "5.5.0.0/20",
      "mapping": "charm_option"
    },
    "dns-servers": {
      "type": "string",
      "description": "DNS servers to use for reroute options (defaults to OpenDNS)",
      "default": "208.67.220.220, 208.67.222.222",
      "mapping": "charm_option"
    },
    "domain": {
      "type": "string",
      "description": "FQDN of the server, defaults to unit's given hostname",
      "default": "",
      "mapping": "charm_option"
    },
    "interface": {
      "type": "string",
      "description": "interface to forward traffic to/from (WARNING only change this if you are sure)",
      "default": "eth0",
      "mapping": "charm_option"
    },
    "key-city": {
      "type": "string",
      "description": "city field for RSA certificate",
      "default": "Ubuntu",
      "mapping": "charm_option"
    },
    "key-country": {
      "type": "string",
      "description": "country field for RSA certificate",
      "default": "US",
      "mapping": "charm_option"
    },
    "key-org": {
      "type": "string",
      "description": "organization field for RSA certificate",
      "default": "Juju",
      "mapping": "charm_option"
    },
    "key-province": {
      "type": "string",
      "description": "province field for RSA certificate",
      "default": "CA",
      "mapping": "charm_option"
    },
    "key-size": {
      "type": "int",
      "description": "size of the RSA key (typically 1024 or 2048)",
      "default": 1024,
      "mapping": "charm_option"
    },
    "port": {
      "type": "int",
      "description": "port for VPN traffic",
      "default": 1194,
      "mapping": "charm_option"
    },
    "protocol": {
      "type": "string",
      "description": "protocol for VPN communication (tcp|udp)",
      "default": "udp",
      "mapping": "charm_option"
    },
    "reroute-dns": {
      "type": "boolean",
      "description": "reroutes all DNS traffic through the established VPN tunnel",
      "default": false,
      "mapping": "charm_option"
    },
    "reroute-gateway": {
      "type": "boolean",
      "description": "reroutes all client traffic through the established VPN tunnel",
      "default": false,
      "mapping": "charm_option"
    },
    "user": {
      "type": "string",
      "description": "user for certificate generation",
      "default": "admin",
      "mapping": "charm_option"
    }
  },
  "license": "# Overview\n\nThis charm provides OpenVPN Community VPN (http://openvpn.net/index.php/open-source).\nBelow is a description taken from the main project site:\n\nOpenVPN is a full-featured open source SSL VPN solution that accommodates a\nwide range of configurations, including remote access, site-to-site VPNs,\nWi-Fi security, and enterprise-scale remote access solutions with load\nbalancing, failover, and fine-grained access-controls.\n\nThis charm installs the VPN service and assists in generating user certificates\nfor connecting to the VPN. Certain configuration settings have been built into\nthe charm in the form of variables that can be set pre or post installation.\nVariables configured pre-installation can be found in the\n\"Advanced Installation Configuration Settings\" section and variables that can\nbe changed at any point during the charm lifecycle can be found in the\n\"Common Configuration Settings\" section located in this README.\n\n# Usage\n\nTo deploy the charm, you will first need a bootstrapped Juju environment and,\nat a minimum, capacity for one additional machine.\n\nDeploy openvpn to a bootstrapped environment:\n\n    juju deploy openvpn\n\nThen expose the service:\n\n    juju expose openvpn\n\n# Connecting to the VPN\n\nOnce the OpenVPN service is ready, you will need to download the user keys,\ncertificates, and config generated during installation in order to connect.\nThe charm creates a tarball with this information whenever a new user is\nadded and places it in the home directory of the default user. In order to\ndownload the tarball, you must know the machine number the unit is running on\nand the name of the user set by Juju (default: \"admin\"). You can find the\nmachine number by viewing the output from 'juju status'. Below is an example\nof downloading the config for the default user, \"admin\", from machine \"1\":\n\n    juju scp 1:~/admin.tgz .\n\nNext extract and view the contents of the files:\n    \n    tar xzf admin.tgz\n    cd admin_keys\n    \nFinally, install the VPN client and connect to the VPN:\n    \n    sudo apt-get install openvpn\n    sudo openvpn --config client.ovpn\n\nYou may wish to daemonize the process or import this config into NetworkManager.\nPlease consult the OpenVPN documentation located here for further assitence in\nconfiguring the OpenVPN client: http://bit.ly/19R9dP3.\n\nIt is a good idea to remove the tarball from the VPN server once you have\ndownloaded it. You can do so by issuing the commands below:\n\n    juju ssh 1\n    sudo rm admin.tgz\n    exit\n\nThe keys are still retained in '/etc/openvpn/easy-rsa/keys' for later use.\n\n# Configuration\n\nThere are a number of configuration options available via the charm. Most options\ncan be safely left to their default settings, but are available for more advanced\nusage.\n\nBy default, the charm runs on UDP port 1194 and generates a user certificate for\nclient \"admin\". The interface \"eth0\" is assumed to the be the primary interface\nused by the VPN and it's IP subnet is routed by default through the VPN.\n\n## Common Configuration Settings\n\nBelow are some of the most common configuration options that can be changed any\ntime during the lifecycle of the charm.\n\n### User\n\nSpecify a user to create a certificate for. If this is a new user, then a new\nclient certificate is created, tar'ed, and placed in the system default user's\nhome directory for retrieval. If the user has been previously created, then no\naction is performed.\n\n    juju set openvpn user=joesmith\n    \n### Port\n\nSpecify a port to run the VPN service over.\n\n    juju set openvpn port=1194\n\n### Protocol\n\nSpecify either UDP or TCP as the protocol used in VPN communications. UDP will\nsee better performance overall.\n\n    juju set openvpn protocol=udp\n\n## Advanced Configuration Settings\n\nThese settings are provided for users who require more granular control over\nVPN settings. These settings may also be changed at any time during the\nlifecycle of the charm.\n\n### Client Network\n\nThe client-network option defines the network used when assigning VPN clients\naddresses. If your home or corporate network uses the same range as the set\ndefault, then you may consider changing it to an alternate network range. A\nCIDR value is required for the network.\n\n    juju set openvpn client-network=10.11.12.0/25\n\n### Additional Routes\n\nAdditional routes can be specified in a comma separated list to instruct the\nVPN to route the given networks. This can be helpful when wanting to route only\nspecific traffic through the VPN. By default, no additional routes are given.\n\n    juju set openvpn additional-routes=\"1.1.1.0/24, 2.2.2.0/8\"\n\n### Reroute Gateway\n\nBy default, all client traffic will NOT be routed through the VPN tunnel. To\nallow clients to send all traffic through the VPN tunnel, set this to 'True'.\n\n    juju set openvpn reroute-gateway=False\n\n### Reroute DNS\n\nBy default, all DNS queries will NOT be routed through the VPN tunnel. To\nenable this feature, set the option to 'True'.\n\n    juju set openvpn reroute-dns=False\n\n### DNS Servers\n\nWhen either reroute-gateway or reroute-dns is set to 'True', a DHCP DNS option\nwill be pushed to the client, causing the nameserver to change. By default, the\nnameservers used are the OpenDNS nameservers, but alternatives can be specified.\n\n    juju set opevpn dns-servers=\"4.2.2.2, 8.8.8.8\"\n\n### Interface\n\nSpecify an interface to be used for NAT and access to networks behind the VPN.\nThe default interface is 'eth0' and should not be changed unless absolutely\ncertain.\n\n    juju set openvpn interface=eth0\n\n## Advanced Installation Configuration Settings\n\nThese settings are only applied during the initial installation of the charm\nor an additional unit. Changing these settings after deployment will have no\neffect whatsoever. Each example provided details how to use the setting in a\nYAML config file for deployment. An example YAML file looks like the following:\n\n    openvpn:\n        key: value\n        key2: value2\n        \nA charm can then be deployed with these options using the following:\n\n    juju deploy --config openvpn.yaml openvpn\n\nNote: If a configuration setting listed below needs to be changed, the only way\nto do so is to destroy the charm and redeploy. This, however, will nullify any\nuser certificates previously generated.\n\n### Domain\n\nSpecify a domain to use for certificate signing and generation.\n\n    domain: mydomain.tld\n\n### Key Size\n\nSpecify the number of bits in the key to create. By default this is set to\n1024, although another common key size is 2048 bits.\n\n    key-size: 2048\n    \n### Key Country\n\nSpecify a country location for the key.\n\n    key-country: US\n    \n### Key Province\n\nSpecify a province location for the key.\n\n    key-province: WA\n    \n### Key City\n\nSpecify a city location for the key.\n\n    key-city: Seattle\n    \n### Key Organization\n\nSpecify an organization for the key.\n\n    key-org: IT Dept\n\n# Managing Users\n\nTo add users, you can set the 'user' config option to a different value. A more\ngranular way of managing users is available via the OpenVPN command line tools\nlocated in the '/etc/openvpn/easy-rsa' directory of the VPN server. User\ncertificates and certificate passwords can be created. An optional CRL can be\nmanaged using these tools as well. For more information, consult the OpenVPN\ndocumentation.\n\nDuring the lifecycle of the charm, it should be noted that no user certificates\nare ever removed. They are left in tact in the '/etc/openvpn/easy-rsa/keys'\ndirectory and can be retrieved from there.\n\n# Upgrade Information\n\nSince the nature of the OpenVPN service is certificate based, upgrading the\ncharm will only install the latest version of OpenVPN as found in the Ubuntu\nrepository and run the config-changed hook. An upgrade will not regenerate\nserver or client certificates.\n\n# Contact Information\n\nAuthor: NextRevision <notarobot@nextrevision.net>\nReport bugs at: http://bugs.launchpad.net/charms/+source/openvpn\nLocation: http://jujucharms.com/charms/distro/openvpn\n",
  "readme": "# Overview\n\nThis charm provides OpenVPN Community VPN (http://openvpn.net/index.php/open-source).\nBelow is a description taken from the main project site:\n\nOpenVPN is a full-featured open source SSL VPN solution that accommodates a\nwide range of configurations, including remote access, site-to-site VPNs,\nWi-Fi security, and enterprise-scale remote access solutions with load\nbalancing, failover, and fine-grained access-controls.\n\nThis charm installs the VPN service and assists in generating user certificates\nfor connecting to the VPN. Certain configuration settings have been built into\nthe charm in the form of variables that can be set pre or post installation.\nVariables configured pre-installation can be found in the\n\"Advanced Installation Configuration Settings\" section and variables that can\nbe changed at any point during the charm lifecycle can be found in the\n\"Common Configuration Settings\" section located in this README.\n\n# Usage\n\nTo deploy the charm, you will first need a bootstrapped Juju environment and,\nat a minimum, capacity for one additional machine.\n\nDeploy openvpn to a bootstrapped environment:\n\n    juju deploy openvpn\n\nThen expose the service:\n\n    juju expose openvpn\n\n# Connecting to the VPN\n\nOnce the OpenVPN service is ready, you will need to download the user keys,\ncertificates, and config generated during installation in order to connect.\nThe charm creates a tarball with this information whenever a new user is\nadded and places it in the home directory of the default user. In order to\ndownload the tarball, you must know the machine number the unit is running on\nand the name of the user set by Juju (default: \"admin\"). You can find the\nmachine number by viewing the output from 'juju status'. Below is an example\nof downloading the config for the default user, \"admin\", from machine \"1\":\n\n    juju scp 1:~/admin.tgz .\n\nNext extract and view the contents of the files:\n    \n    tar xzf admin.tgz\n    cd admin_keys\n    \nFinally, install the VPN client and connect to the VPN:\n    \n    sudo apt-get install openvpn\n    sudo openvpn --config client.ovpn\n\nYou may wish to daemonize the process or import this config into NetworkManager.\nPlease consult the OpenVPN documentation located here for further assitence in\nconfiguring the OpenVPN client: http://bit.ly/19R9dP3.\n\nIt is a good idea to remove the tarball from the VPN server once you have\ndownloaded it. You can do so by issuing the commands below:\n\n    juju ssh 1\n    sudo rm admin.tgz\n    exit\n\nThe keys are still retained in '/etc/openvpn/easy-rsa/keys' for later use.\n\n# Configuration\n\nThere are a number of configuration options available via the charm. Most options\ncan be safely left to their default settings, but are available for more advanced\nusage.\n\nBy default, the charm runs on UDP port 1194 and generates a user certificate for\nclient \"admin\". The interface \"eth0\" is assumed to the be the primary interface\nused by the VPN and it's IP subnet is routed by default through the VPN.\n\n## Common Configuration Settings\n\nBelow are some of the most common configuration options that can be changed any\ntime during the lifecycle of the charm.\n\n### User\n\nSpecify a user to create a certificate for. If this is a new user, then a new\nclient certificate is created, tar'ed, and placed in the system default user's\nhome directory for retrieval. If the user has been previously created, then no\naction is performed.\n\n    juju set openvpn user=joesmith\n    \n### Port\n\nSpecify a port to run the VPN service over.\n\n    juju set openvpn port=1194\n\n### Protocol\n\nSpecify either UDP or TCP as the protocol used in VPN communications. UDP will\nsee better performance overall.\n\n    juju set openvpn protocol=udp\n\n## Advanced Configuration Settings\n\nThese settings are provided for users who require more granular control over\nVPN settings. These settings may also be changed at any time during the\nlifecycle of the charm.\n\n### Client Network\n\nThe client-network option defines the network used when assigning VPN clients\naddresses. If your home or corporate network uses the same range as the set\ndefault, then you may consider changing it to an alternate network range. A\nCIDR value is required for the network.\n\n    juju set openvpn client-network=10.11.12.0/25\n\n### Additional Routes\n\nAdditional routes can be specified in a comma separated list to instruct the\nVPN to route the given networks. This can be helpful when wanting to route only\nspecific traffic through the VPN. By default, no additional routes are given.\n\n    juju set openvpn additional-routes=\"1.1.1.0/24, 2.2.2.0/8\"\n\n### Reroute Gateway\n\nBy default, all client traffic will NOT be routed through the VPN tunnel. To\nallow clients to send all traffic through the VPN tunnel, set this to 'True'.\n\n    juju set openvpn reroute-gateway=False\n\n### Reroute DNS\n\nBy default, all DNS queries will NOT be routed through the VPN tunnel. To\nenable this feature, set the option to 'True'.\n\n    juju set openvpn reroute-dns=False\n\n### DNS Servers\n\nWhen either reroute-gateway or reroute-dns is set to 'True', a DHCP DNS option\nwill be pushed to the client, causing the nameserver to change. By default, the\nnameservers used are the OpenDNS nameservers, but alternatives can be specified.\n\n    juju set opevpn dns-servers=\"4.2.2.2, 8.8.8.8\"\n\n### Interface\n\nSpecify an interface to be used for NAT and access to networks behind the VPN.\nThe default interface is 'eth0' and should not be changed unless absolutely\ncertain.\n\n    juju set openvpn interface=eth0\n\n## Advanced Installation Configuration Settings\n\nThese settings are only applied during the initial installation of the charm\nor an additional unit. Changing these settings after deployment will have no\neffect whatsoever. Each example provided details how to use the setting in a\nYAML config file for deployment. An example YAML file looks like the following:\n\n    openvpn:\n        key: value\n        key2: value2\n        \nA charm can then be deployed with these options using the following:\n\n    juju deploy --config openvpn.yaml openvpn\n\nNote: If a configuration setting listed below needs to be changed, the only way\nto do so is to destroy the charm and redeploy. This, however, will nullify any\nuser certificates previously generated.\n\n### Domain\n\nSpecify a domain to use for certificate signing and generation.\n\n    domain: mydomain.tld\n\n### Key Size\n\nSpecify the number of bits in the key to create. By default this is set to\n1024, although another common key size is 2048 bits.\n\n    key-size: 2048\n    \n### Key Country\n\nSpecify a country location for the key.\n\n    key-country: US\n    \n### Key Province\n\nSpecify a province location for the key.\n\n    key-province: WA\n    \n### Key City\n\nSpecify a city location for the key.\n\n    key-city: Seattle\n    \n### Key Organization\n\nSpecify an organization for the key.\n\n    key-org: IT Dept\n\n# Managing Users\n\nTo add users, you can set the 'user' config option to a different value. A more\ngranular way of managing users is available via the OpenVPN command line tools\nlocated in the '/etc/openvpn/easy-rsa' directory of the VPN server. User\ncertificates and certificate passwords can be created. An optional CRL can be\nmanaged using these tools as well. For more information, consult the OpenVPN\ndocumentation.\n\nDuring the lifecycle of the charm, it should be noted that no user certificates\nare ever removed. They are left in tact in the '/etc/openvpn/easy-rsa/keys'\ndirectory and can be retrieved from there.\n\n# Upgrade Information\n\nSince the nature of the OpenVPN service is certificate based, upgrading the\ncharm will only install the latest version of OpenVPN as found in the Ubuntu\nrepository and run the config-changed hook. An upgrade will not regenerate\nserver or client certificates.\n\n# Contact Information\n\nAuthor: NextRevision <notarobot@nextrevision.net>\nReport bugs at: http://bugs.launchpad.net/charms/+source/openvpn\nLocation: http://jujucharms.com/charms/distro/openvpn\n",
  "readme_name": "README.md",
  "gatherbase_origin": "juju-charmstore"
}