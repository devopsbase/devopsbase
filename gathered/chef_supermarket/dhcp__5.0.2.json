{
  "name": "dhcp Chef cookbook",
  "chef_cookbook_name": "dhcp",
  "revision": "5.0.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/dhcp",
    "https://supermarket.chef.io/cookbooks/dhcp/download",
    "https://supermarket.chef.io/cookbooks/dhcp/versions/5.0.2",
    "https://supermarket.chef.io/cookbooks/dhcp/versions/5.0.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/dhcp/versions/5.0.2",
    "https://supermarket.chef.io/api/v1/cookbooks/dhcp",
    "https://supermarket.chef.io/api/v1/cookbooks/dhcp/versions/5.0.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/dhcp",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/dhcp/versions/5.0.2/download",
  "deprecated": false,
  "created": "2012-11-22T12:53:11.000Z",
  "updated": "2016-05-04T17:59:51.076Z",
  "description": "DHCP",
  "maintainer": {
    "name": "chef-brigade",
    "email": "help@chefbrigade.io"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 13,
  "downloads_count": 7673880,
  "downloads_count_revision": 258,
  "repository_url": "https://github.com/chef-brigade/dhcp-cookbook",
  "issues_url": "https://github.com/chef-brigade/dhcp-cookbook/issues",
  "chef_source_url": "https://github.com/chef-brigade/dhcp-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "[![Build Status](https://secure.travis-ci.org/chef-brigade/dhcp-cookbook.png)](http://travis-ci.org/chef-brigade/dhcp-cookbook)\n\nDescription\n===========\nData bag and Attribute driven DHCP server.\n\n* Supports setting up Master/Master isc DHCP failover.\n* Includes Support for ddns\n* Includes LWRPs for managing hosts, groups and subnets.\n* Use databags or attributes + wrapper cooks to manage dhcp server [Example](examples/attribute_based.rb)\n\nLarge parts were borrowed from  work initially done by Dell, extended by Atalanta Systems and reworked by Matt Ray and Opscode. Big thanks to all of them.\n\nRequirements\n============\nTested on the following with Chef 11 and Chef 12:\n* `Ubuntu 12.04`\n* `CentOS 6`\n\nLimitations\n===========\n* only setup to handle ipv4\n\nRecipes\n=======\ndefault\n-------\nStub recipe that does nothing. Good for including LWRP's but not the other recipe stuffs.\n\nserver\n------\nThe node will install and configure the `dhcp-server` application.\nConfiguration is through various dhcp_X bags, and the current role/environment\n\nNode Attributes\n==========\nAlmost everyone of the parameters and options are able to be overrode in the\nhost/group/network scope these are general defaults for the server.\n\n Check out the [man page][1] for details on dhcpd.conf options/params.\n\n\n| attribute | Type | Default | description |\n|:---------------------------------|:----:|:------:|:-----------------------------------------|\n|`node[:dhcp][:use_bags]` | `Boolean` | true | When false we won't attempt to load data from bags.\n|`node[:dhcp][:hosts]` | `Array` | `[]` | The list of hosts items that this server should load\n|`node[:dhcp][:groups]` | `Array` | `[]` | The list of group items this server should load\n|`node[:dhcp][:networks]` | `Array` | `[]` | The list of network items this node should load\n|`node[:dhcp][:interfaces]` | `Array` | `[]` | The Network Interface(s) to listen on. If an empty list then we will listen on all interfaces.\n|`node[:dhcp][:rndc_keys]` | `Array` | Attribute based representation of rndc keys you want to use.\n|`node[:dhcp][:hosts_bag]` | `String` | dhcp_hosts | The name of the data bag that holds host items.\n|`node[:dhcp][:groups_bag]` | `String` | dhcp_groups | The name of the data bag that holds group items\n|`node[:dhcp][:networks_bag]` | `String` | dhcp_networks | The name of the data bag that holds network items\n|`node[:dhcp][:host_data]` | `Hash` | `{}` | Hash of hosts data. The `node[dhcp][:hosts]` entries should have a corresponding entry here when not using bags\n|`node[:dhcp][:group_data]` | `Hash` | `{}` | Same as host_data, but for groups\n|`node[:dhcp][:network_data]` | `Hash` | `{}` | Same as host_data, but for networks\n|`node[:dhcp][:failover]` | `Boolean` | `false` | Enable Failover support buy setting to `true`\n|`node[:dhcp][:failover_lease_hack]` | `Boolean` | `false` | Force partner-down state on start by rewriting lease file\n|`node[:dhcp][:allows]` | `Array` | [\"booting\", \"bootp\", \"unknown-clients\"] | Global Dhcpd allow entries\n|`node[:dhcp][:my_ip]` | `String` | Nil | Set host IP address in failover setup. node[:ipaddress] is used if empty.\n|`node[:dhcp][:masters]` | `Array` | Array of hashes to override node search for masters. Must have :ipaddress key.\n|`node[:dhcp][:slaves]` | `Array` | Array of hashes to override node search for slaves.\n\n#### DHCP Global Options\n| attribute | Type | Default | description |\n|:---------------------------------|:----:|:------:|:-----------------------------------------|\n|`node[:dhcp][:options]['domain-name-servers']` | `String` | \"8.8.8.8, 8.8.4.4\" |List of dns servers to send to clients in the global scope\n|`node[:dhcp][:options]['host-name']` | `String` | \" = binary-to-ascii (16, 8, \\\"-\\\", substring (hardware, 1, 6))\" |Options for global scope host-name settings. The default here will generate a host as mac address if the node doesn't provide a hostname or is not defined in dns/hosts/groups.\n|`node[:dhcp][:options]['domain-name']` | `String` | \"\\\"#{domain}\\\"\" | Set domainname  in the global scope to this nodes domain\n\n#### DHCP Global Parameters\nThese are all just k/v entries in the global params hash. All values are type: `String`\n\n| attribute | Type | Default | description |\n|:---------------------------------|:----:|:------:|:-----------------------------------------|\n|`node[:dhcp][:parameters][\"default-lease-time\"]` | `String` | \"6400\"| Set the default lease time in the global scope\n|`node[:dhcp][:parameters][\"ddns-domainname\"]` | `String` | \"\\\"#{domain}\\\"\"`| Set the ddns domain to this nodes domain\n|`node[:dhcp][:parameters][\"ddns-update-style\"]` | `String` |\"interim\" | ddns Update style\n|`node[:dhcp][:parameters][\"max-lease-time\"]` | `String` | \"86400\" | Max Lease time\n|`node[:dhcp][:parameters][\"update-static-leases\"]` | `String` | \"true\" | Make sure we push static ip adresses defined in groups/hosts to the dns server\n|`node[:dhcp][:parameters][\"one-lease-per-client\"]` | `String` | \"true\" | When a client requests an ip it will release any held leases.\n|`node[:dhcp][:parameters][\"authoritative\"]` | `String` | \"\" | This setting has no value on purpose thats how isc-dhcpd wants it.\n|`node[:dhcp][:parameters][\"ping-check\"]` | `String` | \"true\" | Enable Address collision checking\n|`node[:dhcp][:parameters][\"next-server\"]` | `String` | `\"#{ipaddress}\"` |Set this server as the global next-server\n|`node[:dhcp][:parameters][\"filename\"]` | `String` | `'\"pxelinux.0\"'` | For tftp file name __Note:__ the quotes are necessary for this option in the fall throught to dhcpd config.\n\n#### Failover parameters\n| attribute | Type | Default | description |\n|:---------------------------------|:----:|:------:|:-----------------------------------------|\n|`node[:dhcp][:failover_params][\"mclt\"]` | `String` | \"3600\"| Set Maximum Client Lead Time\n|`node[:dhcp][:failover_params][\"port\"]` | `String` | \"647\"| TCP port to listen for connections from peer\n|`node[:dhcp][:failover_params][\"peer_port\"]` | `String` | \"647\"| TCP port to connect to failover peer\n|`node[:dhcp][:failover_params][auto_partner_down\"\"]` | `String` |\"0\"| Timeout in seconds to enter partner-down state if peer is unavailable\n\n#### Platform Default Attributes\n*RHEL* Platforms*\n\n| attribute | Type | Default |\n|:---------------------------------|:----:|:------:|\n|`node[:dhcp][:dir]`           |`String` | `\"/etc/dhcpd\"`\n|`node[:dhcp][:package_name]`  |`String` | `\"dhcp\"`\n|`node[:dhcp][:service_name]`  |`String` | `\"dhcpd\"`\n|`node[:dhcp][:config_file]`   |`String` | `\"/etc/dhcp/dhcpd.conf\"` on `RHEL < 6` it defaults to `\"/etc/dhcpd.conf`\n|`node[:dhcp][:init_config]` |`String` | `\"/etc/sysconfig/dhcpd\"`\n\n\n*Debian Platforms*\n\n| attribute | Type | Default |\n|:---------------------------------|:----:|:------:|\n|`node[:dhcp][:dir]`         | `String` | \"/etc/dhcpd\"\n|`node[:dhcp][:package_name]`| `String` | \"isc-dhcp-server\"\n|`node[:dhcp][:service_name]`| `String` | \"isc-dhcp-server\"\n|`node[:dhcp][:config_file]` | `String` | \"/etc/dhcp/dhcpd.conf\"\n|`node[:dhcp][:init_config]` | `String` | \"/etc/default/isc-dhcp-server\"\n\n\nData Bags\n========\nData bags drive the lionshare of the dhcp configuration. Beyond the global settings. It is not required to configure\nany bags other than dhcp_networks to get up and running, But if you want to statically map a network or have handy\nHost names provisioned by dhcp you will have to add either `dhcp_groups/dhcp_hosts` bags and items.\n\nYou can generate example bags by using these handy commands\n\n```\nknife data bag create dhcp_networks\nknife data bag create dhcp_groups\nknife data bag create dhcp_hosts\nknife data bag from file dhcp_networks examples/data_bags/dhcp_networks\nknife data bag from file dhcp_groups examples/data_bags/dhcp_groups\nknife data bag from file dhcp_hosts examples/data_bags/dhcp_hosts\n```\n\ndhcp_networks\n-------------\nLooked up via `node[:dhcp][:networks_bag]`. Describes networks this dhcp server should be configured to provide services for.\nPer-network options can be provided as an array of strings where each string is a dhcp option.\nMake sure you escape `\"`'s properly as dhcpd is touchy about the format of values.\n\n```json\n{\n  \"id\": \"192-168-1-0_24\",\n  \"routers\": [ \"192.168.1.1\" ],\n  \"address\": \"192.168.1.0\",\n  \"netmask\": \"255.255.255.0\",\n  \"broadcast\": \"192.168.1.255\",\n  \"range\": \"192.168.1.50 192.168.1.240\",\n  \"options\": [ \"time-offset 10\" ],\n  \"next_server\": \"192.168.1.11\"\n}\n```\n\ndhcp_groups\n----------\nLooked up via `node[:dhcp][:grougroups]` Items for this bag are group entries as per the [man page][1].\nGroups are sets of machines that can be configured with common parameters.  A group can be bare. I.e.\nContains no host or parameters entries whatsover, and just defines options.\n\n\nThe only required key in a host def is the `\"mac\":` key. Everything else is optional\n\nExample Group Bag\n```json\n{\n  \"id\": \"test\",\n  \"pxe\":  \"ubuntu-precise\",\n  \"parameters\": [\n    \"use-host-decl-names on\",\n    \"max-lease-time 300\",\n    \"default-lease-time 120\",\n    \"next-server \\\"someplace\\\"\"\n  ],\n  \"hosts\": {\n    \"some-vm\": {\n      \"parameters\": [  ],\n      \"mac\": \"11:22:33:44:55:66\",\n      \"ip\": \"192.168.1.111\"\n    },\n    \"another-host\": {\n      \"mac\": \"22:33:44:55:66:77\"\n    }\n  }\n}\n```\n\nThere are a few keys that merit more discussion:\n## `\"hosts\":` key dhcp_group Items\nGroups in isc-dhcp can define lists of hosts. In this example we are using the `use-host-decl-names on`\ntell dhcp to use the \"some-vm\" and \"another-host\" entries as the host-name for these clients.\nAs well as setting other per-group parameters.\n\nEach Host in the hosts Hash can have a number of settings, but the only required setting is `\"mac\":` the mac address\nfor the host.\n\n\n| Key | Description  |\n|:---------------|:------|\n|`\"mac\":` | mac address of this host\n|`\"ip\":`  | ip address of this host\n|`\"parameters\":` |an array of isc-dhcpd parameters as-per the global parameter setting.\n|`\"pxe\":` |This key is used by my pxe cookbook to figure out what pxe item  you want this group to boot too. That Pxe cookbook should be released soon (hopefully).\n\n\ndhcp_hosts\n----------\nDhcp hosts bag is looked up via  `node[:dhcp][:hosts_bag]`, and contains Host Items.\n\nExample Most Basic host:\n\n```json\n{\n  \"id\": \"vagrant-vm\",\n  \"hostname\": \"vagrant.vm\",\n  \"mac\": \"08:00:27:f1:1f:b6\",\n}\n```\n\nExample Complex host:\n```json\n{\n  \"id\": \"pxe_test-vm\",\n  \"hostname\": \"pxe_test.vm\",\n  \"mac\": \"08:00:27:8f:7b:db\",\n  \"ip\": \"192.168.1.31\",\n  \"parameters\": [ ],\n  \"options\": [ ],\n  \"pxe\": \"ubuntu-precise\"\n}\n```\n\nResources/Providers\n===================\n## dhcp_host\n\nManipulate host entries in dhcpd\n\n### Actions\n\n| Action | Description |\n|:----------|:---------|\n| `add`    | `_default_` Add this host record\n| `remove` | Delete this host record\n\n### Paramaters\n| Param | Type | Default |\n|:----------|:---------|:-------|\n| `hostname`   | `String`\n| `macaddress` | `String`\n| `ipaddress`  | `String` |\n| `options`    | `Array`  | `[]`\n| `parameters` | `Array`  | `[]`\n| `conf_dir`   | `String` | `\"/etc/dhcp\"`\n\n### Example\n\nAdd a Node\n```ruby\ndhcp_host \"myhost\" do\n  hostname   \"somebox.foobar.com\"\n  macaddress \"08:00:27:f1:1f:b6\"\n  ipaddress  \"192.168.1.22\"\n  options   [ \"domain-name-servers 8.8.8.8\" ]\nend\n```\n\nRemove a node\n```ruby\ndhcp_host \"myhost\" do\n  action :remove\n  hostname \"somebox.foobar.com\"\nend\n```\n\nIf you undefine an entry it will also get removed.\n\n\n## dhcp_group\n\n### Actions\n\n| Action | Description |\n|:----------|:---------|\n| `add`    | `_default_` Add this host record\n| `remove` | Delete this host record\n\n### Paramaters\n\n| Param | Type | Default | Desciption |\n|:----------|:----|:----|:------------|\n| `name`      | `String`| `:name_attribute`\n| `hosts`     | `Hash`  | `{}` | This is a hash of host entries that follow the host-databag format. See the example entry in examples directory\n| `parameters`| `Array` |  `[]`\n| `evals`| `Array` |  `[]` | This is an array of multiline strings of eval\n| `conf_dir`  | `String`| `\"/etc/dhcp\"` | The directory where the config files are stored\n\n### Example\n\n```ruby\nhosts_data = {\n  \"some-vm\"=> {\"parameters\"=>[], \"mac\"=>\"11:22:33:44:55:66\", \"ip\"=>\"192.168.1.111\"},\n  \"another-host\"=>{\"mac\"=>\"22:33:44:55:66:77\"}}\n}\n\ndhcp_group \"some_group\" do\n  parameters [ \"default-lease-time 120\", \"next-server \\\"someplace\\\"\"]\n  hosts hosts_data\nend\n```\n\n## dhcp_subnet\n\n| Action | Description |\n|:----------|:---------|\n| `add`    | `_default_` Add this host record\n| `remove` | Delete this host record\n\n### Paramaters\n\n| Param | Type | Default | Desciption |\n|:----------|:----|:----|:------------|\n| `subnet` | `String` | `:name_attribute` | The network subnet\n| `broadcast`| `String` | `nil` | The broadcast address for the subnet\n| `netmask` | `String` | `nil` | The netmask address for the subnet\n| `routers` | `Array`| `[]` | Gateways for the subnet\n| `options` | `Array`| `[]` | DHCP options to set for the subnet\n| `pool`    | `block` | `nil` | Define a pool block for a `dhcp_subnet`.  See 'Parameters for pool' below.\n| `next_server` | `String` | `nil` | Next server for TFTP/PXE\n| `evals` | `Array` |  `[]` | This is an array of multiline strings of eval\n| `ddns` | `String` | `nil` | Domain name that will be appended to the client's hostname to form a fully-qualified domain-name (FQDN)\n| `key` | `Hash` | `{}` | Shared secret key for DDNS\n| `zones` | `Array` | `[]` | _NOTE: Please help update with a good description_\n| `conf_dir` |`String` | `\"/etc/dhcp\"` | Main dhcpd config directory\n\n#### Parameters for pool\n\n| Param | Type | Default | Desciption |\n|:----------|:----|:----|:------------|\n| `peer` | `String` | `nil` | Peer server for this segment\n| `range` | `String` or `Array` | `[]` | Range of IPs to make available for DHCP in the subnet\n| `deny` | `String` | `nil` | Only those clients that do not match any entries on the deny list will be eligible.\n\n### Example\n```ruby\ndhcp_subnet \"192.168.1.0\" do\n  pool do\n    range [\"192.168.1.100 192.168.1.200\", \"10.33.66.10 10.33.66.100\"]\n  end\n  netmask \"255.255.255.0\"\n  broadcast \"192.168.1.255\"\n  options [ \"time-offset 10\" ]\n  next_server \"192.168.1.11\"\n  routers \"192.168.1.1\"\n  evals [ %q|\n    if exists user-class and option user-class = \"iPXE\" {\n      filename \"bootstrap.ipxe\";\n    } else {\n      filename \"undionly.kpxe\";\n    }\n  | ]\nend\n```\n\n## dhcp_shared_network\n\n| Action | Description |\n|:----------|:---------|\n| `add`    | `_default_` Add this shared network\n| `remove` | Delete this shared network record\n\n### Paramaters\n\n| Param | Type | Default | Desciption |\n|:----------|:----|:----|:------------|\n| `subnet` | `dhcp_subnet` |  `nil` | The network subnet to define inside the shared network.  Can define multiple.\n\n### Example\n```ruby\ndhcp_shared_network 'mysharednet' do\n  subnet '192.168.1.0' do\n    pool do\n      range ['192.168.1.100 192.168.1.200', '10.33.66.10 10.33.66.100']\n    end\n    netmask '255.255.255.0'\n    broadcast '192.168.1.255'\n    next_server '192.168.1.11'\n    routers '192.168.1.1'\n    evals [ %q|\n      if exists user-class and option user-class = \"iPXE\" {\n        filename \"bootstrap.ipxe\";\n      } else {\n        filename \"undionly.kpxe\";\n      }\n    | ]\n  end\n  subnet '10.0.2.0' do\n    broadcast '10.0.2.254'\n    netmask '255.255.255.0'\n    pool do\n      range ['10.0.2.50 10.0.2.240']\n    end\n  end\nend\n```\n\n## dhcp_class\n\nManage dhcp classes\n\n### Actions\n\n| Action | Description |\n|:----------|:---------|\n| `add`    | `_default_` Add this host record\n\n### Paramaters\n| Param | Type | Default |\n|:----------|:---------|:-------|\n| `match`   | `String` | |\n| `subclass` | `String` | |\n| `subclasses`  | `Array` | `[]` |\n\n### Example\n\nAdd a Node\n```ruby\ndhcp_class 'ignorehosts' do\n  match 'hardware'\n  subclass '1:10:bf:48:42:55:01'\n  subclass '1:10:bf:48:42:55:02'\nend\n```\n\nIf you undefine an entry it will also get removed.\n\nLicense and Author\n==================\n\n### Originally forked from\nhttps://github.com/spheromak/dhcp-cook\n\n### Maintainer, Authors and Contributors\n\n|                      |                                          |\n|:---------------------|:-----------------------------------------|\n| **Maintainer**       | [Jacob McCann](https://github.com/jmccann)\n| **Original Author**  | [Jesse Nelson](https://github.com/spheromak)\n| **Author**           | [Matt Ray](https://github.com/mattray)\n| **Contributor**      | [Myles Steinhauser](https://github.com/masteinhauser)\n| **Contributor**      | [Bao Nguyen](https://github.com/sysbot)\n| **Contributor**      | [Chaman Kang](https://github.com/chamankang)\n| **Contributor**      | [Will Reichert](https://github.com/wilreichert)\n| **Contributor**      | [Simon Johansson](https://github.com/simonjohansson)\n| **Contributor**      | [Robert Choi](https://github.com/robertchoi8099)\n| **Contributor**      | [Hippie Hacker](https://github.com/hh)\n| **Contributor**      | [Eric Blevins](https://github.com/e1000)\n| **Copyright** | Copyright (c) 2013 Jesse Nelson\n| **Copyright** | 2011 Atalanta Systems\n| **Copyright** | 2011 Dell, Inc.\n| **Copyright** | 2011 Opscode, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n[1]: http://www.daemon-systems.org/man/dhcpd.conf.5.html \"dhcpd.conf man page\"\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ruby-helper",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/helpers-databags",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}