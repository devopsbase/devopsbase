{
  "name": "rdiff-backup Chef cookbook",
  "chef_cookbook_name": "rdiff-backup",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/rdiff-backup",
    "https://supermarket.chef.io/cookbooks/rdiff-backup/download",
    "https://supermarket.chef.io/cookbooks/rdiff-backup/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/rdiff-backup/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/rdiff-backup/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/rdiff-backup",
    "https://supermarket.chef.io/api/v1/cookbooks/rdiff-backup/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/rdiff-backup",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/rdiff-backup/versions/1.0.0/download",
  "deprecated": false,
  "created": "2013-10-15T23:47:25.000Z",
  "updated": "2013-10-16T13:02:35.000Z",
  "description": "Installs/Configures rdiff-backup",
  "maintainer": {
    "name": "kaimi",
    "email": "it+cookbooks@piratenfraktion-nrw.de"
  },
  "license": "GPLv3",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 2516217,
  "downloads_count_revision": 1260982,
  "repository_url": "https://github.com/kaimi/chef-rdiff-backup/",
  "issues_url": "https://github.com/kaimi/chef-rdiff-backup/issues",
  "chef_source_url": "https://github.com/kaimi/chef-rdiff-backup/",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "rdiff-backup Cookbook\n=====================\n\nThis cookbook configures backup using the [rdiff-backup backup tool](http://rdiff-backup.nongnu.org/ \"rdiff-backup home page\").\n\nRequirements\n------------\n\n### ssh key\n\nPut a ssh private key into `files/default/#{node['rdiff-backup']['key']}` and the \ncorresponding public one into `files/default/#{node['rdiff-backup']['key']}.pub`.\n\nThis key will be used for the `rdiff-backup` user that runs the backups.\n\n### Cookbooks:\n\n* ssh\\_known\\_hosts\n* sudo\n\nAttributes\n----------\n\n### rdiff-backup::default\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['backup_dir']</tt></td>\n    <td>String</td>\n    <td>where to put the backup files</td>\n    <td><tt>/backup</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['etc_dir']</tt></td>\n    <td>String</td>\n    <td>where to put the rdiff-backup config files</td>\n    <td><tt>/etc/rdiff-backup</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['user']</tt></td>\n    <td>Boolean</td>\n    <td>the user to run the backup task as</td>\n    <td><tt>rdiff-backup</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['key']</tt></td>\n    <td>String</td>\n    <td>the ssh key file name</td>\n    <td><tt>id_rsa</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['cron']['enable']</tt></td>\n    <td>Boolean</td>\n    <td>whether to setup a cron job for automated backups</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['cron']['email']</tt></td>\n    <td>String</td>\n    <td>where to send summary emails</td>\n    <td><tt>nil</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['cron']['lockfile']</tt></td>\n    <td>String</td>\n    <td>where to write the cron job lockfile</td>\n    <td><tt>/tmp/rdiff-backup.lock</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['cron']['day']</tt></td>\n    <td>String</td>\n    <td>`day` component of the cron job definition</td>\n    <td><tt>*</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['cron']['hour']</tt></td>\n    <td>String</td>\n    <td>`hour` component of the cron job definition</td>\n    <td><tt>*</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['cron']['minute']</tt></td>\n    <td>String</td>\n    <td>`minute` component of the cron job definition</td>\n    <td><tt>*</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['cron']['month']</tt></td>\n    <td>String</td>\n    <td>`month` component of the cron job definition</td>\n    <td><tt>*</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['cron']['weekday']</tt></td>\n    <td>String</td>\n    <td>`weekday` component of the cron job definition</td>\n    <td><tt>*</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['autotrim']['enable']</tt></td>\n    <td>Boolean</td>\n    <td>whether to auto trim backups</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['rdiff-backup']['autotrim']['timespan']</tt></td>\n    <td>String</td>\n    <td>backup retention timespan (in rdiff-backup format)</td>\n    <td><tt>1y</tt></td>\n  </tr>\n</table>\n\nDefinitions\n-----------\n\n### backup\\_path\n\nAdds a path to the backup directory list.\n\n\nUsage\n-----\n\n### recipes\n\n#### rdiff-backup::default\n\nUsed in the other recipes. Do not call directly.\n\n#### rdiff-backup::client\n\nSets up the client (= host to be backed up) side.\n\n#### rdiff-backup::server\n\nSets up the server (= host to save backups to) side.\n\nThis will do things: if enabled, a cron job is created that backs up all \nconfigured rdiff-backup clients, and scripts to run on demand backups of each \nsingle client.\n\n###definitions\n\n#### backup\\_path\n`backup_path \"/var/lib/mailman\"`\n\nAdds the mailman home directory to be backed up.\n\n### pre and post backup scripts\n\nYou can put shell scripts into `#{node['rdiff-backup']['etc_dir']}/pre.d` and \n`#{node['rdiff-backup']['etc_dir']}/post.d` folders to be run before and after \nthe backup itself respectively.\n\nContributing\n------------\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write you change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\nAuthors: kaâ€™imi <kaimi@piratenfraktion-nrw.de>\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ssh_known_hosts",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/sudo",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}