{
  "name": "chef-consul Chef cookbook",
  "chef_cookbook_name": "chef-consul",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/chef-consul",
    "https://supermarket.chef.io/cookbooks/chef-consul/download",
    "https://supermarket.chef.io/cookbooks/chef-consul/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/chef-consul/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/chef-consul/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/chef-consul",
    "https://supermarket.chef.io/api/v1/cookbooks/chef-consul/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Orchestration/Consul"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/chef-consul",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/chef-consul/versions/1.0.0/download",
  "deprecated": false,
  "created": "2015-10-27T15:23:42.081Z",
  "updated": "2015-10-27T15:23:41.943Z",
  "description": "Installs chef-consul.",
  "maintainer": {
    "name": "samdunne",
    "email": "sam@sam-dunne.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 374,
  "downloads_count_revision": 374,
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Chef Consul\n==========\n[![Gem Version](http://img.shields.io/gem/v/chef-consul.svg?style=flat-square)][gem]\n[![Build Status](http://img.shields.io/travis/samdunne/chef-consul.svg?style=flat-square)][travis]\n\n[gem]: https://rubygems.org/gems/chef-consul\n[travis]: http://travis-ci.org/samdunne/chef-consul\n\nChef Consul is a Gem & Chef Recipe that includes extensions to chefs node object that allows easy interaction with consul leveraging [Diplomat](https://github.com/WeAreFarmGeek/diplomat).\n\n\nInstallation\n------------\nIf you want to develop/hack on chef-consul, please see the CONTRIBUTING.md.\n\nIf you are using Berkshelf, add `chef-consul` to your `Berksfile`:\n\n```ruby\ncookbook 'chef-consul'\n```\n\nOtherwise, you can use `knife` or download the tarball directly from the community site:\n\n```ruby\nknife cookbook site install chef-consul\n```\n\n\nUsage\n-----\nIn order to use Chef Consul in your Chef Recipes, you'll first need to include it:\n\n```ruby\ninclude_recipe 'chef-consul::default'\n```\n\nAlternatively you can put it in a base role or recipe and it will be included subsequently.\n\nRequiring the Chef Consul Gem will automatically extend the node object with consul methods.\n\n\nAPI\n---\n**Note:** For the most extensive API documentation, please see the YARD documentation.\n\n### Node\n\nAdditional methods for the `node` object\n\n- `first_service(name)` - fetch the first node in a service.\n- `all_services(name)` - fetch all nodes in a service.\n- `get_consul_key(key, recursive = false)` - return the value of a key in consul.\n- `put_consul_key(key, value)` - write a value to a key in consul\n\n#### Examples\n```ruby\nservices = node.all_services('consul')\n# => [#<OpenStruct Node=\"consul0\", Address=\"1.2.3.4\", ServiceID=\"consul\", ServiceName=\"consul\", ServiceTags=[\"consul\"], ServicePort=8300>,#<OpenStruct Node=\"consul1\", Address=\"1.2.3.5\", ServiceID=\"consul\", ServiceName=\"consul\", ServiceTags=[\"consul\"], ServicePort=8300>]\n```\n\n```ruby\nnode.put_consul_key('test', 'value')\n# => \"value\"\n```\n\n\nLicense & Authors\n-----------------\n- Author: Sam Dunne (sam@sam-dunne.com)\n\n```text\nCopyright 2015 Sam Dunne\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
}