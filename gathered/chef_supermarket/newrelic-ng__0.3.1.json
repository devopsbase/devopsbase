{
  "name": "newrelic-ng Chef cookbook",
  "chef_cookbook_name": "newrelic-ng",
  "revision": "0.3.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/newrelic-ng",
    "https://supermarket.chef.io/cookbooks/newrelic-ng/download",
    "https://supermarket.chef.io/cookbooks/newrelic-ng/versions/0.3.1",
    "https://supermarket.chef.io/cookbooks/newrelic-ng/versions/0.3.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/newrelic-ng/versions/0.3.1",
    "https://supermarket.chef.io/api/v1/cookbooks/newrelic-ng",
    "https://supermarket.chef.io/api/v1/cookbooks/newrelic-ng/versions/0.3.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Monitoring & Trending",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Monitoring/New Relic"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/newrelic-ng",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/newrelic-ng/versions/0.3.1/download",
  "deprecated": false,
  "created": "2013-06-21T16:05:23.000Z",
  "updated": "2016-06-28T12:49:46.676Z",
  "description": "Installs/Configures newrelic monitoring",
  "maintainer": {
    "name": "chr4",
    "email": "me@chr4.org"
  },
  "license": "GNU Public License 3.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 11,
  "downloads_count": 13772659,
  "downloads_count_revision": 1257664,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# newrelic-ng Cookbook\n\nThis cookbook provides LWRPs and recipes to install and configure different monitoring services for Newrelic.\n\n* Official Newrelic nrsysmond\n* MeetMe [newrelic-plugin-agent](https://github.com/MeetMe/newrelic-plugin-agent)\n* Generic ruby newrelic agents like\n  * [newrelic_sidekiq_agent](https://github.com/eksoverzero/newrelic_sidekiq_agent)\n  * [newrelic_nginx_agent](https://rpm.newrelic.com/accounts/29043/plugins/directory/13)\n  * Should work with all ruby newrelic agents that are using config/newrelic_plugin.yml configuration file and newrelic_[NAME]_agent.daemon\n\nThis cookbook requires Chef 11 or later.\n\n## Attributes\n\n### server monitoring with nrsysmond\n\nYou can set your Newrelic license_key in the following attribute\n\n```ruby\nnode['newrelic-ng']['license_key'] = 'CHANGE_ME'\n```\n\nThe 'config' attribute actually supports all other configuration options that nrsysmond accepts.\nYou can e.g. disable ssl\n\n```ruby\nnode['newrelic-ng']['nrsysmond']['config']['ssl'] = false\n```\n\nFor a complete list of attributes, please see [here](https://github.com/flinc-chef/newrelic-ng/blob/master/attributes/nrsysmond.rb)\n\n\n### plugin-agent\n\nYou can set your Newrelic license key (note: this one is usually different than the one for server monitoring), as well as other options in the following attribute (default values shown below)\n\n```ruby\nnode['newrelic-ng']['license_key'] = 'CHANGE_ME'\nnode['newrelic-ng']['plugin-agent']['poll_interval'] = 60\nnode['newrelic-ng']['plugin-agent']['pidfile'] = '/var/run/newrelic/newrelic_plugin_agent.pid'\nnode['newrelic-ng']['plugin-agent']['logfile'] = '/var/log/newrelic/newrelic_plugin_agent.log'\n```\n\nSet the pip package to install. Defaults to 'newrelic-plugin-agent'. You can set it e.g. to your github fork\n\n```ruby\nnode.default['newrelic']['plugin-agent']['pip_package'] = 'git+git://github.com/chr4/newrelic-plugin-agent.git@fix-postgres-9.2'\n```\n\nFor configuring your services, you need to insert a YAML string into the service_config attribute\n\n```ruby\nnode['newrelic-ng']['plugin-agent']['service_config'] = <<-EOS\npostgresql:\n  host: localhost\n  port: 5432\n  user: postgres\n  dbname: postgres\nEOS\n```\n\n### generic-agent\n\nInstalls a generic plugin agent. E.g.\n\n[newrelic_nginx_agent](https://rpm.newrelic.com/accounts/29043/plugins/directory/13):\n\n```ruby\nnode['newrelic-ng']['generic-agent']['agents']['nginx_status_agent'] = {\n    source: 'http://nginx.com/download/newrelic/newrelic_nginx_agent.tar.gz',\n    config: <<-EOS\n- instance_name: localhost\n  status_url: http://localhost/nginx_stub_status\nEOS\n  }\n}\n```\n\n[newrelic_sidekiq_agent](https://github.com/eksoverzero/newrelic_sidekiq_agent):\n\n```ruby\ndefault['newrelic-ng']['generic-agent']['agents']['sidekiq_status_agent'] = {\n    source: 'https://github.com/eksoverzero/newrelic_sidekiq_agent/archive/V2.0.tar.gz',\n    config: <<-EOS\n- instance_name: \"App name\"\n  uri: \"redis://localhost:6379\"\n  namespace: \"namespace\"\nEOS\n  }\n}\n```\n\n## Recipes\n\nTo use the recipes, add the following to your metadata.rb\n\n    depends 'newrelic-ng'\n\n### default\n\n* Includes newrelic-ng::nrsysmond-default\n\n### nrsysmond-default\n\n* Includes newrelic-ng::nrsysmond-install\n* Configures and starts nrsysmond according to the attributes\n\n### nrsysmond-install\n\n* Includes newrelic-ng::newrelic-repository\n* Installs newrelic-sysmond package\n\n### plugin-agent-default\n\n* Includes newrelic-ng::plugin-agent-install\n* Configures and starts newrelic-plugin-agent according to the attributes\n\n### plugin-agent-install\n\n* Install python, python-pip and python-psycopg2\n* Install newrelic-plugin-agent using pip\n* Install newrelic-plugin-agent initscript (Debian, Ubuntu only)\n* Create run/log directories\n\n### generic-agent-default\n\n* Installs a generic newrelic agent.\n\n### newrelic-repository\n\n* Sets up the Newrelic apt/yum repository\n\n\n## Providers\n\nTo use the providers, add the following to your metadata.rb\n\n```ruby\ndepends 'newrelic-ng'\n```\n\n### newrelic_ng_nrsysmond\n\nWhen nrsysmond is installed (e.g. using the newrelic-ng::nrsysmond-install recipe), you can configure it using the LWRP.\n\n```ruby\nnewrelic_ng_nrsysmond 'YOUR_LICENSE_KEY'\n```\n\nFor more sophisticated setups, you can specify the follwoing additional attributes (they default to the node attributes)\n\n```ruby\nnewrelic_ng_nrsysmond 'custom' do\n  license_key 'MY_PRODUCTION_KEY' if node.chef_environment == 'production'\n  license_key 'MY_STAGING_KEY'    if node.chef_environment == 'staging'\n\n  # additional nrsysmond configuration options\n  ssl            false\n  loglevel       'info'\n  proxy          nil\n  ssl_ca_bundle  nil\n  ssl_ca_path    '/myca/path'\n  pidfile        '/tmp/nrsysmond.pid'\n  collector_host 'my-collector-host.com'\n  timeout        10\n\n  # path and attributes of nrsysmond.cfg\n  owner       'root'\n  group       'root'\n  mode        00600\n  config_file '/etc/nrsysmond.cfg'\n\n  # you can also specify your own configuration template\n  cookbook    'yourcookbook'\n  source      'yoursourcefile'\nend\n```\n\n### newrelic_ng_plugin_agent\n\nWhen the plugin-agent is installed (e.g. using the newrelic-ng::plugin-agent-install recipe), you can configure it using the LWRP.\n\n```ruby\nnewrelic_ng_plugin_agent 'YOUR_LICENSE_KEY'\n```\n\nFor more sophisticated setups, you can specify the follwoing additional attributes (they default to the node attributes)\n\n```ruby\nnewrelic_ng_plugin_agent 'custom' do\n  license_key 'MY_PRODUCTION_KEY' if node.chef_environment == 'production'\n  license_key 'MY_STAGING_KEY'    if node.chef_environment == 'staging'\n\n  # additional plugin-agent configuration options\n  poll_interval  20\n  logfile        '/tmp/plugin-agent.log'\n  pidfile        '/tmp/plugin-agent.pid'\n\n  # set your service configuration\n  service_config <<-EOS\npostgresql:\n  host: localhost\n  port: 5432\n  user: postgres\n  dbname: postgres\nEOS\n\n  # path and attributes of nrsysmond\n  owner       'root'\n  group       'root'\n  mode        00600\n  config_file '/etc/plugin-agent.cfg'\n\n  # you can also specify your own configuration template\n  cookbook    'yourcookbook'\n  source      'yoursourcefile'\nend\n```\n\n### newrelic_ng_generic_agent\n\nYou can install and configure generic ruby newrelic agents also via this LWRPs. For more information, see attributes and recipes section above.\n\nExample:\n\n```ruby\nnewrelic_ng_generic_agent 'MY_LICENSE_KEY' do\n  plugin_name 'nginx_status_agent'\n  source 'http://nginx.com/download/newrelic/newrelic_nginx_agent.tar.gz'\n  config <<-EOS\n- instance_name: localhost\n  status_url: http://localhost/nginx_stub_status\nEOS\nend\n```\n\n```ruby\nnewrelic_ng_generic_agent 'MY_LICENSE_KEY' do\n  plugin_name 'sidekiq_status_agent'\n  source 'https://github.com/eksoverzero/newrelic_sidekiq_agent/archive/V2.0.tar.gz'\n  config <<-EOS\n- instance_name: \"App name\"\n  uri: \"redis://localhost:6379\"\n  namespace: \"namespace\"\nEOS\nend\n```\n\nYou can specify the following additional attributes\n\n```ruby\ntarget_dir '/opt/newrelic-agents'\nowner      'newrelic'\ngroup      'newrelic'\n```\n\nThe following actions are supported\n\n```ruby\naction :install_and_configure # default\naction :install               # only install the agent\naction :configure             # only configure the agent\n```\n\n\n# Contributing\n\ne.g.\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write you change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\n# License and Authors\n\nAuthors: Chris Aumann <me@chr4.org>\n\nLicense: GPLv3\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "suse",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/build-essential",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/python",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}