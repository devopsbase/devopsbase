{
  "name": "racoon-ipsec-osx Chef cookbook",
  "chef_cookbook_name": "racoon-ipsec-osx",
  "revision": "0.1.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/racoon-ipsec-osx",
    "https://supermarket.chef.io/cookbooks/racoon-ipsec-osx/download",
    "https://supermarket.chef.io/cookbooks/racoon-ipsec-osx/versions/0.1.1",
    "https://supermarket.chef.io/cookbooks/racoon-ipsec-osx/versions/0.1.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/racoon-ipsec-osx/versions/0.1.1",
    "https://supermarket.chef.io/api/v1/cookbooks/racoon-ipsec-osx",
    "https://supermarket.chef.io/api/v1/cookbooks/racoon-ipsec-osx/versions/0.1.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Networking",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/racoon-ipsec-osx",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/racoon-ipsec-osx/versions/0.1.1/download",
  "deprecated": false,
  "created": "2013-06-04T05:06:37.000Z",
  "updated": "2013-06-04T05:06:37.000Z",
  "description": "Manages racoon configuration for OS X",
  "maintainer": {
    "name": "jtimberman",
    "email": "joshua@opscode.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 1199080,
  "downloads_count_revision": 1199080,
  "repository_url": "https://github.com/jtimberman/racoon-ipsec-osx-cookbook",
  "issues_url": "https://github.com/jtimberman/racoon-ipsec-osx-cookbook",
  "chef_source_url": "https://github.com/jtimberman/racoon-ipsec-osx-cookbook",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "racoon-ipsec-osx Cookbook\n=========================\n\nManages racoon, the IKE key management daemon used for IPSec on Mac OS\nX (and other platforms).\n\nSpecifically, this cookbook manages the racoon configuration and\nservice to override timeout values that OS X autogenerates. Reference\n[this Apple discussion thread](https://discussions.apple.com/thread/3275811?start=0&tstart=0)\nfor more information/background.\n\nNote that the forum post \"accepted answer\" includes options that are\nnot managed here, as it was not required to use those options for\nfunctionality on my system.\n\nThis cookbook does not manage IPSec VPN configuration. Use the fancy\nOS X gui for that.\n\nRequirements\n============\n\nPlatform: Mac OS X\n\nTested on Mac OS X 10.8.3. May work on other versions with or without\nmodification.\n\nAttributes\n==========\n\n* `node['racoon']['proposal_lifetime']` - Lifetime proposed\n  for phase 1 negotiations. Default is 186 hours to workaround OS X\n  generated configuration. See `racoon.conf(5)` for more information.\n  Used in the `racoon_ipsec_osx` resource.\n\nResources\n=========\n\nThis cookbook provides the `racoon_ipsec_osx` resource. This is an OS\nX specific configuration based on the default generated by OS X for\nIPSec VPNs. It is responsible for rendering a configuration file for a\ngiven VPN connection and restarting the racoon service.\n\n**Note**: This is very much tied to the way that OS X generates the\n  racoon configurations for IPSec connections.\n\n## Actions\n\n* `:create` - Creates the configuration\n* `:delete` - Deletes the configuration\n\n## Attributes\n\n* `ipaddress` - **Name attribute**. The IP address of the remote VPN\n  server to configure.\n* `source` - Source filename. Default: `racoon-remote.conf.erb`.\n* `cookbook` - Cookbook where the source template is. Default: nil\n  (uses the `racoon-remote.conf.erb` from this cookbook).\n* `my_identifier` - Specifies the identifier sent to the remote host.\n  Typically the name of the IPSec shared group.\n  Uses the `keyid_use` type. Required.\n* `shared_secret` - Specifies the ID from the OS X keychain for the\n  shared secret. See below. Required.\n* `xauth_login` - Specifies the login to use in client-side hybrid\n  authentication. Required.\n* `encryption_algorithms` - The encryption algorithms to use for each\n  proposal. The default value is a hash that comes from the defaults\n  generated by OS X, which should be sufficient for most use cases.\n\nThis doesn't manage the actual IPSec configuration. That should be\ndone through the OS X Network UI. Once complete, the `shared_secret`\nwill be in the OS X Keychain.\n\n## Example\n\n    racoon_ipsec_osx \"192.168.173.12\" do\n      my_identifier \"hqipsec\"\n      shared_secret \"11223344-5566-7788-99AA-BBCCDDEEFF11.SS\"\n      xauth_login \"vpnuser\"\n    end\n\nRecipes\n=======\n\n## default.rb\n\nThis recipe ensures that the `/etc/racoon/racoon.conf` config file is\nmanaged with the appropriate content and that the `racoon` service is\nmanaged.\n\n## data-bag-config.rb\n\nThis recipe uses a data bag driven configuration, so potentially\nsensitive data about the IPSec connection can be separated from the\nattributes and recipes in this cookbook. See __Usage__/__Data Bag__\nfor details.\n\nUsage\n=====\n\nInclude `recipe[racoon-ipsec-osx]` on a node to manage the basics, and\nthen use the resource `racoon_ipsec_osx` in a site-specific cookbook\nwith the appropriate values for any IPSec configuration needed for\nRacoon.\n\nTo use the data bag driven configuration, include\n`recipe[racoon-ipsec-osx::data-bag-config]` recipe on a node, and\ncreate the data bag per the instructions below.\n\n## Data Bag\n\nCreate a data bag named `racoon_ipsec` with an item named `default`.\nIt should have content like this:\n\n    {\n      \"id\": \"default\",\n      \"ipaddress\": \"192.168.173.12\",\n      \"my_identifier\": \"hqipsec\",\n      \"shared_secret\": \"11223344-5566-7788-99AA-BBCCDDEEFF11.SS\",\n      \"xauth_login\": \"vpnuser\"\n    }\n\nChange the values as appropriate. Get the `shared_secret` from the\nIPSec shared secret entry in the OS X keychain.\n\nContributing\n============\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n===================\n\n- Author:: Joshua Timberman <joshua@opscode.com>\n- Copyright:: Copyright (c) 2013, Opscode, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "mac_os_x",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ]
}