{
  "name": "hopsworks Chef cookbook",
  "chef_cookbook_name": "hopsworks",
  "revision": "0.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/hopsworks",
    "https://supermarket.chef.io/cookbooks/hopsworks/download",
    "https://supermarket.chef.io/cookbooks/hopsworks/versions/0.1.0",
    "https://supermarket.chef.io/cookbooks/hopsworks/versions/0.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/hopsworks/versions/0.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/hopsworks",
    "https://supermarket.chef.io/api/v1/cookbooks/hopsworks/versions/0.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Binding/Provider/Amazon/OpsWorks",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/hopsworks",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/hopsworks/versions/0.1.0/download",
  "deprecated": false,
  "created": "2016-03-02T08:40:12.235Z",
  "updated": "2016-03-02T08:40:12.091Z",
  "description": "Installs/Configures the HopsHub Dashboard",
  "maintainer": {
    "name": "dowlingj",
    "email": "jdowling@kth.se"
  },
  "license": "Apache v2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 232,
  "downloads_count_revision": 232,
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "HopsWorks\n==================\n\nChef cookbook to install HopsWorks, Hadoop for Humans.\n\n\nVagrant Installation\n==================\n\nRequirements: Vagrant, Virtualbox, Min 9 GB of main memory\n\nInstall the omnibus plugin, if needed:\n````\nvagrant plugin install vagrant-omnibus\n````\n\n\nClone this repo, then run:\n````\ncd hopsworks-chef\n# remove any old berkshelf cookbooks/cache\nrm -rf cookbooks Berksfile.lock\nberks vendor cookbooks\nvagrant up\n````\n\nAfter hopsworks has installed, access hopsworks from your browser, with the username and password below:\n````\nhttp://localhost:8080/hopsworks\n````\n# Default credentials:\n````\nuser: admin@kth.se\npassword: admin\n````\n\n\n## On-Premise RedHat/Centos/Fedora Installations\n\nBy default, Redhat/Centos/Fedora disable \"ssh hostname sudo <cmd>\", because it will show the password in clear. \nThis prevents Karamel from executing Chef recipes on bare-metal Centos/Redhat hosts. To overcome this, you can\nforce the use of a pseudeo-terminal, by commenting out the following line in **/etc/sudoers**:\n\n# Comment out this line below, in /etc/sudoers\n#Defaults    requiretty\n\nThis has to be done for all hosts in the cluster on which Karamel will be executed.\n\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Added some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "rhel",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/glassfish",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ndb",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/kagent",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/hops",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/elastic",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/hadoop_spark",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/flink",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/zeppelin",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/compat_resource",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ulimit",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/authbind",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apache_hadoop",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "hopsworks::install": "Installs Glassfish",
    "hopsworks": "Installs HopsWorks war file, starts glassfish+application.",
    "hopsworks::dev": "Installs development libraries needed for HopsWorks development.",
    "hopsworks::letsencypt": "Given a glassfish installation and a letscrypt installation, update glassfish's key."
  },
  "parameters": {
    "hopsworks/twofactor_auth": {
      "description": "twofactor_auth (default: false)",
      "type": "string",
      "required": "required",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/gmail/email": {
      "description": "Email address for gmail account",
      "required": "required",
      "type": "string",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/gmail/password": {
      "description": "Password for gmail account",
      "required": "required",
      "type": "string",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/admin/user": {
      "description": "Username for the Administration account on the Web Application Server",
      "type": "string",
      "required": "required",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/admin/password": {
      "description": "Password for the Administration account on the Web Application Server",
      "type": "string",
      "required": "required",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "mysql/user": {
      "description": "Username for the MySQL Server Accounts",
      "type": "string",
      "required": "required",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "mysql/password": {
      "description": "Password for the MySQL Server Accounts",
      "type": "string",
      "required": "required",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/master/password": {
      "description": "Web Application Server master password",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "karamel/cert/cn": {
      "description": "Certificate Name",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "karamel/cert/o": {
      "description": "organization",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "karamel/cert/ou": {
      "description": "Organization unit",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "karamel/cert/l": {
      "description": "Location",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "karamel/cert/s": {
      "description": "City",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "karamel/cert/c": {
      "description": "Country (2 letters)",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "glassfish/version": {
      "description": "glassfish/version",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "glassfish/user": {
      "description": "Install and run the glassfish server as this username",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "glassfish/group": {
      "description": "glassfish/group",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/port": {
      "description": "Port that webserver will listen on",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/max_mem": {
      "description": "glassfish/max_mem",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/min_mem": {
      "description": "glassfish/min_mem",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/max_stack_size": {
      "description": "glassfish/max_stack_size",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/max_perm_size": {
      "description": "glassfish/max_perm_size",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "kagent/enabled": {
      "description": "Install kagent",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/reinstall": {
      "description": "Enter 'true' if this is a reinstallation",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/war_url": {
      "description": "Url for the hopsworks war file",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/yarn_default_quota_mins": {
      "description": "Default number of CPU mins availble per project",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/hdfs_default_quota_gbs": {
      "description": "Default amount in GB of available storage per project",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hopsworks/max_num_proj_per_user": {
      "description": "Maximum number of projects that can be created by each user",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "glassfish/package_url": {
      "description": "Url for the Glassfish distribution zip file.",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "ndb/dir": {
      "description": "Ndb Installation directory.",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hops/dir": {
      "description": "Ndb Installation directory.",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "hadoop_spark/dir": {
      "description": "Installation directory.",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    }
  }
}