{
  "name": "poise Chef cookbook",
  "chef_cookbook_name": "poise",
  "revision": "1.0.10",
  "uris": [
    "https://supermarket.chef.io/cookbooks/poise",
    "https://supermarket.chef.io/cookbooks/poise/download",
    "https://supermarket.chef.io/cookbooks/poise/versions/1.0.10",
    "https://supermarket.chef.io/cookbooks/poise/versions/1.0.10/download",
    "https://supermarket.chef.io/api/v1/cookbooks/poise/versions/1.0.10",
    "https://supermarket.chef.io/api/v1/cookbooks/poise",
    "https://supermarket.chef.io/api/v1/cookbooks/poise/versions/1.0.10/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/poise",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/poise/versions/1.0.10/download",
  "deprecated": false,
  "created": "2014-01-03T02:21:04.000Z",
  "updated": "2016-06-18T01:07:20.006Z",
  "description": "Helpers for writing extensible Chef cookbooks.",
  "maintainer": {
    "name": "coderanger",
    "email": "noah@coderanger.net"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 9,
  "downloads_count": 7915343,
  "downloads_count_revision": 1242538,
  "repository_url": "https://github.com/poise/poise",
  "issues_url": "https://github.com/poise/poise/issues",
  "chef_source_url": "https://github.com/poise/poise",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Poise\n\n[![Build Status](https://travis-ci.org/poise/poise.png?branch=master)](https://travis-ci.org/poise/poise)\n\nThe poise cookbook provides patterns and helpers for writing reusable Chef\ncode.\n\n## Quick start\n\nCreate a `libraries/default.rb` file in your cookbook like so:\n\n```ruby\nclass Chef\n  class Resource::MyResource < Resource\n    include Poise\n    actions(:enable, :disable)\n    attribute(:path, kind_of: String)\n  end\n\n  class Provider::MyResource < Provider\n    def action_enable\n      converge_by(\"enable resource #{new_resource.name}\") do\n        notifying_block do\n          ... # Normal Chef recipe code goes here\n        end\n      end\n    end\n  end\nend\n```\n\nYou can then use this resource like any other Chef resource:\n\n```ruby\nmy_resource 'one' do\n  path '/tmp'\nend\n```\n\n## Patterns\n\n### Notifying Block\n\nModule: `Poise::Provider::NotifyingBlock`\n\n\n\n### Include Recipe\n\n### Sub-resources\n\n#### Container\n\n#### Child\n\n### Lazy Attribute Default\n\n### Option Collector\n\n## Helpers\n\n### LWRP API\n\n### Resource Name\n\n## Using the Poise module\n\n"
}