{
  "name": "frog Chef cookbook",
  "chef_cookbook_name": "frog",
  "revision": "1.0.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/frog",
    "https://supermarket.chef.io/cookbooks/frog/download",
    "https://supermarket.chef.io/cookbooks/frog/versions/1.0.2",
    "https://supermarket.chef.io/cookbooks/frog/versions/1.0.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/frog/versions/1.0.2",
    "https://supermarket.chef.io/api/v1/cookbooks/frog",
    "https://supermarket.chef.io/api/v1/cookbooks/frog/versions/1.0.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/frog",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/frog/versions/1.0.2/download",
  "deprecated": false,
  "created": "2014-07-15T06:21:57.603Z",
  "updated": "2014-08-25T04:07:04.041Z",
  "description": "Installs and configures the Frog Media Server",
  "maintainer": {
    "name": "nickryand",
    "email": "nickryand@gmail.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 4357276,
  "downloads_count_revision": 1028965,
  "repository_url": "http://github.com/nickryand/frog-cookbook",
  "issues_url": "https://github.com/nickryand/frog-cookbook/issues",
  "chef_source_url": "http://github.com/nickryand/frog-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "frog Cookbook\n=============\n[![Build Status](http://img.shields.io/travis/nickryand/frog-cookbook.svg)][travis]\n\n\n[travis]: http://travis-ci.org/nickryand/frog-cookbook\nInstalls and configures the open source Frog Media Server.\n\nFrog Media Server is an open source project designed to make sharing and maintaining large collections of images and video simple. It exposes an API that allows for easy integration with other applications. The built-in web frontend allows you to manage your media from any platform that supports JavaScript and HTML5.\n\nDocumentation: <http://frog.readthedocs.org>\n\nGitHub: <https://github.com/theiviaxx/Frog>\n\nRequirements\n------------\n\n* Chef 11.6 or higher\n\nSupported Platforms\n-------------------\n\n* Ubuntu 12.04, 14.04\n* CentOS 6.4\n* Amazon 2014.03\n\nPull requests for additional platform support are welcome!\n\nAttributes\n----------\n\nAttributes are documented in-line. Please see the attributes source files for detailed information about the attributes that are available.\n\nRecipes\n-------\n\n### default\n\nInstalls the full stack of services needed to run frog on a single machine. This is done by including all 3 of the other recipes provided by this cookbook.\n\n### server\n\nInstalls and configures the Frog application and Gunicorn application server.\n\nFrog is a Django application. This cookbook creates a Django project and configures it to run the django-frog app. The Gunicorn server is used to run the Django application managed by runit.\n\n### database\n\nCreates and configures the Frog database.\n\nYou can optionally use this cookbook to install the DBMS server binaries for your chosen database by setting `node['frog']['db']['install_dbms']` to true. The `node['frog']['db']['dbms']` attribute is used to control which DBMS system is installed and/or configured. Currently `mysql` is the only valid option.\n\nIf you would like to add additional database support, we would welcome the pull request!\n\n*Note:* The community [mysql cookbook](https://github.com/opscode-cookbooks/mysql) is used to install the MySQL server software. Please read that recipes documentation for more information about customizing the MySQL server installation.\n\n### nginx\n\nInstalls and configures nginx as a reverse proxy to the Gunicorn application server.\n\nUsage\n-----\n\nThis cookbook is designed to allow you to run each of the components on a single server, or across multiple servers. You may want to run only the web front end on one node and the database server on another node.  By using a combination of the recipe's you can configure your Frog stack however you like.\n\nIf you plan to not run the entire software stack on a single host, be sure to change the applicable attributes so the software can find the required services.\n\n### Single Server\n\nTo run the entire Frog stack on a single node, include `recipe[frog::default]` in your run_list.\n\n### Front End App Server and Nginx Reverse Proxy\n\nInclude `recipe[frog::server]` and `recipe[frog::nginx]` in your run_list.\n\n**Applicable attributes:**\n\n* `default['frog']['db']['host']`\n* `default['frog']['db']['port']`\n\n### Front End App Server Only\n\nInclude `recipe[frog::server]` in your run_list.\n\n**Applicable attributes:**\n\n* `default['frog']['db']['host']`\n* `default['frog']['db']['port']`\n\n### Reverse Proxy Server Only\nInclude `recipe[frog::nginx]` to your run_list.\n\n**Applicable attributes:**\n\n* `default['frog']['settings']['media_root']`\n* `default['frog']['settings']['static_root']`\n* `default['frog']['settings']['url']`\n\n### Database Server Only\n\nInclude `recipe[frog::database]` to your run_list.\n\n**Applicable Attributes:**\n\n* `default['frog']['db']['from_host']`\n* `default['frog']['db']['install_dbms']`\n* `default['frog']['db']['dbms']`\n\nContributing\n------------\n\n1. Fork the repository on Github: <https://help.github.com/articles/fork-a-repo>\n2. Clone the repository locally:\n\n    $ git clone http://github.com/nickryand/frog-cookbook.git\n\n3. Create a named feature branch:\n\n    $ cd frog-cookbook\n    $ git checkout -b [new feature branch]\n\n4. Add your change(s)\n5. Write tests for your change(s):\n\n  You can provide spec and/or integration tests for your changes. Pull requests without changes will sit until someone is able to write tests the verify the changes. This has the added benefit of possibly preventing regressions in the future.\n\n6. Install the gem dependencies:\n\n    bundle install\n\n7. Run the integration and spec tests to ensure they all pass:\n\n    bundle exec rake integration\n\n8. Run the style tests to ensure they all pass:\n\n    bundle exec rake style\n\n9. Update the README.md with new information if applicable.\n10. Commit and push your changes up to your feature branch\n11. Submit a Pull Request\n\nLicense and Authors\n-------------------\n- Author:: Nick Downs (<nickryand@gmail.com>)\n\n```text\nCopyright (C) 2014 Nick Downs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/database",
      "revision": "~> 2.2.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/python",
      "revision": "~> 1.4.6",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/openssl",
      "revision": "~> 1.1.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/runit",
      "revision": "~> 1.5.10",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mysql",
      "revision": "~> 5.3.6",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/gunicorn",
      "revision": "~> 1.1.6",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nginx",
      "revision": "~> 2.7.4",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef-sugar",
      "revision": "~> 2.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": "~> 3.2.2",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/build-essential",
      "revision": "~> 2.0.4",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": "~> 2.4.0",
      "self_resolve": true
    }
  ]
}