{
  "name": "xml_file Chef cookbook",
  "chef_cookbook_name": "xml_file",
  "revision": "0.3.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/xml_file",
    "https://supermarket.chef.io/cookbooks/xml_file/download",
    "https://supermarket.chef.io/cookbooks/xml_file/versions/0.3.0",
    "https://supermarket.chef.io/cookbooks/xml_file/versions/0.3.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/xml_file/versions/0.3.0",
    "https://supermarket.chef.io/api/v1/cookbooks/xml_file",
    "https://supermarket.chef.io/api/v1/cookbooks/xml_file/versions/0.3.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Binding/Provider",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/xml_file",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/xml_file/versions/0.3.0/download",
  "deprecated": false,
  "created": "2015-02-23T07:13:17.756Z",
  "updated": "2016-07-07T21:50:16.014Z",
  "description": "Provides xml_file resource-provider",
  "maintainer": {
    "name": "rdeys",
    "email": "ranjib@linux.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 354389,
  "downloads_count_revision": 272,
  "repository_url": "https://github.com/GoatOS/xml_file",
  "issues_url": "https://github.com/GoatOS/xml_file/issues",
  "chef_source_url": "https://github.com/GoatOS/xml_file",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "## xml_file - Cookbook\n\n`xml_file` resource-provider to manage XML files.\n\n### Description\n\n`xml_file` resource allows managing XML files where only parts of the file's\ncontent is controlled. Users can specify `XPath` targets and expected content\nat those targets.\n\n### Usage\n`xml_file` resource allows different attributes to specify\npartial content.\n\n- 'partial' attribute to add a XML fragments. Following example will\ninsert `part.xml` (present in `files/default` directory of the consumer cookbook) at '/parent/child' XPath target's last element.\nContent of _whole.xml_\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"\">\n  <repo type=\"git\"></repo>\n  <maintainers>\n    <maintainer>Hendrix</maintainer>\n    <maintainer>Morrison</maintainer>\n  </maintainers>\n<project>\n```\n\nContent of _part.xml_\n```xml\n<issuetracker>\n  <name>Jira</name>\n  <url>http://example.com</url>\n</issuetracker>\n```\n*xml_file* resource declaration:\n```ruby\nxml_file '/opt/whole.xml' do\n  partial '//project', 'part.xml'\n  owner 'root'\n  group 'root'\n  mode 0644\nend\n```\nwill change _whole.xml_ file to:\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"\">\n  <repo type=\"git\"></repo>\n  <maintainers>\n    <maintainer>Hendrix</maintainer>\n    <maintainer>Morrison</maintainer>\n  </maintainers>\n  <issuetracker>\n    <name>Jira</name>\n    <url>http://example.com</url>\n  </issuetracker>\n<project>\n```\n`before` or `after` keys can be specified alongside the XPath values\nto insert the elements at certain position with respective to their siblings.\n\n- The 'attribute' method allows setting the value of an XML element's attribute.\nFollowing is an example:\n```ruby\nxml_file '/opt/whole.xml' do\n  attribute '//project/repo', 'type', 'svn'\n  owner 'root'\n  group 'root'\n  mode 0644\nend\n```\nWill result:\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"\">\n  <repo type=\"svn\"></repo>\n  <maintainers>\n    <maintainer>Hendrix</maintainer>\n    <maintainer>Morrison</maintainer>\n  </maintainers>\n<project>\n```\n- The 'text' method will set the text content of an XML element. Following example:\n```ruby\nxml_file '/opt/whole.xml' do\n  text '//maintainer[last()]', 'Ray'\n  owner 'root'\n  group 'root'\n  mode 0644\nend\n```\nwill result:\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"\">\n  <repo type=\"svn\"></repo>\n  <maintainers>\n    <maintainer>Hendrix</maintainer>\n    <maintainer>Ray</maintainer>\n  </maintainers>\n<project>\n```\n- The 'remove' method will remove all matching xpath elements: Following example:\n```ruby\nxml_file '/opt/whole.xml' do\n  remove '//maintainer'\nend\n```\nwill result:\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"\">\n  <repo type=\"svn\"></repo>\n  <maintainers>\n  </maintainers>\n<project>\n```\n\nAll methods can be combined. When used in combination, partials are\nprocessed before `text` and `attribute`, hence they can refer to XPath introduced by partials.\n\n`xml_file` resource only supports :edit action. Its written in\nREXML and should be portable across platforms.\n\n## License\n[Apache 2](http://www.apache.org/licenses/LICENSE-2.0)\n\n## Contributing\n\n1. Fork it ( https://github.com/GoatOS/xml_file/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "oracle",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "suse",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "freebsd",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "openbsd",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "mac_os_x",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "mac_os_x_server",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "aix",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ]
}