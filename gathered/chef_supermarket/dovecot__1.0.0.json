{
  "name": "dovecot Chef cookbook",
  "chef_cookbook_name": "dovecot",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/dovecot",
    "https://supermarket.chef.io/cookbooks/dovecot/download",
    "https://supermarket.chef.io/cookbooks/dovecot/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/dovecot/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/dovecot/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/dovecot",
    "https://supermarket.chef.io/api/v1/cookbooks/dovecot/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Email"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/dovecot",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/dovecot/versions/1.0.0/download",
  "deprecated": false,
  "created": "2013-06-08T14:12:24.000Z",
  "updated": "2016-10-09T20:46:01.270Z",
  "description": "Installs and configures Dovecot, open source IMAP and POP3 email server.\n",
  "maintainer": {
    "name": "zuazo",
    "email": "team@onddo.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 11,
  "downloads_count": 9258449,
  "downloads_count_revision": 1209537,
  "repository_url": "https://github.com/zuazo/dovecot-cookbook",
  "issues_url": "https://github.com/zuazo/dovecot-cookbook/issues",
  "chef_source_url": "https://github.com/zuazo/dovecot-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nInstalls and configures [Dovecot](http://www.dovecot.org/), open source IMAP and POP3 email server.\n\nRequirements\n============\n\n## Platform:\n\nThis cookbook has been tested on the following platforms:\n\n* CentOS >= 6.0\n* Debian >= 7.0\n* Fedora >= 18.0\n* Ubuntu >= 12.04\n* Amazon\n\nLet me know if you use it successfully on any other platform.\n\n## Cookbooks:\n\n* ohai\n\n## Applications:\n\n* **Dovecot >= 2**: requires this version of dovecot to be available by the distribution's package manager.\n\nAttributes\n==========\n\nTo see a more complete description of the attributes, go to the [Dovecot wiki2 configuration section](http://wiki2.dovecot.org/#Dovecot_configuration) or read the comments in the templates and generated configuration files.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['install_from']</code></td>\n    <td>Determines how Dovecot is installed from. Only `package` is supported for now.</td>\n    <td><code>\"package\"</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['user']</code></td>\n    <td>Dovecot system user. Should no be changed.</td>\n    <td><code>\"dovecot\"</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['group']</code></td>\n    <td>Dovecot system group. Should no be changed.</td>\n    <td><code>\"dovecot\"</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['lib_path']</code></td>\n    <td>Dovecot library path. Should no be changed.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf_path']</code></td>\n    <td>Dovecot configuration files path. Should no be changed.</td>\n    <td><code>\"/etc/dovecot\"</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf_files_user']</code></td>\n    <td>System user owner of configuration files.</td>\n    <td><code>\"root\"</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf_files_group']</code></td>\n    <td>System group owner of configuration files.</td>\n    <td><code>node[\"dovecot\"][\"group\"]</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf_files_mode']</code></td>\n    <td>Configuration files system file mode bits.</td>\n    <td><code>00644</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['sensitive_files']</code></td>\n    <td>An array of dovecot sensitive configuration files. Each array item can be a glob expression or a fixed file name. These file names should be relative to <code>node[\"dovecot\"][\"conf_path\"]</code> directory. Example: <code>[ \"dovecot-sql.conf.ext\", \"*-auth.conf.ext\", \"conf.d/auth-supersecret.conf.ext\" ]</code></td>\n    <td><code>[ \"*.conf.ext\" ]</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['sensitive_files_mode']</code></td>\n    <td>Configuration files system file mode bits for sensitve files.</td>\n    <td><code>00640</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf_files']['core']</code></td>\n    <td>Dovecot core configuration files list.</td>\n    <td><code>[<br/>\n      &nbsp;&nbsp;\"conf.d/10-auth.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/10-director.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/10-logging.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/10-mail.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/10-master.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/10-ssl.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/10-tcpwrapper.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/15-lda.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/15-mailboxes.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/90-acl.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/90-plugin.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/90-quota.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/auth-checkpassword.conf.ext\",<br/>\n      &nbsp;&nbsp;\"conf.d/auth-deny.conf.ext\",<br/>\n      &nbsp;&nbsp;\"conf.d/auth-master.conf.ext\",<br/>\n      &nbsp;&nbsp;\"conf.d/auth-passwdfile.conf.ext\",<br/>\n      &nbsp;&nbsp;\"conf.d/auth-sql.conf.ext\",<br/>\n      &nbsp;&nbsp;\"conf.d/auth-static.conf.ext\",<br/>\n      &nbsp;&nbsp;\"conf.d/auth-system.conf.ext\",<br/>\n      &nbsp;&nbsp;\"conf.d/auth-vpopmail.conf.ext\",<br/>\n      &nbsp;&nbsp;\"dovecot.conf\",<br/>\n      &nbsp;&nbsp;\"dovecot-db.conf.ext\",<br/>\n      &nbsp;&nbsp;\"dovecot-dict-sql.conf.ext\",<br/>\n      &nbsp;&nbsp;\"dovecot-sql.conf.ext\"<br/>\n    ]</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf_files']['imap']</code></td>\n    <td>Dovecot IMAP configuration files list.</td>\n    <td><code>[\"conf.d/20-imap.conf\"]</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf_files']['pop3']</code></td>\n    <td>Dovecot POP3 configuration files list.</td>\n    <td><code>[\"conf.d/20-pop3.conf\"]</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf_files']['lmtp']</code></td>\n    <td>Dovecot LMTP configuration files list.</td>\n    <td><code>[\"conf.d/20-lmtp.conf\"]</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf_files']['sieve']</code></td>\n    <td>Dovecot Sieve configuration files list.</td>\n    <td><code>[<br/>\n      &nbsp;&nbsp;\"conf.d/20-managesieve.conf\",<br/>\n      &nbsp;&nbsp;\"conf.d/90-sieve.conf\"<br/>\n    ]</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf_files']['ldap']</code></td>\n    <td>Dovecot LDAP configuration files list.</td>\n    <td><code>[<br/>\n      &nbsp;&nbsp;\"dovecot-ldap.conf.ext\",<br/>\n      &nbsp;&nbsp;\"conf.d/auth-ldap.conf.ext\"<br/>\n    ]</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['auth']</code></td>\n    <td>Dovecot Authentication Databases as a hash of hashes (<a href=\"#authentication-database-examples\">see the examples below</a>). Supported authdbs: checkpassword, deny, ldap, master, passwdfile, sql, system and vpopmail.</td>\n    <td><code>{}</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['namespaces']</code></td>\n    <td>Dovecot Namespaces as an array of hashes (<a href=\"#namespaces-example\">see the example below</a>).</td>\n    <td><code>[]</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['plugins']</code></td>\n    <td>Dovecot Plugins configuration as a hash of hashes (<a href=\"#plugins-examples\">see the examples below</a>). Supported plugins: mail_log, acl and quota.</td>\n    <td><code>{<br/>\n      &nbsp;&nbsp;\"sieve\" => {<br/>\n      &nbsp;&nbsp;&nbsp;&nbsp;\"sieve\" => \"~/.dovecot.sieve\",<br/>\n      &nbsp;&nbsp;&nbsp;&nbsp;\"sieve_dir\" => \"~/sieve\",<br/>\n      &nbsp;&nbsp;}<br/>\n    }</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['protocols']</code></td>\n    <td>Dovecot Protocols configuration as a hash of hashes (<a href=\"#protocols-example\">see the example below</a>). Supported protocols: lda, imap, lmtp, sieve and pop3.</td>\n    <td><code>{}</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['services']</code></td>\n    <td>Dovecot Services configuration as a hash of hashes (<a href=\"#service-examples\">see the examples below</a>). Supported services: anvil, director, imap-login, pop3-login, lmtp, imap, pop3, auth, auth-worker, dict, tcpwrap, managesieve-login and managesieve.</td>\n    <td><code>{}</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_plugins']</code></td>\n    <td>Dovecot default enabled mail_plugins.</td>\n    <td><code>[]</code></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['ohai_plugin']['build-options']</code></td>\n    <td>Whether to enable reading build options inside ohai plugin. Can be disabled to be lighter.</td>\n    <td><code>true</code></td>\n  </tr>\n</table>\n\n## Main configuration attributes\n\n* Configuration file: `dovecot.conf`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['listen']</code></td>\n    <td>A comma separated list of IPs or hosts where to listen in for connections.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['base_dir']</code></td>\n    <td>Base directory where to store runtime data.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['instance_name']</code></td>\n    <td>Name of this instance. Used to prefix all Dovecot processes in ps output.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['login_greeting']</code></td>\n    <td>Greeting message for clients.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['login_trusted_networks']</code></td>\n    <td>Space separated list of trusted network ranges.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['login_access_sockets']</code></td>\n    <td>Space separated list of login access check sockets.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['verbose_proctitle']</code></td>\n    <td>Show more verbose process titles (in ps).</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['shutdown_clients']</code></td>\n    <td>Should all processes be killed when Dovecot master process shuts down.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['doveadm_worker_count']</code></td>\n    <td>If non-zero, run mail commands via this many connections to doveadm server.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['doveadm_socket_path']</code></td>\n    <td>UNIX socket or host:port used for connecting to doveadm server.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['import_environment']</code></td>\n    <td>Space separated list of environment variables that are preserved on Dovecot startup and his childs.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['dict']</code></td>\n    <td>Dictionary server settings as a hash.</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## Authentication processes attributes\n\n* Configuration file: `conf.d/10-auth.conf`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['disable_plaintext_auth']</code></td>\n    <td>Disable LOGIN command and all other plaintext authentications unless SSL/TLS is used.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_cache_size']</code></td>\n    <td>Authentication cache size (e.g. 10M). 0 means it's disabled.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_cache_ttl']</code></td>\n    <td>Time to live for cached data.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_cache_negative_ttl']</code></td>\n    <td>TTL for negative hits (user not found, password mismatch).</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_realms']</code></td>\n    <td>Space separated list (or array) of realms for SASL authentication mechanisms that need them.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_default_realm']</code></td>\n    <td>Default realm/domain to use if none was specified.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_username_chars']</code></td>\n    <td>List of allowed characters in username.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_username_translation']</code></td>\n    <td>Username character translations before it's looked up from databases.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_username_format']</code></td>\n    <td>Username formatting before it's looked up from databases.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_master_user_separator']</code></td>\n    <td>If you want to allow master users to log in by specifying the master username within the normal username string, you can specify the separator character here (format: <username><separator><master username>).</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_anonymous_username']</code></td>\n    <td>Username to use for users logging in with ANONYMOUS SASL mechanism.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_worker_max_count']</code></td>\n    <td>Maximum number of dovecot-auth worker processes.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_gssapi_hostname']</code></td>\n    <td>Host name to use in GSSAPI principal names.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_krb5_keytab']</code></td>\n    <td>Kerberos keytab to use for the GSSAPI mechanism.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_use_winbind']</code></td>\n    <td>Do NTLM and GSS-SPNEGO authentication using Samba's winbind daemon and ntlm_auth helper.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_winbind_helper_path']</code></td>\n    <td>Path for Samba's ntlm_auth helper binary.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_failure_delay']</code></td>\n    <td>Time to delay before replying to failed authentications.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_ssl_require_client_cert']</code></td>\n    <td>Take the username from client's SSL certificate, using X509_NAME_get_text_by_NID() which returns the subject's DN's CommonName.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_mechanisms']</code></td>\n    <td>Space separated list of wanted authentication mechanisms: plain, login, digest-md5, cram-md5, ntlm, rpa, apop, anonymous, gssapi, otp, skey, gss-spnego</td>\n    <td><code>\"plain\"</code></td>\n  </tr>\n</table>\n\n## Director-specific attributes\n\n* Configuration file: `conf.d/10-director.conf`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['director_servers']</code></td>\n    <td>List of IPs or hostnames to all director servers, including ourself (as a string or as an array).</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['director_mail_servers']</code></td>\n    <td>List of IPs or hostnames to all backend mail servers.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['director_user_expire']</code></td>\n    <td>How long to redirect users to a specific server after it no longer has any connections.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['director_doveadm_port']</code></td>\n    <td>TCP/IP port that accepts doveadm connections (instead of director connections).</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## Log destination attributes\n\n* Configuration file: `conf.d/10-logging.conf`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['log_path']</code></td>\n    <td>Log file to use for error messages. \"syslog\" logs to syslog, /dev/stderr logs to stderr.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['info_log_path']</code></td>\n    <td>Log file to use for informational messages. Defaults to log_path.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['debug_log_path']</code></td>\n    <td>Log file to use for debug messages. Defaults to info_log_path.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['syslog_facility']</code></td>\n    <td>Syslog facility to use if you're logging to syslog.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_verbose']</code></td>\n    <td>Log unsuccessful authentication attempts and the reasons why they failed.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_verbose_passwords']</code></td>\n    <td>In case of password mismatches, log the attempted password.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_debug']</code></td>\n    <td>Even more verbose logging for debugging purposes.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_debug_passwords']</code></td>\n    <td>In case of password mismatches, log the passwords and used scheme so the problem can be debugged.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_debug']</code></td>\n    <td>Enable mail process debugging.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['verbose_ssl']</code></td>\n    <td>Show protocol level SSL errors.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['log_timestamp']</code></td>\n    <td>Prefix for each line written to log file.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['login_log_format_elements']</code></td>\n    <td>Space-separated list (or array) of elements we want to log.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['login_log_format']</code></td>\n    <td>Login log format.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_log_prefix']</code></td>\n    <td>Log prefix for mail processes.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['deliver_log_format']</code></td>\n    <td>Format to use for logging mail deliveries.</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## Mailbox locations and namespaces attributes\n\n* Configuration file: `conf.d/10-mail.conf`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_location']</code></td>\n    <td>Location for user's mailboxes.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_uid']</code></td>\n    <td>System user used to access mails.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_gid']</code></td>\n    <td>System group used to access mails.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_privileged_group']</code></td>\n    <td>Group to enable temporarily for privileged operations.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_access_groups']</code></td>\n    <td>Grant access to these supplementary groups for mail processes.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_full_filesystem_access']</code></td>\n    <td>Allow full filesystem access to clients.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mmap_disable']</code></td>\n    <td>Don't use mmap() at all.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['dotlock_use_excl']</code></td>\n    <td>Rely on O_EXCL to work when creating dotlock files.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_fsync']</code></td>\n    <td>When to use fsync() or fdatasync() calls: optimized, always or never</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_nfs_storage']</code></td>\n    <td>Mail storage exists in NFS.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_nfs_index']</code></td>\n    <td>Mail index files also exist in NFS.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['lock_method']</code></td>\n    <td>Locking method for index files: fcntl, flock or dotlock.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_temp_dir']</code></td>\n    <td>Directory in which LDA/LMTP temporarily stores incoming mails >128 kB.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['first_valid_uid']</code></td>\n    <td>Valid UID range for users, defaults to 500 and above.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['last_valid_uid']</code></td>\n    <td>Valid UID range for users, defaults to 500 and above.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['first_valid_gid']</code></td>\n    <td>Valid GID range for users, defaults to non-root/wheel.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['last_valid_gid']</code></td>\n    <td>Valid GID range for users, defaults to non-root/wheel.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_max_keyword_length']</code></td>\n    <td>Maximum allowed length for mail keyword name.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['valid_chroot_dirs']</code></td>\n    <td>':' separated list of directories under which chrooting is allowed for mail processes.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_chroot']</code></td>\n    <td>Default chroot directory for mail processes.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['auth_socket_path']</code></td>\n    <td>UNIX socket path to master authentication server to find users.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_plugin_dir']</code></td>\n    <td>Directory where to look up mail plugins.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_cache_min_mail_count']</code></td>\n    <td>The minimum number of mails in a mailbox before updates are done to cache file.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mailbox_idle_check_interval']</code></td>\n    <td>When IDLE command is running, mailbox is checked once in a while to see if there are any new mails or other changes.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_save_crlf']</code></td>\n    <td>Save mails with CR+LF instead of plain LF.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['maildir_stat_dirs']</code></td>\n    <td>By default LIST command returns all entries in maildir beginning with a dot.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['maildir_copy_with_hardlinks']</code></td>\n    <td>When copying a message, do it with hard links whenever possible.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['maildir_very_dirty_syncs']</code></td>\n    <td>Assume Dovecot is the only MUA accessing Maildir.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mbox_read_locks']</code></td>\n    <td>Which read locking methods to use for locking mbox: dotlock, dotlock_try, fcntl, flock or lockfyy</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mbox_write_locks']</code></td>\n    <td>Which write locking methods to use for locking mbox: dotlock, dotlock_try, fcntl, flock or lockfyy</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mbox_lock_timeout']</code></td>\n    <td>Maximum time to wait for lock (all of them) before aborting.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mbox_dotlock_change_timeout']</code></td>\n    <td>If dotlock exists but the mailbox isn't modified in any way, override the lock file after this much time.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mbox_dirty_syncs']</code></td>\n    <td>When mbox changes unexpectedly simply read the new mails but still safely fallbacks to re-reading the whole mbox file whenever something in mbox isn't how it's expected to be.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mbox_very_dirty_syncs']</code></td>\n    <td>Like mbox_dirty_syncs, but don't do full syncs even with SELECT, EXAMINE, EXPUNGE or CHECK commands.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mbox_lazy_writes']</code></td>\n    <td>Delay writing mbox headers until doing a full write sync (EXPUNGE and CHECK commands and when closing the mailbox).</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mbox_min_index_size']</code></td>\n    <td>If mbox size is smaller than this (e.g. 100k), don't write index files.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mdbox_rotate_size']</code></td>\n    <td>Maximum dbox file size until it's rotated.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mdbox_rotate_interval']</code></td>\n    <td>Maximum dbox file age until it's rotated.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mdbox_preallocate_space']</code></td>\n    <td>When creating new mdbox files, immediately preallocate their size to mdbox_rotate_size.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_attachment_min_size']</code></td>\n    <td>Attachments smaller than this aren't saved externally.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_attachment_fs']</code></td>\n    <td>Filesystem backend to use for saving attachments: posix, sis posix or sis-queue posix.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['mail_attachment_hash']</code></td>\n    <td>Hash format to use in attachment filenames.</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## Master configuration file attributes\n\n* Configuration file: `conf.d/10-master.conf`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['default_process_limit']</code></td>\n    <td>Default process limit.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['default_client_limit']</code></td>\n    <td>Default client limit.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['default_vsz_limit']</code></td>\n    <td>Default VSZ (virtual memory size) limit for service processes.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['default_login_user']</code></td>\n    <td>Login user is internally used by login processes.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['default_internal_user']</code></td>\n    <td>Internal user is used by unprivileged processes.</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## SSL attributes\n\n* Configuration file: `conf.d/10-ssl.conf`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ssl']</code></td>\n    <td>SSL/TLS support: true or false</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ssl_cert']</code></td>\n    <td>PEM encoded X.509 SSL/TLS certificate.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ssl_key']</code></td>\n    <td>PEM encoded X.509 SSL/TLS private key.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ssl_key_password']</code></td>\n    <td>If key file is password protected, give the password here.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ssl_ca']</code></td>\n    <td>PEM encoded trusted certificate authority.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ssl_verify_client_cert']</code></td>\n    <td>Request client to send a certificate.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ssl_cert_username_field']</code></td>\n    <td>Which field from certificate to use for username.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ssl_parameters_regenerate']</code></td>\n    <td>How often to regenerate the SSL parameters file.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ssl_cipher_list']</code></td>\n    <td>SSL ciphers to use</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## LDA specific attributes\n\nAlso used by LMTP.\n\n* Configuration files: `conf.d/15-lda.conf`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['postmaster_address']</code></td>\n    <td>Address to use when sending rejection mails.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['hostname']</code></td>\n    <td>Hostname to use in various parts of sent mails, eg. in Message-Id.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['quota_full_tempfail']</code></td>\n    <td>If user is over quota, return with temporary failure instead of bouncing the mail.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['sendmail_path']</code></td>\n    <td>Binary to use for sending mails.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['submission_host']</code></td>\n    <td>If non-empty, send mails via this SMTP host[:port] instead of sendmail.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['rejection_subject']</code></td>\n    <td>Subject: header to use for rejection mails.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['rejection_reason']</code></td>\n    <td>Human readable error message for rejection mails.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['recipient_delimiter']</code></td>\n    <td>Delimiter character between local-part and detail in email address.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['lda_original_recipient_header']</code></td>\n    <td>Header where the original recipient address (SMTP's RCPT TO: address) is taken from if not available elsewhere.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['lda_mailbox_autocreate']</code></td>\n    <td>Should saving a mail to a nonexistent mailbox automatically create it?</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['lda_mailbox_autosubscribe']</code></td>\n    <td>Should automatically created mailboxes be also automatically subscribed?</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## LMTP specific attributes\n\n* Configuration file: `conf.d/20-lmtp.conf`\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['lmtp_proxy']</code></td>\n    <td>Support proxying to other LMTP/SMTP servers by performing passdb lookups.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['lmtp_save_to_detail_mailbox']</code></td>\n    <td>When recipient address includes the detail (e.g. user+detail), try to save the mail to the detail mailbox.</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## Berkeley DB DB_CONFIG attributes\n\n* Configuration file: `dovecot-db.conf.ext`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['db']</code></td>\n    <td>DB_CONFIG for Berkeley DB as a hash.</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## Dictionary quota SQL attributes\n\n* Configuration files: `dovecot-dict-sql.conf.ext`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['dict_sql']['connect']</code></td>\n    <td>Dict sql connect configuration as a string or an array.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['dict_sql']['maps']</code></td>\n    <td>Dict sql database tables maps (<a href=\"#dictionary-quota-sql-example\">see the example below</a>).</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## LDAP authentication attributes\n\n* Condiguration files: `dovecot-ldap.conf.ext`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['hosts']</code></td>\n    <td>Space separated list or array of LDAP hosts to use.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['uris']</code></td>\n    <td>LDAP URIs to use.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['dn']</code></td>\n    <td>Distinguished Name, the username used to login to the LDAP server.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['dnpass']</code></td>\n    <td>Password for LDAP server, if dn is specified.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['sasl_bind']</code></td>\n    <td>Use SASL binding instead of the simple binding.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['sasl_mech']</code></td>\n    <td>SASL mechanism name to use.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['sasl_realm']</code></td>\n    <td>SASL realm to use.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['sasl_authz_id']</code></td>\n    <td>SASL authorization ID, ie. the dnpass is for this \"master user\", but the dn is still the logged in user.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['tls']</code></td>\n    <td>Use TLS to connect to the LDAP server.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['tls_ca_cert_file']</code></td>\n    <td>TLS options, currently supported only with OpenLDAP.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['tls_ca_cert_dir']</code></td>\n    <td>TLS options, currently supported only with OpenLDAP.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['tls_cipher_suite']</code></td>\n    <td>TLS options, currently supported only with OpenLDAP.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['tls_cert_file']</code></td>\n    <td>TLS cert/key is used only if LDAP server requires a client certificate.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['tls_key_file']</code></td>\n    <td>TLS cert/key is used only if LDAP server requires a client certificate.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['tls_require_cert']</code></td>\n    <td>Valid values: never, hard, demand, allow, try</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['ldaprc_path']</code></td>\n    <td>Use the given ldaprc path.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['debug_level']</code></td>\n    <td>LDAP library debug level as specified by LDAP_DEBUG_* in ldap_log.h.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['auth_bind']</code></td>\n    <td>Use authentication binding for verifying password's validity.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['auth_bind_userdn']</code></td>\n    <td>If authentication binding is used, you can save one LDAP request per login if user's DN can be specified with a common template.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['ldap_version']</code></td>\n    <td>LDAP protocol version to use. Likely 2 or 3.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['base']</code></td>\n    <td>LDAP base. %variables can be used here.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['deref']</code></td>\n    <td>Dereference: never, searching, finding or always.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['scope']</code></td>\n    <td>Search scope: base, onelevel or subtree.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['user_attrs']</code></td>\n    <td>User attributes are given in LDAP-name=dovecot-internal-name list.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['user_filter']</code></td>\n    <td>Filter for user lookup.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['pass_attrs']</code></td>\n    <td>Password checking attributes.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['pass_filter']</code></td>\n    <td>Filter for password lookups.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['iterate_attrs']</code></td>\n    <td>Attributes to get a list of all users</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['iterate_filter']</code></td>\n    <td>Filter to get a list of all users</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['ldap']['default_pass_scheme']</code></td>\n    <td>Default password scheme. \"{scheme}\" before password overrides this.</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## SQL authentication attributes\n\n* Configuration file: `dovecot-sql.conf.ext`.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['sql']['driver']</code></td>\n    <td>Database driver: mysql, pgsql or sqlite.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['sql']['connect']</code></td>\n    <td>Database connection string or array. This is driver-specific setting.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['sql']['default_pass_scheme']</code></td>\n    <td>Default password scheme.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['sql']['password_query']</code></td>\n    <td>passdb query to retrieve the password.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['sql']['user_query']</code></td>\n    <td>userdb query to retrieve the user information.</td>\n    <td><em>nil</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['conf']['sql']['iterate_query']</code></td>\n    <td>Query to get a list of all usernames.</td>\n    <td><em>nil</em></td>\n  </tr>\n</table>\n\n## Distribution packages names attributes\n\nThese attributes below contain the default required distribution packages for the supported platforms. But you are free to create your own to support other platforms. Keep in mind that all are put inside a subkey (`type`). This `node['dovecot']['packages'][type]` attribute is then used together with the `node['dovecot']['conf_files'][type]` attribute to generate the configuration files. \n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['packages']['core']</code></td>\n    <td>Dovecot core package names array.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['packages']['imap']</code></td>\n    <td>Dovecot IMAP package names array.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['packages']['pop3']</code></td>\n    <td>Dovecot POP3 package names array.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['packages']['lmtp']</code></td>\n    <td>Dovecot LMTP package names array.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['packages']['sieve']</code></td>\n    <td>Dovecot Sieve package names array.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['packages']['ldap']</code></td>\n    <td>Dovecot LDAP package names array.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['packages']['sqlite']</code></td>\n    <td>Dovecot SQLite package names array.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['packages']['mysql']</code></td>\n    <td>Dovecot MySQL package names array.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n    <td><code>node['dovecot']['packages']['pgsql']</code></td>\n    <td>Dovecot PostgreSQL package names array.</td>\n    <td><em>calculated</em></td>\n  </tr>\n  <tr>\n</table>\n\nRecipes\n=======\n\n## dovecot::default\n\nInstalls and configures Dovecot.\n\n## dovecot::user\n\nCreates the dovecot system user. Used by the default recipe.\n\n## dovecot::conf_files\n\nGenerates all the configuration files. Used by the default recipe.\n\n## dovecot::ohai_plugin\n\nProvides an Ohai plugin for reading dovecot install information.\n\n## dovecot::from_package\n\nInstalls the required packages. Used by the default recipe if `node['dovecot']['install_from]` is `package`.\n\n## dovecot::service\n\nConfigures the Dovecot service. Used by the default recipe.\n\nOhai Plugin\n===========\n\nThe `ohai_plugin` recipe installs an Ohai plugin. It will be installed and activated automatically.\n\nIt will set the following attributes:\n\n* `node['dovecot']['version']`: version of Dovecot.\n* `node['dovecot']['build-options']`: some Dovecot build options.\n * `node['dovecot']['build-options']['mail-storages']`\n * `node['dovecot']['build-options']['sql-driver-plugins']` or `node['dovecot']['build-options']['sql-drivers']`\n * `node['dovecot']['build-options']['passdb']`\n * `node['dovecot']['build-options']['userdb']`\n\nThis is an output example:\n\n```json\n\"dovecot\": {\n  \"version\": \"2.0.19\",\n  \"build-options\": {\n    \"ioloop\": \"epoll\",\n    \"notify\": \"inotify\",\n    \"ipv6\": true,\n    \"openssl\": true,\n    \"io_block_size\": \"8192\",\n    \"mail-storages\": [\n      \"shared\",\n      \"mdbox\",\n      \"sdbox\",\n      \"maildir\",\n      \"mbox\",\n      \"cydir\",\n      \"raw\"\n    ],\n    \"sql-driver-plugins\": [\n      \"mysql\",\n      \"postgresql\",\n      \"sqlite\"\n    ],\n    \"passdb\": [\n      \"checkpassword\",\n      \"ldap\",\n      \"pam\",\n      \"passwd\",\n      \"passwd-file\",\n      \"shadow\",\n      \"sql\"\n    ],\n    \"userdb\": [\n      \"checkpassword\",\n      \"ldap(plugin)\",\n      \"nss\",\n      \"passwd\",\n      \"prefetch\",\n      \"passwd-file\",\n      \"sql\"\n    ]\n  }\n}\n```\n\nUsage Examples\n==============\n\n## Including in a Cookbook Recipe\n\nYou can simply include it in a recipe:\n\n```ruby\n# from a recipe\ninclude_recipe 'dovecot'\n```\n\nDon't forget to include the `dovecot` cookbook as a dependency in the metadata.\n\n```ruby\n# metadata.rb\n[...]\n\ndepends 'dovecot'\n```\n\n## Including in the Run List\n\nAnother alternative is to include the default recipe in your Run List.\n\n```json\n{\n  \"name\": \"mail.onddo.com\",\n  [...]\n  \"run_list\": [\n    [...]\n    \"recipe[dovecot]\"\n  ]\n}\n```\n\n## Authentication Database Examples\n\nAuthentication database attributes, inside passdb or usedb hash values, can contain both arrays or hashes.\n\nSupported auths are the following: `checkpassword`, `deny`, `ldap`, `master`, `passwdfile`, `sql`, `system` and `vpopmail`.\n\n```ruby\nnode.default['dovecot']['auth']['checkpassword'] = {\n  'passdb' => { # hash\n    'driver' => 'checkpassword',\n    'args' => '/usr/bin/checkpassword',\n  },\n  'userdb' => {\n    'driver' => 'prefetch',\n  },\n}\n```\n\n```ruby\nnode.default['dovecot']['auth']['system']['passdb'] = [ # array\n  {\n    # without driver\n    'args' => 'dovecot',\n  },\n  {\n    'driver' => 'passwd',\n    'args' => '',\n  },\n  {\n    'driver' => 'shadow',\n    'args' => '',\n  },\n  {\n    'driver' => 'bsdauth',\n    'args' => '',\n  },\n]\n```\n\n## Dictionary Quota SQL Example\n\n```ruby\nnode.default['dovecot']['conf']['dict_sql']['maps'] = [\n  {\n    'pattern' => 'priv/quota/storage',\n    'table' => 'quota',\n    'username_field' => 'username',\n    'value_field' => 'bytes',\n  },\n  {\n    'pattern' => 'priv/quota/messages',\n    'table' => 'quota',\n    'username_field' => 'username',\n    'value_field' => 'messages',\n  },\n  {\n    'pattern' => 'shared/expire/$user/$mailbox',\n    'table' => 'expires',\n    'value_field' => 'expire_stamp',\n    'fields' => {\n      'username' => '$user',\n      'mailbox' => '$mailbox',\n    },\n  },\n]\n```\n\n## Namespaces Example\n\nThe `['namespaces']` attribute is an array, which could conaint both array or hash values.\n\n```ruby\nnode.default['dovecot']['namespaces'] = [\n  {\n    'separator' => '/',\n    'prefix' => '\"#mbox/\"',\n    'location' => 'mbox:~/mail:INBOX=/var/mail/%u',\n    'inbox' => true,\n    'hidden' => true,\n    'list' => false,\n  }, {\n    'separator' => '/',\n    'prefix' => '',\n    'location' => 'maildir:~/Maildir',\n  }, { # this requires Dovecot >= 2.1\n    'name' => 'inbox',\n    'separator' => '/',\n    'prefix' => '',\n    'inbox' => true,\n    'mailboxes' => {\n      'Drafts' => {\n        'special_use' => '\\Drafts',\n      },\n      'Junk' => {\n        'special_use' => '\\Junk',\n      },\n      'Trash' => {\n        'special_use' => '\\Trash',\n      },\n      'Sent' => {\n        'special_use' => '\\Sent',\n      },\n      'Sent Messages' => {\n        'special_use' => '\\Sent',\n      },\n      'virtual/All' => {\n        'special_use' => '\\All',\n      },\n      'virtual/Flagged' => {\n        'special_use' => '\\All',\n      },\n    },\n  },\n]\n```\n\n## Plugins Examples\n\nPlugin attribute values should be of type hash.\n\nSupported plugins are the following: `mail_log`, `acl` and `quota`.\n\n### Mail Log Plugin Example\n\n```ruby\nnode.default['dovecot']['plugins']['mail_log'] = {\n  'mail_log_events' => 'delete undelete expunge copy mailbox_delete mailbox_rename',\n  'mail_log_fields' => 'uid box msgid size'\n}\n```\n\n### Sieve Plugin Example\n\n```ruby\nnode.default['dovecot']['plugins']['sieve'] = {\n  'sieve' => '~/.dovecot.sieve',\n  'sieve_dir' => '~/sieve',\n}\n```\n\n## Protocols Examples\n\nProtocol attribute values should be of type hash.\n\nSupported protocols are the following: `lda`, `imap`, `lmtp`, `sieve` and `pop3`.\n\n```ruby\nnode.default['dovecot']['protocols']['lda'] = {\n  'mail_plugins' => [ '$mail_plugins' ],\n}\n```\n\nTo enable the IMAP protocol without additional settings:\n\n```ruby\nnode.default['dovecot']['protocols']['imap'] = {}\n```\n\n## Service Examples\n\nThe `['services']` attribute is a hash. Each service attribute should be a hash. But the `['listeners']` subkey could contain both a hash and an array.\n\nInside this `listeners` key, you should name each listener with the format *PROTOCOL:NAME*. Allowed protocols are `fifo`, `unix` and `inet`.\n\nSupported services are the following: `anvil`, `director`, `imap-login`, `pop3-login`, `lmtp`, `imap`, `pop3`, `auth`, `auth-worker`, `dict`, `tcpwrap`, `managesieve-login` and `managesieve`.\n\n### Director Service Example\n\n```ruby\nnode.default['dovecot']['services']['director']['listeners'] = [\n  { 'unix:login/director' => {\n      'mode' => '0666',\n  } },\n  { 'fifo:login/proxy-notify' => {\n      'mode' => '0666',\n  } },\n  { 'unix:director-userdb' => {\n      'mode' => '0666',\n   } },\n  { 'inet' => {\n      'port' => '5432',\n  } },\n]\n```\n\n### Imap-login Service Example\n\n```ruby\nnode.default['dovecot']['services']['imap-login'] = {\n  'listeners' => [\n    { 'inet:imap' => {\n     'port' => 143,\n    } },\n    { 'inet:imaps' => {\n      'port' => 993,\n      'ssl' => true,\n    } },\n  ],\n  'service_count' => 1,\n  'process_min_avail' => 0,\n  'vsz_limit' => '64M',\n}\n```\n\n## Complete Example\n\nThis is a complete recipe example for installing and configuring Dovecot 2 to work with PostfixAdmin MySQL tables, including IMAP service:\n\n```ruby\n\nnode.default['dovecot']['conf_files_group'] = 'vmail'\n\nnode.default['dovecot']['conf']['disable_plaintext_auth'] = false\nnode.default['dovecot']['conf_files_mode'] = '00640'\n\n# 10-logging.conf\nnode.default['dovecot']['conf']['log_path'] = 'syslog'\nnode.default['dovecot']['conf']['syslog_facility'] = 'mail'\nnode.default['dovecot']['conf']['log_timestamp'] = '\"%Y-%m-%d %H:%M:%S\"'\n\n# 10-mail.conf\nnode.default['dovecot']['conf']['mail_location'] = 'maildir:~/Maildir'\nnode.default['dovecot']['conf']['mail_privileged_group'] = 'mail'\n\n# 10-master.conf\nnode.default['dovecot']['services']['auth']['listeners'] = [\n  # auth_socket_path points to this userdb socket by default. It's typically\n  # used by dovecot-lda, doveadm, possibly imap process, etc. Its default\n  # permissions make it readable only by root, but you may need to relax these\n  # permissions. Users that have access to this socket are able to get a list\n  # of all usernames and get results of everyone's userdb lookups.\n  { 'unix:auth-userdb' => {\n    'mode' => '0600',\n    'user' => 'vmail',\n    'group' => 'vmail',\n  } },\n  # Postfix smtp-auth\n  { 'unix:/var/spool/postfix/private/auth' => {\n    'mode' => '0666',\n    'user' => 'postfix',\n    'group' => 'postfix',\n  } },\n]\n\n# 15-lda.conf\nnode.default['dovecot']['conf']['postmaster_address'] = 'postmaster@mycompany.org' # TODO: Change this to fit your server\nnode.default['dovecot']['conf']['hostname'] = 'mail.mycompany.org' # TODO: Change this to fit your server\nnode.default['dovecot']['conf']['lda_mailbox_autocreate'] = true\nnode.default['dovecot']['conf']['lda_mailbox_autosubscribe'] = true\n# We want sieve enabled\nnode.default['dovecot']['protocols']['lda']['mail_plugins'] = [ '$mail_plugins', 'sieve' ]\n\n# 20-imap.conf\n# We want IMAP enabled with the default configuration\nnode.default['dovecot']['protocols']['imap'] = {}\n\n# 90-sieve.conf\nnode.default['dovecot']['plugins']['sieve']['sieve'] = '~/.dovecot.sieve'\nnode.default['dovecot']['plugins']['sieve']['sieve_dir'] = '~/sieve'\nnode.default['dovecot']['plugins']['sieve']['sieve_global_path'] = \"#{node['dovecot']['conf_path']}/sieve/default.sieve\"\n\n# auth-sql.conf.ext\nnode.default['dovecot']['auth']['sql']['passdb']['args'] = '/etc/dovecot/dovecot-sql.conf.ext'\nnode.default['dovecot']['auth']['sql']['userdb']['args'] = '/etc/dovecot/dovecot-sql.conf.ext'\n\n# auth-static.conf.ext\nnode.default['dovecot']['auth']['static']['userdb']['args'] = [\n  'uid=vmail',\n  'gid=vmail',\n  'home=/var/vmail/%d/%n',\n  'allow_all_users=yes',\n]\n\n# auth-system.conf.ext\nnode.default['dovecot']['auth']['system'] = {}\n\n# dovecot-sql.conf.ext\n# We want to enable MySQL driver\nnode.default['dovecot']['conf']['sql']['driver'] = 'mysql'\nnode.default['dovecot']['conf']['sql']['connect'] = [\n  'host=localhost',\n  'dbname=postfix',\n  'user=postfix',\n  'password=postfix_pass', # TODO: change this, please\n]\n# md5crypt encryption method\nnode.default['dovecot']['conf']['sql']['default_pass_scheme'] = 'MD5-CRYPT'\nnode.default['dovecot']['conf']['sql']['password_query'] = [\n  'SELECT username AS user, password',\n  'FROM mailbox',\n  \"WHERE username = '%u' AND active = '1'\",\n]\nnode.default['dovecot']['conf']['sql']['user_query'] = [\n  'SELECT',\n    'username AS user,',\n    'password,',\n    '5000 as uid,',\n    '5000 as gid,',\n    \"concat('/var/vmail/', maildir) AS home,\",\n    \"concat('maildir:/var/vmail/', maildir) AS mail\",\n  'FROM mailbox',\n  \"WHERE username = '%u' AND active = '1'\",\n]\n\nnode.default['dovecot']['conf']['sql']['iterate_query'] = [\n  'SELECT username AS user',\n  \"FROM mailbox WHERE active = '1'\",\n]\n\ninclude_recipe 'dovecot'\n\n# Compile sieve scripts\n\n# this should go after installing dovecot, sievec is required\nexecute 'sievec sieve_global_path' do\n  command \"sievec '#{node['dovecot']['conf_path']}/sieve/default.sieve'\"\n  action :nothing\nend\ndirectory ::File.dirname(\"#{node['dovecot']['conf_path']}/sieve/default.sieve\") do\n  owner 'root'\n  group 'root'\n  mode '00755'\n  recursive true\n  not_if do ::File.exists?(::File.dirname(\"#{node['dovecot']['conf_path']}/sieve/default.sieve\")) end\nend\n# This will be the default sieve script:\ntemplate node['dovecot']['plugins']['sieve']['sieve_global_path'] do\n  source 'default.sieve.erb'\n  owner 'root'\n  group 'root'\n  mode '00644'\n  notifies :run, 'execute[sievec sieve_global_path]'\nend\n```\n\nIf you want a more complete example, you can look at the [postfix-dovecot](https://github.com/onddo/postfix-dovecot-cookbook) recipe.\n\nTesting\n=======\n\n## Requirements\n\n* `vagrant`\n* `berkshelf` >= `2.0`\n* `test-kitchen` >= `1.2`\n* `kitchen-vagrant` >= `0.10`\n\n## Running the tests\n\n```bash\n$ kitchen test\n$ kitchen verify\n[...]\n```\n\n### Running the tests in the cloud\n\n#### Requirements:\n\n* `kitchen-vagrant` >= `0.10`\n* `kitchen-digitalocean` >= `0.5`\n* `kitchen-ec2` >= `0.8`\n\nYou can run the tests in the cloud instead of using vagrant. First, you must set the following environment variables:\n\n* `AWS_ACCESS_KEY_ID`\n* `AWS_SECRET_ACCESS_KEY`\n* `AWS_KEYPAIR_NAME`: EC2 SSH public key name. This is the name used in Amazon EC2 Console's Key Pars section.\n* `EC2_SSH_KEY_PATH`: EC2 SSH private key local full path. Only when you are not using an SSH Agent.\n* `DIGITAL_OCEAN_CLIENT_ID`\n* `DIGITAL_OCEAN_API_KEY`\n* `DIGITAL_OCEAN_SSH_KEY_IDS`: DigitalOcean SSH numeric key IDs.\n* `DIGITAL_OCEAN_SSH_KEY_PATH`: DigitalOcean SSH private key local full path. Only when you are not using an SSH Agent.\n\nThen, you must configure test-kitchen to use `.kitchen.cloud.yml` configuration file:\n\n```\n$ export KITCHEN_LOCAL_YAML=\".kitchen.cloud.yml\"\n$ kitchen list\n[...]\n```\n\nContributing\n============\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write you change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Author\n=====================\n\n|                      |                                          |\n|:---------------------|:-----------------------------------------|\n| **Author:**          | [Xabier de Zuazo](https://github.com/zuazo) (<xabier@onddo.com>)\n| **Contributor:**     | [Andreas Lappe](https://github.com/alappe)\n| **Contributor:**     | [Trond Arve Nordheim](https://github.com/tanordheim)\n| **Contributor:**     | [Johan Svensson](https://github.com/loxley)\n| **Contributor:**     | [Arnold Krille](https://github.com/kampfschlaefer)\n| **Contributor:**     | [claudex](https://github.com/claudex)\n| **Contributor:**     | [Jordi Llonch](https://github.com/llonchj)\n| **Copyright:**       | Copyright (c) 2013-2014, Onddo Labs, SL. (www.onddo.com)\n| **License:**         | Apache License, Version 2.0\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n        http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n",
  "requires": [
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 6.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 7.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 18.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 12.04",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ohai",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "dovecot::default": "Installs and configures Dovecot.",
    "dovecot::user": "Creates the dovecot system user.",
    "dovecot::conf_files": "Generates all the configuration files.",
    "dovecot::ohai_plugin": "Provides an Ohai plugin for reading dovecot install information.",
    "dovecot::packages": "This recipe will be deprecated in future versions.",
    "dovecot::from_package": "Installs the required packages.",
    "dovecot::service": "Configures the Dovecot service."
  },
  "parameters": {
    "dovecot/install_from": {
      "display_name": "dovecot install method",
      "description": "Determines how Dovecot is installed from. Only `package` is supported for now.",
      "type": "string",
      "required": "optional",
      "default": "\"package\"",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/user": {
      "display_name": "dovecot user",
      "description": "Dovecot system user. Should no be changed.",
      "type": "string",
      "required": "optional",
      "default": "\"dovecot\"",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/group": {
      "display_name": "dovecot group",
      "description": "Dovecot system group. Should no be changed.",
      "type": "string",
      "required": "optional",
      "default": "\"dovecot\"",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/lib_path": {
      "display_name": "dovecot library path",
      "description": "Dovecot library path. Should no be changed.",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf_path": {
      "display_name": "dovecot configuration path",
      "description": "Dovecot configruration files path. Should no be changed.",
      "type": "string",
      "required": "optional",
      "default": "\"/etc/dovecot\"",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf_files_user": {
      "display_name": "dovecot configuration files user",
      "description": "System user owner of configuration files.",
      "type": "string",
      "required": "optional",
      "default": "\"root\"",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf_files_group": {
      "display_name": "dovecot configuration files group",
      "description": "System group owner of configuration files.",
      "type": "string",
      "required": "optional",
      "default": "node[\"dovecot\"][\"group\"]",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf_files_mode": {
      "display_name": "dovecot configuration files mode",
      "description": "Configuration files system file mode bits.",
      "type": "string",
      "required": "optional",
      "default": "00644",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/sensitive_files": {
      "display_name": "dovecot sensitve files",
      "description": "An array of dovecot sensitive configuration files. Each array item can be a glob expression or a fixed file name. This file names should be relative to node[\"dovecot\"][\"conf_path\"] directory. Example: [ \"dovecot-sql.conf.ext\", \"*-auth.conf.ext\", \"conf.d/auth-supersecret.conf.ext\" ]",
      "type": "array",
      "required": "optional",
      "default": [
        "*.conf.ext"
      ],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/sensitive_files_mode": {
      "display_name": "dovecot sensitve files mode",
      "description": "Configuration files system file mode bits for sensitve files.",
      "type": "string",
      "required": "optional",
      "default": "00640",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf_files/core": {
      "display_name": "dovecot core configuration files",
      "description": "Dovecot core configuration files list.",
      "type": "array",
      "required": "optional",
      "default": [
        "conf.d/10-auth.conf",
        "conf.d/10-director.conf",
        "conf.d/10-logging.conf",
        "conf.d/10-mail.conf",
        "conf.d/10-master.conf",
        "conf.d/10-ssl.conf",
        "conf.d/10-tcpwrapper.conf",
        "conf.d/15-lda.conf",
        "conf.d/15-mailboxes.conf",
        "conf.d/90-acl.conf",
        "conf.d/90-plugin.conf",
        "conf.d/90-quota.conf",
        "conf.d/auth-checkpassword.conf.ext",
        "conf.d/auth-deny.conf.ext",
        "conf.d/auth-master.conf.ext",
        "conf.d/auth-passwdfile.conf.ext",
        "conf.d/auth-sql.conf.ext",
        "conf.d/auth-static.conf.ext",
        "conf.d/auth-system.conf.ext",
        "conf.d/auth-vpopmail.conf.ext",
        "dovecot.conf",
        "dovecot-db.conf.ext",
        "dovecot-dict-sql.conf.ext",
        "dovecot-sql.conf.ext"
      ],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf_files/imap": {
      "display_name": "dovecot imap configuration files",
      "description": "Dovecot IMAP configuration files list.",
      "type": "array",
      "required": "optional",
      "default": [
        "conf.d/20-imap.conf"
      ],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf_files/pop3": {
      "display_name": "dovecot pop3 configuration files",
      "description": "Dovecot POP3 configuration files list.",
      "type": "array",
      "required": "optional",
      "default": [
        "conf.d/20-pop3.conf"
      ],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf_files/lmtp": {
      "display_name": "dovecot lmtp configuration files",
      "description": "Dovecot LMTP configuration files list.",
      "type": "array",
      "required": "optional",
      "default": [
        "conf.d/20-lmtp.conf"
      ],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf_files/sieve": {
      "display_name": "dovecot sieve configuration files",
      "description": "Dovecot Sieve configuration files list.",
      "type": "array",
      "required": "optional",
      "default": [
        "conf.d/20-managesieve.conf",
        "conf.d/90-sieve.conf"
      ],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf_files/ldap": {
      "display_name": "dovecot ldap configuration files",
      "description": "Dovecot LDAP configuration files list.",
      "type": "array",
      "required": "optional",
      "default": [
        "dovecot-ldap.conf.ext",
        "conf.d/auth-ldap.conf.ext"
      ],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/auth": {
      "display_name": "dovecot auth",
      "description": "Dovecot Authentication Databases as a hash of hashes. Supported authdbs: checkpassword, deny, ldap, master, passwdfile, sql, system and vpopmail.",
      "type": "string",
      "required": "optional",
      "default": "{}",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/namespaces": {
      "display_name": "dovecot namespaces",
      "description": "Dovecot Namespaces as an array of hashes.",
      "type": "array",
      "required": "optional",
      "default": [],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/plugins": {
      "display_name": "dovecot plugins",
      "description": "Dovecot Plugins configuration as a hash of hashes. Supported plugins: mail_log, acl and quota.",
      "type": "string",
      "required": "optional",
      "default": "{\n    \"sieve\" => {\n      \"sieve\" => \"~/.dovecot.sieve\",\n      \"sieve_dir\" => \"~/sieve\",\n    }\n  }",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/protocols": {
      "display_name": "dovecot protocols",
      "description": "Dovecot Protocols configuration as a hash of hashes. Supported protocols: lda, imap, lmtp, sieve and pop3.",
      "type": "string",
      "required": "optional",
      "default": "{}",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/services": {
      "display_name": "dovecot services",
      "description": "Dovecot Services configuration as a hash of hashes. Supported services: anvil, director, imap-login, pop3-login, lmtp, imap, pop3, auth, auth-worker, dict, tcpwrap, managesieve-login and managesieve.",
      "type": "string",
      "required": "optional",
      "default": "{}",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_plugins": {
      "display_name": "dovecot mail plugins",
      "description": "Dovecot default enabled mail_plugins.",
      "type": "array",
      "required": "optional",
      "default": [],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/packages/core": {
      "display_name": "dovecot core packages",
      "description": "Dovecot core package names array.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/packages/imap": {
      "display_name": "dovecot imap packages",
      "description": "Dovecot IMAP package names array.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/packages/pop3": {
      "display_name": "dovecot pop3 packages",
      "description": "Dovecot POP3 package names array.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/packages/lmtp": {
      "display_name": "dovecot lmtp packages",
      "description": "Dovecot LMTP package names array.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/packages/sieve": {
      "display_name": "dovecot sieve packages",
      "description": "Dovecot Sieve package names array.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/packages/ldap": {
      "display_name": "dovecot ldap packages",
      "description": "Dovecot LDAP package names array.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/packages/sqlite": {
      "display_name": "dovecot sqlite packages",
      "description": "Dovecot SQLite package names array.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/packages/mysql": {
      "display_name": "dovecot mysql packages",
      "description": "Dovecot MySQL package names array.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/packages/pgsql": {
      "display_name": "dovecot pgsql packages",
      "description": "Dovecot PostgreSQL package names array.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/ohai_plugin/build-options": {
      "display_name": "dovecot ohai plugin build options",
      "description": "Whether to enable reading build options inside ohai plugin. Can be disabled to be lighter.",
      "type": "string",
      "required": "optional",
      "choice": [
        "true",
        "false"
      ],
      "default": "true",
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/listen": {
      "display_name": "listen",
      "description": "A comma separated list of IPs or hosts where to listen in for connections.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/base_dir": {
      "display_name": "dovecot base dir",
      "description": "Base directory where to store runtime data.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/instance_name": {
      "display_name": "instance name",
      "description": "Name of this instance. Used to prefix all Dovecot processes in ps output.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/login_greeting": {
      "display_name": "login greeting",
      "description": "Greeting message for clients.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/login_trusted_networks": {
      "display_name": "login trusted networks",
      "description": "Space separated list of trusted network ranges.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/login_access_sockets": {
      "display_name": "login access sockets",
      "description": "Space separated list of login access check sockets.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/verbose_proctitle": {
      "display_name": "verbose proctitle",
      "description": "Show more verbose process titles (in ps).",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/shutdown_clients": {
      "display_name": "shutdown clients",
      "description": "Should all processes be killed when Dovecot master process shuts down.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/doveadm_worker_count": {
      "display_name": "doveadm worker count",
      "description": "If non-zero, run mail commands via this many connections to doveadm server.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/doveadm_socket_path": {
      "display_name": "doveadm socket path",
      "description": "UNIX socket or host:port used for connecting to doveadm server.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/import_environment": {
      "display_name": "import environment",
      "description": "Space separated list of environment variables that are preserved on Dovecot startup and his childs.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/dict": {
      "display_name": "dict",
      "description": "Dictionary server settings as a hash.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/disable_plaintext_auth": {
      "display_name": "disable plaintext auth",
      "description": "Disable LOGIN command and all other plaintext authentications unless SSL/TLS is used.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_cache_size": {
      "display_name": "auth cache size",
      "description": "Authentication cache size (e.g. 10M). 0 means it's disabled.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_cache_ttl": {
      "display_name": "auth cache ttl",
      "description": "Time to live for cached data.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_cache_negative_ttl": {
      "display_name": "auth cache negative ttl",
      "description": "TTL for negative hits (user not found, password mismatch).",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_realms": {
      "display_name": "disable plaintext auth",
      "description": "Space separated list (or array) of realms for SASL authentication mechanisms that need them.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_default_realm": {
      "display_name": "auth default realm",
      "description": "Default realm/domain to use if none was specified.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_username_chars": {
      "display_name": "auth username chars",
      "description": "List of allowed characters in username.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_username_translation": {
      "display_name": "auth username translation",
      "description": "Username character translations before it's looked up from databases.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_username_format": {
      "display_name": "auth username format",
      "description": "Username formatting before it's looked up from databases.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_master_user_separator": {
      "display_name": "auth master user separator",
      "description": "If you want to allow master users to log in by specifying the master username within the normal username string, you can specify the separator character here (format: <username><separator><master username>).",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_anonymous_username": {
      "display_name": "auth anonymous username",
      "description": "Username to use for users logging in with ANONYMOUS SASL mechanism.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_worker_max_count": {
      "display_name": "auth worker max count",
      "description": "Maximum number of dovecot-auth worker processes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_gssapi_hostname": {
      "display_name": "auth gssapi hostname",
      "description": "Host name to use in GSSAPI principal names.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_krb5_keytab": {
      "display_name": "auth krb5 keytab",
      "description": "Kerberos keytab to use for the GSSAPI mechanism.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_use_winbind": {
      "display_name": "auth use winbind",
      "description": "Do NTLM and GSS-SPNEGO authentication using Samba's winbind daemon and ntlm_auth helper.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_winbind_helper_path": {
      "display_name": "auth winbind helper path",
      "description": "Path for Samba's ntlm_auth helper binary.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_failure_delay": {
      "display_name": "auth failure delay",
      "description": "Time to delay before replying to failed authentications.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_ssl_require_client_cert": {
      "display_name": "auth ssl require client cert",
      "description": "Take the username from client's SSL certificate, using X509_NAME_get_text_by_NID() which returns the subject's DN's CommonName.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_mechanisms": {
      "display_name": "auth mechanisms",
      "description": "Space separated list of wanted authentication mechanisms: plain, login, digest-md5, cram-md5, ntlm, rpa, apop, anonymous, gssapi, otp, skey, gss-spnego",
      "type": "string",
      "required": "optional",
      "default": "\"plain\"",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/director_servers": {
      "display_name": "director servers",
      "description": "List of IPs or hostnames to all director servers, including ourself (as a string or as an array).",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/director_mail_servers": {
      "display_name": "director mail servers",
      "description": "List of IPs or hostnames to all backend mail servers.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/director_user_expire": {
      "display_name": "director_user_expire",
      "description": "How long to redirect users to a specific server after it no longer has any connections.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/director_doveadm_port": {
      "display_name": "director doveadm port",
      "description": "TCP/IP port that accepts doveadm connections (instead of director connections).",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/log_path": {
      "display_name": "path",
      "description": "Log file to use for error messages. \"syslog\" logs to syslog, /dev/stderr logs to stderr.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/info_log_path": {
      "display_name": "info log path",
      "description": "Log file to use for informational messages. Defaults to log_path.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/debug_log_path": {
      "display_name": "debug log path",
      "description": "Log file to use for debug messages. Defaults to info_log_path.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/syslog_facility": {
      "display_name": "syslog facility",
      "description": "Syslog facility to use if you're logging to syslog.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_verbose": {
      "display_name": "auth verbose",
      "description": "Log unsuccessful authentication attempts and the reasons why they failed.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_verbose_passwords": {
      "display_name": "auth verbose passwords",
      "description": "In case of password mismatches, log the attempted password.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_debug": {
      "display_name": "auth debug",
      "description": "Even more verbose logging for debugging purposes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_debug_passwords": {
      "display_name": "auth debug passwords",
      "description": "In case of password mismatches, log the passwords and used scheme so the problem can be debugged.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_debug": {
      "display_name": "mail debug",
      "description": "Enable mail process debugging.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/verbose_ssl": {
      "display_name": "verbose ssl",
      "description": "Show protocol level SSL errors.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/log_timestamp": {
      "display_name": "log timestamp",
      "description": "Prefix for each line written to log file.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/login_log_format_elements": {
      "display_name": "login log format elements",
      "description": "Space-separated list (or array) of elements we want to log.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/login_log_format": {
      "display_name": "login log format",
      "description": "Login log format.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_log_prefix": {
      "display_name": "mail log prefix",
      "description": "Log prefix for mail processes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/deliver_log_format": {
      "display_name": "deliver log format",
      "description": "Format to use for logging mail deliveries.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_location": {
      "display_name": "mail location",
      "description": "Location for user's mailboxes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_uid": {
      "display_name": "mail uid",
      "description": "System user used to access mails.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_gid": {
      "display_name": "mail gid",
      "description": "System group used to access mails.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_privileged_group": {
      "display_name": "mail privileged group",
      "description": "Group to enable temporarily for privileged operations.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_access_groups": {
      "display_name": "mail access groups",
      "description": "Grant access to these supplementary groups for mail processes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_full_filesystem_access": {
      "display_name": "mail full filesystem access",
      "description": "Allow full filesystem access to clients.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mmap_disable": {
      "display_name": "mmap disable",
      "description": "Don't use mmap() at all.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/dotlock_use_excl": {
      "display_name": "dotlock use excl",
      "description": "Rely on O_EXCL to work when creating dotlock files.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_fsync": {
      "display_name": "mail fsync",
      "description": "When to use fsync() or fdatasync() calls: optimized, always or never",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_nfs_storage": {
      "display_name": "mail nfs storage",
      "description": "Mail storage exists in NFS.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_nfs_index": {
      "display_name": "mail nfs index",
      "description": "Mail index files also exist in NFS.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/lock_method": {
      "display_name": "lock method",
      "description": "Locking method for index files: fcntl, flock or dotlock.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_temp_dir": {
      "display_name": "mail temp dir",
      "description": "Directory in which LDA/LMTP temporarily stores incoming mails >128 kB.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/first_valid_uid": {
      "display_name": "first valid uid",
      "description": "Valid UID range for users, defaults to 500 and above.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/last_valid_uid": {
      "display_name": "last valid uid",
      "description": "Valid UID range for users, defaults to 500 and above.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/first_valid_gid": {
      "display_name": "first valid gid",
      "description": "Valid GID range for users, defaults to non-root/wheel.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/last_valid_gid": {
      "display_name": "last valid gid",
      "description": "Valid GID range for users, defaults to non-root/wheel.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_max_keyword_length": {
      "display_name": "mail max keyword length",
      "description": "Maximum allowed length for mail keyword name.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/valid_chroot_dirs": {
      "display_name": "valid chroot dirs",
      "description": "':' separated list of directories under which chrooting is allowed for mail processes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_chroot": {
      "display_name": "mail chroot",
      "description": "Default chroot directory for mail processes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/auth_socket_path": {
      "display_name": "auth socket path",
      "description": "UNIX socket path to master authentication server to find users.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_plugin_dir": {
      "display_name": "mail plugin dir",
      "description": "Directory where to look up mail plugins.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_cache_min_mail_count": {
      "display_name": "mail cache min mail count",
      "description": "The minimum number of mails in a mailbox before updates are done to cache file.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mailbox_idle_check_interval": {
      "display_name": "mailbox idle check interval",
      "description": "When IDLE command is running, mailbox is checked once in a while to see if there are any new mails or other changes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_save_crlf": {
      "display_name": "mail save crlf",
      "description": "Save mails with CR+LF instead of plain LF.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/maildir_stat_dirs": {
      "display_name": "maildir stat dirs",
      "description": "By default LIST command returns all entries in maildir beginning with a dot.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/maildir_copy_with_hardlinks": {
      "display_name": "maildir copy with hardlinks",
      "description": "When copying a message, do it with hard links whenever possible.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/maildir_very_dirty_syncs": {
      "display_name": "maildir very dirty syncs",
      "description": "Assume Dovecot is the only MUA accessing Maildir.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mbox_read_locks": {
      "display_name": "mbox read locks",
      "description": "Which read locking methods to use for locking mbox: dotlock, dotlock_try, fcntl, flock or lockfyy",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mbox_write_locks": {
      "display_name": "mbox write locks",
      "description": "Which write locking methods to use for locking mbox: dotlock, dotlock_try, fcntl, flock or lockfyy",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mbox_lock_timeout": {
      "display_name": "mbox lock timeout",
      "description": "Maximum time to wait for lock (all of them) before aborting.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mbox_dotlock_change_timeout": {
      "display_name": "mbox dotlock change timeout",
      "description": "If dotlock exists but the mailbox isn't modified in any way, override the lock file after this much time.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mbox_dirty_syncs": {
      "display_name": "mbox dirty syncs",
      "description": "When mbox changes unexpectedly simply read the new mails but still safely fallbacks to re-reading the whole mbox file whenever something in mbox isn't how it's expected to be.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mbox_very_dirty_syncs": {
      "display_name": "mbox very dirty syncs",
      "description": "Like mbox_dirty_syncs, but don't do full syncs even with SELECT, EXAMINE, EXPUNGE or CHECK commands.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mbox_lazy_writes": {
      "display_name": "mbox lazy writes",
      "description": "Delay writing mbox headers until doing a full write sync (EXPUNGE and CHECK commands and when closing the mailbox).",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mbox_min_index_size": {
      "display_name": "mbox min index size",
      "description": "If mbox size is smaller than this (e.g. 100k), don't write index files.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mdbox_rotate_size": {
      "display_name": "mdbox rotate size",
      "description": "Maximum dbox file size until it's rotated.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mdbox_rotate_interval": {
      "display_name": "mdbox rotate interval",
      "description": "Maximum dbox file age until it's rotated.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mdbox_preallocate_space": {
      "display_name": "mdbox preallocate space",
      "description": "When creating new mdbox files, immediately preallocate their size to mdbox_rotate_size.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_attachment_min_size": {
      "display_name": "mail attachment min size",
      "description": "Attachments smaller than this aren't saved externally.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_attachment_fs": {
      "display_name": "mail attachment fs",
      "description": "Filesystem backend to use for saving attachments: posix, sis posix or sis-queue posix.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/mail_attachment_hash": {
      "display_name": "mail attachment hash",
      "description": "Hash format to use in attachment filenames.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/default_process_limit": {
      "display_name": "default process limit",
      "description": "Default process limit.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/default_client_limit": {
      "display_name": "default client limit",
      "description": "Default client limit.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/default_vsz_limit": {
      "display_name": "default vsz limit",
      "description": "Default VSZ (virtual memory size) limit for service processes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/default_login_user": {
      "display_name": "default login user",
      "description": "Login user is internally used by login processes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/default_internal_user": {
      "display_name": "default internal user",
      "description": "Internal user is used by unprivileged processes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ssl": {
      "display_name": "ssl",
      "description": "SSL/TLS support: true or false",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ssl_cert": {
      "display_name": "ssl cert",
      "description": "PEM encoded X.509 SSL/TLS certificate.",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ssl_key": {
      "display_name": "ssl key",
      "description": "PEM encoded X.509 SSL/TLS private key.",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ssl_key_password": {
      "display_name": "ssl key password",
      "description": "If key file is password protected, give the password here.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ssl_ca": {
      "display_name": "ssl ca",
      "description": "PEM encoded trusted certificate authority.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ssl_verify_client_cert": {
      "display_name": "ssl verify client cert",
      "description": "Request client to send a certificate.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ssl_cert_username_field": {
      "display_name": "ssl cert username field",
      "description": "Which field from certificate to use for username.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ssl_parameters_regenerate": {
      "display_name": "ssl parameters regenerate",
      "description": "How often to regenerate the SSL parameters file.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ssl_cipher_list": {
      "display_name": "ssl cipher list",
      "description": "SSL ciphers to use",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/postmaster_address": {
      "display_name": "postmaster address",
      "description": "Address to use when sending rejection mails.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/hostname": {
      "display_name": "hostname",
      "description": "Hostname to use in various parts of sent mails, eg. in Message-Id.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/quota_full_tempfail": {
      "display_name": "quota full tempfail",
      "description": "If user is over quota, return with temporary failure instead of bouncing the mail.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/sendmail_path": {
      "display_name": "sendmail path",
      "description": "Binary to use for sending mails.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/submission_host": {
      "display_name": "submission host",
      "description": "If non-empty, send mails via this SMTP host[:port] instead of sendmail.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/rejection_subject": {
      "display_name": "rejection subject",
      "description": "Subject: header to use for rejection mails.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/rejection_reason": {
      "display_name": "rejection reason",
      "description": "Human readable error message for rejection mails.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/recipient_delimiter": {
      "display_name": "recipient delimiter",
      "description": "Delimiter character between local-part and detail in email address.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/lda_original_recipient_header": {
      "display_name": "lda original recipient header",
      "description": "Header where the original recipient address (SMTP's RCPT TO: address) is taken from if not available elsewhere.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/lda_mailbox_autocreate": {
      "display_name": "lda mailbox autocreate",
      "description": "Should saving a mail to a nonexistent mailbox automatically create it?",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/lda_mailbox_autosubscribe": {
      "display_name": "lda mailbox autosubscribe",
      "description": "Should automatically created mailboxes be also automatically subscribed?",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/lmtp_proxy": {
      "display_name": "lmtp proxy",
      "description": "Support proxying to other LMTP/SMTP servers by performing passdb lookups.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/lmtp_save_to_detail_mailbox": {
      "display_name": "lmtp save to detail mailbox",
      "description": "When recipient address includes the detail (e.g. user+detail), try to save the mail to the detail mailbox.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/db": {
      "display_name": "berkeley db",
      "description": "DB_CONFIG for Berkeley DB as a hash.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/dict_sql/connect": {
      "display_name": "dict sql connect",
      "description": "Dict sql connect configuration as a string or an array.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/dict_sql/maps": {
      "display_name": "dict sql maps",
      "description": "Dict sql database tables maps.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/hosts": {
      "display_name": "ldap hosts",
      "description": "Space separated list or array of LDAP hosts to use.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/uris": {
      "display_name": "ldap uris",
      "description": "LDAP URIs to use.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/dn": {
      "display_name": "ldap dn",
      "description": "Distinguished Name, the username used to login to the LDAP server.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/dnpass": {
      "display_name": "ldap dnpass",
      "description": "Password for LDAP server, if dn is specified.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/sasl_bind": {
      "display_name": "ldap sasl bind",
      "description": "Use SASL binding instead of the simple binding.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/sasl_mech": {
      "display_name": "ldap sasl mech",
      "description": "SASL mechanism name to use.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/sasl_realm": {
      "display_name": "ldap sasl realm",
      "description": "SASL realm to use.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/sasl_authz_id": {
      "display_name": "ldap sasl authz id",
      "description": "SASL authorization ID, ie. the dnpass is for this \"master user\", but the dn is still the logged in user.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/tls": {
      "display_name": "ldap tls",
      "description": "Use TLS to connect to the LDAP server.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/tls_ca_cert_file": {
      "display_name": "ldap tls ca cert file",
      "description": "TLS options, currently supported only with OpenLDAP.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/tls_ca_cert_dir": {
      "display_name": "ldap tls ca cert dir",
      "description": "TLS options, currently supported only with OpenLDAP.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/tls_cipher_suite": {
      "display_name": "ldap tls cipher suite",
      "description": "TLS options, currently supported only with OpenLDAP.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/tls_cert_file": {
      "display_name": "ldap tls cert file",
      "description": "TLS cert/key is used only if LDAP server requires a client certificate.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/tls_key_file": {
      "display_name": "ldap tls key file",
      "description": "TLS cert/key is used only if LDAP server requires a client certificate.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/tls_require_cert": {
      "display_name": "ldap tls require cert",
      "description": "Valid values: never, hard, demand, allow, try",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/ldaprc_path": {
      "display_name": "ldap ldaprc path",
      "description": "Use the given ldaprc path.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/debug_level": {
      "display_name": "ldap debug level",
      "description": "LDAP library debug level as specified by LDAP_DEBUG_* in ldap_log.h.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/auth_bind": {
      "display_name": "ldap auth bind",
      "description": "Use authentication binding for verifying password's validity.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/auth_bind_userdn": {
      "display_name": "ldap auth bind userdn",
      "description": "If authentication binding is used, you can save one LDAP request per login if user's DN can be specified with a common template.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/ldap_version": {
      "display_name": "ldap ldap version",
      "description": "LDAP protocol version to use. Likely 2 or 3.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/base": {
      "display_name": "ldap base",
      "description": "LDAP base. %variables can be used here.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/deref": {
      "display_name": "ldap deref",
      "description": "Dereference: never, searching, finding or always.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/scope": {
      "display_name": "ldap scope",
      "description": "Search scope: base, onelevel or subtree.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/user_attrs": {
      "display_name": "ldap user attrs",
      "description": "User attributes are given in LDAP-name=dovecot-internal-name list.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/user_filter": {
      "display_name": "ldap user filter",
      "description": "Filter for user lookup.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/pass_attrs": {
      "display_name": "ldap pass attrs",
      "description": "Password checking attributes.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/pass_filter": {
      "display_name": "ldap pass filter",
      "description": "Filter for password lookups.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/iterate_attrs": {
      "display_name": "ldap iterate attrs",
      "description": "Attributes to get a list of all users",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/iterate_filter": {
      "display_name": "ldap iterate filter",
      "description": "Filter to get a list of all users",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/ldap/default_pass_scheme": {
      "display_name": "ldap default pass scheme",
      "description": "Default password scheme. \"{scheme}\" before password overrides this.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/sql/driver": {
      "display_name": "sql driver",
      "description": "Database driver: mysql, pgsql or sqlite.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/sql/connect": {
      "display_name": "sql connect",
      "description": "Database connection string or array. This is driver-specific setting.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/sql/default_pass_scheme": {
      "display_name": "sql default pass scheme",
      "description": "Default password scheme.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/sql/password_query": {
      "display_name": "sql password query",
      "description": "passdb query to retrieve the password.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/sql/user_query": {
      "display_name": "sql user query",
      "description": "userdb query to retrieve the user information.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "dovecot/conf/sql/iterate_query": {
      "display_name": "sql iterate query",
      "description": "Query to get a list of all usernames.",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    }
  }
}