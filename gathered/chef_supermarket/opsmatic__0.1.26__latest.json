{
  "name": "opsmatic Chef cookbook",
  "chef_cookbook_name": "opsmatic",
  "revision": "0.1.26",
  "uris": [
    "https://supermarket.chef.io/cookbooks/opsmatic",
    "https://supermarket.chef.io/cookbooks/opsmatic/download",
    "https://supermarket.chef.io/cookbooks/opsmatic/versions/0.1.26",
    "https://supermarket.chef.io/cookbooks/opsmatic/versions/0.1.26/download",
    "https://supermarket.chef.io/api/v1/cookbooks/opsmatic/versions/0.1.26",
    "https://supermarket.chef.io/api/v1/cookbooks/opsmatic",
    "https://supermarket.chef.io/api/v1/cookbooks/opsmatic/versions/0.1.26/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Integration"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/opsmatic",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/opsmatic/versions/0.1.26/download",
  "deprecated": false,
  "created": "2015-06-09T18:52:01.454Z",
  "updated": "2015-06-12T20:51:50.713Z",
  "description": "Installs/Configures Opsmatic services and integrations",
  "maintainer": {
    "name": "mihasya",
    "email": "support@opsmatic.com"
  },
  "license": "All rights reserved",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 312185,
  "downloads_count_revision": 101230,
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "[![Build Status](https://travis-ci.org/opsmatic/opsmatic-cookbook.svg?branch=master)](https://travis-ci.org/opsmatic/opsmatic-cookbook)\n\nopsmatic Cookbook\n======================\nThis cookbook contains various recipes to help you with integrating your infrastructure with Opsmatic. The recipes\ncontained in this cookbook are as follows:\n\n#### opsmatic::handler\n\nThis recipe configures a report and exception handler that sends detail on successful and failed runs to Opsmatic\n\n#### opsmatic::agent\n\nThis recipe configures the opsmatic collection agent\n\n#### opsmatic::file-integrity-monitoring\n\nThis recipe configures file monitoring for the agent\n\n\n\nRequirements\n------------\n#### opsmatic::handler\n\nThe Opsmatic report handler depends on the [chef_handler](https://github.com/opscode-cookbooks/chef_handler) cookbook\n\nAttributes\n----------\n\n* `node[:opsmatic][:integration_token]` - You must configure this attribute with your integration token. You can find your\nintegration token on the [Integrations](https://opsmatic.com/app/integrations) page in your Opsmatic account.\n\n#### opsmatic::handler\n\n* `node[:opsmatic][:ssl_peer_verify]` - Enables/Disable OpenSSL peer verification. Defaults to false (no peer verificaiton) until we can work out a consistent and reliable way to make this work for everyone.\n* `node[:opsmatic][:handler_version]` - Version of the chef-handler-opsmatic rubygem to use. We suggest you set this attribute somewhere globally in your environment, we'll notify you when upgrades are available\nand you can bump the version number.\n\n#### opsmatic::agent\n\n* `node[:opsmatic][:agent_action]` - determines whether chef should attept to\n`upgrade` the agent on every subsequent run\n* `node[:opsmatic][:handler_version]` - pins the agent to a specific version.\nDefault behavior is to install the latest available version the first time\naround and stay put after that.\n* `node[:opsmatic][:host_alias]` - specifies the host's alias in `/etc/opsmatic-agent.conf`\n* `node[:opsmatic][:groups]` - specifies the group that a host belongs to in `/etc/opsmatic-agent.conf`\n\nMore information regarding the latter two attributes can be located [here](https://opsmatic.com/app/docs/agent-configuration)\n\n#### opsmatic::file-integrity-monitoring\n\n* `node[:opsmatic][:file-monitor-list]` - takes an array of strings that contain file paths for [file integrity monitoring](https://opsmatic.com/app/docs/file-integrity-monitoring):\n`\"file-monitor-list\": ['/etc/nginx/nginx.conf','/etc/ssh/sshd_config','/etc/rsyslog.conf','/etc/hosts','/etc/passwd']`\n\n\nUsage\n-----\n#### opsmatic::handler && opsmatic::agent\n\nTo wire the handler into your infrastructure, add the `opsmatic::handler` recipe as the first item in the run list\nof your node or role (You will need to use the agent as well).\n\n```json\n    {\n        \"name\": \"my_node\",\n        \"run_list\": [\n           \"recipe[opsmatic::handler]\",\n           \"recipe[opsmatic::agent]\"\n        ]\n    }\n``` \n\nThe attributes will look something like this:\n\n```json\n    \"attributes\": {\n        \"opsmatic\": {\n            \"integration_token\": \"YOUR-INTEGRATION-TOKEN\",\n            \"file-monitor-list\": [\"/etc/nginx/nginx.conf\",\"/etc/ssh/sshd_config\",\"/etc/rsyslog.conf\",\"/etc/hosts\",\"/etc/passwd\"],\n            \"host_alias\": \"chefcookbookhostname\",\n            \"groups\": [\"groupone\", \"anothergroup\", \"yetanothergroup\"]\n        }\n    }\n```\n\nTo install just the agent remove the opsmatic::handler recipe.\n\nContributing\n------------\n1. Fork it ( https://github.com/opsmatic/opsmatic-cookbook/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef_handler",
      "revision": "<= 1.1.8",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}