{
  "name": "cvs_wrapper Chef cookbook",
  "chef_cookbook_name": "cvs_wrapper",
  "revision": "0.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/cvs_wrapper",
    "https://supermarket.chef.io/cookbooks/cvs_wrapper/download",
    "https://supermarket.chef.io/cookbooks/cvs_wrapper/versions/0.1.0",
    "https://supermarket.chef.io/cookbooks/cvs_wrapper/versions/0.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/cvs_wrapper/versions/0.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/cvs_wrapper",
    "https://supermarket.chef.io/api/v1/cookbooks/cvs_wrapper/versions/0.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/cvs_wrapper",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/cvs_wrapper/versions/0.1.0/download",
  "deprecated": false,
  "created": "2015-01-28T08:01:23.233Z",
  "updated": "2015-01-28T08:01:23.043Z",
  "description": "Installs/Configures cvs_wrapper",
  "maintainer": {
    "name": "tnarik",
    "email": "tnarik@lecafeautomatique.co.uk"
  },
  "license": "all_rights",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 444519,
  "downloads_count_revision": 444519,
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# cvs_wrapper\n\n[![Build Status](http://img.shields.io/travis/tnarik/chef-cvs_wrapper.svg)](https://travis-ci.org/tnarik/chef-cvs_wrapper)\n\n\n# Requirements\n\n\n# Usage\n\nThis cookbook allows different setups. In static mode (`node[:cvs_wrapper][:style] = \"static\"`) it will determine the connectivity to the different CVS repositories and configure the SSH tunnels accordingly.\n\nIn automatic mode (`node[:cvs_wrapper][:style] = \"auto\"`) it will perform the connectivity check at runtime. This requires sudo access for the user so that it can modify the `/etc/hosts` file during runtime.\n\n`node[:cvs_wrapper][:sudo]` controls that (the default is `true`). Otherwise, the modification of `/etc/hosts` is up to the user.\n\nIdeally the cookbook should allow for other solutions, but that is covering my use cases.\n\n\nWhat this cookbook does is:\n\n1. Install CVS\n2. Provide a wrapper to CVS for different directories\n\n# Attributes\n\n# Recipes\n\n\n# Development\nDuring the development of this cookbook, the main tool used is [chefdk](https://downloads.chef.io/chef-dk/), which code is available [here](https://github.com/chef/chef-dk/).\n\nThere are some additional gems that are documented in the project `Gemfile`. This also allows development in older environments (in general I take my code with me in a USB stick) like MacOSX 10.7, where [chefdk](https://downloads.chef.io/chef-dk/) is not supported, but the gem version of the tools can be used.\n\nTo allow seemless integration of gems, I am using the following approach:\n\n- use [direnv](https://github.com/zimbatm/direnv) and a `.envrc` file to ensure the `chefdk` ruby environment is used when switching to the project folder.\n\n   ```\n   use_chefdk() {\n     eval \"$(chef shell-init zsh)\"\n   }\n   use chefdk\n   ```\n   Just use your preferred shell instead of `zsh`.\n- use the first folder from `gem env gempath` (which should be a user folder) as destination for the bundle install\n- `bundle install --path $(gem env gempath | cut -f1 -d\\: | sed -e 's/\\/ruby\\/2.1.0//g')`\n- as a note, the `vendor/bundle` could also be used, but my goal is integrating with the chefdk installation (via bundler).\n\nThis adds some gem duplication right now, but I hope everything is ok (work in progress).\n\n# Author\n\nAuthor:: Tnarik Innael (tnarik@lecafeautomatique.co.uk)",
  "requires": [
    {
      "kind": "host",
      "label": "solaris2",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/pkgutil",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}