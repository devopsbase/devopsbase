{
  "name": "riak Chef cookbook",
  "chef_cookbook_name": "riak",
  "revision": "0.12.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/riak",
    "https://supermarket.chef.io/cookbooks/riak/download",
    "https://supermarket.chef.io/cookbooks/riak/versions/0.12.1",
    "https://supermarket.chef.io/cookbooks/riak/versions/0.12.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/riak/versions/0.12.1",
    "https://supermarket.chef.io/api/v1/cookbooks/riak",
    "https://supermarket.chef.io/api/v1/cookbooks/riak/versions/0.12.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Data Store/Key-Value/Riak"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/riak",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/riak/versions/0.12.1/download",
  "deprecated": false,
  "created": "2010-05-06T06:05:39.000Z",
  "updated": "2015-07-25T09:22:27.475Z",
  "description": "Installs and configures Riak distributed data store",
  "maintainer": {
    "name": "cheeseplus",
    "email": "riak@basho.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 38,
  "downloads_count": 52566722,
  "downloads_count_revision": 1260908,
  "repository_url": "https://github.com/basho-labs/riak-chef-cookbook",
  "issues_url": "https://github.com/basho-labs/riak-chef-cookbook/issues",
  "chef_source_url": "https://github.com/basho-labs/riak-chef-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": [],
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": [],
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/erlang",
      "revision": [],
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/iptables",
      "revision": [],
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "riak": "Installs Riak",
    "riak::autoconf": "Automatically configure nodes from chef-server information.",
    "riak::innostore": "Install and configure the Innostore backend.",
    "riak::iptables": "Automatically configure iptables rules for Riak."
  },
  "parameters": {
    "riak": {
      "display_name": "Riak",
      "description": "Riak is a Dynamo-inspired key/value store",
      "type": "hash",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/package": {
      "type": "hash",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/package/type": {
      "display_name": "Package type",
      "description": "Package type for installation (source or binary)",
      "default": "binary",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/package/version/major": {
      "display_name": "Riak major version",
      "description": "Major version of Riak to install.",
      "default": "0",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/package/version/minor": {
      "display_name": "Riak minor version",
      "description": "Minor version of Riak to install.",
      "default": "12",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/package/version/incremental": {
      "display_name": "Riak incremental version",
      "description": "Incremental release of Riak to install.",
      "default": "0",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/package/version/build": {
      "display_name": "Riak binary package build version",
      "description": "For binary packages, the specific build to use.",
      "default": "1",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/package/prefix": {
      "display_name": "Installation prefix",
      "description": "Installation prefix for source installs",
      "default": "/usr/local",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/limit_port_range": {
      "display_name": "Limit port range",
      "description": "Boolean indicating whether to limit the range of ports used for Erlang node communication.",
      "default": "true",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/package/kernel/inet_dist_listen_min": {
      "display_name": "Minimum port for Erlang node communication",
      "default": "6000",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/package/kernel/inet_dist_listen_max": {
      "display_name": "Maximum port for Erlang node communication",
      "default": "7999",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/erlang": {
      "display_name": "Erlang configuration",
      "type": "hash",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/erlang/node_name": {
      "display_name": "Erlang node name",
      "description": "The name of the Erlang node",
      "default": "riak@127.0.0.1",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/erlang/cookie": {
      "display_name": "Erlang cookie",
      "description": "The cookie of the Erlang node",
      "default": "riak",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/erlang/heart": {
      "display_name": "Enable heart node monitoring",
      "default": "false",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/erlang/kernel_polling": {
      "display_name": "Enable kernel polling",
      "default": "true",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/erlang/async_threads": {
      "display_name": "Async thread pool size",
      "description": "Number of threads in the async thread pool",
      "default": "5",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/erlang/env_vars": {
      "display_name": "Additional Erlang environment variables",
      "default": "[\"ERL_MAX_PORTS 4096\", \"ERL_FULLSWEEP_AFTER 10\"]",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/core": {
      "display_name": "Riak core",
      "description": "Riak core system configuration",
      "type": "hash",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/core/cluster_name": {
      "display_name": "Riak cluster name",
      "default": "default",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/core/default_bucket_props": {
      "display_name": "Default bucket properties",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/core/gossip_interval": {
      "display_name": "Gossip interval",
      "description": "Gossip interval in milliseconds",
      "default": "60000",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/core/target_n_val": {
      "display_name": "Target N",
      "default": "3",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/core/ring_state_dir": {
      "display_name": "Ring state directory",
      "description": "The directory on-disk in which to store the ring state (default: data/ring)",
      "default": "/var/lib/riak/ring",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/core/ring_creation_size": {
      "display_name": "Ring creation size",
      "description": "The number of partitions into which to divide the hash space (default: 64)",
      "default": "64",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/core/web_ip": {
      "display_name": "HTTP address",
      "description": "The IP address on which Riak's HTTP interface should listen (default: 127.0.0.1)",
      "default": "127.0.0.1",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/core/web_port": {
      "display_name": "HTTP port",
      "description": "The port on which Riak's HTTP interface should listen (default: 8098)",
      "default": "8098",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv": {
      "display_name": "Riak key/value",
      "description": "Riak key/value system configuration",
      "type": "hash",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/add_paths": {
      "display_name": "Additional Erlang paths",
      "description": "A list of paths to add to the Erlang code path",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/handoff_concurrency": {
      "display_name": "Handoff concurrency",
      "description": "Number of vnode, per physical node, allowed to perform handoff at once.",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/js_vm_count": {
      "default_name": "Javascript virtual machine count",
      "description": "How many Javascript virtual machines to start (default: 8)",
      "default": "8",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/js_source_dir": {
      "default_name": "Javascript source directory",
      "description": "Where to load user-defined built in Javascript functions",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/mapred_name": {
      "display_name": "Map/Reduce base path",
      "description": "The base of the path in the URL exposing Riak's Map/Reduce interface",
      "default": "mapred",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/raw_name": {
      "display_name": "HTTP base path",
      "description": "The base of the path in the URL exposing Riak's HTTP interface.",
      "default": "riak",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/riak_kv_stat": {
      "display_name": "Statistics reporting",
      "description": "Enables the statistics-aggregator if set to true.",
      "default": "true",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/stats_urlpath": {
      "display_name": "Path for HTTP retrieval of statistics",
      "default": "",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/pb_ip": {
      "display_name": "Protocol Buffers Client (PBC) address",
      "description": "The IP address on which Riak's PBC interface should listen",
      "default": "127.0.0.1",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/pb_port": {
      "display_name": " Protocol Buffers Client (PBC) port",
      "description": "The port on which Riak's PBC interface should listen",
      "default": "8087",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/handoff_port": {
      "display_name": "Handoff port",
      "description": "TCP port number for the handoff listener (default: 8099)",
      "default": "8099",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend": {
      "display_name": "Storage backend",
      "description": "The module name of the storage backend that Riak should use.",
      "default": "riak_kv_bitcask_backend",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options": {
      "display_name": "Storage backend options",
      "description": "Additional configuration options for storage backends (varies by storage_backend)",
      "default": "hash",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/riak_kv_dets_backend_root": {
      "display_name": "Data root directory",
      "description": "Directory where the data files will be stored.",
      "default": "/var/lib/riak/dets",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/buffer_pool_size": {
      "display_name": "Buffer pool size",
      "description": "Size of the buffer pool in bytes.",
      "default": "2147483648",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/data_home_dir": {
      "display_name": "Data home directory",
      "description": "Directory where the system files will be created. All database directories will also be created relative to this path.  Note: The path must end in a / or \\ depending on the platform.",
      "default": "/var/lib/riak/innodb",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/log_group_home_dir": {
      "display_name": "Log file path",
      "description": "Path to the directory where the log files will be created.",
      "default": "/var/lib/riak/innodb",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/log_buffer_size": {
      "display_name": "Log buffer size",
      "description": "Size of the in-memory log buffer in bytes.",
      "default": "8388608",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/log_files_in_group": {
      "display_name": "Log files in group",
      "default": "8",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/log_file_size": {
      "display_name": "Log file size",
      "description": "Log file size in bytes.",
      "default": "268435456",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/flush_log_at_trx_commit": {
      "display_name": "Log flush policy",
      "description": "This variable can be set to 0, 1 or 2.\n\n                   0 - Force sync of log contents to disk once every second.\n\n                   1 - Force sync of log contents to disk at transaction commit.\n\n                   2 - Write log contents to disk at transaction commit but do not force sync.\n",
      "default": "1",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/data_root": {
      "display_name": "Data root directory",
      "description": "Directory where the data files will be stored.",
      "default": "/var/lib/riak/bitcask",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/max_file_size": {
      "display_name": "Maximum file size",
      "description": "Maximum size for a single Bitcask cask file.",
      "default": "2147483648",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/sync_strategy": {
      "display_name": "Sync strategy",
      "description": "Sync strategy is one of: :none (let the OS decide), :o_sync, or {:seconds => N} (which requires application support)",
      "default": "none",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/frag_merge_trigger": {
      "display_name": "Fragment merge trigger",
      "default": "60",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/dead_bytes_merge_trigger": {
      "display_name": "Dead bytes merge trigger",
      "default": "536870912",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/frag_threshold": {
      "display_name": "Fragment threshold",
      "default": "40",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/dead_bytes_threshold": {
      "display_name": "Dead bytes threshold",
      "default": "134217728",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/small_file_threshold": {
      "display_name": "Small file threshold",
      "default": "10485760",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "riak/kv/storage_backend_options/expiry_secs": {
      "display_name": "Data expiration threshold, in seconds",
      "description": "Data expiration can be caused by setting this to a positive value.  If set, items older than the value will be discarded.",
      "default": "-1",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    }
  }
}