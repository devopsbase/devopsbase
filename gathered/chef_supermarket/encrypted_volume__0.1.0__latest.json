{
  "name": "encrypted_volume Chef cookbook",
  "chef_cookbook_name": "encrypted_volume",
  "revision": "0.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/encrypted_volume",
    "https://supermarket.chef.io/cookbooks/encrypted_volume/download",
    "https://supermarket.chef.io/cookbooks/encrypted_volume/versions/0.1.0",
    "https://supermarket.chef.io/cookbooks/encrypted_volume/versions/0.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/encrypted_volume/versions/0.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/encrypted_volume",
    "https://supermarket.chef.io/api/v1/cookbooks/encrypted_volume/versions/0.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/encrypted_volume",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/encrypted_volume/versions/0.1.0/download",
  "deprecated": false,
  "created": "2014-03-04T03:56:45.000Z",
  "updated": "2014-03-04T03:56:46.000Z",
  "description": "Installs/Configures encrypted_volume",
  "maintainer": {
    "name": "riskio",
    "email": "jro@risk.io"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 1208011,
  "downloads_count_revision": 1208011,
  "repository_url": "https://github.com/risk-io/chef-encrypted_volume",
  "issues_url": "https://github.com/risk-io/chef-encrypted_volume",
  "chef_source_url": "https://github.com/risk-io/chef-encrypted_volume",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "encrypted_volume Cookbook\n=========================\nEncrypt your disks! Onetime, persist reboots and be restricted to host, or\npersist and possibly be mountable on different hosts.\n\nAttributes\n----------\n\n#### encrypted_volume::default\n * vault - name of default `chef-vault` vault; where we keep the\n   passphrases\n * mounts - hash of any mounts to encrypt. if you don't wish to use\n   the LWRP\n   \n#### LWRP\n\n * mount_point - name_attribute - where you want to mount your volume\n   to\n * volume - volume you want to encrypt and mount\n * fstype - filesystem to use for volume - default: ext2\n * mount_options - any special mount(5) options - default: rw\n * mode - normal, or onetime. Onetime does not save the key anywhere,\n   effectively making the mount usable for one boot\n * vault - what `chef-vault` to store/get passphrase in/from\n * vault_tag - what `chef-vault` item to store/get the passphrase\n   in/from. By default we generate this so that it belongs to the\n   host. This means you can reboot to your heart's content and use the\n   mount. Setting it to a pre-created vault item is useful for volumes\n   you might need to move between hosts, like EBS mounts.\n * passphrase - don't use except for testing. I'm looking at you Dave.\n\nUsage\n-----\n#### encrypted_volume::default\n\nIf you wish to encrypt volumes based on configuration, without using\nthe LWRP. Just include `encrypted_volume` in your node's `run_list`:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[encrypted_volume]\"\n  ],\n  \"default_attributes\":{\n    \"encrypted_volume\":{\n      \"mounts\":{\n        \"/encrypted\":{\n        \"volume\":\"/dev/sda2\",\n        \"fstype\":\"ext2\"\n      }\n    }\n  }\n}\n```\n\n#### LWRP\n\n```ruby\nencrypted_volume \"/encrypted\" do\n  volume      \"/raw_test_volume.img\"\n  fstype      \"ext3\"\nend\n```\n\nContributing\n------------\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\nAuthors: Jason Rohwedder <jro@risk.io>\n",
  "requires": [
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "arch",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "freebsd",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef-vault",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "parameters": {
    "vault": {
      "display_name": "Vault",
      "description": "Default chef-vault Vault to store/fetch passphrases from",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "mounts": {
      "display_name": "Mounts",
      "description": "Hash of volumes to encrypt and mount",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    }
  }
}