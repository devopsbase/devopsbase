{
  "name": "backupninja Chef cookbook",
  "chef_cookbook_name": "backupninja",
  "revision": "0.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/backupninja",
    "https://supermarket.chef.io/cookbooks/backupninja/download",
    "https://supermarket.chef.io/cookbooks/backupninja/versions/0.1.0",
    "https://supermarket.chef.io/cookbooks/backupninja/versions/0.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/backupninja/versions/0.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/backupninja",
    "https://supermarket.chef.io/api/v1/cookbooks/backupninja/versions/0.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/backupninja",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/backupninja/versions/0.1.0/download",
  "deprecated": false,
  "created": "2014-09-17T12:28:58.602Z",
  "updated": "2014-09-17T12:33:01.843Z",
  "description": "Installs/Configures backupninja",
  "maintainer": {
    "name": "kevwilde",
    "email": "YOUR_EMAIL"
  },
  "license": "All rights reserved",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 920965,
  "downloads_count_revision": 920965,
  "repository_url": "https://github.com/kevwilde/chef-backupninja",
  "issues_url": "https://github.com/kevwilde/chef-backupninja/issues",
  "chef_source_url": "https://github.com/kevwilde/chef-backupninja",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "backupninja Cookbook\n====================\nThe main highlights of this cookbook are the resources for managing backups. The following providers are currently implemented:\n\n* `backupninja_rdiff`: backup action for rdiff-backup (incremental backups)\n* `backupninja_mysql`: backup action for safe MySQL dumps\n\nRequirements\n------------\n\nChef version 0.11+\n\nPlatforms\n---------\n\n* Ubuntu\n\nAll other platforms are currently untested.\n\nResources/Providers\n-------------------\nThese resources aim to expose an abstraction layer for generating the ini-style configuration files necessary to configure a backup job in backupninja.\n\nIf you wish to install backupninja, add the included `recipe[backupninja]` to your runlist or wrapper cookbook.\n\n#### backupninja\n\nGeneric backupninja resource. This resource contains all the generic configuration data available in all the backup job-specific resources. This resource is in charge of the file naming-scheme and the generation of the INI-file.\n\n##### Actions\n\n* `:create`: create the ini file\n* `:delete`: removes the ini file\n\n##### Attribute Parameters\n\n* `name`: name attribute. Short descriptive name that will be used in the filename.\n* `priority`\n* `description`\n* `when_executed`\n* `type`: the extension of the INI-file indication which procedure for backup will be used.\n* `options`: Hash of additional values to appear in the INI-file.\n\nMore information of about ordering, naming and scheduling can be found [here](https://labs.riseup.net/code/projects/backupninja/wiki/Configuration#Global-configuration).\n\nThe `options` hash will be heavily used by the job-specific resources to fill in their additional parameters. \n\nGeneration of these options depends on the class type of the hash value being used:\n\n* Value is of type `Array`: A seperate \"key = item\" line will be generated for each item in the array.\n* Value is of type `Hash`: the key will be used as a section `[key]` and the value should again be of type Hash. Everything in that hash will be generated as attributes inside this section.\n* Everything else will simply be generated as \"key = value\"\n\n\n#### backupninja_rdiff\n\nRdiff-specific job to make remote, incremental backups of the filesystem.\n\n##### Actions\n\n* `:create`: create the ini file\n* `:delete`: removes the ini file\n\n##### Attribute Parameters\n\nThe following attribute parameters are present alongside those in the `backupninja` resource:\n\nThe source section:\n* `source_label`, String\n* `source_type`, String\n* `source_keep`, Integer\n* `source_include`, Array\n* `source_exclude`, Array\n\nThe dest (destination) section:\n* `dest_type`, String\n* `dest_host`, String\n* `dest_directory`, String\n* `dest_user`, String\n\nMore information about these attributes can be found [here](https://labs.riseup.net/code/projects/backupninja/wiki/Rdiff).\n\n#### backupninja_mysql\n\nMySQL-specific job to backup a mysql database using mysqldump.\n\n##### Actions\n\n* `:create`: create the ini file\n* `:delete`: removes the ini file\n\n##### Attribute Parameters\n\nThe following attribute parameters are present alongside those in the `backupninja` resource:\n\n* `databases`, String\n* `backupdir`, String\n* `hotcopy`, String\n* `sqldump`, String\n* `sqldumpoptions`, String\n* `compress`, String\n* `nodata`, String\n* `vsname`, String\n\n* `user`, String\n* `dbusername`, String\n* `dbpassword`, String\n* `configfile`, String\n\nMore information about these attributes can be found [here](https://labs.riseup.net/code/projects/backupninja/wiki/Mysql).\n\nAttributes\n----------\n\n#### backupninja::default\n\nInstall and configure the backupninja daemon. \n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['backupninja_package_name']</tt></td>\n    <td>String</td>\n    <td>Package name for backupninja</td>\n    <td><tt>'backupninja'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['rdiff_backup_package_name']</tt></td>\n    <td>String</td>\n    <td>Package name for rdiff-backup</td>\n    <td><tt>'rdiff-backup'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['loglevel']</tt></td>\n    <td>Integer</td>\n    <td>\n      Verbosity level for logging:\n      <ul>\n        <li>5: Debug and below</li>\n        <li>4: Information and below</li>\n        <li>3: Warnings and below</li>\n        <li>2: Errors and below</li>\n        <li>1: Fatal errors only</li>\n      </ul>\n    </td>\n    <td><tt>4</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['reportemail']</tt></td>\n    <td>String</td>\n    <td>Backup summaries will be emailed to this address</td>\n    <td><tt>'root'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['reportsuccess']</tt></td>\n    <td>String</td>\n    <td>When set to 'yes', a report email will be generated even\n    if there was no error.</td>\n    <td><tt>'yes'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['reportwarning']</tt></td>\n    <td>String</td>\n    <td>When set to 'yes', a report email will be generated even\n    if there was no error.</td>\n    <td><tt>'yes'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['logfile']</tt></td>\n    <td>String</td>\n    <td>All logs will be written to this file</td>\n    <td><tt>'/var/log/backupninja.log'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['configdirectory']</tt></td>\n    <td>String</td>\n    <td>Directory where all the backup configuration files live</td>\n    <td><tt>'/etc/backup.d'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['scriptdirectory']</tt></td>\n    <td>String</td>\n    <td>Where backupninja handler scripts are found</td>\n    <td><tt>/usr/share/backupninja'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['usecolors']</tt></td>\n    <td>String</td>\n    <td>Use colors in the log file</td>\n    <td><tt>'yes'</tt></td>\n  </tr>\n</table>\n\n\n#### backupninja::rdiff_backup_client\n\nThe recipe will install the rdiff-backup package and generates an ssh keypair for the `root` user. The generated public key will be saved as a node attribute (`backupclient_pubkey`) so the backup server knows which public ssh keys it should authorize.\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['rdiff_backup_package_name']</tt></td>\n    <td>String</td>\n    <td>Package name for rdiff-backup</td>\n    <td><tt>'rdiff-backup'</tt></td>\n  </tr>\n</table>\n\n#### backupninja::rdiff_backup_server\n\nUse this recipe in the run list of the server that should receive the backups from the client.\n\nBasically, it will create a backup user and allow him access to the backup location. An `.ssh/authorized_keys` will be generated based on the `backupclient_pubkey` attribute found on all nodes known to the Chef Server to allow all backup clients access to send their backups.\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['rdiff_backup_server_user']</tt></td>\n    <td>String</td>\n    <td>User used to connect to the backup server.</td>\n    <td><tt>'backupuser'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['backupninja']['rdiff_backup_server_directory']</tt></td>\n    <td>String</td>\n    <td>Directory where backups will be kept</td>\n    <td><tt>'/backups'</tt></td>\n  </tr>\n</table>\n\nUsage\n-----\n#### backupninja::default\n\nInstalls and configures a backupninja daemon on the machine. No backup tasks are added.\n\ne.g.\nJust include `backupninja` in your node's `run_list`:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[backupninja]\"\n  ]\n}\n```\n\nTo Do\n-----\n\n* Make job-specific resources more DRY-er\n* Implement other job processes\n* Change all `'yes'` attribute parameters from strings to booleans.\n* Ensure only one of three allowed authorization techniques in the MySQL job can be configured in a resource.\n\nContributing\n------------\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\nAuthors: Kevin Van Wilder <kevin@van-wilder.be>\n"
}