{
  "name": "onddo-spamassassin Chef cookbook",
  "chef_cookbook_name": "onddo-spamassassin",
  "revision": "1.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/onddo-spamassassin",
    "https://supermarket.chef.io/cookbooks/onddo-spamassassin/download",
    "https://supermarket.chef.io/cookbooks/onddo-spamassassin/versions/1.1.0",
    "https://supermarket.chef.io/cookbooks/onddo-spamassassin/versions/1.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/onddo-spamassassin/versions/1.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/onddo-spamassassin",
    "https://supermarket.chef.io/api/v1/cookbooks/onddo-spamassassin/versions/1.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Email"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/onddo-spamassassin",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/onddo-spamassassin/versions/1.1.0/download",
  "deprecated": false,
  "created": "2013-06-09T15:53:51.000Z",
  "updated": "2015-08-31T00:16:08.873Z",
  "description": "Installs and configures SpamAssassin, a mail filter software to identify spam.\n",
  "maintainer": {
    "name": "zuazo",
    "email": "xabier@zuazo.org"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 3,
  "downloads_count": 2347769,
  "downloads_count_revision": 615,
  "repository_url": "https://github.com/zuazo/spamassassin-cookbook",
  "issues_url": "https://github.com/zuazo/spamassassin-cookbook/issues",
  "chef_source_url": "https://github.com/zuazo/spamassassin-cookbook",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "SpamAssassin Cookbook\n=====================\n[![Cookbook Version](https://img.shields.io/cookbook/v/onddo-spamassassin.svg?style=flat)](https://supermarket.chef.io/cookbooks/onddo-spamassassin)\n[![Dependency Status](http://img.shields.io/gemnasium/zuazo/spamassassin-cookbook.svg?style=flat)](https://gemnasium.com/zuazo/spamassassin-cookbook)\n[![Build Status](http://img.shields.io/travis/zuazo/spamassassin-cookbook/1.1.0.svg?style=flat)](https://travis-ci.org/zuazo/spamassassin-cookbook)\n\n[Chef](https://www.chef.io/) cookbook to install and configure [SpamAssassin](http://spamassassin.apache.org/), a mail filter software to identify spam.\n\nRequirements\n============\n\n## Supported Platforms\n\nThis cookbook has been tested on the following platforms:\n\n* Amazon Linux\n* CentOS\n* Debian\n* Fedora\n* openSUSE\n* Oracle Linux\n* RedHat\n* SUSE\n* Ubuntu\n\nPlease, [let us know](https://github.com/zuazo/spamassassin-cookbook/issues/new?title=I%20have%20used%20it%20successfully%20on%20...) if you use it successfully on any other platform.\n\n## Required Applications\n\n* Ruby `>= 1.9.3`\n\nAttributes\n==========\n\n| Attribute                                              | Default                | Description                    |\n|:-------------------------------------------------------|:-----------------------|:-------------------------------|\n| `node['spamassassin']['spamc']['path']`                | *calculated*           | SpamAssassin client binary path.\n| `node['spamassassin']['spamd']['path']`                | *calculated*           | SpamAssassin daemon binary path.\n| `node['spamassassin']['spamd']['user']`                | `'spamd'`              | SpamAssassin user.\n| `node['spamassassin']['spamd']['group']`               | `'spamd'`              | SpamAssassin group.\n| `node['spamassassin']['spamd']['lib_path']`            | *calculated*           | SpamAssassin library path.\n| `node['spamassassin']['spamd']['enabled']`             | `true`                 | SpamAssassin daemon enabler flag.\n| `node['spamassassin']['spamd']['options']`             | *calculated*           | SpamAssassin daemon option arguments.\n| `node['spamassassin']['spamd']['pidfile']`             | `'/var/run/spamd.pid'` | SpamAssassin daemon pid file.\n| `node['spamassassin']['spamd']['nice']`                | `nil`                  | SpamAssassin daemon nice scheduling priority.\n| `node['spamassassin']['conf']['rewrite_headers']`      | *calculated*           | An array of rewrite headers.\n| `node['spamassassin']['conf']['report_safe']`          | `true`                 | SpamAssassin report_safe enabler flag.\n| `node['spamassassin']['conf']['trusted_networks']`     | `nil`                  | Network or hosts that are considered trusted.\n| `node['spamassassin']['conf']['lock_method']`          | `'flock'`              | File-locking method used to protect database files on-disk.\n| `node['spamassassin']['conf']['required_score']`       | `5`                    | Score required before a mail is considered spam.\n| `node['spamassassin']['conf']['use_bayes']`            | `true`                 | Whether to use the naive-Bayesian-style classifier.\n| `node['spamassassin']['conf']['bayes_auto_learn']`     | `true`                 | Whether SpamAssassin should automatically feed high-scoring mail.\n| `node['spamassassin']['conf']['bayes_ignore_headers']` | `[]`                   | Headers ignored by the naive-Bayesian-style classifier.\n| `node['spamassassin']['conf']['plugins']`              | `[]`                   | A hash to configure SpamAssassin plugins ([see the example below](#plugin-example)).\n\n## Plugin Example\n\n```ruby\nnode.default['spamassassin']['conf']['plugins']['shortcircuit'] = [\n  {\n    'USER_IN_WHITELIST' => 'on',\n    'USER_IN_DEF_WHITELIST' => 'on',\n    'USER_IN_ALL_SPAM_TO' => 'on',\n    'SUBJECT_IN_WHITELIST' => 'on',\n\n    'USER_IN_BLACKLIST' => 'on',\n    'USER_IN_BLACKLIST_TO' => 'on',\n    'SUBJECT_IN_BLACKLIST' => 'on',\n\n    'ALL_TRUSTED' => 'on',\n\n    'BAYES_99' => 'spam',\n    'BAYES_00' => 'ham'\n  }\n]\n```\n\nRecipes\n=======\n\n## onddo-spamassassin::default\n\nInstalls SpamAssassin client and Daemon.\n\nUsage Examples\n==============\n\n## Including in a Cookbook Recipe\n\nRunning it from a recipe:\n\n```ruby\n# Required_score is set to 5 by default, change it:\nnode.default['spamassassin']['conf']['required_score'] = 4\ninclude_recipe 'onddo-spamassassin::default' # or include it in your run-list\n```\n\nDon't forget to include the `onddo-spamassassin` cookbook as a dependency in the metadata.\n\n```ruby\n# metadata.rb\n# [...]\n\ndepends 'onddo-spamassassin'\n```\n\n## Including in the Run List\n\nAnother alternative is to include the default recipe in your *Run List*.\n\n```json\n{\n  \"name\": \"mail.example.com\",\n  \"[...]\": \"[...]\",\n  \"run_list\": [\n    \"recipe[onddo-spamassassin]\"\n  ]\n}\n```\n\nTesting\n=======\n\nSee [TESTING.md](https://github.com/zuazo/spamassassin-cookbook/blob/master/TESTING.md).\n\nContributing\n============\n\nPlease do not hesitate to [open an issue](https://github.com/zuazo/spamassassin-cookbook/issues/new) with any questions or problems.\n\nSee [CONTRIBUTING.md](https://github.com/zuazo/spamassassin-cookbook/blob/master/CONTRIBUTING.md).\n\nTODO\n====\n\nSee [TODO.md](https://github.com/zuazo/spamassassin-cookbook/blob/master/TODO.md).\n\n\nLicense and Author\n=====================\n\n|                      |                                          |\n|:---------------------|:-----------------------------------------|\n| **Author:**          | [Xabier de Zuazo](https://github.com/zuazo) (<xabier@zuazo.org>)\n| **Copyright:**       | Copyright (c) 2015, Xabier de Zuazo\n| **Copyright:**       | Copyright (c) 2013-2015 Onddo Labs, SL.\n| **License:**         | Apache License, Version 2.0\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n        http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "opensuse",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "oracle",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "suse",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ],
  "provides": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/spamassassin",
      "revision": ">= 0.0.0"
    }
  ],
  "chef_recipes": {
    "onddo-spamassassin::default": "Installs SpamAssassin client and Daemon"
  },
  "parameters": {
    "spamassassin/spamc/path": {
      "display_name": "spamc path",
      "description": "SpamAssassin client binary path",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/spamd/path": {
      "display_name": "spamd path",
      "description": "SpamAssassin daemon binary path",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/spamd/user": {
      "display_name": "spamd user",
      "description": "SpamAssassin user",
      "type": "string",
      "required": "optional",
      "default": "spamd",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/spamd/group": {
      "display_name": "spamd group",
      "description": "SpamAssassin group",
      "type": "string",
      "required": "optional",
      "default": "spamd",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/spamd/lib_path": {
      "display_name": "spamd group",
      "description": "SpamAssassin group",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/spamd/enabled": {
      "display_name": "spamd enabled",
      "description": "SpamAssassin daemon enabler flag",
      "choice": [
        "true",
        "false"
      ],
      "type": "string",
      "required": "optional",
      "default": true,
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/spamd/options": {
      "display_name": "spamd options",
      "description": "SpamAssassin daemon option arguments",
      "type": "array",
      "required": "optional",
      "default": [
        "--create-prefs",
        "--max-children 5",
        "--helper-home-dir"
      ],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/spamd/pidfile": {
      "display_name": "spamd pidfile",
      "description": "SpamAssassin daemon pid file",
      "type": "string",
      "required": "optional",
      "default": "/var/run/spamd.pid",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/spamd/nice": {
      "display_name": "spamd nice",
      "description": "SpamAssassin daemon nice scheduling priority",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/conf/rewrite_headers": {
      "display_name": "spam rewrite_headers",
      "description": "An array of rewrite headers",
      "type": "array",
      "required": "recommended",
      "default": [
        {
          "Subject": "[SPAM]"
        }
      ],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/conf/report_safe": {
      "display_name": "Report safe enabled",
      "description": "SpamAssassin report_safe enabler flag",
      "choice": [
        "true",
        "false",
        "0",
        "1",
        "2"
      ],
      "type": "string",
      "required": "optional",
      "default": true,
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/conf/trusted_networks": {
      "display_name": "Trusted networks",
      "description": "Network or hosts that are considered trusted",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/conf/lock_method": {
      "display_name": "File-lock method",
      "description": "File-locking method used to protect database files on-disk",
      "choice": [
        "nfssafe",
        "flock",
        "win32"
      ],
      "type": "string",
      "required": "optional",
      "default": "flock",
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/conf/required_score": {
      "display_name": "Required score",
      "description": "Score required before a mail is considered spam",
      "type": "string",
      "required": "recommended",
      "default": "5",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/conf/use_bayes": {
      "display_name": "Use bayes",
      "description": "Whether to use the naive-Bayesian-style classifier",
      "choice": [
        "true",
        "false"
      ],
      "type": "string",
      "required": "optional",
      "default": true,
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/conf/bayes_auto_learn": {
      "display_name": "Use bayes",
      "description": "Whether SpamAssassin should automatically feed high-scoring mail",
      "choice": [
        "true",
        "false"
      ],
      "type": "string",
      "required": "optional",
      "default": true,
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/conf/bayes_ignore_headers": {
      "display_name": "Bayes ignore headers",
      "description": "Headers ignored by the naive-Bayesian-style classifier",
      "type": "array",
      "required": "optional",
      "default": [],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "spamassassin/conf/plugins": {
      "display_name": "plugins",
      "description": "A hash to configure SpamAssassin plugins",
      "type": "array",
      "required": "optional",
      "default": [],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    }
  }
}