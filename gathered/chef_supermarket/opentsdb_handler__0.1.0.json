{
  "name": "opentsdb_handler Chef cookbook",
  "chef_cookbook_name": "opentsdb_handler",
  "revision": "0.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/opentsdb_handler",
    "https://supermarket.chef.io/cookbooks/opentsdb_handler/download",
    "https://supermarket.chef.io/cookbooks/opentsdb_handler/versions/0.1.0",
    "https://supermarket.chef.io/cookbooks/opentsdb_handler/versions/0.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/opentsdb_handler/versions/0.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/opentsdb_handler",
    "https://supermarket.chef.io/api/v1/cookbooks/opentsdb_handler/versions/0.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Data Store/Time Series"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/opentsdb_handler",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/opentsdb_handler/versions/0.1.0/download",
  "deprecated": false,
  "created": "2015-10-20T21:58:11.392Z",
  "updated": "2015-10-27T17:52:33.685Z",
  "description": "Installs/Configures opentsdb_handler",
  "maintainer": {
    "name": "mi_wood",
    "email": "michael.wood@optimizely.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 1357,
  "downloads_count_revision": 255,
  "repository_url": "https://github.com/optimizely/chef_opentsdb_handler",
  "issues_url": "https://github.com/optimizely/chef_opentsdb_handler",
  "chef_source_url": "https://github.com/optimizely/chef_opentsdb_handler",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "opentsdb_handler Cookbook\n==============================\nThis cookbook sets up a handler that reports to [OpenTSDB](http://opentsdb.net/) at the end of a chef run\n\nRequirements\n------------\nThe only requirement is the chef_handler cookbook\n\nAttributes\n----------\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['opentsdb_handler']['metrics']</tt></td>\n    <td>Hash</td>\n    <td>this is where each metric to be sent is defined as { unique_name => metric_hash }</td>\n    <td><tt>{}</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['opentsdb_handler']['metric'][unique_name]['name']</tt></td>\n    <td>String</td>\n    <td>Metric name</td>\n    <td><tt>None</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['opentsdb_handler']['metrics'][unique_name]['value']</tt></td>\n    <td>Hash</td>\n    <td>Value of metric</td>\n    <td><tt>None</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['opentsdb_handler']['metrics'][unique_name]['tags']</tt></td>\n    <td>Hash</td>\n    <td>Key => Value hash of tags for the metric.</td>\n    <td><tt>{'hostname' => Socket.gethostname}(IN HANDLER SCRIPT)</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['opentsdb_handler'][handler_name]['run_status_tag']</tt></td>\n    <td>Boolean</td>\n    <td>Will add run_status=0|1 (success, failure respectively) tag if true</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['opentsdb_handler']['run_status']['elapsed_time'|'start_time'|'end_time']</tt></td>\n    <td>Boolean</td>\n    <td>Will send a metric of the chef.elapsed_time (or start_time or end_time) if true. Change tags on ['handlers']['elapsed_time']['tags']</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['opentsdb_handler']['hostname']</tt></td>\n    <td>opentsdb</td>\n    <td>Hostname of OpenTSDB server</td>\n    <td><tt>opentsdb (IN HANDLER SCRIPT)</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['opentsdb_handler']['port']</tt></td>\n    <td>Integer</td>\n    <td>Port of OpenTSDB server</td>\n    <td><tt>4242 (IN HANDLER SCRIPT)</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['opentsdb_handler']['timeout']</tt></td>\n    <td>Integer</td>\n    <td>Timeout before failing to send to metric</td>\n    <td><tt>10 (IN HANDLER SCRIPT)</tt></td>\n  </tr>\n</table>\n\nUsage\n-----\n#### opentsdb_handler::default\n\nInclude `opentsdb_handler` in your node's `run_list` and add the following attributes:\n\n```ruby\nnode.default['opentsdb_hander']['metrics']['flying_puppy_metric']['name'] = 'flying_puppy.metric'\nnode.default['opentsdb_hander']['metrics']['flying_puppy_metric']['value'] = 10\n# Optional\nnode.default['opentsdb_hander']['metrics]['flying_puppy_metric']['tags'] = {\"breed\" => \"corgi\"}\n```\n\nYou can add as many metrics to this hash as you want. The timestamp will be created at the start of the handler.\n\nContributing\n------------\n1. Fork the repository on Github\n2. `bundle install`\n3. Make changes\n4. Test your changes [Testing](#Testing)\n\nTesting\n-------\nIntegration tests are run with [test-kitchen](https://github.com/test-kitchen/test-kitchen), [kitchen-vagrant](https://github.com/test-kitchen/kitchen-vagrant), and [serverspec](serverspec.org) for integration testing. You can take a look at [.kitchen.yml] for how tests are set up. Run with:\n```\nrake kitchen:all\n```\n\nUnit testing is run with [ChefSpec](https://github.com/sethvargo/chefspec)\n\nLinting is done with [foodcritic](https://acrmp.github.io/foodcritic/) and [rubocop](https://github.com/bbatsov/rubocop)\n\nRun unit and linting with:\n```\nrake test\n```\n\n\nLicense and Authors\n-------------------\nAuthors: michael.wood@optimizely.com\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef_handler",
      "revision": "~> 1.2.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "opentsdb_handler::default": "Sets up OpenTSDB chef handler"
  }
}