{
  "name": "owncloud Chef cookbook",
  "chef_cookbook_name": "owncloud",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/owncloud",
    "https://supermarket.chef.io/cookbooks/owncloud/download",
    "https://supermarket.chef.io/cookbooks/owncloud/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/owncloud/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/owncloud/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/owncloud",
    "https://supermarket.chef.io/api/v1/cookbooks/owncloud/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/owncloud",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/owncloud/versions/1.0.0/download",
  "deprecated": false,
  "created": "2013-08-07T12:51:59.000Z",
  "updated": "2015-10-07T23:29:23.862Z",
  "description": "Installs and configures ownCloud, an open source personal cloud for data and\nfile sync, share and view.\n",
  "maintainer": {
    "name": "zuazo",
    "email": "xabier@zuazo.org"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 10,
  "downloads_count": 7776793,
  "downloads_count_revision": 448,
  "repository_url": "https://github.com/zuazo/owncloud-cookbook",
  "issues_url": "https://github.com/zuazo/owncloud-cookbook/issues",
  "chef_source_url": "https://github.com/zuazo/owncloud-cookbook",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "ownCloud Cookbook\n=================\n[![Cookbook Version](https://img.shields.io/cookbook/v/owncloud.svg?style=flat)](https://supermarket.chef.io/cookbooks/owncloud)\n[![GitHub Source](https://img.shields.io/badge/source-GitHub-blue.svg?style=flat)](https://github.com/zuazo/owncloud-cookbook)\n[![Dependency Status](http://img.shields.io/gemnasium/zuazo/owncloud-cookbook.svg?style=flat)](https://gemnasium.com/zuazo/owncloud-cookbook)\n[![Code Climate](http://img.shields.io/codeclimate/github/zuazo/owncloud-cookbook.svg?style=flat)](https://codeclimate.com/github/zuazo/owncloud-cookbook)\n[![Build Status](http://img.shields.io/travis/zuazo/owncloud-cookbook/1.0.0.svg?style=flat)](https://travis-ci.org/zuazo/owncloud-cookbook)\n[![Coverage Status](http://img.shields.io/coveralls/zuazo/owncloud-cookbook/1.0.0.svg?style=flat)](https://coveralls.io/r/zuazo/owncloud-cookbook?branch=1.0.0)\n[![Inline docs](http://inch-ci.org/github/zuazo/owncloud-cookbook.svg?branch=master&style=flat)](http://inch-ci.org/github/zuazo/owncloud-cookbook)\n\n[Chef](https://www.chef.io/) cookbook to install and configure [ownCloud](http://owncloud.org/), an open source personal cloud for data and file sync, share and view.\n\nRequirements\n============\n\n## Supported Platforms\n\n* CentOS\n* Debian\n* Scientific Linux\n* Ubuntu\n\nThe following platforms are tested with Test Kitchen:\n\n| Platform           | MySQL      | PostgreSQL | SQLite     | NGINX      |\n|:-------------------|:----------:|:----------:|:----------:|:-----------|\n| CentOS 5           | ✔          |            |            |            |\n| CentOS 6           | ✔ (travis) |            | ✔ (travis) |            |\n| CentOS 7           | ✔          | ✔          | ✔          | ✔          |\n| Debian 6           | ✔          |            | ✔          | ✔          |\n| Debian 7           | ✔ (travis) | ✔ (travis) | ✔ (travis) | ✔ (travis) |\n| Debian 8           | ✔ (travis) | ✔ (travis) | ✔ (travis) | ✔ (travis) |\n| Ubuntu 12.04       | ✔          | ✔ (travis) | ✔ (travis) | ✔          |\n| Ubuntu 14.04       | ✔          | ✔ (travis) | ✔ (travis) | ✔          |\n| Ubuntu 15.04       | ✔          |            | ✔ (travis) | ✔          |\n| Scientific Linux 6 | ✔ (travis) |            | ✔ (travis) |            |\n\nPlease, [let me know](https://github.com/zuazo/owncloud-cookbook/issues/new?title=I%20have%20used%20it%20successfully%20on%20...) if you use it successfully on any other platform.\n\n## Required Cookbooks\n\n* [apache2](https://supermarket.chef.io/cookbooks/apache2/)\n* [apt](https://supermarket.chef.io/cookbooks/apt/)\n* [cron](https://supermarket.chef.io/cookbooks/cron/)\n* [database](https://supermarket.chef.io/cookbooks/database/)\n* [encrypted_attributes](https://supermarket.chef.io/cookbooks/encrypted_attributes/)\n* [mysql2_chef_gem](https://supermarket.chef.io/cookbooks/mysql2_chef_gem/)\n* [mysql](https://supermarket.chef.io/cookbooks/mysql/)\n* [nginx](https://supermarket.chef.io/cookbooks/nginx/)\n* [openssl](https://supermarket.chef.io/cookbooks/openssl/)\n* [php](https://supermarket.chef.io/cookbooks/php/)\n* [php-fpm](https://supermarket.chef.io/cookbooks/php-fpm/)\n* [postfix](https://supermarket.chef.io/cookbooks/postfix/)\n* [postgresql](https://supermarket.chef.io/cookbooks/postgresql/)\n* [ssl_certificate](https://supermarket.chef.io/cookbooks/ssl_certificate/)\n\n## Required Applications\n\n* Chef `>= 11.14.2`.\n* Ruby `2.0.0` or higher.\n\n## Other Requirements\n\nOn RedHat based platforms, you need to disable or configure SELinux correctly. You can use the `selinux::disabled` recipe for that.\n\nAttributes\n==========\n\n| Attribute                                           | Default       | Description                    |\n|:----------------------------------------------------|:--------------|:-------------------------------|\n| `node['owncloud']['version']`                       | *calculated*  | Version of ownCloud to install.\n| `node['owncloud']['download_url']`                  | *calculated*  | URL from where ownCloud will be downloaded.\n| `node['owncloud']['deploy_from_git']`               | `false`       | Whether ownCloud should be deployed from the git repository.\n| `node['owncloud']['git_repo']`                      | *calculated*  | URL of the ownCloud git repository.\n| `node['owncloud']['git_ref']`                       | `nil`         | Git reference to deploy.\n| `node['owncloud']['www_dir']`                       | *calculated*  | Root directory defined in the web server where web documents are stored.\n| `node['owncloud']['dir']`                           | *calculated*  | Directory where ownCloud will be installed.\n| `node['owncloud']['data_dir']`                      | *calculated*  | Directory where ownCloud data will be stored.\n| `node['owncloud']['server_name']`                   | *calculated*  | Sets the server name for the ownCloud virtual host.\n| `node['owncloud']['server_aliases']`                | `[]`          | Sets the server name aliases for the ownCloud virtual host.\n| `node['owncloud']['install_postfix']`               | `true`        | Whether to install Postfix when a local MTA is needed.\n| `node['owncloud']['web_server']`                    | `'apache'`    | Web server to use: `'apache'` or `'nginx'`.\n| `node['owncloud']['php-fpm']['pool']`               | `'owncloud'`  | PHP-FPM pool name to use with ownCloud.\n| `node['owncloud']['max_upload_size']`               | `'512M'`      | Maximum allowed size for uploaded files.\n| `node['owncloud']['sendfile']`                      | *calculated*  | Whether to enable *sendfile* on web server. You should set to `'false'` if you use NFS or SMB mounts.\n| `node['owncloud']['ssl']`                           | `true`        | Whether ownCloud should accept requests through TLS.\n| `node['owncloud']['admin']['user']`                 | `'admin'`     | Administrator username.\n| `node['owncloud']['admin']['pass']`                 | *calculated*  | Administrator password.\n| `node['owncloud']['config']['dbtype']`              | `'mysql'`     | Type of database, can be `'sqlite'`, `'mysql'` or `'pgsql'`.\n| `node['owncloud']['config']['dbname']`              | `'owncloud'`  | Name of the ownCloud database.\n| `node['owncloud']['config']['dbuser']`              | `'owncloud'`  | User to access the ownCloud database.\n| `node['owncloud']['config']['dbpassword']`          | *calculated*  | Password to access the ownCloud database.\n| `node['owncloud']['config']['dbhost']`              | `'127.0.0.1'` | Host running the ownCloud database.\n| `node['owncloud']['config']['dbport']`              | *calculated*  | Port the ownCloud database is running at.\n| `node['owncloud']['config']['dbtableprefix']`       | `''`          | Prefix for the ownCloud tables in the database.\n| `node['owncloud']['config']['mail_smtpmode']`       | `'sendmail'`  | Mode to use for sending mail, can be `'sendmail'`, `'smtp'`, `'qmail'` or `'php'`.\n| `node['owncloud']['config']['mail_smtphost']`       | `'127.0.0.1'` | Host to use for sending mail, depends on *mail_smtpmode* if this is used.\n| `node['owncloud']['config']['mail_smtpport']`       | `25`          | Port to use for sending mail, depends on *mail_smtpmode* if this is used.\n| `node['owncloud']['config']['mail_smtptimeout']`    | `10`          | SMTP server timeout in seconds for sending mail, depends on *mail_smtpmode* if this is used.\n| `node['owncloud']['config']['mail_smtpsecure']`     | `''`          | SMTP connection prefix or sending mail, depends on *mail_smtpmode* if this is used. Can be `''`, `'ssl'` or `'tls'`.\n| `node['owncloud']['config']['mail_smtpauth']`       | `false`       | Whether authentication is needed to send mail, depends on *mail_smtpmode* if this is used.\n| `node['owncloud']['config']['mail_smtpauthtype']`   | `'LOGIN'`     | Authentication type needed to send mail, depends on *mail_smtpmode* if this is used. Can be `'LOGIN'`, `'PLAIN'` or `'NTLM'`.\n| `node['owncloud']['config']['mail_smtpname']`       | `''`          | Username to use for sendmail mail, depends on *mail_smtpauth* if this is used.\n| `node['owncloud']['config']['mail_smtppassword']`   | `''`          | Password to use for sendmail mail, depends on *mail_smtpauth* if this is used.\n| `node['owncloud']['cron']['enabled']`               | `true`        | Whether to enable ownCloud cron job.\n| `node['owncloud']['cron']['min']`                   | `'*/15'`      | Minute to run ownCloud cron at.\n| `node['owncloud']['cron']['hour']`                  | `'*'`         | Hour to run ownCloud cron at.\n| `node['owncloud']['cron']['day']`                   | `'*'`         | Day of month to run ownCloud cron at.\n| `node['owncloud']['cron']['month']`                 | `'*'`         | Month to run ownCloud cron at.\n| `node['owncloud']['cron']['weekday']`               | `'*'`         | Weekday to run ownCloud cron at.\n| `node['owncloud']['skip_permissions']`              | `false`       | Whether to skip settings the permissions of the ownCloud directory. Set this to `true` when using NFS synced folders.\n| `node['owncloud']['manage_database']`               | *calculated*  | Whether to manage database creation.\n| `node['owncloud']['mysql']['instance']`             | `'default'`   | MySQL database instance name to run by the `mysql_service` LWRP from the [mysql](https://supermarket.chef.io/cookbooks/mysql) cookbook.\n| `node['owncloud']['mysql']['data_dir']`             | *calculated*  | MySQL data files path.\n| `node['owncloud']['mysql']['run_group']`            | *calculated*  | MySQL system group.\n| `node['owncloud']['mysql']['run_user']`             | *calculated*  | MySQL system user.\n| `node['owncloud']['mysql']['version']`              | `nil`         | MySQL version to install by the `mysql_service` LWRP. Refer to [`mysql` cookbook platform support section](https://github.com/chef-cookbooks/mysql#platform-support).\n| `node['owncloud']['mysql']['server_root_password']` | *calculated*  | MySQL root password to access a database instance.\n| `node['owncloud']['encrypt_attributes']`            | `false`       | Whether to encrypt ownCloud attributes containing credential secrets.\n\n## Platform Support Related Attributes\n\nSome cookbook attributes are used internally to support the different platforms. Surely you want to change them if you want to support new platforms or want to improve the support of some platforms already supported.\n\n| Attribute                                | Default       | Description                       |\n|:-----------------------------------------|:--------------|:----------------------------------|\n| `node['owncloud']['packages']['core']`   | *calculated*  | ownCloud core package names as array.\n| `node['owncloud']['packages']['sqlite']` | *calculated*  | ownCloud package names array for SQLite.\n| `node['owncloud']['packages']['mysql']`  | *calculated*  | ownCloud package names array for MySQL.\n| `node['owncloud']['packages']['pgsql']`  | *calculated*  | ownCloud package names array for PostgreSQL.\n\nRecipes\n=======\n\n## owncloud::default\n\nInstalls and configures ownCloud.\n\nUsage\n=====\n\nAdd `recipe[owncloud]` to your node's run list or role, or include it in another cookbook.\n\nThe back-end database will be [MySQL](http://www.mysql.com/) by default, but [PostgreSQL](http://www.postgresql.org/) and [SQLite](http://www.sqlite.org/) databases can also be used. Database type can be set on `node['owncloud']['config']['dbtype']`, supported values are `mysql`, `pgsql` and `sqlite`.\n\nOn the first run, several passwords will be automatically generated and stored in the node:\n\n* `node['owncloud']['admin']['pass']`\n* `node['owncloud']['config']['dbpassword']` (Only when using *MySQL* or *PostgreSQL*)\n* `node['owncloud']['mysql']['server_root_password']` (Only when using *MySQL*)\n\nWhen using Chef Solo, these passwords need to be set manually.\n\nThe attribute `node['owncloud']['server_name']` should be set to the domain name used by the ownCloud installation. If not set, `node['fqdn']` will be used instead.\n\nBy default ownCloud cookbook relies on a local *Postfix* installation to send emails. But a remote SMTP server can be used changing `node['owncloud']['config']['mail_smtpmode']` to `smtp` and setting up the rest of the mail configuration attributes (see example below).\n\n## Examples\n\n### Basic ownCloud Role\n\n```ruby\nname 'owncloud'\ndescription 'Install ownCloud'\ndefault_attributes(\n  'owncloud' => {\n    'server_name' => 'cloud.mysite.com'\n  }\n)\nrun_list(\n  'recipe[owncloud]'\n)\n```\n\n### Using Remote SMTP Server\n\nIn this example an [Amazon Simple Email Service](http://aws.amazon.com/ses/) account is used to send emails.\n\n```ruby\nname 'owncloud_ses'\ndescription 'Install ownCloud and use an AWS SES account to send emails'\ndefault_attributes(\n  'owncloud' => {\n    'server_name' => 'cloud.mysite.com',\n    'config' => {\n      'mail_smtpmode' => 'smtp',\n      'mail_smtphost' => 'email-smtp.us-east-1.amazonaws.com',\n      'mail_smtpport' => 465,\n      'mail_smtpsecure' => 'tls',\n      'mail_smtpauth' => true,\n      'mail_smtpauthtype' => 'LOGIN',\n      'mail_smtpname' => 'amazon-ses-username',\n      'mail_smtppassword' => 'amazon-ses-password'\n    }\n  }\n)\nrun_list(\n  'recipe[owncloud]'\n)\n```\n\n### Deploying from Git\n\nThe ownCloud code can be deployed from the Git repository. Git recipe must be included on the run_list.\n\n```ruby\nname 'owncloud_git'\ndescription 'Install ownCloud from Git'\ndefault_attributes(\n  'owncloud' => {\n    'server_name' => 'cloud.mysite.com',\n    'deploy_from_git' => true,\n    'git_ref' => 'master'\n  }\n)\nrun_list(\n  'recipe[git::default]',\n  'recipe[owncloud]'\n)\n```\n\n## The HTTPS Certificate\n\nownCloud will accept HTTPS requests when `node['owncloud']['ssl']` is set to `true`. By default the cookbook will create a self-signed certificate, but a custom one can also be used.\n\nThe custom certificate can be read from several sources:\n\n* Attribute\n* Data Bag\n* Encrypted Data Bag\n* Chef Vault\n* File\n\nThis cookbook uses the [`ssl_certificate`](https://supermarket.chef.io/cookbooks/ssl_certificate) cookbook to create the HTTPS certificate. The namespace used is `node['owncloud']`. For example:\n\n```ruby\nnode.default['owncloud']['common_name'] = 'owncloud.example.com'\ninclude_recipe 'owncloud'\n```\n\nSee the [`ssl_certificate` namespace documentation](https://supermarket.chef.io/cookbooks/ssl_certificate#namespaces) for more information.\n\n### Custom HTTPS Certificate from an Attribute\n\n```ruby\nname 'owncloud_ssl_attribute'\ndescription 'Install ownCloud with a custom SSL certificate from an Attribute'\ndefault_attributes(\n  'owncloud' => {\n    'server_name' => 'cloud.mysite.com',\n    'ssl' => true,\n    'ssl_key' => {\n      'source' => 'attribute',\n      'content' => '-----BEGIN PRIVATE KEY-----[...]'\n    },\n    'ssl_cert' => {\n      'source' => 'attribute',\n      'content' => '-----BEGIN CERTIFICATE-----[...]'\n    }\n  }\n)\nrun_list(\n  'recipe[owncloud]'\n)\n```\n\n### Custom HTTPS Certificate from a Data Bag\n\n```ruby\nname 'owncloud_ssl_data_bag'\ndescription 'Install ownCloud with a custom SSL certificate from a Data Bag'\ndefault_attributes(\n  'owncloud' => {\n    'server_name' => 'cloud.mysite.com',\n    'ssl' => true,\n    'ssl_key' => {\n      'source' => 'data-bag',\n      'bag' => 'ssl',\n      'item' => 'key',\n      'item_key' => 'content',\n      'encrypted' => true,\n      'secret_file' => '/path/to/secret/file' # optional\n    },\n    'ssl_cert' => {\n      'source' => 'data-bag',\n      'bag' => 'ssl',\n      'item' => 'cert',\n      'item_key' => 'content',\n      'encrypted' => false\n    }\n  }\n)\nrun_list(\n  'recipe[owncloud]'\n)\n```\n\n### Custom HTTPS Certificate from Chef Vault\n\n```ruby\nname 'owncloud_ssl_chef_vault'\ndescription 'Install ownCloud with a custom SSL certificate from Chef Vault'\ndefault_attributes(\n  'owncloud' => {\n    'server_name' => 'cloud.mysite.com',\n    'ssl' => true,\n    'ssl_key' => {\n      'source' => 'chef-vault',\n      'bag' => 'owncloud',\n      'item' => 'ssl',\n      'item_key' => 'key'\n    },\n    'ssl_cert' => {\n      'source' => 'chef-vault',\n      'bag' => 'owncloud',\n      'item' => 'ssl',\n      'item_key' => 'cert'\n    }\n  }\n)\nrun_list(\n  'recipe[owncloud]'\n)\n```\n\n### Custom HTTPS Certificate from File\n\nThis is useful if you create the certificate on another cookbook.\n\n```ruby\nname 'owncloud_ssl_file'\ndescription 'Install ownCloud with a custom SSL certificate from file'\ndefault_attributes(\n  'owncloud' => {\n    'server_name' => 'cloud.mysite.com',\n    'ssl' => true,\n    'ssl_key' => {\n      'source' => 'file',\n      'path' => '/path/to/ssl/key'\n    },\n    'ssl_cert' => {\n      'source' => 'file',\n      'path' => '/path/to/ssl/cert'\n    }\n  }\n)\nrun_list(\n  'recipe[owncloud]'\n)\n```\n\nUpgrading the Application\n=========================\n\nIf new owncloud version is released and you has notified in web user interface about update available, then you must re-run chef-client on owncloud server.\n\nCookbook recipes will download latest release version and install it to server.\n\nThen you must proceed with update in the web interface and the system will be updated.\n\nEncrypted Attributes\n====================\n\nThis cookbook can use the [encrypted_attributes](https://supermarket.chef.io/cookbooks/encrypted_attributes) cookbook to encrypt the secrets generated during the *Chef Run*. This feature is disabled by default, but can be enabled setting the `node['owncloud']['encrypt_attributes']` attribute to `true`. For example:\n\n```ruby\ninclude_recipe 'encrypted_attributes::users_data_bag'\nnode.default['owncloud']['encrypt_attributes'] = true\ninclure_recipe 'owncloud'\n```\n\nThis will create the following encrypted attributes:\n\n* `node['owncloud']['admin']['pass']`: ownCloud Admin password.\n* `node['owncloud']['mysql']['server_root_password']`: MySQL *root* user password.\n* `node['owncloud']['config']['dbpassword']`: MySQL ownCloud user password.\n\nRead the [`chef-encrypted-attributes` gem documentation](http://onddo.github.io/chef-encrypted-attributes/) to learn how to read them.\n\n**Warning:** When PostgreSQL is used, the database root password will still remain unencrypted in the `node['postgresql']['password']['postgres']` attribute due to limitations of the [postgresql cookbook](https://supermarket.chef.io/cookbooks/postgresql).\n\nPostgreSQL Support\n==================\n\nownCloud with PostgreSQL may not work properly on some platforms. [Any feedback you can provide regarding the PostgreSQL support](https://github.com/zuazo/owncloud-cookbook/issues/new?title=PostgreSQL%20Support) will be greatly appreciated.\n\n## PostgreSQL Versions `< 9.3`\n\nIf you are using PostgreSQL version `< 9.3`, you may need to adjust the `shmmax` and `shmall` kernel parameters to configure the shared memory. You can see [the example used for the integration tests](https://github.com/zuazo/owncloud-cookbook/tree/master/test/cookbooks/owncloud_test/recipes/postgresql_memory.rb).\n\nDeploy with Docker\n==================\n\nYou can use the *Dockerfile* included in the [cookbook source code](https://github.com/zuazo/owncloud-cookbook) to run the cookbook inside a container:\n\n    $ docker build -t chef-owncloud .\n    $ docker run -ti chef-owncloud\n\nThe sample *Dockerfile*:\n\n```Dockerfile\nFROM zuazo/chef-local:debian-7\n\nCOPY . /tmp/owncloud\nRUN berks vendor -b /tmp/owncloud/Berksfile $COOKBOOK_PATH\nRUN chef-client -r \"recipe[owncloud]\"\n\nEXPOSE 80\n\nCMD [\"apache2\", \"-D\", \"FOREGROUND\"]\n```\n\nSee the [chef-local container documentation](https://hub.docker.com/r/zuazo/chef-local/) for more examples.\n\nTesting\n=======\n\nSee [TESTING.md](https://github.com/zuazo/owncloud-cookbook/blob/master/TESTING.md).\n\nContributing\n============\n\nPlease do not hesitate to [open an issue](https://github.com/zuazo/owncloud-cookbook/issues/new) with any questions or problems.\n\nSee [CONTRIBUTING.md](https://github.com/zuazo/owncloud-cookbook/blob/master/CONTRIBUTING.md).\n\nTODO\n====\n\nSee [TODO.md](https://github.com/zuazo/owncloud-cookbook/blob/master/TODO.md).\n\n\nLicense and Author\n==================\n\n|                      |                                          |\n|:---------------------|:-----------------------------------------|\n| **Author:**          | [Raul Rodriguez](https://github.com/raulr) (<raul@onddo.com>)\n| **Author:**          | [Xabier de Zuazo](https://github.com/zuazo) (<xabier@zuazo.org>)\n| **Contributor:**     | [Nacer Laradji](https://github.com/laradji)\n| **Contributor:**     | [LEDfan](https://github.com/LEDfan)\n| **Contributor:**     | [@avsh](https://github.com/avsh)\n| **Contributor:**     | [@cvl-skubriev](https://github.com/cvl-skubriev)\n| **Contributor:**     | [Michael Sprauer](https://github.com/MichaelSp)\n| **Copyright:**       | Copyright (c) 2015, Xabier de Zuazo\n| **Copyright:**       | Copyright (c) 2013-2015 Onddo Labs, SL.\n| **License:**         | Apache License, Version 2.0\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n        http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apache2",
      "revision": "~> 3.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": "~> 2.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/cron",
      "revision": "~> 1.6",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/database",
      "revision": "~> 4.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/encrypted_attributes",
      "revision": "~> 0.2",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mysql2_chef_gem",
      "revision": "~> 1.0.1",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mysql",
      "revision": "~> 6.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nginx",
      "revision": "~> 2.7",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/openssl",
      "revision": "~> 4.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/php",
      "revision": "~> 1.4",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/php-fpm",
      "revision": "~> 0.7",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/postfix",
      "revision": "~> 3.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/postgresql",
      "revision": "~> 3.4.18",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ssl_certificate",
      "revision": "~> 1.1",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "owncloud::default": "Installs and configures ownCloud"
  },
  "parameters": {
    "owncloud/version": {
      "display_name": "ownCloud Version",
      "description": "Version of ownCloud to install",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/download_url": {
      "display_name": "ownCloud Download Url",
      "description": "Url from where ownCloud will be downloaded",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/deploy_from_git": {
      "display_name": "ownCloud Deploy From Git",
      "description": "Whether ownCloud should be deployed from the git repository",
      "type": "string",
      "required": "optional",
      "default": "false",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/git_repo": {
      "display_name": "ownCloud Git Repo",
      "description": "Url of the ownCloud git repository",
      "type": "string",
      "required": "optional",
      "default": "https://github.com/owncloud/core.git",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/git_ref": {
      "display_name": "ownCloud Git Ref",
      "description": "Git reference to deploy",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/www_dir": {
      "display_name": "ownCloud www Dir",
      "description": "Root directory defined in Apache where web documents are stored",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/dir": {
      "display_name": "ownCloud Dir",
      "description": "Directory where ownCloud will be installed",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/data_dir": {
      "display_name": "ownCloud Data Dir",
      "description": "Directory where ownCloud data will be stored",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/server_name": {
      "display_name": "ownCloud Server Name",
      "description": "Sets the server name for the ownCloud virtual host",
      "calculated": true,
      "type": "string",
      "required": "recommended",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/server_aliases": {
      "display_name": "ownCloud Server Aliases",
      "description": "Sets the server name aliases for the ownCloud virtual host",
      "type": "array",
      "required": "optional",
      "default": [],
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/install_postfix": {
      "display_name": "install Postfix?",
      "description": "Whether to install Postfix when a local MTA is needed",
      "choice": [
        "true",
        "false"
      ],
      "type": "string",
      "required": "optional",
      "default": "true",
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/web_server": {
      "display_name": "Web Server",
      "description": "Web server to use: apache or nginx",
      "choice": [
        "apache",
        "nginx"
      ],
      "type": "string",
      "required": "optional",
      "default": "apache",
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/php-fpm/pool": {
      "display_name": "PHP-FPM pool",
      "description": "PHP-FPM pool name to use with ownCloud",
      "type": "string",
      "required": "optional",
      "default": "owncloud",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/max_upload_size": {
      "display_name": "Max Upload Size",
      "description": "Maximum allowed size for uploaded files",
      "type": "string",
      "required": "optional",
      "default": "512M",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/sendfile": {
      "display_name": "Sendfile",
      "description": "Whether to enable Sendfile on web server. You should set to false if you use NFS or SMB mounts",
      "choice": [
        "true",
        "false"
      ],
      "calculated": true,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/ssl": {
      "display_name": "ownCloud Use SSL?",
      "description": "Whether ownCloud should accept requests through SSL",
      "choice": [
        "true",
        "false"
      ],
      "type": "string",
      "required": "optional",
      "default": "true",
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/admin/user": {
      "display_name": "ownCloud Admin Username",
      "description": "Administrator username",
      "type": "string",
      "required": "optional",
      "default": "admin",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/admin/pass": {
      "display_name": "ownCloud Admin Password",
      "description": "Administrator password",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/dbtype": {
      "display_name": "ownCloud Database Type",
      "description": "Type of database, can be sqlite, mysql or pgsql",
      "choice": [
        "mysql",
        "pgsql",
        "sqlite"
      ],
      "type": "string",
      "required": "optional",
      "default": "mysql",
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/dbname": {
      "display_name": "ownCloud Database Name",
      "description": "Name of the ownCloud database",
      "type": "string",
      "required": "optional",
      "default": "owncloud",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/dbuser": {
      "display_name": "ownCloud Database User",
      "description": "User to access the ownCloud database",
      "type": "string",
      "required": "optional",
      "default": "owncloud",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/dbpassword": {
      "display_name": "ownCloud Database Password",
      "description": "Password to access the ownCloud database",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/dbhost": {
      "display_name": "ownCloud Database Host",
      "description": "Host running the ownCloud database",
      "type": "string",
      "required": "optional",
      "default": "127.0.0.1",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/dbport": {
      "display_name": "ownCloud Database Port",
      "description": "Port the ownCloud database is running at",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/dbtableprefix": {
      "display_name": "ownCloud Database Table Prefix",
      "description": "Prefix for the ownCloud tables in the database",
      "type": "string",
      "required": "optional",
      "default": "",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/mail_smtpmode": {
      "display_name": "ownCloud Mail SMTP Mode",
      "description": "Mode to use for sending mail, can be sendmail, smtp, qmail or php",
      "choice": [
        "sendmail",
        "smtp",
        "qmail",
        "php"
      ],
      "type": "string",
      "required": "optional",
      "default": "sendmail",
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/mail_smtphost": {
      "display_name": "ownCloud Mail SMTP Host",
      "description": "Host to use for sending mail, depends on mail_smtpmode if this is used",
      "type": "string",
      "required": "optional",
      "default": "127.0.0.1",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/mail_smtpport": {
      "display_name": "ownCloud Mail SMTP Port",
      "description": "Port to use for sending mail, depends on mail_smtpmode if this is used",
      "type": "string",
      "required": "optional",
      "default": "25",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/mail_smtptimeout": {
      "display_name": "ownCloud Mail SMTP Timeout",
      "description": "SMTP server timeout in seconds for sending mail, depends on mail_smtpmode if this is used",
      "type": "string",
      "required": "optional",
      "default": "10",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/mail_smtpsecure": {
      "display_name": "ownCloud Mail SMTP Secure",
      "description": "SMTP connection prefix or sending mail, depends on mail_smtpmode if this is used. Can be \"\", ssl or tls",
      "choice": [
        "",
        "ssl",
        "tls"
      ],
      "type": "string",
      "required": "optional",
      "default": "",
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/mail_smtpauth": {
      "display_name": "ownCloud Mail SMTP Auth",
      "description": "Whether authentication is needed to send mail, depends on mail_smtpmode if this is used",
      "choice": [
        "true",
        "false"
      ],
      "type": "string",
      "required": "optional",
      "default": "false",
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/mail_smtpauthtype": {
      "display_name": "ownCloud Mail SMTP Auth Type",
      "description": "Authentication type needed to send mail, depends on mail_smtpmode if this is used. Can be LOGIN, PLAIN or NTLM",
      "choice": [
        "LOGIN",
        "PLAIN",
        "NTLM"
      ],
      "type": "string",
      "required": "optional",
      "default": "LOGIN",
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/mail_smtpname": {
      "display_name": "ownCloud Mail SMTP Name",
      "description": "Username to use for sendmail mail, depends on mail_smtpauth if this is used",
      "type": "string",
      "required": "optional",
      "default": "",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/config/mail_smtppassword": {
      "display_name": "ownCloud Mail SMTP Password",
      "description": "Password to use for sendmail mail, depends on mail_smtpauth if this is used",
      "type": "string",
      "required": "optional",
      "default": "",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/cron/enabled": {
      "display_name": "ownCloud cron enabled",
      "description": "Whether to enable ownCloud cron",
      "type": "string",
      "required": "optional",
      "default": "true",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/cron/min": {
      "display_name": "ownCloud cron minute",
      "description": "Minute to run ownCloud cron at",
      "type": "string",
      "required": "optional",
      "default": "*/15",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/cron/hour": {
      "display_name": "ownCloud cron hour",
      "description": "Hour to run ownCloud cron at",
      "type": "string",
      "required": "optional",
      "default": "*",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/cron/day": {
      "display_name": "ownCloud cron day",
      "description": "Day of month to run ownCloud cron at",
      "type": "string",
      "required": "optional",
      "default": "*",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/cron/month": {
      "display_name": "ownCloud cron month",
      "description": "Month to run ownCloud cron at",
      "type": "string",
      "required": "optional",
      "default": "*",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/cron/weekday": {
      "display_name": "ownCloud cron weekday",
      "description": "Weekday to run ownCloud cron at",
      "type": "string",
      "required": "optional",
      "default": "*",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/skip_permissions": {
      "display_name": "Skip permissions",
      "description": "Whether to skip settings the permissions of the ownCloud directory. Set this to true when using NFS synced folders.",
      "choice": [
        "true",
        "false"
      ],
      "type": "string",
      "required": "optional",
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/manage_database": {
      "display_name": "database manage",
      "description": "Whether to manage database creation.",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/mysql/instance": {
      "display_name": "MySQL database instance name",
      "description": "MySQL database instance name to run by the mysql_service lwrp from the mysql cookbook.",
      "type": "string",
      "required": "optional",
      "default": "default",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/database/data_dir": {
      "display_name": "MySQL server data dir",
      "description": "MySQL data files path.",
      "type": "string",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/database/run_group": {
      "display_name": "MySQL run group",
      "description": "MySQL system group.",
      "type": "string",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/database/run_user": {
      "display_name": "MySQL run user",
      "description": "MySQL system user.",
      "type": "string",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/database/version": {
      "display_name": "MySQL server version",
      "description": "MySQL version to install by the mysql_service lwrp. Refer to https://github.com/chef-cookbooks/mysql#platform-support",
      "type": "string",
      "required": "optional",
      "default": "nil",
      "choice": [],
      "calculated": false,
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/mysql/server_root_password": {
      "display_name": "Database Root Password",
      "description": "Database admin password to access a database instance.",
      "calculated": true,
      "type": "string",
      "required": "optional",
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/encrypt_attributes": {
      "display_name": "owncloud encrypt attributes",
      "description": "Whether to encrypt ownCloud attributes containing credential secrets.",
      "type": "string",
      "choice": [
        "true",
        "false"
      ],
      "default": "false",
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/packages/core": {
      "display_name": "owncloud packages core",
      "description": "ownCloud core package names as array.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/packages/sqlite": {
      "display_name": "owncloud packages sqlite",
      "description": "ownCloud package names array for SQLite.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/packages/mysql": {
      "display_name": "owncloud packages mysql",
      "description": "ownCloud package names array for MySQL.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "owncloud/packages/postgresql": {
      "display_name": "owncloud packages postgresql",
      "description": "ownCloud package names array for PostgreSQL.",
      "type": "array",
      "required": "optional",
      "calculated": true,
      "choice": [],
      "recipes": [],
      "mapping": "cookbook_attribute"
    }
  }
}