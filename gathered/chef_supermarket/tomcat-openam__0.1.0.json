{
  "name": "tomcat-openam Chef cookbook",
  "chef_cookbook_name": "tomcat-openam",
  "revision": "0.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/tomcat-openam",
    "https://supermarket.chef.io/cookbooks/tomcat-openam/download",
    "https://supermarket.chef.io/cookbooks/tomcat-openam/versions/0.1.0",
    "https://supermarket.chef.io/cookbooks/tomcat-openam/versions/0.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/tomcat-openam/versions/0.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/tomcat-openam",
    "https://supermarket.chef.io/api/v1/cookbooks/tomcat-openam/versions/0.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Application Server/Tomcat"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/tomcat-openam",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/tomcat-openam/versions/0.1.0/download",
  "deprecated": false,
  "created": "2013-02-22T12:05:05.000Z",
  "updated": "2013-07-12T12:31:46.000Z",
  "description": "Installs/Configures tomcat7 and OpenAM",
  "maintainer": {
    "name": "thomasalrin",
    "email": "alrin@megam.co.in"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 3,
  "downloads_count": 2505570,
  "downloads_count_revision": 1246824,
  "repository_url": "https://github.com/thomasalrin/tomcat-openam",
  "issues_url": "https://github.com/thomasalrin/tomcat-openam",
  "chef_source_url": "https://github.com/thomasalrin/tomcat-openam",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nInstalls and configures\nTomcat version 7.0.33 with OpenAM 10.1.0\nOpenAM provides Access Management, Federated SSO. For more information,\n[Forgerock - OpenAM](http://www.forgerock.org/openam.html)\n\n\nWhere can this be used ?\n============\nHelps to setup an cloud indentity for your organization. Developers/Testers can standup an cloud identity to test against.\n\n\nRequirements\n============\n\nPlatform:\n\n* Debian, Ubuntu (OpenJDK)\n\n\nThe following Opscode cookbooks are dependencies:\n\n* apache2\n* java\n* apt\n* opendj-openam `(If you wish to have seperate opendj)`\n\nAttributes\n==========\n[OpenAM Configuration](http://openam.forgerock.org/openam-documentation/openam-doc-source/doc/install-guide/index.html)\n* `node[\"tomcat-openam\"][\"opendj\"][\"arg-val\"][\"baseDN\"]` - LDAP BaseDN value, default `dc=example,dc=com`\n* `node[\"tomcat-openam\"][\"opendj\"][\"arg-val\"][\"rootUserDN\"]` - LDAP root user name, default `'n=Directory Manager'`\n* `node[\"tomcat-openam\"][\"opendj\"][\"arg-val\"][\"rootUserPassword\"]` - LDAP root user password, default `secret12`\n* `node[\"tomcat-openam\"][\"opendj\"][\"arg-val\"][\"ldapPort\"]` - LDAP port value, default `1389`\n\n* `node[\"tomcat-openam\"][\"java-options\"]` - Heap storage limits, default `-Xms256m -Xmx1024m`\n\n* `node[\"tomcat-openam\"][\"cfg\"][\"server-url\"]` - OpenAM server url, default `http://#{node[\"tomcat-openam\"][\"dns\"]}:8080`\n* `node[\"tomcat-openam\"][\"cfg\"][\"deployment-uri\"]` - OpenAM deployment uri, default `/openam`\n* `node[\"tomcat-openam\"][\"cfg\"][\"base-dir\"]` - OpenAM base directory, default `/home/ubuntu/openam`\n* `node[\"tomcat-openam\"][\"cfg\"][\"locale\"]` - Locale for OpenAM, default `en_US`\n* `node[\"tomcat-openam\"][\"cfg\"][\"platform-locale\"]` - Platform Locale for OpenAM, defualt `en_US`\n* `node[\"tomcat-openam\"][\"cfg\"][\"admin-pwd\"]` - OpenAM admin password, default `adminp3me`\n* `node[\"tomcat-openam\"][\"cfg\"][\"amldapuserpasswd\"]` - LDAP user password, default `adminl3me`\n* `node[\"tomcat-openam\"][\"cfg\"][\"cookie-domain\"]` - Domain for cookie, default `node[:ec2][:public_hostname]`\n* `node[\"tomcat-openam\"][\"cfg\"][\"data-store\"]` - OpenAM data store, default `embedded`\n\n* `node[\"tomcat-openam\"][\"cfg\"][\"directory\"][\"ssl\"]` - OpenAM SSL directory, default `SIMPLE`\n* `node[\"tomcat-openam\"][\"cfg\"][\"directory\"][\"server\"]` - OpenAM server directory, default `node[\"tomcat-openam\"][\"dns\"]`\n* `node[\"tomcat-openam\"][\"cfg\"][\"directory\"][\"port\"]` - OpenAM directory port, default `50389`\n* `node[\"tomcat-openam\"][\"cfg\"][\"directory\"][\"admin-port\"]` - OpenAM directory admin-port, default `5444`\n* `node[\"tomcat-openam\"][\"cfg\"][\"directory\"][\"jmx-port\"]` - OpenAM directory jmx-port, default `5689`\n* `node[\"tomcat-openam\"][\"cfg\"][\"root-suffix\"]` OpenAM root-suffix, default `o=openam`\n* `node[\"tomcat-openam\"][\"cfg\"][\"ds-dirmgrdn\"]` - Directory Manager name, default `cn=Directory Manager`\n* `node[\"tomcat-openam\"][\"cfg\"][\"ds-dirmgrpasswd\"]` - Directory manager password, default `emdstor3me`\n* `node[\"tomcat-openam\"][\"cfg\"][\"user-store\"][\"type\"]` - User store type, default `LDAPv3ForOpenDS`\n* `node[\"tomcat-openam\"][\"cfg\"][\"user-store\"][\"ssl\"]` - User store SSL, default `SIMPLE`\n* `node[\"tomcat-openam\"][\"cfg\"][\"user-store\"][\"host\"]` - User store host (OpenDJ URL) `Only if` you need seperate OpenDJ (for the recipe tomcat-openam::configure)\n* `node[\"tomcat-openam\"][\"cfg\"][\"user-store\"][\"port\"]` - User store port, default `1389`\n* `node[\"tomcat-openam\"][\"cfg\"][\"user-store\"][\"suffix\"]` - User store suffix, default `dc=example,dc=com`\n* `node[\"tomcat-openam\"][\"cfg\"][\"user-store\"][\"mgrdn\"]` - User store manager domain name, default `cn=Directory Manager`\n* `node[\"tomcat-openam\"][\"cfg\"][\"user-store\"][\"passwd\"]` - User store password, default `secret12`\n\nUsage\n=====\n\nSimply include the recipe where you want Tomcat on apache server with OpenAM installed. This cookbook contains three different recipes, namely\n\n\t* full_stack\n\t* vanilla\n\t* configure\n\nThis cookbook creates a new tomcat server by using our packaged tar ball stored in `S3`. This tar ball has changes to run tomcat behind apache2.\n\n#### Changes in `apache2` cookbook\n\nThe following two changes are needed in the apache2 cookbook. The tomcat tar bundle `server.xml` is equipped to handle the change.\n\n* By default apache2 cookbook's mod_proxy_http.rb recipe contain the following code\n\n\tapache_module \"proxy_http\"\n\nYou just need to change it as follows\n\n\tapache_module \"proxy_http\" do\n\t  conf true\n\tend\n\n* Create a file in /templates/default/mods/`proxy_http.conf.erb` with the following content\n\n```conf\n<IfModule mod_proxy_http.c>\n  ProxyRequests Off\n  ProxyPreserveHost On\n \n<Proxy *>\n    Order deny,allow\n    Allow from all\n</Proxy>\n \nProxyPass /openam http://localhost:8081/openam\nProxyPassReverse /openam http://localhost:8081/openam\n<Location /openam>\n    Order allow,deny\n    Allow from all\n</Location>\n</IfModule>\n\n```\n\nfull_stack\n----------\nThis recipe installs apache2, java, tomcat7, OpenAM and OpenDJ in a single instance and the configurations of all has been done in the same instance.\n\nAn example for a tomcat-openam full_stack role:\n\n\tname \"openam_fullstack\"\n\trun_list \"recipe[apt]\", \"recipe[apache2]\", \"recipe[tomcat-openam::full_stack]\"\n\nvanilla\n-------\nThis recipe installs apache2, java, tomcat7 and OpenAM in an instance. apache2 and tomcat7 has been configured in the same instance. But configuration of OpenAM needs OpenDJ.\n\nAn example for a tomcat-openam vanilla role:\n\n\tname \"openam_vanilla\"\n\trun_list \"recipe[apt]\", \"recipe[apache2]\", \"recipe[tomcat-openam::vanilla]\"\n\nconfigure\n---------\nThis recipe is just to configure OpenAM. For this you need OpenDJ. There is a cookbook for OpenDJ in cookbook website as opendj-openam. Run opendj in another instance using the `opendj-openam` cookbook. Give the url id of opendj to `node[\"tomcat-openam\"][\"cfg\"][\"user-store\"][\"host\"]`\n\nAn example for a opendj role:\n\n\tname \"opendj-openam\"\n\trun_list \"recipe[apt]\", \"recipe[opendj-openam::single_instance]\"\n\nAn example for a tomcat-openam configure role:\n\n\tname \"openam_configure\"\n\trun_list \"recipe[tomcat-openam::configure]\"\n\n\nLicense and Author\n==================\n\nAuthor:: Kishore Kumar (<nkishore@megam.co.in>)\nAuthor:: Thomas Alrin (<alrin@megam.co.in>)\n\n\nCopyright:: 2013, Megam Systems\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "tomcat-openam::full_stack": "Installs and configures Tomcat, OpenDJ and OpenAM In a single instance",
    "tomcat-openam::vanilla": "Installs Tomcat and OpenAM. But Configures only tomcat",
    "tomcat-openam::configure": "Configures OpenAM"
  }
}