{
  "name": "noosfero Chef cookbook",
  "chef_cookbook_name": "noosfero",
  "revision": "1.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/noosfero",
    "https://supermarket.chef.io/cookbooks/noosfero/download",
    "https://supermarket.chef.io/cookbooks/noosfero/versions/1.1.0",
    "https://supermarket.chef.io/cookbooks/noosfero/versions/1.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/noosfero/versions/1.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/noosfero",
    "https://supermarket.chef.io/api/v1/cookbooks/noosfero/versions/1.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Style/Virtualization Level/Hardware/Network",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/noosfero",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/noosfero/versions/1.1.0/download",
  "deprecated": false,
  "created": "2014-05-14T03:17:29.000Z",
  "updated": "2015-10-07T00:43:00.098Z",
  "description": "Install/configure Noosfero social-economic network",
  "maintainer": {
    "name": "brauliobo",
    "email": "braulio@eita.org.br"
  },
  "license": "GPLv3+",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 43680723,
  "downloads_count_revision": 1257255,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "noosfero Cookbook\n========================\nInstall/configure Noosfero social-economic network (see http://noosfero.org) \n\nAttributes\n----------\n#### noosfero::default\nThe default recipe runs others recipes according to the settings\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:service_name]</tt></td>\n    <td>The Noosfero's service name, which define the init.d script name and paths</td>\n    <td><tt>\"noosfero\"</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:rails_env]</tt></td>\n    <td>The Rails environment to be used</td>\n    <td><tt>\"production\"</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:rvm_load]</tt></td>\n    <td>The ruby string to be load (e.g. \"ree@noosfero\")</td>\n    <td><tt>\"system\"</tt></td>\n  </tr>\n</table>\n#### noosfero::install\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:install_from]</tt></td>\n    <td>What is used to install noosfero: \"git\" (default) to fetch code from git and \"package\" to install noosfero from debian repository</td>\n    <td><tt>\"git\"</tt></td>\n  </tr>\n</table>\n\n#### noosfero::git\\_install (on install\\_from == \"git\")\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:user]</tt></td>\n    <td>The user to create and to run noosfero</td>\n    <td><tt>default[:noosfero][:service_name]</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:group]</tt></td>\n    <td>The group to create and to run noosfero</td>\n    <td><tt>default[:noosfero][:service_name]</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:git_url]</tt></td>\n    <td>The git repo containing Noosfero to be used</td>\n    <td><tt>https://gitlab.com/noosfero/noosfero.git</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:git_revision]</tt></td>\n    <td>The branch, tag or commit to be used</td>\n    <td><tt>\"stable\"</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:upgrade_script]</tt></td>\n    <td>A script to be run on git sync</td>\n    <td><tt>''</tt></td>\n  </tr>\n  <tr>\n    <th colspan=3>Paths</th>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:path]</tt></td>\n    <td>Set the path to clone the git repo to be the base path for code, log, tmp and others noosfero directories</td>\n    <td><tt>nil</tt> (use default system dirs, see below)</td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:code_path]</tt></td>\n    <td>Overwrite the code's path</td>\n    <td>\n      <tt>node[:noosfero][:path]</tt> (with node[:noosfero][:path])\n      <br>\n      <tt>\"/usr/share/#{service_name}\"</tt> (without node[:noosfero][:path])\n    </td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:data_path]</tt></td>\n    <td>Overwrite the data path</td>\n    <td>\n      <tt>node[:noosfero][:path]</tt> (with node[:noosfero][:path])\n      <br>\n      <tt>\"/var/lib/#{service_name}\"</tt> (without node[:noosfero][:path])\n    </td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:config_path]</tt></td>\n    <td>Overwrite the config path</td>\n    <td>\n      <tt>\"#{node[:noosfero][:path]}/config\"</tt> (with node[:noosfero][:path])\n      <br>\n      <tt>\"/etc/#{service_name}\"</tt> (without node[:noosfero][:path])\n    </td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:log_path]</tt></td>\n    <td>Overwrite the log path</td>\n    <td>\n      <tt>\"#{node[:noosfero][:path]}/log\"</tt> (with node[:noosfero][:path])\n      <br>\n      <tt>\"/var/log/#{service_name}\"</tt> (without node[:noosfero][:path])\n    </td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:run_path]</tt></td>\n    <td>Overwrite the run path</td>\n    <td>\n      <tt>\"#{node[:noosfero][:path]}/run\"</tt> (with node[:noosfero][:path])\n      <br>\n      <tt>\"/var/run/#{service_name}\"</tt> (without node[:noosfero][:path])\n    </td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:tmp_path]</tt></td>\n    <td>Overwrite the tmp path</td>\n    <td>\n      <tt>\"#{node[:noosfero][:path]}/tmp\"</tt> (with node[:noosfero][:path])\n      <br>\n      <tt>\"/var/tmp/#{service_name}\"</tt> (without node[:noosfero][:path])\n    </td>\n  </tr>\n</table>\n\n#### noosfero::package\\_install (on install\\_from == \"package\")\nInstall noosfero using the Colivre's apt repository\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n</table>\n\n#### noosfero::dependencies (on install\\_from == \"git\")\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:dependencies_with]</tt></td>\n    <td>How to install dependencies: \"quick_start\", \"bundler\" or \"packages\" </td>\n    <td> <tt>\"quick_start\"</tt> </td>\n  </tr>\n</table>\n\n#### noosfero::database (on install\\_from == \"git\")\nGenerate Rails' database.yml\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:db][:name]</tt></td>\n    <td>Database name</td>\n    <td> <tt>node[:noosfero][:service_name]</tt> </td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:db][:hostname]</tt></td>\n    <td>Database host</td>\n    <td> <tt>\"localhost\"</tt> </td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:db][:port]</tt></td>\n    <td>Database port</td>\n    <td> <tt>\"\"</tt> </td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:db][:username]</tt></td>\n    <td>Database username</td>\n    <td> <tt>node[:noosfero][:user]</tt> </td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:db][:password]</tt></td>\n    <td>Database password</td>\n    <td> <tt>\"\"</tt> </td>\n  </tr>\n</table>\n\n#### noosfero::environment (on install\\_from == \"git\")\nCreate, if there isn't any default yet, a default Noosfero Environment\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:environment]</tt></td>\n    <td>A hash with the config. If nil, skip environment check and creation</td>\n    <td> <tt>nil</tt> </td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:environment][:name]</tt></td>\n    <td>The name of the environment. This is used in all pages' &lttitle&gt</td>\n    <td> <tt>-</tt> </td>\n  </tr>\n  <tr>\n    <td><tt>node[:noosfero][:environment][:domain]</tt></td>\n    <td>The name of the environment. This is used in all pages' &lttitle&gt</td>\n    <td> <tt>-</tt> </td>\n  </tr>\n</table>\n\n\nUsage\n-----\n#### noosfero::default\nJust include `noosfero` in your node's `run_list`, the below configuration is an example:\n```json\n{\n  \"rvm\": {\n    \"user_installs\": [\n      {\n        \"user\": \"noosfero\",\n        \"rubies\": [ \"ree\" ],\n        \"default_ruby\": \"ree\",\n        \"gems\": {\n          \"ree@noosfero\": []\n        }\n      }\n    ]\n  },\n\n  \"postgresql\": {\n    \"version\": \"9.3\",\n    \"password\": {\n      // needed for chef-solo\n      \"postgres\": \"iqHDDo1o\"\n    },\n  },\n\n  \"memcached\": {\n    \"memory\": 128,\n    \"listen\": \"127.0.0.1\"\n  },\n\n  \"varnish\": {\n    \"version\": \"2.1\",\n    \"listen_address\": \"0.0.0.0\",\n    \"listen_port\": 80,\n    \"storage\": \"file\",\n    \"storage_size\": \"1G\",\n    \"vcl_cookbook\": \"noosfero\"\n  },\n\n  \"nginx\": {\n    \"listen_ports\": [81],\n    \"keepalive_timeout\": 20,\n    \"default_site_enabled\": false\n  },\n\n  \"apache\": {\n    \"version\": \"2.4\",\n    \"listen_addresses\": [\"127.0.0.1\"],\n    \"listen_ports\": [82],\n    \"keepalivetimeout\": 20,\n    \"keepaliverequests\": 1000\n  },\n\n  \"noosfero\": {\n    \"service_name\": \"noosfero\",\n    \"path\": \"/home/braulio/escambo.org.br\",\n    \"user\": \"braulio\",\n    \"group\": \"braulio\",\n\n    \"git_url\": \"https://github.com/ESCAMBO/noosfero-ecosol.git\",\n    \"git_revision\": \"master\",\n\n    \"dependencies_with\": \"bundler\",\n    \"rvm_load\": \"ree@noosfero\",\n\n    \"server_name\": \"escambo.org.br\",\n    \"custom_domains\": [\n      \"escambo.org\"\n    ],\n\n    \"server\": {\n      \"proxy\": \"nginx\",\n      \"backend\": \"unicorn\",\n      \"workers\": 1\n    },\n    \"cache\": {\n      \"server\": \"varnish\"\n    },\n\n    \"db\": {\n      \"name\": \"noosfero_escambo.org.br_production\",\n      \"port\": 5433\n    },\n\n    \"environment\": {\n      \"name\": \"ESCAMBO\",\n      \"domain\": \"escambo.org.br\"\n    },\n    \"plugins\": [\"cms_learning\", \"currency\", \"escambo\", \"evaluation\", \"exchange\", \"sniffer\", \"solr\"],\n\n    \"settings\": {\n      \"exception_recipients\": [\"alantygel@gmail.com\", \"brauliobo@gmail.com\"]\n    },\n\n    \"plugin_settings\": {\n      \"solr\": {\n        \"port\": 8983,\n        \"memory\": 128\n      }\n\n    }\n  }\n  \"run_list\": [\n    \"recipe[noosfero]\"\n  ]\n}\n```\n\nTODO\n----\n- Support others besides RVM (rbenv), by replacing rvm_shell with a generic noosfero_shell\n\nContributing\n------------\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nAfter 3 consistent patches you become a commiter :)\n\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nginx",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apache2",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/database",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/postgresql",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/varnish",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/memcached",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/rvm",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}