{
  "name": "druid Chef cookbook",
  "chef_cookbook_name": "druid",
  "revision": "0.0.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/druid",
    "https://supermarket.chef.io/cookbooks/druid/download",
    "https://supermarket.chef.io/cookbooks/druid/versions/0.0.2",
    "https://supermarket.chef.io/cookbooks/druid/versions/0.0.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/druid/versions/0.0.2",
    "https://supermarket.chef.io/api/v1/cookbooks/druid",
    "https://supermarket.chef.io/api/v1/cookbooks/druid/versions/0.0.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Databases",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/druid",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/druid/versions/0.0.2/download",
  "deprecated": false,
  "created": "2014-05-05T19:38:04.000Z",
  "updated": "2014-05-29T17:16:51.000Z",
  "description": "Installs/Configures druid",
  "maintainer": {
    "name": "yuval",
    "email": "yuval@n3twork.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 3,
  "downloads_count": 2530477,
  "downloads_count_revision": 1265319,
  "repository_url": "http://github.com/N3TWORK/chef-druid",
  "issues_url": "http://github.com/N3TWORK/chef-druid",
  "chef_source_url": "http://github.com/N3TWORK/chef-druid",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Druid Cookbook\n==============\nInstalls and configures the [Druid](http://druid.io/) real-time analytics system\n\nRequirements\n------------\nThis cookbook is for Debian-based linux systems. It has been tested with Ubuntu using Vagrant as well as Amazon's AWS OpsWorks. Services are managed via *upstart*.\n\nRecipes\n----------\nThere is one recipe per Druid service:\n\n* broker\n* coordinator\n* historical\n* middleManager\n* overlord\n* peon (rarely needed)\n* realtime\n* router (upcoming service)\n\nAttributes\n----------\nMost attributes are simply passed through to Druid's runtime.properties files. See [attributes/default.rb](attributes/default.rb) for the others.\n\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td><tt>['druid']['properties'][<i>property name</i>]</tt></td>\n    <td>properties which apply to all services</td>\n  </tr>\n  <tr>\n    <td><tt>['druid'][<i>service name</i>]['properties'][<i>property name</i>]</tt></td>\n    <td>properties which apply to one service</td>\n  </tr>\n</table>\n\nUsage\n-----\nSee the [druid-example](https://github.com/N3TWORK/chef-druid-example/) cookbook for a working example.\n\nContributing\n------------\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\nCopyright 2014 N3TWORK, Inc.<br>\nLicensed under Apache 2.0<br>\nWritten by Yuval Oren (yuval@n3twork.com)\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}