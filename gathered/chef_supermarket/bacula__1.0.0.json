{
  "name": "bacula Chef cookbook",
  "chef_cookbook_name": "bacula",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/bacula",
    "https://supermarket.chef.io/cookbooks/bacula/download",
    "https://supermarket.chef.io/cookbooks/bacula/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/bacula/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/bacula/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/bacula",
    "https://supermarket.chef.io/api/v1/cookbooks/bacula/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/bacula",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/bacula/versions/1.0.0/download",
  "deprecated": false,
  "created": "2012-12-10T13:27:51.000Z",
  "updated": "2014-06-19T20:19:18.000Z",
  "description": "Installs and autoconfigures bacula backup system",
  "maintainer": {
    "name": "computerlyrik",
    "email": "chef-cookbooks@computerlyrik.de"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 5821922,
  "downloads_count_revision": 1151196,
  "repository_url": "https://github.com/computerlyrik/chef-bacula.git",
  "issues_url": "https://github.com/computerlyrik/chef-bacula.git",
  "chef_source_url": "https://github.com/computerlyrik/chef-bacula.git",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\nTested on Ubuntu 12.04 (should also work on Debian - please report!)\n\nSupports File backup on a dedicated storage server with a single bacula director and multiple clients to be backed up.\n\nPainlessly autoconfigures itself and the Jobs to be done.\nBacks up daily incremental, Full weekly. (to change see usage)\nAlso supports installation of bacula console to observe your backup progresses.\n\n\nBackup Jobs are autogenerated:\n- Files\nset up files attribute\n- Mysql\n- LDAP\n\nbacula::server (bacula-dir)\nCentral backup server \n\nbacula::client (bacula-fd)\nUsed by each client to be backed up\n\nbacula::storage (bacula-sd)\nFor use on storage system\n\nbacula::bat\nUsed for Systems with graphic environment - installs and configures \"bat\" Bacula qt-console\n\n\nRequirements\n============\n\nmysql and database cookbooks \nopenssl for password generation\n\nAttributes\n==========\n\nConfigure the bacula user\n[code]\ndefault.rb - node['bacula']['user']\ndefault.rb - node['bacula']['group']\n[/code]\nSet this to your User bacula runs on your System\n\n==Server==\n\nSet properties for File based backup\nnode['bacula']['volume_size'] = \"1G\"\nnode['bacula']['volume_max'] = 20\nnode['bacula']['label_format'] = \"BaculaFile\"\n\n==Client==\n\nSet files to be backed up (see Usage below)\nnode['bacula']['fd']['files']\n\n==Storage==\n\nSet up destination of File-Storage\ndefault['bacula']['sd']['backup_dir'] = \"/backup\"\n\n\nUsage\n=====\n\n\n==Backup Job generation==\n\nTo autogenerate jobs the following variables need to be set on bacula::client machine:\n\nMysql:\nnode['mysql'] && node['mysql']['server_root_password']\n\nLdap:\nnode['openldap'] && node['openldap']['slapd_type'] == \"master\"\n\nChef Server:\nnode['fqdn'] == \"chef.#{node['domain']}\"\n\nThis is an example (do not use in production) how to backup files on your filesystem:\nAdd them according to this:\nnode.set['bacula']['fd']['files'] = {\n  'includes' => ['/']],\n  'excludes' => [ '/dev','sys']\n}\n\n\nHowto change the backup cycle\n\nTo change the backup cycle make changes in templates/default/bacula-dir.conf\n\n\nTodo/Ideas\n==========\n\n- Add restore jobs\n- more datastores\n- make attributes out of the listening port\n- make mailing work\n\nContact\n======\nsee metadata.rb\n\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/database",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/openssl",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}