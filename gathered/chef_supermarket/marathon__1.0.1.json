{
  "name": "marathon Chef cookbook",
  "chef_cookbook_name": "marathon",
  "revision": "1.0.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/marathon",
    "https://supermarket.chef.io/cookbooks/marathon/download",
    "https://supermarket.chef.io/cookbooks/marathon/versions/1.0.1",
    "https://supermarket.chef.io/cookbooks/marathon/versions/1.0.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/marathon/versions/1.0.1",
    "https://supermarket.chef.io/api/v1/cookbooks/marathon",
    "https://supermarket.chef.io/api/v1/cookbooks/marathon/versions/1.0.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Web Server/Apache HTTP Server"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/marathon",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/marathon/versions/1.0.1/download",
  "deprecated": false,
  "created": "2014-01-28T01:49:45.000Z",
  "updated": "2015-12-26T19:22:04.435Z",
  "description": "Installs/Configures Apache Marathon",
  "maintainer": {
    "name": "rayray2030",
    "email": "rarodriguez@mdsol.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 4,
  "downloads_count": 3309629,
  "downloads_count_revision": 1303983,
  "repository_url": "https://github.com/mdsol/marathon_cookbook",
  "issues_url": "https://github.com/mdsol/marathon_cookbook",
  "chef_source_url": "https://github.com/mdsol/marathon_cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Marathon Cookbook\n=================\n[![Build Status](https://secure.travis-ci.org/mdsol/marathon_cookbook.png?branch=master)](http://travis-ci.org/mdsol/marathon_cookbook)\n\nDescription\n===========\n\nApplication cookbook for installing [Mesosphere][]'s [Marathon][].\n[Marathon][] is an [Apache Mesos][] framework for long-running services.\n\n\nRequirements\n============\n\nChef 11.4.0+\n\nThis cookbook also assumes you will be running a zookeeper cluster for\nproduction use of Mesos and Marathon.  If you omit zookeeper attributes the \ncookbook does default to the internal Marathon zookeeper for test scenarios.\n\nThis cookbook also depends on the [mesos][] cookbook.\n\nThe following cookbooks are dependencies:\n\n* apt\n* java\n* runit (process management)\n* mesos (used for installing the Mesos libraries)\n* zookeeper (used for discovering zookeeper ensembles via [Netflix Exhibitor][])\n\n## Platform:\n\nTested on \n\n* Ubuntu 12.04\n\nThis cookbook includes cross-platform testing support via `test-kitchen`, see \n`TESTING.md`.\n\n\nAttributes\n==========\n\n* `node['marathon']['home_dir']` - Home installation directory. Default: \n'/opt/marathon'.\n* `node['marathon']['config_dir']` - Configuration file directory. Default: \n'/etc/marathon/'.\n* `node['marathon']['log_dir']` - Log directory. Default: '/var/log/marathon/'.\n* `node['marathon']['jar_source']` - Jar source location url.\n* `node['marathon']['user']` - The user to run tasks as on mesos slaves. \nDefault: 'root'.\n* `node['marathon']['group']` - The group to run tasks as on mesos slaves. \nDefault: 'root'.\n* `node['marathon']['java_heap']` - Java heap size to assign to the marathon \njvm process. Default: Calculated at 1/2 of node memory.\n\n* `node['marathon']['options']['checkpoint']` - Enable checkpointing of tasks. \nRequest checkpointing enabled on slaves.  Allows tasks to continue running \nduring mesos-slave restarts and upgrades. Default: false.\n* `node['marathon']['options']['event_subscriber']` - HTTP callback.\n* `node['marathon']['options']['executor']` - Executor to use when none is \nspecified (default = //cmd).\n* `node['marathon']['options']['failover_timeout']` - The failover timeout for \nmesos in seconds (default: 1 week) (default = 604800).\n* `node['marathon']['options']['ha']` - Runs Marathon in HA mode with leader \nelection. Allows starting an arbitrary number of other Marathons but all need \nto be started in HA mode. This mode requires running ZooKeeper.\n* `node['marathon']['options']['hostname']` - The advertised hostname stored in \nZooKeeper so another standby host can redirect to this elected leader \n(default = localhost).\n* `node['marathon']['options']['http_credentials']` - Credentials for accessing \nthe http service.  If empty, anyone can access the HTTP endpoint. A \nusername:password is expected where the username must not contain ':'.\n* `node['marathon']['options']['http_endpoints']` - The URLs of the event \nendpoints master.\n* `node['marathon']['options']['http_port']` - The port to listen on for HTTP \nrequests (default = 8080).\n* `node['marathon']['options']['https_port']` - The port to listen on for HTTPS \nrequests (default = 8080).\n* `node['marathon']['options']['local_port_max']` - Max port number to use when \nassigning port to apps (default = 20000).\n* `node['marathon']['options']['local_port_min']` - Min port number to use when \nassigning port to apps (default = 10000).\n* `node['marathon']['options']['log_config']` - The path to the log config.\n* `node['marathon']['options']['master']` - The URL of the Mesos master.  \nCookbook will default this to 'local' if no zookeeper configuration is defined \nand this attribute is not set.\n* `node['marathon']['options']['mesos_role']` - Mesos role for this framework.\n* `node['marathon']['options']['ssl_keystore_password']` - The password for the \nkeystore.\n* `node['marathon']['options']['ssl_keystore_path']` - Provides the keystore, \nif supplied, SSL is enabled.\n* `node['marathon']['options']['zk_hosts']` - The list of ZooKeeper servers for \nstoring state (default = localhost:2181).  This cookbook will automatically \npopulate this parameter if you define \n`node['marathon']['zookeeper_server_list']` or \n`node['marathon']['zookeeper_exhibitor_discovery']` and\n`node['marathon']['zookeeper_exhibitor_url']` attributes.\n* `node['marathon']['options']['zk_state']` - Path in ZooKeeper for storing \nstate (default = /marathon).\n* `node['marathon']['options']['zk_timeout']` - The timeout for ZooKeeper in \nmilliseconds (default = 10000).\n\n* `node['marathon']['zookeeper_server_list']` - List of zookeeper hostnames or \nIP addresses. Default: [].\n* `node['marathon']['zookeeper_port']` - Mesos master zookeeper port. Default: \n2181.\n* `node['marathon']['zookeeper_path']` - Mesos master zookeeper path. Default: \nmesos.\n\n* `node['marathon']['zookeeper_exhibitor_discovery']` - Flag to enable \nzookeeper ensemble discovery via Netflix Exhibitor. Default: false.\n* `node['marathon']['zookeeper_exhibitor_url']` - Netflix Exhibitor zookeeper \nensemble url.\n\n## Usage\n\nHere are some sample roles for configuring running marathon in internal test \nmode and in zookeeper backed production mode.\n\nHere is a sample role for creating a marathon node with an internal zookeeper:\nWARNING: Do not use this configuration for production deployments!\n\n```YAML\nchef_type:           role\ndefault_attributes:\ndescription:\nenv_run_lists:\njson_class:          Chef::Role\nname:                marathon\noverride_attributes:\n  marathon:\n    jar_source: 'JAR_SOURCE_URL_HERE'\n  mesos:\n    version: 0.15.0\nrun_list:\n  recipe[marathon]\n```\n\nHere is a sample role for creating a marathon node with a seperate zookeeper \nensemble:\nNOTE: This is a recommended way to deploy marathon in production.\n```YAML\nchef_type:           role\ndefault_attributes:\ndescription:\nenv_run_lists:\njson_class:          Chef::Role\nname:                marathon\noverride_attributes:\n  marathon:\n    jar_source: 'JAR_SOURCE_URL_HERE'\n    zookeeper_server_list: [ '203.0.113.2', '203.0.113.3', '203.0.113.4' ]\n    zookeeper_port: 2181\n    zookeeper_path: 'mesos'\n  mesos:\n    version: 0.15.0\nrun_list:\n  recipe[marathon]\n```\n\nHere is a sample role for creating a marathon node with a seperate zookeeper \nensemble dynamically discovered via Netflix Exhibitor:\nNOTE: This is a recommended way to deploy marathon in production.\n```YAML\nchef_type:           role\ndefault_attributes:\ndescription:\nenv_run_lists:\njson_class:          Chef::Role\nname:                marathon\noverride_attributes:\n  marathon:\n    jar_source: 'JAR_SOURCE_URL_HERE'\n    zookeeper_path: 'mesos'\n    zookeeper_exhibitor_discovery: true\n    zookeeper_exhibitor_url: 'http://zk-exhibitor-endpoint.example.com:8080'\n  mesos:\n    version: 0.15.0\nrun_list:\n  recipe[marathon]\n```\n\n[Mesosphere]: http://mesosphere.io\n[mesos]: https://github.com/mdsol/mesos_cookbook\n[marathon]: http://nerds.airbnb.com/introducing-marathon\n[Apache Mesos]: http://http://mesos.apache.org\n[configuring marathon]: https://github.com/airbnb/marathon/blob/master/config/README.md\n[Netflix Exhibitor]: https://github.com/Netflix/exhibitor\n\n## Contributing\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\n## License and Author\n\n* Author: [Ray Rodriguez](https://github.com/rayrod2030)\n* Contributor: [Mark Corwin](https://github.com/mjcdiggity)\n\nCopyright 2013 Medidata Solutions Worldwide\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use \nthis file except in compliance with the License. You may obtain a copy of the \nLicense at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed \nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR \nCONDITIONS OF ANY KIND, either express or implied. See the License for the \nspecific language governing permissions and limitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/zookeeper",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/runit",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mesos",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}