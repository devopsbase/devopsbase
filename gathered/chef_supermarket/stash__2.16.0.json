{
  "name": "stash Chef cookbook",
  "chef_cookbook_name": "stash",
  "revision": "2.16.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/stash",
    "https://supermarket.chef.io/cookbooks/stash/download",
    "https://supermarket.chef.io/cookbooks/stash/versions/2.16.0",
    "https://supermarket.chef.io/cookbooks/stash/versions/2.16.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/stash/versions/2.16.0",
    "https://supermarket.chef.io/api/v1/cookbooks/stash",
    "https://supermarket.chef.io/api/v1/cookbooks/stash/versions/2.16.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/stash",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/stash/versions/2.16.0/download",
  "deprecated": false,
  "created": "2013-04-09T00:27:42.000Z",
  "updated": "2016-06-10T06:06:46.188Z",
  "description": "Installs/Configures Atlassian Stash",
  "maintainer": {
    "name": "bflad",
    "email": "bflad417@gmail.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 23,
  "downloads_count": 43406434,
  "downloads_count_revision": 1229743,
  "repository_url": "https://github.com/bflad/chef-stash/",
  "issues_url": "https://github.com/bflad/chef-stash/issues",
  "chef_source_url": "https://github.com/bflad/chef-stash/",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# chef-stash  [![Build Status](https://secure.travis-ci.org/bflad/chef-stash.png?branch=master)](http://travis-ci.org/bflad/chef-stash)\n\n## Description\n\nInstalls/Configures Atlassian Stash server. Provides LWRPs for code deployment via Stash as well as for hook and repository management. Please see [COMPATIBILITY.md](COMPATIBILITY.md) for more information about Stash releases (versions and checksums) that are tested and supported by cookbook versions.\n\n## Requirements\n\n### Platforms\n\n* CentOS 6\n* RedHat 6\n* Ubuntu 12.04\n\n### Databases\n\n* Microsoft SQL Server\n* MySQL\n* Postgres\n\n### Cookbooks\n\nRequired [Opscode Cookbooks](https://github.com/opscode-cookbooks/)\n\n* [apache2](https://github.com/opscode-cookbooks/apache2) (if using Apache 2 proxy)\n* [database](https://github.com/opscode-cookbooks/database)\n* [git](https://github.com/opscode-cookbooks/git)\n* [java](https://github.com/opscode-cookbooks/java)\n* [mysql](https://github.com/opscode-cookbooks/mysql) (if using MySQL database)\n* [perl](https://github.com/opscode-cookbooks/perl)\n* [postgresql](https://github.com/opscode-cookbooks/postgresql) (if using Postgres database)\n\nThird-Party Cookbooks\n\n* [mysql_connector](https://github.com/bflad/chef-mysql_connector) (if using MySQL database)\n\n## Attributes\n\nThese attributes are under the `node['stash']` namespace.\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\nbackup_home | backup home directory during upgrade | Boolean | true\nbackup_install | backup install directory during upgrade | Boolean | true\nchecksum | SHA256 checksum for Stash install | String | auto-detected (see attributes/default.rb)\nhome_backup | location of home directory backup during upgrade | String | /tmp/atlassian-stash-home-backup.tgz\nhome_path | home directory for Stash user | String | `/home/#{node['stash']['run_user']}`\ninstall_backup | location of install directory backup during upgrade | String | /tmp/atlassian-stash-backup.tgz\ninstall_path | location to install Stash | String | /opt/atlassian-stash\nrun_user | user to run Stash | String | stash\nurl_base | URL base for Stash install | String | http://www.atlassian.com/software/stash/downloads/binary/atlassian-stash\nurl | URL for Stash install | String | auto-detected (see attributes/default.rb)\nversion | Stash version to install (use `recipe[stash::upgrade]` to upgrade to version defined) | String | 2.6.3\n\n### Stash Database Attributes\n\nAll of these `node['stash']['database']` attributes are overridden by `stash/stash` encrypted data bag (Hosted Chef) or data bag (Chef Solo), if it exists\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\nhost | FQDN or \"localhost\" (localhost automatically installs `['database']['type']` server) | String | localhost\nname | Stash database name | String | stash\npassword | Stash database user password | String | changeit\nport | Stash database port | Fixnum | 3306\ntype | Stash database type - \"mysql\", \"postgresql\", or \"sqlserver\" | String | mysql\nuser | Stash database user | String | stash\n\n### Stash JVM Attributes\n\nThese attributes are under the `node['stash']['jvm']` namespace.\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\nminimum_memory | JVM minimum memory | String | 512m\nmaximum_memory | JVM maximum memory | String | 768m\nmaximum_permgen | JVM maximum PermGen memory | String | 256m\njava_opts | additional JAVA_OPTS to be passed to Stash JVM during startup | String | \"\"\nsupport_args | additional JAVA_OPTS recommended by Atlassian support for Stash JVM during startup | String | \"\"\n\n### Stash SSH Attributes ###\n\nThese attributes are under the `node['stash']['ssh']` namespace.\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\nhostname | Stash SSH hostname | String | `node['fqdn']`\nport | Stash SSH port | Fixnum | 7999\nuri | Stash SSH URI | String | `ssh://git@#{node['stash']['ssh']['hostname']}:#{node['stash']['ssh']['port']}`\n\n### Stash Tomcat Attributes\n\nThese attributes are under the `node['stash']['tomcat']` namespace.\n\nAny `node['stash']['tomcat']['key*']` attributes are overridden by `stash/stash` encrypted data bag (Hosted Chef) or data bag (Chef Solo), if it exists\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\nkeyAlias | Tomcat SSL keystore alias | String | tomcat\nkeystoreFile | Tomcat SSL keystore file - will automatically generate self-signed keystore file if left as default | String | `#{node['stash']['home_path']}/.keystore`\nkeystorePass | Tomcat SSL keystore passphrase | String | changeit\nport | Tomcat HTTP port | Fixnum | 7990\nssl_port | Tomcat HTTPS port | Fixnum | 8443\n\n## Recipes\n\n* `recipe[stash]` Installs Atlassian Stash with built-in Tomcat\n* `recipe[stash::apache2]` Installs above with Apache 2 proxy (ports 80/443)\n* `recipe[stash::upgrade]` Upgrades Atlassian Stash\n\n## LWRPs\n\n* `stash_deploy` - wrapper Git resource for using a `stash_deploy_key`, project, and repository for code deployment\n* `stash_deploy_key` - creates SSH private key file and SSH wrapper for code deployment\n* `hook` - Wrapper to enable/disable/configure a stash hook (requires the user account password to be in chef-vault)\n* `repo` - Wrapper to create/delete a stash repository (requires the user account password to be in chef-vault)\n\n## Usage\n\n### Stash Server Data Bag\n\nFor securely overriding attributes on Hosted Chef, create a `stash/stash` encrypted data bag with the model below. Chef Solo can override the same attributes with a `stash/stash` unencrypted data bag of the same information.\n\n_required:_\n* `['database']['type']` \"mysql\", \"postgresql\", or \"sqlserver\"\n* `['database']['host']` FQDN or \"localhost\" (localhost automatically\n  installs `['database']['type']` server)\n* `['database']['name']` Name of Stash database\n* `['database']['user']` Stash database username\n* `['database']['password']` Stash database username password\n\n_optional:_\n* `['database']['port']` Database port, standard database port for\n  `['database']['type']`\n* `['tomcat']['keyAlias']` Tomcat HTTPS Java Keystore keyAlias, defaults to self-signed certifcate\n* `['tomcat']['keystoreFile']` Tomcat HTTPS Java Keystore keystoreFile, self-signed certificate\n* `['tomcat']['keystorePass']` Tomcat HTTPS Java Keystore keystorePass, self-signed certificate\n\nRepeat for other Chef environments as necessary. Example:\n\n    {\n      \"id\": \"stash\"\n      \"development\": {\n        \"database\": {\n          \"type\": \"postgresql\",\n          \"host\": \"localhost\",\n          \"name\": \"stash\",\n          \"user\": \"stash\",\n          \"password\": \"stash_db_password\",\n        },\n        \"tomcat\": {\n          \"keyAlias\": \"not_tomcat\",\n          \"keystoreFile\": \"/etc/pki/java/wildcard_cert.jks\",\n          \"keystorePass\": \"not_changeit\"\n        }\n      }\n    }\n\n### Stash Server Installation\n\n* Optionally use (un)encrypted data bag or set attributes\n  * `knife data bag create stash`\n  * `knife data bag edit stash stash --secret-file=path/to/secret`\n* Add `recipe[stash]` to your node's run list.\n\n### Stash Server Installation with Apache 2 Frontend\n\n* Optionally use (un)encrypted data bag or set attributes\n  * `knife data bag create stash`\n  * `knife data bag edit stash stash --secret-file=path/to/secret`\n* Add `recipe[stash::apache2]` to your node's run list.\n\n### Stash Server Upgrades\n\n* Update `node['stash']['version']` and `node['stash']['checksum']` attributes\n* Add `recipe[stash::upgrade]` to your run_list, such as:\n  `knife node run_list add NODE_NAME \"recipe[stash::upgrade]\"`\n  It will automatically remove itself from the run_list after completion.\n\n### Code Deployment From Stash\n\n* Ensure your node has Git installed\n* Create a `stash_deploy_key` with the SSH private key contents (using `\\n` for newlines) of a Stash user with permissions to your repository.\n\nFor example:\n\n    stash_deploy_key \"deployment_user\" do\n      key \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEpQIB...\"\n    end\n\n* In this example, now you can either directly use the ssh_wrapper available at `#{node['stash']['install_path']}/deployment_user_ssh_wrapper.sh` or use the `stash_deploy` LWRP. \n\nSuch as:\n\n    stash_deploy \"/opt/shibboleth-idp/conf\" do\n      deploy_key \"deployment_user\"\n      project \"SHIBIDP\"\n      repository \"configuration\"\n    end\n\n## Testing and Development\n\nHere's how you can quickly get testing or developing against the cookbook thanks to [Vagrant](http://vagrantup.com/) and [Berkshelf](http://berkshelf.com/).\n\n    git clone git://github.com/bflad/chef-stash.git\n    cd chef-stash\n    vagrant plugin install vagrant-berkshelf\n    vagrant plugin install vagrant-omnibus\n    vagrant up BOX # BOX being centos6 or ubuntu1204\n\nYou need to add the following hosts entries:\n\n* 192.168.50.10 stash-centos-6\n* 192.168.50.11 stash-ubuntu-1204\n\nThe running Stash server is accessible from the host machine:\n\nCentOS 6 Box:\n* Web UI: https://stash-centos-6/\n* Stash SSH: ssh://git@stash-centos-6:7999/\n\nUbuntu 12.04 Box:\n* Web UI: https://stash-ubuntu-1204/\n* Stash SSH: ssh://git@stash-ubuntu-1204:7999/\n\nYou can then SSH into the running VM using the `vagrant ssh` command.\nThe VM can easily be stopped and deleted with the `vagrant destroy`\ncommand. Please see the official [Vagrant documentation](http://vagrantup.com/v1/docs/commands.html)\nfor a more in depth explanation of available commands.\n\n## Contributing\n\nPlease use standard Github issues/pull requests and if possible, in combination with testing on the Vagrant boxes.\n\n## License and Authors\n\n* Author:: Brian Flad (<bflad417@gmail.com>)\n* Author:: Kevin Moser\n\n* Copyright:: 2012-2013 Brian Flad\n* Copyright:: 2013 Nordstrom, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
  "requires": [
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apache2",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/database",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/git",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mysql",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mysql_connector",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/perl",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/postgresql",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "stash": "Installs/Configures Atlassian Stash",
    "stash::apache2": "Installs/Configures Atlassian Stash behind Apache2",
    "stash::upgrade": "Upgrades Atlassian Stash"
  }
}