{
  "name": "opennms Chef cookbook",
  "chef_cookbook_name": "opennms",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/opennms",
    "https://supermarket.chef.io/cookbooks/opennms/download",
    "https://supermarket.chef.io/cookbooks/opennms/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/opennms/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/opennms/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/opennms",
    "https://supermarket.chef.io/api/v1/cookbooks/opennms/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Monitoring & Trending",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/opennms",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/opennms/versions/1.0.0/download",
  "deprecated": false,
  "created": "2014-04-18T17:28:13.000Z",
  "updated": "2016-08-03T21:30:39.854Z",
  "description": "Installs and Configures opennms and provides many useful LWRPs.",
  "maintainer": {
    "name": "dschlenk",
    "email": "david.schlenk@spanlink.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 8744749,
  "downloads_count_revision": 702108,
  "repository_url": "https://github.com/dschlenk/opennms-cookbook",
  "issues_url": "https://github.com/dschlenk/opennms-cookbook/issues",
  "chef_source_url": "https://github.com/dschlenk/opennms-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nA Chef cookbook to manage the installation and configuration of OpenNMS.\nCurrent version of templates are based on OpenNMS release 14.0.\n\nStatus\n======\n\nThings generally work. Use the latest tag. Tags happen when a decent chunk of new functionality is written, their example recipes converge (named example_*) and OpenNMS starts without errors.  Notably missing are unit and more formal integration tests.\n\nRequirements\n============\n\n* Chef 11.x\n* CentOS 6.x. Debian/Ubuntu support shouldn't be too hard to do - if anyone wants to head that up let me know. \n* Some experience using OpenNMS without the benefit of configuration management.\n* The need to manage many instances of OpenNMS.\n* The desire to share configurations with other users without `$OPENNMS_HOME/etc` tarballs or git patches.\n* Either use Berkshelf to satisfy dependencies or manually acquire the following cookbooks: \n  * yum\n  * hostsfile\n* Unless you like really old JVMs and a poorly tuned PostgreSQL or just really want to install java and postgresql yourself you will also want these cookbooks:\n  * java\n  * postgresql\n\nSee Usage for more details.\n\nUsage\n=====\n\nRunning the default recipe will install OpenNMS 14.0 (or a custom version using the attribute `node[:opennms][:version]`) on CentOS 6.x from the official repo with the default configuration. It will also execute `'$ONMS_HOME/bin/runjava -s` if `$ONMS_HOME/etc/java.conf` is not present and `$ONMS_HOME/bin/install -dis` if `$ONMS_HOME/etc/configured` is not present.\n\nAlso, most configuration files are templated and can be overridden with environment, role, or node attributes.  See the default attributes file for a list of configuration items that can be changed in this manner, or keep reading for a brief overview of each template available. Some general notes:\n\n* Default attribute values set to `nil` mean that the file's default value is commented out in the original file and will remain so unless set to a non-nil value.\n* For XML configuration files, you can disable or modify elements that exist in the default configuration, but in general if you want to add something new or drastically change something you will want to disable the default config and use the appropriate LWRP in your own cookbook/recipe.\n* Some items that exist in the default configuration but are commented out can be turned on with attributes. Future work needed here for common use cases like switching to RRDTool and enabling the access point monitor as well as some things present in the examples. \n\nYou probably also want to check out the community java (https://github.com/socrata-cookbooks/java) and postgresql (https://github.com/hw-cookbooks/postgresql) cookbooks. Here's my default overrides for each:\n\n### Java\n\n```\nnode[:java][:oracle][:accept_oracle_download_terms] = true\nnode[:java][:install_flavor] = 'oracle'\nnode[:java][:jdk][:7][:x86_64][:checksum] = 'f2eae4d81c69dfa79d02466d1cb34db2b628815731ffc36e9b98f96f46f94b1a'\nnode[:java][:jdk][:7][:x86_64][:url] = 'http://download.oracle.com/otn-pub/java/jdk/7u45-b18/jdk-7u45-linux-x64.tar.gz'\nnode[:java][:jdk_version] = 7\n```\n\n### Postgresql\n\nInclude the client, server, contrib, config_initdb, config_pgtune recipes (in that order) in your run list. Then use these override attributes for a fairly well tuned config:\n\n```\nnode[:postgresql][:pg_hba] = { :addr => '' :user => 'all', :type => 'local', :method => 'trust', :db => 'all' }\nnode[:postgresql][:pg_hba] = { :addr => '127.0.0.1/32', :user => 'all', :type => 'host', :method => 'trust', :db => 'all'}\nnode[:postgresql][:pg_hba] = { :addr => '::1/128', :user => 'all', :type => 'host', :method => 'trust', :db => 'all' }\nnode[:postgresql][:config][:checkpoint_timeout] = '15min'\nnode[:postgresql][:config][:autovacuum] = 'on'\nnode[:postgresql][:config][:track_activities] = 'on'\nnode[:postgresql][:config][:track_counts]  = 'on'\nnode[:postgresql][:config][:shared_preload_libraries] = 'pg_stat_statements'\nnode[:postgresql][:config][:vacuum_cost_delay] = 50\nnode[:postgresql][:client][:packages] = [\"postgresql\", \"postgresql-contrib\", \"postgresql-devel\"]\nnode[:postgresql][:server][:packages] = [\"postgresql-server\"]\n```\n\nThere are also a couple OpenNMS attributes you'll probably want to override at a minimum: \n\n### opennms.conf\n\n```\nnode[:opennms][:conf][:start_timeout] = 20\nnode[:opennms][:conf][:heap_size] = 1024\n```\n\n### Other Recipes\n\n* `opennms::notemplates` Everything default does except minimal templates are used - etc/opennms.conf, etc/opennms.properties and etc/jetty.xml.\n* `opennms::nsclient` installs the optional nsclient data collection plugin and uses the template for etc/nsclient-datacollection-config.xml. \n* `opennms::xml` installs the optional xml data collection plugin and uses the template for etc/xml-datacollection-config.xml. \n\n### LWRPs\n\nAs a general rule these LWRPs support a single action: `create` and most of them behave more like `create_if_missing` does in other cookbooks. In other words, updating is generally not supported. This may change in future releases. \n\nAlso, there are example recipes in the cookbook for most every LWRP named `opennms::example_<LWRP_NAME>`.\n\nThe list of implemented LWRPs is as follows: \n\n### Users, Groups and Roles\n\n* `opennms_user`: add a user. Uses the REST API. \n* `opennms_group`: add a group and populate it with users. You can even set the default SVG map and duty schedules.\n* `opennms_role`: add a role.\n* `opennms_role_schedule`: Add schedules to a role. See an example for this and the role LWRP in recipe `opennms::example_role`.\n\n#### Discovery\n\n* `opennms_disco_specific`: add a specific IP to be discovered. \n* `opennms_disco_range`: add a include or exclude range  discovery. \n* `opennms_disco_url`: add a include-url to discovery and if it's a file deploy it where specified. \n\n#### Provisioning Requisitions\n\nThese LWRPs use a cookbook library named Provision that I wrote to perform the work using the OpenNMS REST interface. As such, OpenNMS has to be running for the resources to converge. See any of the example recipes for my silly little ruby_block hack to make sure it is. Also you'll notice that I used the term 'import' rather than the correct term 'requisition'. I can type 'import' a lot faster than 'requisition'. ;)\n\n* `opennms_foreign_source`: create a new foreign source optionally defining a scan interval (defaults to '1d'). \n* `opennms_service_detector`: add a service detector to a foreign source. TODO: if capsd is enabled in favor of provisiond add protocol-plugins to capsd-configuration.xml instead.\n* `opennms_policy`: add a policy to a foreign source. \n* `opennms_import`: Defines a requisition for a foreign source. This and all import* LWRPs include an option to synchronize the requisition - sync_import. \n* `opennms_import_node`: Add a node to a requisition including categories (array of strings) and assets (key/value hash pairs). \n* `opennms_import_node_interface`: Add an interface to a node in a requisition. \n* `opennms_import_node_interface_service`: Add a service to an interface on a node in a requisition. \n\n#### Events\n\n* `opennms_eventconf`: adds an event-file element to events in etc/eventconf.xml. \n* `opennms_event`: adds an event element to events in target eventconf file `file`. Not all elements from the eventconf schema are implemented, but the ones that seem to actually exist in the wild are. See resource for details and recipes `example_event` and `example_threshold` for example usage.\n\n#### Notifications\n\n* `opennms_notification_command`: Create a new command in notificationCommands.xml. \n* `opennms_destination_path`: creates a destination path element in destinationPaths.xml. Requires at a minimum a single target which can be defined with the following LWRP. \n* `opennms_target`: Add a target or escalate target to a destination path (defined either in the default config or with the above LWRP). \n* `opennms_notification`: Create notification elements in notifications.xml. \n* `opennms_notifd_autoack`: Create a auto acknowledge up/down pair in notifd-configuration.xml\n\n#### Node Service Credential Configuration\n\nThese LWRPs allow you to define the credentials necessary to connect to services on monitored nodes. These are one of the few that currently implements updating and deleting. Action `:create` will update if changes are detected but `:create_if_missing` will do nothing. To determine if a resource needs to be updated or deleted, existance is determined by all definition element attributes being equal (so all resource attributes except `ranges`, `specifics`, `ip_matches` and `position`). \n\nIf an update occurs, the values contained in the new resource will be used. Note that all `range`, `specific` and `ip-match` elements that exist currently in the definition will be removed before the new elements are added. \n\nCurrently implemented are: \n\n* `opennms_snmp_config_definition`: add a definition element to snmp-config.xml. \n* `opennms_wmi_config_definition`: add a definition element to wmi-config.xml.\n\n#### Polling\n\n* `opennms_poller_package`: add a package to etc/poller-configuration.xml. Note that an instance of this resource without use of an accompanying `opennms_poller_service` resource will result in a failure to start opennms. \n* `opennms_poller_service`: add a service to poller package named `poller_name`.  See `opennms::example_poller` for example usage of this and the `opennms_poller_package` resource. \n\n#### Data Collection\n\n* `opennms_resource_type`: adds a resourceType definition to a file in etc/datacollection and an include-collection element to the default snmp-collection. This LWRP supports a very limited form of updating - if the resource type already exists but isn't included in the default snmp-collection, an include-collection element will be added. The definition of the resource type won't be updated, however.  \n* `opennms_system_def`: add or remove pre-existing groups (`/datacollection-group/group[@name]`) to or from pre-existing systemDefs (`/datacollection-group/systemDef/collect/includeGroup[text()]`) in $ONMS_HOME/etc/datacollection/*.xml.\n* `opennms_snmp_collection`: adds an snmp-collection element to etc/datacollection-config.xml. \n* `opennms_xml_collection`: adds an xml-collection element to etc/xml-datacollection-config.xml. \n* `opennms_wmi_collection`: adds a wmi-collection element to etc/wmi-datacollection-config.xml. \n* `opennms_jdbc_collection`: adds a jdbc-collection element to etc/jdbc-datacollection-config.xml. \n* `opennms_collection_package`: adds a package element to etc/collectd-configuration.xml. \n* `opennms_snmp_collection_service`: adds a service element to a package in etc/collectd-configuration.xml. \n* `opennms_xml_collection_service`: adds a service element to a package in etc/collectd-configuration.xml. \n* `opennms_wmi_collection_service`: adds a service element to a package in etc/collectd-configuration.xml.\n* `opennms_jdbc_collection_service`: adds a service element to a package in etc/collectd-configuration.xml.\n* `opennms_snmp_collection_group`: adds an include-collection element to an snmp-collection in etc/datacollection-config.xml and drops off the specified cookbook file into etc/datacollection. \n* `opennms_jdbc_query`: adds a query element to a jdbc-collection in etc/jdbc-datacollection-config.xml. \n* `opennms_xml_source`: adds a xml-source element to a xml-collection in etc/xml-datacollection-config.xml. \n* `opennms_xml_group`: adds a xml-source element to a xml-source in etc/xml-datacollection-config.xml. \n\n#### Statistics Reports\n\nSee `opennms::example_statsd` for example usage of these LWRPs. \n\n* `opennms_statsd_package`: create a new package optionally with a filter in statsd-configuration.xml.\n* `opennms_statsd_report`: add a report to a package in statsd-configuration.xml. \n\n#### Graphs\n\n* `opennms_collection_graph_file`: Add a cookbook file containing graph definitions (perhaps generated by the mib compiler) to $ONMS_HOME/etc/snmp-graph.properties.d/. \n* `opennms_collection_graph`: Add a new graph definition to the main (bad idea), new or an existing graph file.\n* `opennms_response_graph`: Add a response graph to $ONMS_HOME/etc/response-graph.properties. Since there's a pretty well defined pattern to these, you can define these with just the name of the data source and it'll create a graph with min, max and average response times. \n\n#### Thresholds\n\nSee examples for all of these LWRPs are in a single recipe, `example_threshold`. \n\n* `opennms_threshd_package`: Create a new package in threshd-configuration.xml. \n* `opennms_threshold_group`: Create a new threshold group in thresholds.xml. \n* `opennms_threshold`: Create a new threshold in the specified group in thresholds.xml. \n* `opennms_expression`: Create a new expression threshold in the specified group in thresholds.xml. \n\n### Template Overview\n\n#### Access Point Monitor (etc/access-point-monitor-configuration.xml)\n\nYou can change `threads` and `pscan_interval` or disable either of the default types by setting `aruba_enable` or `moto_enable` to false in `node['opennms']['apm']`.\n\n#### etc/availability-reports.xml\n\nIf you want to change the logo or default interval, count, hour or minute you can do so for either the calandar or classic report like so:\n```\n   {\n     \"opennms\": {\n       \"db_reports\": {\n         \"avail\": {\n           \"cal\": {\n             \"logo\": \"/path/to/an/other_logo.png\"\n           },\n           \"classic\": {\n             \"count\": 7\n           }\n         }\n       }\n     }\n   }\n```\n\n#### etc/capsd-configuration.xml\n\nNote: the existance of this template does not imply that you should still be using capsd! To enable capsd you need to change the handler for newSuspect events in opennms.conf by setting `node['opennms']['properties']['provisioning']['enable_discovery']` to `false`.\n\nExample: change the timeout and retries for the ICMP scanner, do:\n\n```\n   {\n     \"opennms\": {\n       \"capsd\": {\n         \"icmp\": {\n           \"timeout\": \"5000\",\n           \"retry\": \"3\"\n         }\n       }\n     }\n   }\n```\n#### etc/categories.xml\n\nDefault categories can be modified by doing things like\n\n```\n   {\n     \"opennms\": {\n       \"categories\": {\n         \"web\": {\n           \"services\": [\n             \"HTTP\",\n             \"HTTPS\",\n             \"HTTP-8080\",\n             \"HTTP-8000\",\n             \"HTTP-8980\"\n           ]\n         }\n       }\n     }\n   }\n```\nThat'll leave the defaults for everything except overwrite the list of services in the `web` category.\nThe names of the categories are: 'overall', 'interfaces', 'email', 'web', 'jmx', 'dns', 'db', 'other', 'inet'.\nThe defaults are nil, which leaves the defaults as is. Override with false to disable.\n\n#### etc/chart-configuration.xml\n\nDisable one of the three default charts by setting `severity_enabled`, `outages_enable` or `inventory_enable` to false in `node['opennms']['chart']`.\n\n#### etc/collectd-configuration.xml\n\nUse the `node['opennms']['collectd']['threads']` attribute to change the number of threads (duh). There are also attributes for each default package. As of 1.12.5 those are: vmware3, vmware4, vmware5, example1. To modify one of those, for example, to change the IPv4 include range in the example1 package, you would do:\n```\n   {\n     \"opennms\": {\n       \"collectd\": {\n           \"example1\": {\n             \"ipv4_range\": {\n                 \"begin\": \"10.0.1.0\",\n                 \"end\": \"10.0.1.255\"\n             }\n           }\n       }\n     }\n   }\n```\nThat leaves most of the example1 package as default. Set a package's `enabled` attribute to false if you want to completely remove that package. You can also do that for specific services in that package. See the template for more options.\n\n#### etc/datacollection-config.xml\n\nYou can override some settings like:\n```\n   {\n     \"opennms\": {\n       \"datacollection\": {\n         \"default\": {\n           \"snmpStorageFlag\": \"all\"\n         }\n       }\n   }\n```\nOr maybe you don't have any Dell gear:\n```\n   {\n     \"opennms\": {\n       \"datacollection\": {\n         \"default\": {\n           \"dell\": false\n         }\n       }\n     }\n   }\n```\n\nYou can also remove one of the default snmp-collections, or change the step and RRA definitions.\n\n#### etc/discovery-configuration.xml\n\nAttributes are available in `node['opennms']['discovery']` to change global settings:\n* threads (`threads`)\n* packets-per-second (`pps`)\n* initial-sleep-time (`init_sleep_ms`)\n* restart-sleep-time (`restart_sleep_ms`)\n* retries (`retries`)\n* timeout (`timeout`)\n\n#### etc/eventd-configuration.xml\n\nAttributes are available in `node['opennms']['eventd']` to change global settings:\n* TCPAddress (`tcp_address`)\n* TCPPort (`tcp_port`)\n* UDPAddress (`udp_address`)\n* UDPPort (`udp_port`)\n* receivers (`receivers`)\n* socketSoTimeoutRequired (`sock_so_timeout_req` to true or false)\n* socketSoTimeoutPeriod (`socket_so_timeout_period`)\n\n#### etc/events-archiver-configuration.xml\n\nAttributes are available in `node['opennms']['events_archiver']` to change global settings:\n* archiveAge (`age`)\n* separator (`separator`)\n\n#### etc/javamail-configuration.properties\n\nThis file controls how OpenNMS sends email. This is not where you configure the mail monitor.\nAttributes available in `node['opennms']['javamail_props']`. They follow the config file but with ruby style because the kids hate camel case I guess.\n* org.opennms.core.utils.fromAddress (`from_address`) \n* org.opennms.core.utils.mailHost (`mail_host`)\n* ...and so on.\n\n#### etc/javamail-configuration.xml\n\nThis is where you configure the mail monitor.\nAttributes available in `node['opennms']['javamail_config'`. Unlike most of the templates, you can change every attribute and element in the default sendmail and receivemail elements since the defaults are useful to no one. Here's a list of the defaults which you definitely need to override if you want a mail monitor to work: \n\n```\ndefault['opennms']['javamail_config']['default_read_config_name'] = \"localhost\"\ndefault['opennms']['javamail_config']['default_send_config_name'] = \"localhost\"\ndefault['opennms']['javamail_config']['default_read']['attempt_interval'] = 1000\ndefault['opennms']['javamail_config']['default_read']['delete_all_mail']  = false\ndefault['opennms']['javamail_config']['default_read']['mail_folder']      = \"INBOX\"\ndefault['opennms']['javamail_config']['default_read']['debug']            = true\ndefault['opennms']['javamail_config']['default_read']['properties']       = {'mail.pop3.apop.enable' => false, 'mail.pop3.rsetbeforequit' => false}\ndefault['opennms']['javamail_config']['default_read']['host']             = \"127.0.0.1\"\ndefault['opennms']['javamail_config']['default_read']['port']             = 110\ndefault['opennms']['javamail_config']['default_read']['ssl_enable']       = false\ndefault['opennms']['javamail_config']['default_read']['start_tls']        = false\ndefault['opennms']['javamail_config']['default_read']['transport']        = \"pop3\"\ndefault['opennms']['javamail_config']['default_read']['user']             = \"opennms\"\ndefault['opennms']['javamail_config']['default_read']['password']         = \"opennms\"\ndefault['opennms']['javamail_config']['default_send']['attempt_interval']   = 3000\ndefault['opennms']['javamail_config']['default_send']['use_authentication'] = false\ndefault['opennms']['javamail_config']['default_send']['use_jmta']           = true\ndefault['opennms']['javamail_config']['default_send']['debug']              = true\ndefault['opennms']['javamail_config']['default_send']['host']               = \"127.0.0.1\"\ndefault['opennms']['javamail_config']['default_send']['port']               = 25\ndefault['opennms']['javamail_config']['default_send']['char_set']           = \"us-ascii\"\ndefault['opennms']['javamail_config']['default_send']['mailer']             = \"smtpsend\"\ndefault['opennms']['javamail_config']['default_send']['content_type']       = \"text/plain\"\ndefault['opennms']['javamail_config']['default_send']['encoding']           = \"7-bit\"\ndefault['opennms']['javamail_config']['default_send']['quit_wait']          = true\ndefault['opennms']['javamail_config']['default_send']['ssl_enable']         = false\ndefault['opennms']['javamail_config']['default_send']['start_tls']          = false\ndefault['opennms']['javamail_config']['default_send']['transport']          = \"smtp\"\ndefault['opennms']['javamail_config']['default_send']['to']                 = \"root@localhost\"\ndefault['opennms']['javamail_config']['default_send']['from']               = \"root@[localhost]\"\ndefault['opennms']['javamail_config']['default_send']['subject']            = \"OpenNMS Test Message\"\ndefault['opennms']['javamail_config']['default_send']['body']               = \"This is an OpenNMS test message.\"\ndefault['opennms']['javamail_config']['default_send']['user']               = \"opennms\"\ndefault['opennms']['javamail_config']['default_send']['password']           = \"opennms\"\n```\n\n#### jcifs.properties\n\nThis is useful for something I'm sure, but I don't know what. See the template or default attributes file for hints.\n\n#### etc/jdbc-datacollection-config.xml \n\nSimilar to other datacollection-config.xml files, you can change the RRD repository, step, RRA definitions and disable default collections and their queries.\n\n#### etc/jmx-datacollection-config.xml \n\nSimilar to other datacollection-config.xml files, you can change the RRD repository, step, RRA definitions and disable default collections and their mbeans. In the JBoss collection you can specify a JMS queue and/or topic to collect stats on. See the template and default attributes for details. \n\n#### etc/linkd-configuration.xml\n\nAttributes available in `node['opennms']['linkd']` that allow you change global settings like:\n* threads\n* initial_sleep_time\n* snmp_poll_interval\n* discovery_link_interval\n\nYou can also turn off various kinds of detection, like for `iproutes`, set any of these to false to remove them from the file:\n* netscreen\n* cisco\n* darwin\n\nFinally there's the package element at the end of the file that you can configure with these attributes:\n```\ndefault['opennms']['linkd']['package']                      = \"example1\"\ndefault['opennms']['linkd']['filter']                       = \"IPADDR != '0.0.0.0'\"\ndefault['opennms']['linkd']['range_begin']                  = \"1.1.1.1\"\ndefault['opennms']['linkd']['range_end']                    = \"254.254.254.254\"\n```\n\n#### etc/log4j.properties\n\nThis one is a little different. If you want to turn up logging for collectd, for instance, you'd set these override attributes:\n```\n{\n  \"opennms\":\n  {\n    \"log4j\":\n    {\n      \"collectd\":\n      {\n        \"level\": \"DEBUG\"\n      }\n    }\n  }\n}\n```\nBut you could also change the appender class, the max file size, the max number of files (assuming the use of RollingFileAppender), the layout class and the layout conversion pattern (assuming the use of PatternLayout) using `appender`, `max_file_size`, `max_backup_index`, `layout`, and `conversion_pattern`.\n\n#### magic-users.properties\n\nThe rtc username and password are populated from the values set in `node['opennms']['properties']['rtc']['username']` and `node['opennms']['properties']['rtc']['password']`. TODO: Generate passwords during install! Other attributes available for configuration are:\n```\ndefault['opennms']['magic_users']['admin_users']     = \"admin\"\ndefault['opennms']['magic_users']['ro_users']        = \"\"\ndefault['opennms']['magic_users']['dashboard_users'] = \"\"\ndefault['opennms']['magic_users']['provision_users'] = \"\"\ndefault['opennms']['magic_users']['remoting_users']  = \"\"\ndefault['opennms']['magic_users']['rest_users']      = \"iphone\"\n```\n\n#### etc/map.properties\n\nDo you love maps but are a contrarian when it comes to color schemes? Have we got the template for you! I guess also useful for translating labels?  Check out the default attributes for details on what you can change.\n\n#### etec/microblog-configuration.xml\n\nJoin twitter and tell the public about your broken network! Set `node['opennms']['microblog']['default_profile']['name']` to `twitter` or `identica` and then set `['opennms']['microblog']['default_profile']['authen_username']` and `['opennms']['microblog']['default_profile']['authen_password']` to use those services, or use a different service by setting `node['opennms']['microblog']['default_profile']['service_url']` as well (assuming OpenNMS supports it). This only sets up the profile. You'll still need to define a destination path and set events and alarms to use it the normal way as described at http://www.opennms.org/wiki/Microblog_Notifications until the notification and destination path LWRPs are written.\n\n#### etc/model-importer.properties\n\nI couldn't figure out if this file is still used and/or necessary, but anyway the same attributes are used here and in provisiond-configuration.xml, so go check that one out.\n\n#### etc/modemConfig.properties\n\nYou can set `node['opennms']['modem']` to one of the predefined modems (mac2412, mac2414, macFA22, macFA24, macFA42, macFA44, acm0, acm1, acm2, acm3, acm4, acm5) or set `node['opennms']['custom_modem']` to something like :\n```\n{\n  \"opennms\":\n  {\n    \"custom_modem\":\n    {\n      \"name\": \"foobar\",\n      \"port\": \"/dev/ttyFoobar\",\n      \"model\": \"foobar37\",\n      \"manufacturer\": \"Foo Bar\"\n      \"baudrate\": 57600\n    }\n  }\n}\n```\n\n#### etc/notifd-configuration.xml\n\nIs ignorance about your broken network in fact bliss?  Shut off notifd by setting `node['notifd']['status']` to \"off\" and find out. Don't know what `match-all` even means? Find out by setting `node['opennms']['notifd']['match_all']` to false. (It controls whether only the first matching notification is used or not). You can also disable any of the default auto-acknowledge elements with `node['notifd']['auto_ack']['service_unresponsive|service_lost|interface_down|widespread_outage']`.\n\n#### etc/notificationCommands.xml\n\nTurn off one of the default notification commands by setting one of the attributes in `node['opennms']['notification_commands']` to false:\n* java_pager_email\n* java_email\n* xmpp_message\n* xmpp_group_message\n* irc_cat\n* call_work_phone\n* call_mobile_phone\n* call_home_phone\n* microblog_update\n* microblog_reply\n* microblog_dm\n\n#### etc/notifications.xml\n\nThese attributes:\n* enabled\n* status\n* rule\n* destination_path\n* description\n* text_message\n* subject\n* numeric_message\n\ncan be overridden to alter any of these default notifications:\n\n* interface_down\n* node_down\n* node_lost_service\n* node_added\n* interface_deleted\n* high_threshold\n* low_threshold\n\nin `node['opennms']['notifications']`. Stay tuned for a notification LWRP.\n\n#### etc/nsclient-datacollection-config.xml\n\n\nSimilar to other datacollection-config.xml files, you can change the RRD repository, step, RRA definitions and disable default collections and wpms.\n#### etc/poller-configuration.xml\n\nDisable packages, change IPv4 and IPv6 include ranges and RRD settings, remove or disable services or change their polling interval, retry, timeout or another service parameter. Like collectd and capsd, the possibilities here are pretty extensive so check out the default attributes and template for more info.\n#### etc/provisiond-configuration.xml\n\nSame as model-importer.properties.\n```\ndefault['opennms']['importer']['import_url']         = \"file:/path/to/dump.xml\"\ndefault['opennms']['importer']['schedule']           = \"0 0 0 1 1 ? 2023\"\ndefault['opennms']['importer']['threads']            = 8\ndefault['opennms']['importer']['scan_threads']       = 10\ndefault['opennms']['importer']['rescan_threads']     = 10\ndefault['opennms']['importer']['write_threads']      = 8\ndefault['opennms']['importer']['requisition_dir']    = \"#{default['opennms']['conf']['home']}/etc/imports\"\ndefault['opennms']['importer']['foreign_source_dir'] = \"#{default['opennms']['conf']['home']}/etc/foreign-sources\"\n```\n\n#### etc/remedy.properties\n\nDo you use the Remedy integration but aren't the Italian that checked their Remedy config into git? Change all of these attributes then:\n\n```\ndefault['opennms']['remedy']['username']\ndefault['opennms']['remedy']['password']\ndefault['opennms']['remedy']['authentication']\ndefault['opennms']['remedy']['locale']\ndefault['opennms']['remedy']['timezone']\ndefault['opennms']['remedy']['endpoint']\ndefault['opennms']['remedy']['portname']\ndefault['opennms']['remedy']['createendpoint']\ndefault['opennms']['remedy']['createportname']\ndefault['opennms']['remedy']['targetgroups']\ndefault['opennms']['remedy']['assignedgroups']\ndefault['opennms']['remedy']['assignedsupportcompanies']\ndefault['opennms']['remedy']['assignedsupportorganizations']\ndefault['opennms']['remedy']['assignedgroup']\ndefault['opennms']['remedy']['firstname']\ndefault['opennms']['remedy']['lastname']\ndefault['opennms']['remedy']['serviceCI']\ndefault['opennms']['remedy']['serviceCIReconID']\ndefault['opennms']['remedy']['assignedsupportcompany']\ndefault['opennms']['remedy']['assignedsupportorganization']\ndefault['opennms']['remedy']['categorizationtier1']\ndefault['opennms']['remedy']['categorizationtier2']\ndefault['opennms']['remedy']['categorizationtier3']\ndefault['opennms']['remedy']['service_type']\ndefault['opennms']['remedy']['reported_source']\ndefault['opennms']['remedy']['impact']\ndefault['opennms']['remedy']['urgency']\ndefault['opennms']['remedy']['reason_reopen']\ndefault['opennms']['remedy']['resolution']\ndefault['opennms']['remedy']['reason_resolved']\ndefault['opennms']['remedy']['reason_cancelled']\n```\n\n#### etc/reportd-configuration.xml\n\nTwo attributes are available for your availability report running pleasure:\n\n* storage_location\n* persist_reports\n\nBut they aren't very helpful until you add some reports. A LWRP for that is planned.\n\n#### etc/response-graph.properties\nChange the image format from the default `png` to `gif` or `jpg` (if using jrobin or you like broken images) with `node['response_graph']['image_format']`. Font sizes can also be changed with `node['response_graph']['default_font_size']` and `node['response_graph']['title_font_size']` (defaults are 7 and 10 respectively). Setting these attributes to false removes them from the file:\n\n* icmp\n* avail\n* dhcp\n* dns\n* http\n* http_8080\n* http_8000\n* mail\n* pop3\n* radius\n* smtp\n* ssh\n* jboss\n* snmp\n* ldap\n* strafeping\n* memcached_bytes\n* memcached_bytesrw\n* memcached_uptime\n* memcached_rusage\n* memcached_items\n* memcached_conns\n* memcached_tconns (off by default)\n* memcached_cmds\n* memcached_gets\n* memcached_evictions\n* memcached_threads\n* memcached_struct\n* ciscoping_time\n\nIf you changed the count of pings in the strafer polling package to a value higher than 20, you'll also need to define additional colors for the strafeping graph, like `default['opennms']['response_graph']['strafeping_colors'][21] = [\"#f5f5f5\"]`. If you want to add a STACK to the graph for another ping number (defaults to 1-4,10,19) add a second color to that attribute's value array, like `default['opennms']['response_graph']['strafeping_colors'][21] = [\"#f5f5f5\",\"#050505\"]`. \n\n#### etc/rrd-configuration.properties\n\nTobi enthusiasts will want to set some attributes in `node['opennms']['rrd']` to switch from jrobin to rrdtool:\n```\n{\n  \"opennms\":\n  {\n    \"rrd\":\n    {\n      \"strategy_class\": \"org.opennms.netmgt.rrd.rrdtool.JniRrdStrategy\",\n      \"interface_jar\":  \"/usr/share/java/jrrd.jar\",\n      \"jrrd\":           \"/usr/lib/libjrrd.so\"\n    }\n  }\n}\n```\nTODO: automatically install the appropriate JNI stuff for the target architecture/platform.\n\nYou can also change a multitude of queue settings or change the jrobin backend factory, but unless you know what you're doing that's probably a mistake. Look at the template for details if you're curious.\n\nFinally, to turn on the Google protobuf export thing described at http://www.opennms.org/wiki/Performance_Data_TCP_Export, set these attributes accordingly:\n\n```\ndefault['opennms']['rrd']['usetcp']      = true\ndefault['opennms']['rrd']['tcp']['host'] = 10.0.0.1\ndefault['opennms']['rrd']['tcp']['port'] = 9100     # Hope that's a JetDirect compatible network interface!\n```\n\n#### etc/rtc-configuration.xml\n\nLike other factory configuration files, you can change some settings with attributes:\n\n```\ndefault['opennms']['rtc']['updaters']                      = 10\ndefault['opennms']['rtc']['senders']                       = 5\ndefault['opennms']['rtc']['rolling_window']                = \"24h\"\ndefault['opennms']['rtc']['max_events_before_resend']      = 100\ndefault['opennms']['rtc']['low_threshold_interval']        = \"20s\"\ndefault['opennms']['rtc']['high_threshold_interval']       = \"45s\"\ndefault['opennms']['rtc']['user_refresh_interval']         = \"2m\"\ndefault['opennms']['rtc']['errors_before_url_unsubscribe'] = 5\n```\n\n#### etc/site-status-views.xml\n\nDo you actually populate the building column in assets or site field in provisioning reqs? Change the default site status view name and/or it's definition with these attributes: `node['opennms']['site_status_views']['default_view']['name']` and `node['opennms']['site_status_views']['default_view']['rows']` where `rows` is an array of single element hashes (to maintain order) like:\n```\n[\n  {\n    \"Routers\": \"Routers\"\n  },\n  {\n    \"Switches\": \"Switches\"\n  },\n  {\n    \"Servers\": \"Servers\"\n  }\n]\n```\n\n#### etc/smsPhonebook.properties\n\nPopulate `node['opennms']['sms_phonebook']['entries']` with `{ \"hostname\": \"+PHONE_NUMBER\" }` keypairs to define an IP address' phone number for the mobile sequence monitor (http://www.opennms.org/wiki/Mobile_Sequence_Monitor). A pending LWRP will provide the ability to add the required mobile-sequence elements to make this useful.\n\n#### etc/snmp-adhoc-graph.properties\n\nSimilar to other *-graph.properties files, you can change the image format used in adhoc graphs by setting the attribute `node['opennms']['snmp_adhoc_graph']['image_format']` to `gif` or `jpg` rather than the default `png`. Note that the intersection of formats supported by both jrobin and rrdtool is `png`, though.\n\n#### etc/snmp-graph.properties & snmp-graph.properties.d/*\n\nSimilar to other *-graph.properties files, you can change the image format used in predefined graphs by setting the attribute `node['opennms']['snmp_adhoc_graph']['image_format']` t\no `gif` or `jpg` rather than the default `png`. Note that the intersection of formats supported by both jrobin and rrdtool is `png`, though.\nYou can also set the default and title font sizes like you can in the response graphs. Since these graphs are now split up by manufacturer, you can disable graphs for a manufacturer like you can in snmp-datacollection-config.xml. This example disables Dell graphs:\n\n```\n{\n  \"opennms\":\n  {\n    \"snmp_graph\":\n    {\n      \"dell_openmanage\": false,\n      \"dell_rac\": false\n    }\n  }\n}\n```\n\nNote that this doesn't delete that file, it merely comments out the `reports=...` line(s) in the file.\n\nYou can also change the default KSC graph by setting `node['snmp_graph']['default_ksc_graph']` to the name of a valid graph.\n\n#### etc/snmp-interface-poller-configuration.xml\n\nSome attributes are available to configure the 1.9+ SNMP Interface Poller (http://www.opennms.org/wiki/SNMP_Interface_Poller). Defaults (effectively disabled):\n\n```\ndefault['opennms']['snmp_iface_poller']['threads']                               = 30\ndefault['opennms']['snmp_iface_poller']['service']                               = \"SNMP\"\n# array of service names that if down cause the SNMP poller to stop polling\ndefault['opennms']['snmp_iface_poller']['node_outage']                           = [\"ICMP\",\"SNMP\"]\ndefault['opennms']['snmp_iface_poller']['example1']['filter']                    = \"IPADDR != '0.0.0.0'\"\ndefault['opennms']['snmp_iface_poller']['example1']['ipv4_range']['begin']       = \"1.1.1.1\"\ndefault['opennms']['snmp_iface_poller']['example1']['ipv4_range']['end']         = \"1.1.1.1\"\ndefault['opennms']['snmp_iface_poller']['example1']['ipv6_range']['begin']       = \"::1\"\ndefault['opennms']['snmp_iface_poller']['example1']['ipv6_range']['end']         = \"::1\"\ndefault['opennms']['snmp_iface_poller']['example1']['interface']['name']         = \"Ethernet\"\ndefault['opennms']['snmp_iface_poller']['example1']['interface']['criteria']     = \"snmpiftype = 6\"\ndefault['opennms']['snmp_iface_poller']['example1']['interface']['interval']     = 300000\ndefault['opennms']['snmp_iface_poller']['example1']['interface']['user_defined'] = false\ndefault['opennms']['snmp_iface_poller']['example1']['interface']['status']       = \"on\"\n```\n\n\n#### etc/statsd-configuration.xml\n\nYou can remove either of the default packages or an individual report by setting attributes in `node['opennms']['statsd']['PACKAGE_NAME']['REPORT_NAME']` to false. Packages and their reports are:\n\n* example1\n  * top_n\n* response_time_reports\n  * top_10_weekly\n  * top_10_this_month\n  * top_10_last_month\n  * top_10_this_year\n\n#### etc/support.properties\n\nWhatever this file is for, you can set support.queueId, support.timeout and support.retry with `node['opennms']['support']['queueid']`, `node['opennms']['support']['timeout']` and `node['opennms']['support']['retry']`.\n\n#### etc/surveillance-views.xml\n\nSimilar to site-status-views.xml.  Change this to change the default view shown in the Dashboard of the Web UI with the attribute `node['opennms']['surveillance_views']['default_view']`. Defaults to `default`. A LWRP is forthcoming that will let you add your own (and set it to default). So this is pretty useless ATM.\n#### etc/syslog-northbounder-configuration.xml\n\nForward alarms to a syslog server.  Attributes available in `node['opennms']['syslog_north']`:\n\n```\nuse_defaults       = true\n# set above to false if you want the following four attributes to take effect\nenabled            = false\nnagles_delay       = 1000\nbatch_size         = 100\nqueue_size         = 300000\nmessage_format     = \"ALARM ID:${alarmId} NODE:${nodeLabel}; ${logMsg}\"\n```\n\nChange these attributes in `node['opennms']['syslog_north']['destination']` to define the syslog server to send alarm data to:\n\n```\nname            = \"localTest\"\nhost            = \"127.0.0.1\"\nport            = \"514\"\nip_protocol     = \"UDP\"\nfacility        = \"LOCAL0\"\nmax_length      = 1024\nsend_local_name = true\nsend_local_time = true\ntruncate        = false\n```\n\nAnd set these attributes in `node['opennms']['syslog_north']['uei']` to true to limit alarms forwarded to these specific UEIs:\n\n```\ndefault['opennms']['syslog_north']['uei']['node_down']\ndefault['opennms']['syslog_north']['uei']['node_up']\n```\n\n\n#### etc/syslogd-configuration.xml\n\nGeneral settings and their defaults:\n\n```\ndefault['opennms']['syslogd']['port']                   = 10514\ndefault['opennms']['syslogd']['new_suspect']            = false\ndefault['opennms']['syslogd']['parser']                 = \"org.opennms.netmgt.syslogd.CustomSyslogParser\"\ndefault['opennms']['syslogd']['forwarding_regexp']      = \"^.*\\s(19|20)\\d\\d([-/.])(0[1-9]|1[012])\\2(0[1-9]|[12][0-9]|3[01])(\\s+)(\\S+)(\\s)(\\S.+)\"\ndefault['opennms']['syslogd']['matching_group_host']    = 6\ndefault['opennms']['syslogd']['matching_group_message'] = 8\ndefault['opennms']['syslogd']['discard_uei']            = \"DISCARD-MATCHING-MESSAGES\"\n```\n\nTo disable the predefined definitions, set these to false:\n\n```\ndefault['opennms']['syslogd']['apache_httpd']\ndefault['opennms']['syslogd']['linux_kernel']\ndefault['opennms']['syslogd']['openssh']\ndefault['opennms']['syslogd']['sudo']\n```\n\n#### etc/threshd-configuration.xml\n\nLike everything else that has packages, filters, ranges and services, you can override attributes to tune the defaults. See the template and default attributes for details. You can also configure the number of threads with `node['opennms']['threshd']['threads']` (default is 5).\n\n#### etc/thresholds.xml\n\nChange the RRD repository location or disable threshold groups with the `enabled` and `rrd_repository` attributes in `node['opennms']['thresholds']['GROUP']` where group can be:\n\n* mib2\n* cisco\n* hrstorage\n* netsnmp\n* netsnmp_memory_linux\n* netsnmp_memory_nonlinux\n* coffee\n\n#### etc/translator-configuration.xml\n\nRemove one of the default event translations (http://www.opennms.org/wiki/Event_Translator) by setting an attribute in `node['opennms']['translator']` to false. They are:\n\n* snmp_link_down\n* snmp_link_up\n* hyperic\n* cisco_config_man\n* juniper_cfg_change\n\n#### etc/trapd-configuration.xml\n\nTwo attributes available: `port` and `new_suspect` in `node['opennms']['trapd']` that allow you to configure the port to listen for traps on (default 162) and whether or not to create newSuspect events when a trap is received from an unmanaged host (default false).\n\n#### etc/users.xml\n\nChange your admin password by setting `node['opennms']['users']['admin']['password']` to whatever hashed value of your password OpenNMS uses. Uppercase MD5? In the future we'll generate one during install. You can also change the name and user_comments attributes, I guess.\n\n#### etc/vacuumd-configuration.xml\n\nDisable things that make OpenNMS run better by setting one of these attributes to false:\n\n* `node['opennms']['vacuumd']['statement']`:\n  * topo_delete_nodes\n  * delete_at_interfaces\n  * delete_dl_interfaces\n  * delete_ipr_interfaces\n  * delete_vlans\n  * delete_stp_interfaces\n  * delete_stp_nodes\n  * delete_snmp_interfaces\n  * delete_nodes\n  * delete_ip_interfaces\n  * delete_if_services\n  * delete_events\n* `node['opennms']['vacuumd']['automations']`:\n  * cosmic_clear\n  * clean_up\n  * full_clean_up\n  * gc\n  * full_gc\n  * unclear\n  * escalation\n  * purge_statistics_reports\n  * create_tickets\n  * create_critical_ticket\n  * update_tickets\n  * close_cleared_alarm_tickets\n  * clear_alarms_for_closed_tickets\n  * clean_up_rp_status_changes\n  * maintenance_check (default false)\n  * add_missing_access_points_to_table (default false)\n  * update_access_points_table (default false)\n  * clean_up_access_points_table (default false)\n* `node['opennms']['vacuumd']['triggers']`:\n  * select_closed_ticket_state_for_problem_alarms\n  * select_null_ticket_state_alarms\n  * select_critial_open_alarms\n  * select_not_null_ticket_state_alarms\n  * select_cleared_alarm_with_open_ticket_state\n  * select_suspect_alarms\n  * select_cleared_alarms\n  * select_resolvers\n  * select_expiration_maintenance (default false)\n  * select_access_points_missing_from_table (default false)\n* `node['opennms']['vacuumd']['actions']`:\n  * acknowledge_alarm\n  * update_automation_time\n  * escalate_alarm\n  * reset_severity\n  * garbage_collect_7_4\n  * garbage_collect_8_1 (default false)\n  * full_garbage_collect_7_4\n  * full_garbage_collect_8_1 (default false)\n  * delete_past_cleared_alarms\n  * delete_all_past_cleared_alarms\n  * clear_problems\n  * clear_closed_ticket_alarms\n  * delete_purgeable_statistics_reports\n  * do_nothing_action\n  * clean_up_rp_status_changes\n  * maintenance_expiration_warning (default false)\n  * add_access_point_to_table (default false)\n  * update_access_points_table (default false)\n  * clean_up_access_points_table (default false)\n* `node['opennms']['vacuumd']['auto_events']`:\n  * escalation_event\n* `node['opennms']['vacuumd']['action_events']`:\n  * create_ticket\n  * update_ticket\n  * close_ticket\n  * event_escalated\n  * maintenance_expiration_warning (default false)\n\nYou can also change the frequency in which vacuumd runs by setting `node['opennms']['vacuumd']['period']`. Default is 86400000 (1 day).\n\n#### etc/viewsdisplay.xml\n\nAnother web UI XML file, this one controls which categories are displayed in the availability box on the main landing page. Once a LWRP exists you'll be able to add sections, but until then you can disable any of the existing categories by setting one of these attributes in `node['opennms']['web_console_view']` to false:\n\n* network_interfaces\n* web_servers\n* email_servers\n* dns_dhcp_servers\n* db_servers\n* jmx_servers\n* other_servers\n\n#### etc/vmware-cim-datacollection-config.xml\n\nSimilar to other *datacollection-config.xml files, you can change the RRD repository, step, RRA definitions and disable default vmware-cim-groups.\n\n#### etc/vmware-datacollection-config.xml\n\nSimilar to other *datacollection-config.xml files, you can change the RRD repository, step, RRA definitions and disable default vmware-groups.\n\n#### etc/wmi-datacollection-config.xml\n\nSimilar to other *datacollection-config.xml files, you can change the RRD repository, step, RRA definitions and disable default wpms.\n\n#### etc/xml-datacollection-config.xml\n\nNote that XML datacollection is a separate plugin package in it's own recipe. \nSimilar to other *datacollection-config.xml files, you can change the RRD repository, step, RRA definitions and disable default xml-collections.\n\n#### etc/xmlrpcd-configuration.xml\n\nFactory settings can be changed with these attributes in `node['opennms']['xmlrpcd']`:\n\n```\n['max_event_queue_size']            = 5000\n['external_servers']['retries']     = 3\n['external_servers']['elapse_time'] = 15000\n['external_servers']['url']         = \"http://localhost:8000\"\n['external_servers']['timeout']     = 0\n```\n\nEventually a LWRP will exist to add more than 1 `external_servers`.\n\nTo change the list of events sent via XML-RPC, override the `node['opennms']['xmlrpcd']['base_events']` attribute with an array of UEI strings.\n\n#### etc/xmpp-configuration.xml\n\nConfigure notifications to be sent via XMPP (aka Jabber, GTalk) with these attributes in `node['opennms']['xmpp']`:\n\n* server\n* service_name\n* port\n* tls\n* sasl\n* self_signed_certs\n* truststore_password\n* debug\n* user\n* pass\n\n\nLicense\n=======\nApache 2.0\n\nAuthor\n======\nDavid Schlenk (<david.schlenk@spanlink.com>)\n\nDevelopment\n===========\n\nPlease feel free to fork and send me pull requests!  The focus of my work will initially be on templates for configuration files that modify the default configuration and LWRPs to add new elements to configuration files. \n\nThere's a test kitchen suite for every main and example recipe. The default test kitchen config uses the vagrant driver, but I actually use the openstack driver (overriding the default with .kitchen.local.yml), so if the default config doesn't work that's why.  \n\n",
  "requires": [
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 6.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "rhel",
      "revision": ">= 6.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/hostsfile",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}