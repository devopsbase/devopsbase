{
  "name": "cisco-cookbook Chef cookbook",
  "chef_cookbook_name": "cisco-cookbook",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/cisco-cookbook",
    "https://supermarket.chef.io/cookbooks/cisco-cookbook/download",
    "https://supermarket.chef.io/cookbooks/cisco-cookbook/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/cisco-cookbook/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/cisco-cookbook/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/cisco-cookbook",
    "https://supermarket.chef.io/api/v1/cookbooks/cisco-cookbook/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/cisco-cookbook",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/cisco-cookbook/versions/1.0.0/download",
  "deprecated": false,
  "created": "2015-07-23T21:32:29.560Z",
  "updated": "2016-04-07T17:21:09.478Z",
  "description": "Installs/Configures Cisco NX-OS devices",
  "maintainer": {
    "name": "partnereng",
    "email": "chef-agent-dev@cisco.com"
  },
  "license": "Apache v2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 3,
  "downloads_count": 36089,
  "downloads_count_revision": 308,
  "repository_url": "https://github.com/cisco/cisco-network-chef-cookbook",
  "issues_url": "https://github.com/cisco/cisco-network-chef-cookbook/issues",
  "chef_source_url": "https://github.com/cisco/cisco-network-chef-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# cisco-cookbook\n\n#### Table of Contents\n\n1. [Overview](#overview)\n2. [Cookbook Description](#cookbook-description)\n3. [Setup](#setup)\n4. [Usage](#usage)\n5. [Resource Reference](#resource-reference)\n   * [Resource Catalog (by Technology)](#resource-by-tech)\n   * [Resource Catalog (by Name)](#resource-by-name)\n6. [Limitations](#limitations)\n7. [Development - Guide for contributing to the cookbook](#development)\n\n--\n##### Additional References\n\n* Agent Installation\n  * [README-agent-install.md](docs/README-agent-install.md) : Agent Installation and Configuration Guide\n* User Guides\n  * [README-package-provider.md](docs/README-package-provider.md) : Cisco Nexus Package Management using the Package Provider\n* Developer Guides\n  * [README-develop-resources-providers.md](docs/README-develop-resources-providers.md) : Developing New cisco-cookbook Resources and Providers\n\n--\n\n## Overview\n\nThe `cisco-cookbook` allows a network administrator to manage Cisco Network Elements using Chef. This cookbook bundles a set of Chef Resources, providers, Sample Recipes and installation Tools for effective network management.  The resources and capabilities provided by this cookbook will grow with contributions from Cisco, Chef Software Inc., and the open source community.\n\nThe Cisco Network Elements and Operating Systems managed by this cookbook are continuously expanding. Please refer to the [Limitations](#limitations) section for details on currently supported hardware and software. The Limitations section also provides details on compatible Chef client and Chef Server versions.\n\nThis GitHub repository contains the latest version of the cisco-cookbook source code. Supported versions of the cisco-cookbook are available at Chef Supermarket. Please refer to [SUPPORT.md](SUPPORT.md) for additional details.\n\nContributions to this cookbook are welcome. Guidelines on contributions to the cookbook are captured in [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Cookbook Description\n\nThis cookbook enables management of supported Cisco Network Elements using Chef. This cookbook enhances the Chef DSL by introducing new Chef Resources and Providers capable of managing network elements.\n\nThe set of supported network element platforms is continuously expanding. Please refer to the [Limitations](#limitations) section for a list of currently supported platforms.\n\n## Setup\n\n#### Chef Server\n\nThe `cisco-cookbook` is installed on the Chef server. Please see [The Chef Server](https://docs.chef.io/server/) for information on Chef server setup. See Chef's [knife cookbook site](https://docs.chef.io/knife_cookbook_site.html) for general information on Chef cookbook installation.\n\n#### Chef Client\nThe Chef Client (agent) requires installation and setup on each device. Agent setup can be performed as a manual process or it may be automated. For more information please see the [README-agent-install.md](docs/README-agent-install.md) document for detailed instructions on agent installation and configuration on Cisco Nexus devices.\n\n##### Artifacts\n\nAs noted in the agent installation guide, these are the current RPM versions for use with cisco-cookbook:\n\n* `bash-shell`\n  * http://s3.amazonaws.com/alpha-builds/chef-12.4.1.cisco%2B20150826000706-1.nexus5.x86_64.rpm\n* `guestshell`\n  * https://s3.amazonaws.com/alpha-builds/chef-12.4.1.cisco%2B20150826204615-1.el7.x86_64.rpm\n\n##### Gems\n\nThe cisco-cookbook has dependencies on a few ruby gems. These gems are already installed in the cookbook as vendored gems so there are no additional steps required for installing these gems. The gems are shown here for reference only:\n\n* [`net_http_unix`](https://rubygems.org/gems/net_http_unix)\n* [`cisco_nxapi`](https://rubygems.org/gems/cisco_nxapi)\n* [`cisco_node_utils`](https://rubygems.org/gems/cisco_node_utils)\n\n## Usage\n\nPlace a dependency on cisco-cookbook in your cookbook's metadata.rb\n\n```ruby\ndepends 'cisco-cookbook', '~> 1.0'\n```\n\nSee the recipes directory for example usage of cisco providers and resources.\n\n## Resource Reference\n\n### <a name=\"resource-by-tech\">Resource Catalog (by Technology)<a>\n\n1. Miscellaneous Types\n  * [`cisco_command_config`](#type-cisco_command_config)\n\n2. Interface Types\n  * [`cisco_interface`](#type-cisco_interface)\n  * [`cisco_interface_ospf`](#type-cisco_interface_ospf)\n\n3. OSPF Types\n  * [`cisco_ospf`](#type-cisco_ospf)\n  * [`cisco_ospf_vrf`](#type-cisco_ospf_vrf)\n  * [`cisco_interface_ospf`](#type-cisco_interface_ospf)\n\n4. SNMP Types\n  * [`cisco_snmp_community`](#type-cisco_snmp_community)\n  * [`cisco_snmp_group`](#type-cisco_snmp_group)\n  * [`cisco_snmp_server`](#type-cisco_snmp_server)\n  * [`cisco_snmp_user`](#type-cisco_snmp_user)\n\n5. TACACS Types\n  * [`cisco_tacacs_server`](#type-cisco_tacacs_server)\n  * [`cisco_tacacs_server_host`](#type-cisco_tacacs_server_host)\n\n6. VLAN Types\n  * [`cisco_vlan`](#type-cisco_vlan)\n  * [`cisco_vtp`](#type-cisco_vtp)\n\n--\n### <a name=\"resource-by-name\">Resource Catalog (by Name)<a>\n\n* [`cisco_command_config`](#type-cisco_command_config)\n* [`cisco_interface`](#type-cisco_interface)\n* [`cisco_interface_ospf`](#type-cisco_interface_ospf)\n* [`cisco_ospf`](#type-cisco_ospf)\n* [`cisco_ospf_vrf`](#type-cisco_ospf_vrf)\n* [`cisco_snmp_community`](#type-cisco_snmp_community)\n* [`cisco_snmp_group`](#type-cisco_snmp_group)\n* [`cisco_snmp_server`](#type-cisco_snmp_server)\n* [`cisco_snmp_user`](#type-cisco_snmp_user)\n* [`cisco_tacacs_server`](#type-cisco_tacacs_server)\n* [`cisco_tacacs_server_host`](#type-cisco_tacacs_server_host)\n* [`cisco_vlan`](#type-cisco_vlan)\n* [`cisco_vtp`](#type-cisco_vtp)\n\n--\n### Resource Details\n\nThe following resources are listed alphabetically.\n\n### cisco_command_config\n\nThe `cisco_command_config` resource allows raw configurations to be managed by chef. It serves as a stopgap until specialized resources are created. It has the following limitations:\n\n* The input message buffer is limited to 500KB. Large configurations are often easier to debug if broken up into multiple smaller resource blocks.\n* The cisco_command_config configuration block must use the same syntax as displayed by the show running-config command on the switch. In some cases, configuration commands that omit optional keywords when entered may actually appear with a different syntax when displayed by show running-config; for example, some access-list entries may be configured without a sequence number but yet an implicit sequence number is created regardless. This then creates an idempotency problem because there is a mismatch between show running-config and the manifest. The solution in this case is for the manifest to include explicit sequence numbers for the affected access-list entries.\n* Order is important. Some dependent commands may fail if their associated `feature` configuration is not enabled first\n* Indentation counts! It implies sub-mode configuration. Use the switch's running-config as a guide and do not indent configurations that are not normally indented. Do not use tabs to indent.\n* Inline comments must be prefixed by ! or #\n* Negating a submode will also remove configurations under that submode, without having to specify every submode config statement: `no router ospf RED` removes all configuration under router ospf RED\n* Syntax does not auto-complete: use `Ethernet1/1`, not `Eth1/1`\n* If a CLI command is rejected during configuration, the resource will abort at that point and will not continue to issue any remaining CLI.  For this reason it is recommended to limit the scope of each instance of this resource.\n\n#### Examples\n\n```ruby\ncisco_command_config 'loop42' do\n  command '\ninterface loopback42\n  description Peering for AS 42\n  ip address 192.168.1.42/24\n'\nend\n\ncisco_command_config 'route42' do\n  command ' ip route 192.168.42.42/32 Null0 '\nend\n```\n\n#### Parameters\n\n- `command` - The sequence of configuration commands to apply.\n\n### cisco_interface\n\nThe `cisco_interface` resource is used to manage general configuration of all\ninterface types, including ethernet, port-channel, loopback, and SVI (vlan).\n\n#### Examples\n\n```ruby\ncisco_interface 'Ethernet1/1' do\n  action :create\n  ipv4_address '10.1.1.1'\n  ipv4_netmask_length 24\n  ipv4_proxy_arp true\n  ipv4_redirects true\n  shutdown true\n  switchport_mode 'disabled'\nend\n\ncisco_interface 'Ethernet1/2' do\n  action :create\n  access_vlan 100\n  shutdown false\n  switchport_mode 'access'\n  switchport_vtp true\nend\n\n```\n\n#### Parameters\n\nNote that the setting of the `switchport_mode` parameter influences which of the\nother parameters are permitted. Not all interface types support all of the below\nparameters.\n\n- `interface_name` - The interface name, in lower case. Defaults to the\n   resource name.\n\n- `access_vlan` - The access VLAN ID. Only valid with `switchport_mode`\n  set to `access` or `trunk`.\n\n- `description` - Descriptive label for this interface.\n\n- `shutdown` - Set to `true` to administratively shut down this interface,\n  `false` to administratively enable this interface.\n\n- `ipv4_address` - IPv4 address to apply to this interface. Requires\n  `ipv4_netmask_length`.\n\n- `ipv4_netmask_length` - Netmask length of this interface's IPv4 address.\n   Must be a value between `0` and `32`. Requires `ipv4_address`.\n\n- `ipv4_proxy_arp` - Set to `true` to enable Proxy ARP on this interface,\n  `false` to disable Proxy ARP.\n\n- `ipv4_redirects` - Set to `false` to disable ICMP redirects on this interface,\n  `true` to enable them.\n\n- `negotiate_auto` - Set to `true` or `false` to enable or disable\n   autonegotiation of interface speed.\n\n- `switchport_autostate_exclude` - Set to `true` or `false` to exclude or\n  include this interface from SVI calculations. Default value: `false`.\n\n- `switchport_mode` - Interface switchport mode. Available options (depending\n   on interface type) are 'disabled', 'access', 'tunnel', 'fex_fabric',\n   'trunk', 'default'. If set to 'default', the default mode for the interface\n   type is used.\n\n- `switchport_vtp` - Set to `true` or `false` to enable or disable VTP on this\n  interface. Default value: `false`.\n\n- `svi_autostate` - Enable/disable SVI autostate. Default value: `true`.\n   Only applicable to SVI (`vlan`) interfaces.\n\n- `svi_management` - Enable/disable SVI management. Default value: `false`.\n   Only applicable to SVI (`vlan`) interfaces.\n\n#### Actions\n\n- `:create` - Creates and/or updates the interface configuration.\n\n- `:destroy` - Unconfigures and/or deletes the interface.\n\nNote that logical interfaces (loopback, SVI, etc.) can be created/destroyed,\nwhile physical interfaces (Ethernet, etc.) can only be configured/unconfigured.\nThe same actions apply regardless.\n\n### cisco_interface_ospf\n\nThe `cisco_interface_ospf` resource is used to manage per-interface OSPF\nconfiguration properties. More broadly applicable OSPF configuration is\nmanaged by the `cisco_ospf` and `cisco_ospf_vrf` resources.\n\n#### Examples\n\n```ruby\ncisco_interface_ospf 'Ethernet1/2' do\n  action :create\n  ospf 'Sample'\n  area 200\n  cost 200\n  dead_interval 200\n  hello_interval 200\n  message_digest true\n  message_digest_encryption_type 'cisco_type_7'\n  message_digest_algorithm_type 'md5'\n  message_digest_key_id 7\n  message_digest_password '088199c89d4a5ee'\n  passive_interface true\nend\n```\n\n#### Parameters\n\n- `interface_name` - The interface name, in lower case. Defaults to the\n   resource name.\n\n- `ospf` - The OSPF process name. Required.\n\n- `area` - The OSPF area. Required.\n\n- `cost` - The OSPF link cost for this interface. Default is `0`, meaning to\n  calculate cost automatically.\n\n- `dead_interval` - The OSPF dead interval on this interface, in seconds.\n  Default value: `40`.\n\n- `hello_interval` - The OSPF hello interval on this interface, in seconds.\n  Default value: `10`.\n\n- `message_digest` - Enable or disable message-digest authentication on\n  on the interface. Available options are `true` and `false`. Default value:\n  `false`.\n\n- `message_digest_algorithm_type` - OSPF message digest algorithm.\n  Default value: `md5`, which is currently the only supported value.\n\n- `message_digest_encryption_type` - Encryption type for the message digest\n  password. Available options are `'cleartext'`, `'3des'`, and `'cisco_type_7'`.\n  Default value: `'cleartext'`.\n\n- `message_digest_key_id` - The key ID to use for message digest authentication.\n  Valid values are numbers from `0` to `255`, with `0` (the default value)\n  indicating message digest authentication is disabled.\n\n- `message_digest_password` - The message digest key (password), in the format\n  specified by `message_digest_encryption`.\n\n- `passive_interface` - Set to `true` or `false` to suppress or permit OSPF\n  routing updates on this interface.\n\n#### Actions\n\n- `:create` - Creates and/or updates the OSPF configuration on the interface.\n\n- `:destroy` - Removes all OSPF configuration on the interface.\n\n### cisco_ospf\n\nThe `cisco_ospf` resource is used to enable/disable OSPF on the switch.\nMore detailed OSPF configuration is managed by the `cisco_ospf_vrf` and\n`cisco_interface_ospf` resources.\n\n#### Examples\n\n```ruby\ncisco_ospf 'Sample' do\n  action :create\nend\n```\n\n#### Parameters\n\n- `name` - The name of the OSPF process. Defaults to the resource name.\n\n#### Actions\n\n- `:create` - Enables the given OSPF process, first configuring `feature ospf`\n  if necessary.\n\n- `:destroy` - Destroys the given OSPF process. If no OSPF configuration\n  remains, will also disable `feature ospf`.\n\n### cisco_ospf_vrf\n\nThe `cisco_ospf_vrf` resource is used to manage per-VRF OSPF configuration,\nincluding the `default` VRF.\n\n#### Examples\n\n```ruby\ncisco_ospf_vrf 'dark_blue default' do\n  auto_cost 45000\n  default_metric 5\n  log_adjacency 'detail'\n  timer_throttle_lsa_start 5\n  timer_throttle_lsa_hold  5500\n  timer_throttle_lsa_max   5600\n  timer_throttle_spf_start 250\n  timer_throttle_spf_hold  1500\n  timer_throttle_spf_max   5500\nend\n\ncisco_ospf_vrf 'dark_blue vrf1' do\n  auto_cost 46000\n  default_metric 10\n  log_adjacency 'log'\n  timer_throttle_lsa_start 8\n  timer_throttle_lsa_hold  5600\n  timer_throttle_lsa_max   5800\n  timer_throttle_spf_start 277\n  timer_throttle_spf_hold  1700\n  timer_throttle_spf_max   5700\nend\n```\n\n#### Parameters\n\n- `ospf` - Name of the parent OSPF process. Defaults to the first word of\n   the resource name.\n\n- `vrf` - Name of the VRF to apply OSPF configuration to. Defaults to the\n   second word of the resource name. A value of `default` refers to the default\n   VRF.\n\n- `auto_cost` - The reference bandwidth, in Mbps, used to calculate interface\n  default metrics. Default value: `40000`.\n\n- `default_metric` - The default cost metric for redistributed routes.\n\n- `log_adjacency` - Whether to generate system log messages whenever a neighbor\n  changes state. Available options are `'none'`, `'log'`, or `'detail'`.\n  Default value: `'none'`.\n\n- `router_id` - IPv4 address to use as a router-id for OSPF.\n\n- `timer_throttle_lsa_start` - LSA generation start interval, in milliseconds.\n  Default value: `0`.\n\n- `timer_throttle_lsa_hold` - LSA generation hold interval, in milliseconds.\n  Default value: `5000`.\n\n- `timer_throttle_lsa_max` - LSA generation maximum interval, in milliseconds.\n  Default value: `5000`.\n\n- `timer_throttle_spf_start` - Initial SPF schedule delay, in milliseconds.\n  Default value: `200`.\n\n- `timer_throttle_spf_hold` - Minimum hold time between SPF calculations,\n  in milliseconds. Default value: `1000`.\n\n- `timer_throttle_spf_max` - Maximum wait time between SPF calculations, in\n  milliseconds. Default value: `5000`.\n\n#### Actions\n\n- `:create` - Enables the given OSPF process for the given VRF.\n\n- `:destroy` - Removes the given VRF from the given OSPF process.\n\n### cisco_package\n\nThe `cisco_package` resource is a subclass of the Chef `yum_package` resource.\nUnlike `yum_package`, it will always install packages into the NX-OS native\nenvironment, even if the Chef agent is running within `guestshell`.\n\n#### Examples\n\n```ruby\ncookbook_file '/bootflash/demo-one-1.0-1.x86_64.rpm' do\n  owner 'root'\n  group 'root'\n  mode '0775'\n  source 'rpm-store/demo-one-1.0-1.x86_64.rpm'\nend\n\ncisco_package 'demo-one' do\n  action :install\n  source '/bootflash/demo-one-1.0-1.x86_64.rpm'\nend\n```\n\n#### Parameters\n\nSee https://docs.chef.io/resource_package.html\n\n#### Actions\n\nSee https://docs.chef.io/resource_package.html\n\n### cisco_snmp_community\n\nThe `cisco_snmp_community` resource is used to manage SNMP communities.\n\n#### Examples\n\n```ruby\ncisco_snmp_community 'setcom' do\n  action :create\n  acl 'testcomacl'\n  group 'network-admin'\nend\n```\n\n#### Parameters\n\n- `community` - Name of the SNMP community to manage. Defaults to the\n  resource name.\n\n- `acl` - Access control list (ACL) to filter SNMP requests. Default value: '',\n  indicating no ACL.\n\n- `group` - SNMP group name. Default value: `network-operator`.\n\n#### Actions\n\n- `:create` - Create or update the given SNMP community.\n\n- `:destroy` - Destroy the given SNMP community.\n\n### cisco_snmp_group\n\nThe `cisco_snmp_group` resource is used to manage SNMP groups. Cisco NX-OS\ndefines SNMP groups based on user roles, so this resource is unable to create\nor delete groups but can only be used to validate that the group exists or not.\n\n#### Examples\n\n```ruby\ncisco_snmp_group 'network-admin' do\n  action :create\nend\n```\n\n#### Parameters\n\n- `group` - SNMP group name. Defaults to the resource name.\n\n#### Actions\n\n- `:create` - Ensure that the given group exists, or raise an error if not.\n\n- `:destroy` - Ensure that the given group does not exist, or raise an error.\n\n### cisco_snmp_server\n\nThe `cisco_snmp_server` resource is used to manage the SNMP server configuration\non a node. There can only be one instance of this resource per node.\n\n#### Examples\n\n```ruby\ncisco_snmp_server 'default' do\n    aaa_user_cache_timeout 1000\n    contact 'user1'\n    global_enforce_priv true\n    location 'rtp'\n    packet_size 2500\n    protocol false\n    tcp_session_auth false\nend\n```\n\n#### Parameters\n\n- `name` - Must be `default`.\n\n- `aaa_user_cache_timeout` - Time in seconds before entries in the AAA user\n  cache time out. Default value: `3600`.\n\n- `contact` - SNMP system contact (sysContact).\n\n- `global_enforce_priv` - Used to enable/disable SNMP message encryption for\n  all users. Default value: `true`.\n\n- `location` - SNMP location (sysLocation).\n\n- `packet_size` - Maximum SNMP packet size. Default value: `1500`.\n\n- `protocol` - Used to enable/disable the SNMP protocol. Default value: `true`.\n\n- `tcp_session_auth` - Used to enable/disable one-time authentication for SNMP\n  over a TCP session. Default value: `true`.\n\n#### Actions\n\n- `:update` - Apply changes to the SNMP server configuration as necessary.\n\n### cisco_snmp_user\n\nThe `cisco_snmp_user` resource is used to manage SNMP user configuration.\n\n#### Examples\n\n```ruby\ncisco_snmp_user 'v3test' do\n  groups ['network-admin']\nend\n\ncisco_snmp_user 'withengine 128:128:127:127:124:2' do\n  auth_password 'Plus+Minus-'\n  auth_protocol 'md5'\n  groups ['network-admin']\n  localized_key false\n  priv_password 'Minus-Plus+'\n  priv_protocol 'des'\nend\n```\n\n#### Parameters\n\n- `user` - The username to manage. Defaults to the first word of the resource\n  name.\n\n- `engine_id` - SNMP user engineID. Defaults to the second word of the resource\n  name, if any, else ''. Valid values are '' or a string consisting of 5 to 32\n  colon-separated decimal octets.\n\n- `auth_password` - User authentication password.\n\n- `auth_protocol` - Authentication protocol to use. Available options are\n  `'md5'`, `'sha`', or `'none'`. Default value: `md5`.\n\n- `groups` - Array of strings representing the SNMP group(s) that the user\n  belongs to.\n\n- `localized_key` - Set to `true` if the `auth_password` and `priv_password`\n  are in localized key format, `false` if they are in cleartext format.\n\n- `priv_protocol` - Privacy protocol to use. Available options are `'des'`\n  and `'aes128'`. Default value: `des`.\n\n- `priv_password` - User privacy password.\n\n#### Actions\n\n- `:create` - Create or update the given SNMP user.\n\n- `:destroy` - Destroy the given SNMP user.\n\n### cisco_tacacs_server\n\nThe `cisco_tacacs_server` resource is used to manage global TACACS+ server\nconfiguration. There can only be one instance of this resource per node.\n\n#### Examples\n\n```ruby\ncisco_tacacs_server 'default' do\n  action :create\n  deadtime 20\n  directed_request true\n  encryption_password 'test123'\n  encryption_type 'clear'\n  source_interface 'Ethernet1/2'\n  timeout 10\nend\n```\n\n#### Parameters\n\n- `deadtime` - TACACS+ server deadtime interval, in minutes.\n\n- `directed_request` - Set to true to permit users to specify which server to\n  query. Default value: `false`.\n\n- `encryption_password` - Specifies the global TACACS+ server preshared key.\n\n- `encryption_type` - The encryption type for the `encryption_password`.\n  Available values are `'clear'`, `'encrypted'`, or `'default'`.\n\n- `source_interface` - Global source interface for all TACACS+ server groups.\n\n- `timeout` - Global timeout interval for TACACS+ servers, in seconds.\n  Default value: `5`.\n\n#### Actions\n\n- `:create` - Enable `feature tacacs+` and apply any specified configuration.\n\n- `:update` - Update existing TACACS+ configuration.\n\n- `:destroy` - Disable TACACS+.\n\n### cisco_tacacs_server_host\n\nThe `cisco_tacacs_server_host` resource is used to manage per-host TACACS+\nconfiguration.\n\n#### Examples\n\n```ruby\ncisco_tacacs_server_host 'testhost' do\n  action :create\n  encryption_password 'foobarpassword'\n  encryption_type 'clear'\n  port 66\n  timeout 33\nend\n```\n\n#### Parameters\n\n- `name` - The hostname to manage.\n\n- `encryption_password` - The preshared key for this host.\n\n- `encryption_type` - The encryption type for the `encryption_password`.\n  Available values are `'clear'`, `'encrypted'`, or `'default'`.\n\n- `port` - Server port for the host. Default value: `49`.\n\n- `timeout` - Timeout interval for this host, in seconds. Default value: `'0'`,\n  indicating to inherit the global TACACS+ server timeout.\n\n#### Actions\n\n- `:create` - Create/update configuration for this TACACS+ server host.\n\n- `:destroy` - Remove all configuration for this host.\n\n### cisco_vlan\n\nThe `cisco_vlan` resource is used to manage VLAN configuration.\n\n#### Examples\n\n```ruby\ncisco_vlan '220' do\n  action :create\n  shutdown true\n  state 'active'\n  vlan_name 'newtest'\nend\n```\n\n#### Parameters\n\n- `name` - The VLAN ID, in the range 1-4096. Some values are reserved and may\n  not be managed by Chef.\n\n- `shutdown` - Whether the VLAN is shut down. Default value: `false`.\n\n- `state` - State of the VLAN. Accepted values are `'active'` and `'suspend'`.\n  Default value: `active`.\n\n- `vlan_name` - Descriptive name for the VLAN.\n\n#### Actions\n\n- `:create` - Create/update the specified VLAN.\n\n- `:destroy` - Delete the specified VLAN.\n\n### cisco_vtp\n\nThe `cisco_vtp` resource is used to manage VLAN Trunking Protocol (VTP)\nconfiguration. There can only be one instance of this resource per node.\n\n#### Examples\n\n```ruby\ncisco_vtp 'default' do\n  action :create\n  domain 'cisco1234'\n  filename 'bootflash:/vlan.dat'\n  password 'test1234'\n  version 2\nend\n```\n\n#### Parameters\n\n- `domain` - VTP administrative domain. Required.\n\n- `filename` - VTP file name. Default value: `bootflash:/vlan.dat`\n\n- `password` - VTP domain password.\n\n- `version` - VTP version number. Default value: `1`.\n\n#### Actions\n\n- `:create` - Enable `feature vtp` and apply VTP configuration as requested.\n\n- `:destroy` - Disable VTP.\n\n## Limitations\n\nMinimum Requirements:\n\n* Cisco NX-OS Chef implementation requires Chef version 12.4.1\n* Ruby 1.9 or higher (preferably from the Chef full-stack installer)\n* Supported Platforms:\n  * Cisco Nexus 95xx, OS Version 7.0(3)I2(1), Environments: Bash-shell, Guestshell\n  * Cisco Nexus 93xx, OS Version 7.0(3)I2(1), Environments: Bash-shell, Guestshell\n  * Cisco Nexus 31xx, OS Version 7.0(3)I2(1), Environments: Bash-shell, Guestshell\n  * Cisco Nexus 30xx, OS Version 7.0(3)I2(1), Environments: Bash-shell, Guestshell\n\n## Development\n\nContributions to cisco-cookbook are welcome and encouraged. Please follow this general workflow for new contributions. See [CONTRIBUTING.md](CONTRIBUTING.md) for more information.\n\n1. Fork the cisco-cookbook repository on [GitHub](https://github.com/cisco/cisco-network-chef-cookbook)\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using GitHub\n\n--\n\n```text\nCopyright (c) 2014-2015 Cisco and/or its affiliates.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "nexus",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "nexus_centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ]
}