{
  "name": "chef-server Chef cookbook",
  "chef_cookbook_name": "chef-server",
  "revision": "5.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/chef-server",
    "https://supermarket.chef.io/cookbooks/chef-server/download",
    "https://supermarket.chef.io/cookbooks/chef-server/versions/5.0.0",
    "https://supermarket.chef.io/cookbooks/chef-server/versions/5.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/chef-server/versions/5.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/chef-server",
    "https://supermarket.chef.io/api/v1/cookbooks/chef-server/versions/5.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/chef-server",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/chef-server/versions/5.0.0/download",
  "deprecated": false,
  "created": "2011-05-03T13:54:53.000Z",
  "updated": "2016-09-16T19:21:40.316Z",
  "description": "Installs and configures Chef Server 12",
  "maintainer": {
    "name": "chef",
    "email": "cookbooks@chef.io"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 71,
  "downloads_count": 14817848,
  "downloads_count_revision": 1924,
  "repository_url": "https://github.com/chef-cookbooks/chef-server",
  "issues_url": "https://github.com/chef-cookbooks/chef-server/issues",
  "chef_source_url": "https://github.com/chef-cookbooks/chef-server",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# chef-server cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/chef-server.svg?branch=master)](http://travis-ci.org/chef-cookbooks/chef-server) [![Cookbook Version](https://img.shields.io/cookbook/v/chef-server.svg)](https://supermarket.chef.io/cookbooks/chef-server)\n\nThis cookbook configures a system to be a _standalone_ Chef Server. It will install the appropriate platform-specific chef-server Omnibus package from Package Cloud and perform the initial configuration.\n\nIt is not in the scope of this cookbook to handle more complex Chef Server topologies like 'tiered' or 'ha'. Nor is it in the scope of this cookbook to install and configure premium features or other add-ons. For clustered Chef Server deployments, see [chef-server-cluster](https://github.com/chef-cookbooks/chef-server-cluster). For primitives for installing `chef-server-core` or other Chef Server add-ons, see [chef-ingredient](https://supermarket.chef.io/cookbooks/chef-ingredient).\n\nIt is also not in the scope of this cookbook to handle older versions of Chef Server, such as 11 or 10. For Chef Server 11, see version 2.1.x of this cookbook on Supermarket, or the `chef11` branch of this repository.\n\n## Requirements\n\n### Platforms\n\nThis cookbook is tested on the following platforms using the [Test Kitchen](http://kitchen.ci) `.kitchen.yml` in the repository.\n\n- RHEL/CentOS 6 64-bit\n- RHEL/CentOS 7 64-bit\n- Ubuntu 12.04, 12.10 64-bit\n- Ubuntu 14.04, 14.10 64-bit\n\nUnlisted platforms in the same family, of similar or equivalent versions may work with or without modification to this cookbook. For a list of supported platforms for Chef Server, see the [Chef documentation](https://docs.chef.io/supported_platforms.html#chef-server-title).\n\n### Chef\n\n- Chef 12+\n\n### Cookbooks\n\n- chef-ingredient >= 0.18\n\n## Attributes\n\nThe attributes used by this cookbook are under the `chef-server` name space.\n\nAttribute     | Description                                                                                                                                                         | Type   | Default\n------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------ | ------------\napi_fqdn      | Fully qualified domain name that you want to use for accessing the Web UI and API. If set to `nil` or empty string (`\"\"`), the IP address will be used as hostname. | String | node['fqdn']\nconfiguration | Configuration to pass down to the underlying server config file (i.e. `/etc/chef-server/chef-server.rb`).                                                           | String | \"\"\nversion       | Chef Server version to install. If `nil`, the latest version is installed                                                                                           | String | nil\naddons        | Array of addon packages (you need to add the addons recipe to the run list for the addons to be installed)                                                          | Array  | Array.new\n\nPrevious versions of this cookbook had several other attributes used to control the version of the Chef Server package to install. This is deprecated.\n\nPrevious versions of this cookbook used `configuration` as a Hash. This is now deprecated and the configuration should be specified as a String. This must include newlines for each of the configuration items.\n\nSee <https://docs.chef.io/config_rb_server.html> for configuration options for Chef Server and below table for addons:\n\nAddon            | Product Name                  | Config Documentation\n---------------- | ----------------------------- | ----------------------------------------------------\nmanage           | Management Console            | https://docs.chef.io/config_rb_manage.html\nha               | Chef Server High Availability | https://docs.chef.io/server_high_availability.html\nsync             | Chef Server Replication       | https://docs.chef.io/config_rb_chef_sync.html\nreporting        | Chef Server Reporting         | No separate config.\npush-jobs-server | Chef Push Server              | https://docs.chef.io/config_rb_push_jobs_server.html\nsupermarket      | Supermarket                   | https://docs.chef.io/config_rb_supermarket.html\n\n## Recipes\n\nThis section describes the recipes in the cookbook and how to use them in your environment.\n\n### default\n\nThis recipe:\n\n- Installs the appropriate platform-specific chef-server Omnibus\n- package from our Package Cloud\n- [repository](https://packagecloud.io/chef/stable)\n- Creates the initial `/etc/chef-server/chef-server.rb` file.\n- Performs initial system configuration via `chef-server-ctl\n- reconfigure`.\n- Updates the `/etc/hosts` file with the `api_fqdn` if that FQDN\n- cannot be resolved.\n\n### addons\n\nChef addons are premium features that can be installed on the Chef Server with the [appropriate license](https://www.chef.io/chef/#plans-and-pricing). If there are < 25 nodes managed, or a paid subscription license, addons can be installed.\n\nThis recipe iterates through the `node['chef-server']['addons']` attribute and installs and reconfigures all the packages listed.\n\n## Install Methods\n\n### Bootstrap Chef (server) with Chef (solo)\n\nThe easiest way to get a Chef Server up and running is to install chef-solo (via the chef-client Omnibus packages) and bootstrap the system using this cookbook:\n\n```\n# install chef-solo\ncurl -L https://www.chef.io/chef/install.sh | sudo bash\n# create required bootstrap dirs/files\nsudo mkdir -p /var/chef/cache /var/chef/cookbooks\n# pull down this chef-server cookbook\nwget -qO- https://supermarket.chef.io/cookbooks/chef-server/download | sudo tar xvzC /var/chef/cookbooks\n# pull down dependency cookbooks\nfor dep in chef-ingredient yum-chef yum apt-chef apt packagecloud\ndo\n  wget -qO- https://supermarket.chef.io/cookbooks/${dep}/download | sudo tar xvzC /var/chef/cookbooks\ndone\n# GO GO GO!!!\nsudo chef-solo -o 'recipe[chef-server::default]'\n```\n\nBe sure to download and untar the `chef-ingredient`, `yum-chef`, `yum`, `apt-chef`, `apt`, and `packagecloud` cookbooks. They're dependencies of this cookbook.\n\nIf you need more control over the final configuration of your Chef Server instance you can create a JSON attributes file and set underlying configuration via the `node['chef-server']['configuration']` attribute. See the <attributes/default.rb>\n\nThen pass this file to the initial chef-solo command:\n\n```\nchef-solo -j /tmp/dna.json\n```\n\n### Configuring Chef Server\n\nYou can read all about Chef Server's configuration options on the [Chef Documentation site](http://docs.chef.io/server/config_rb_server.html).\n\nSpecify configuration using the `node['chef-server']['configuration']` attribute as a string. Each configuration item should be separated by newlines. This string will be rendered exactly as written in the configuration file, `/etc/opscode/chef-server.rb`. For example, if we want to change the notification email, we could do this in a wrapper cookbook:\n\n```ruby\nnode.default['chef-server']['configuration'] = \"notification_email 'chef-server@example.com'\"\n```\n\nOr in a `dna.json` file:\n\n```json\n{\n  \"chef-server\": {\n    \"configuration\": \"notification_email 'chef-server@example.com'\"\n  }\n}\n```\n\nOr, for multiple configuration settings, such as the notification email and the cache size for nginx, this uses a heredoc:\n\n```ruby\nnode.default['chef-server']['configuration'] = <<-EOS\nnotification_email 'chef-server@example.com'\nnginx['cache_max_size'] = '3500m'\nEOS\n```\n\nIn a `dna.json` file, we need to insert a `\\n` newline character.\n\n```json\n{\n  \"chef-server\": {\n    \"configuration\": \"notification_email 'chef-server@example.com'\\nnginx['cache_max_size'] = '3500m'\"\n  }\n}\n```\n\n### Applying configuration changes\n\nThe `chef-server-ctl` command is the administrative interface to the Chef Server. It has its own [documentation](https://docs.chef.io/ctl_chef_server.html). Various administrative functions provided by `chef-server-ctl` are not in the scope of this cookbook. Special/customized needs should be managed in your own cookbook.\n\nAs this cookbook uses the [chef-ingredient cookbook](https://supermarket.chef.io/cookbooks/chef-ingredient), its resources can be used to manage the Chef Server installation. The default recipe in this cookbook exposes `chef_ingredient[chef-server]` as a resource that can be sent a `:reconfigure` action from your own cookbooks. The `omnibus_service` resource can be used to manage the underlying services for the Chef Server. See the [chef-ingredient cookbook](https://supermarket.chef.io/cookbooks/chef-ingredient#readme) for more information.\n\n## License and Authors\n\n- Author: Seth Chisamore [schisamo@chef.io](mailto:schisamo@chef.io)\n- Author: Joshua Timberman [joshua@chef.io](mailto:joshua@chef.io)\n- Copyright 2012-2016, Chef Software, Inc\n\n```text\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef-ingredient",
      "revision": ">= 0.18.0",
      "self_resolve": true
    }
  ]
}