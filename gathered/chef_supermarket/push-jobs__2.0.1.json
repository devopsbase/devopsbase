{
  "name": "push-jobs Chef cookbook",
  "chef_cookbook_name": "push-jobs",
  "revision": "2.0.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/push-jobs",
    "https://supermarket.chef.io/cookbooks/push-jobs/download",
    "https://supermarket.chef.io/cookbooks/push-jobs/versions/2.0.1",
    "https://supermarket.chef.io/cookbooks/push-jobs/versions/2.0.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/push-jobs/versions/2.0.1",
    "https://supermarket.chef.io/api/v1/cookbooks/push-jobs",
    "https://supermarket.chef.io/api/v1/cookbooks/push-jobs/versions/2.0.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook",
    "Mode/CLI"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/push-jobs",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/push-jobs/versions/2.0.1/download",
  "deprecated": false,
  "created": "2014-02-20T01:02:30.000Z",
  "updated": "2016-09-22T04:35:44.025Z",
  "description": "Installs the Chef Push Jobs Client",
  "maintainer": {
    "name": "chef",
    "email": "cookbooks@getchef.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": false,
  "rating": null,
  "followers_count": 15,
  "downloads_count": 3836799,
  "downloads_count_revision": 1254472,
  "repository_url": "https://github.com/chef-cookbooks/push-jobs",
  "issues_url": "https://github.com/chef-cookbooks/push-jobs/issues",
  "chef_source_url": "https://github.com/chef-cookbooks/push-jobs",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# push-jobs cookbook\n\nInstalls the Chef Push Jobs client package and sets it up to run as\na service.\n\nThe official documentation is on\n[docs.getchef.com](http://docs.getchef.com/pushy.html)\n\n# Requirements\n\nRequires Enterprise Chef with the Push\nJobs feature.\n\n* Chef: 11.4.0 or higher\n* runit cookbook\n\n## Platform\n\n* Debian\n* Ubuntu\n* Windows\n\nTested on Ubuntu 10.04, 12.04, CentOS 6.4, and Windows 2008\nR2. It may work on other debian, rhel, or windows platform families with or\nwithout modification.\n\nTesting for Ubuntu/CentOS can be done with Test Kitchen, see TESTING.md in this repository.\n\n# Usage\n\nSet the appropriate attributes and include the default recipe in a\nnode's run list.\n\nIn order for the push jobs to be used, a whitelist of job names and\ntheir commands must be set in the configuration file. This is\nautomatically generated from the attribute\n`node['push_jobs']['whitelist']`. For example:\n\n    node.set['push_jobs']['whitelist'] = {\n      \"chef-client\" => \"chef-client\",\n      \"apt-get-update\" => \"apt-get update\"\n    }\n\nAs this is an attribute, interesting uses arise from orchestrating a\nChef Client run. Assuming the above is present on the node prior to\nrunning the recipe, run Chef Client with this command from the local\nworkstation:\n\n    knife job start chef-client A_NODE_NAME\n\nNew jobs can be added to the whitelist simply by creating attributes.\nThis can be done with `knife exec`:\n\n    knife exec -E 'nodes.transform(\"name:A_NODE_NAME\") do |n|\n      n.set[\"push_jobs\"][\"whitelist\"][\"ntpdate\"] = \"ntpdate -u time\"\n    end'\n\nThen, run the chef-client job, and then the ntpdate job:\n\n    knife job start chef-client A_NODE_NAME\n    knife job start ntpdate A_NODE_NAME\n\nIn a future release, an LWRP may be added to automatically add push\njobs.\n\n# Attributes\n\nAttributes are documented in metadata.rb. See `attributes/default.rb`\nfor default values.\n\n# Recipes\n\n## default\n\nThe default recipe includes the appropriate recipe based on the node's\n`platform_family`.\n\n## linux\n\nThe `node['push_jobs']['package_url']` attribute must be set for this\nrecipe to download the Chef Push Jobs Client package from the URL.\n\nThe recipe will write out the whitelist of\njobs as a separate configuration file.\n\nIt will also set up the Chef Push Jobs Client daemon as a service\nusing `runit`. The default logger is used, so the log will be\n`/var/log/push-jobs-client/current`.\n\n## knife\n\nIf the `node['push_jobs']['gem_url']` attribute is set, this\nrecipe will download the knife-pushy gem to the system.\n\nUse this recipe on workstation systems that should manage running jobs\nwith the knife plugin.\n\n## windows\n\nThe `node['push_jobs']['package_url']` attribute must be set\nto use this recipe, as Windows does not have the concept of a package\nmanager with remote repositories. The URL will be used (with the\nchecksum attribute) to install the package using the `windows_package`\nresource from the `windows` cookbook.\n\nThe recipe will write out the whitelist of\njobs as a separate configuration file.\n\nThe client service will be enabled and started.\n\n# Author & License\n\n* Author: Joshua Timberman (<joshua@getchef.com>)\n* Author: Charles Johnson (<charles@getchef.com>)\n* Author: Christopher Maier (<cm@getchef.com>)\n* Copyright: 2013-2014 Chef Software, Inc. (<legal@getchef.com>)\n\n```text\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/runit",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/windows",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "parameters": {
    "push_jobs/package_url": {
      "description": "URL to a client package to download\n          for installing Chef Push Job Client",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "push_jobs/package_checksum": {
      "description": "Checksum of the package file from package_url,\n          use this to prevent download every Chef run",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "push_jobs/gem_url": {
      "description": "URL to the knife plugin gem file",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "push_jobs/gem_checksum": {
      "description": "Checksum of the gem file from gem_url,\n          use this to prevent download every Chef run",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "push_jobs/whitelist": {
      "description": "Hash of whitelist jobs for the push client configuration",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "push_jobs/service_string": {
      "description": "String of the resource for the service, varies by platform.",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    }
  }
}