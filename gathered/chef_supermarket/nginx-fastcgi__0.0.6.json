{
  "name": "nginx-fastcgi Chef cookbook",
  "chef_cookbook_name": "nginx-fastcgi",
  "revision": "0.0.6",
  "uris": [
    "https://supermarket.chef.io/cookbooks/nginx-fastcgi",
    "https://supermarket.chef.io/cookbooks/nginx-fastcgi/download",
    "https://supermarket.chef.io/cookbooks/nginx-fastcgi/versions/0.0.6",
    "https://supermarket.chef.io/cookbooks/nginx-fastcgi/versions/0.0.6/download",
    "https://supermarket.chef.io/api/v1/cookbooks/nginx-fastcgi/versions/0.0.6",
    "https://supermarket.chef.io/api/v1/cookbooks/nginx-fastcgi",
    "https://supermarket.chef.io/api/v1/cookbooks/nginx-fastcgi/versions/0.0.6/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Style/Virtualization Level/Application",
    "Type/Middleware/Web Server/Nginx"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/nginx-fastcgi",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/nginx-fastcgi/versions/0.0.6/download",
  "deprecated": false,
  "created": "2012-05-18T10:54:43.000Z",
  "updated": "2012-11-28T12:36:17.000Z",
  "description": "create nginx site to run your fastcgi application under nginx frontend",
  "maintainer": {
    "name": "melezhik",
    "email": "melezhik@gmail.com"
  },
  "license": "All rights reserved",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 4,
  "downloads_count": 11281182,
  "downloads_count_revision": 1253434,
  "repository_url": "http://github.com/melezhik/cookbooks/tree/master/nginx-fastcgi",
  "issues_url": "http://github.com/melezhik/cookbooks/tree/master/nginx-fastcgi",
  "chef_source_url": "http://github.com/melezhik/cookbooks/tree/master/nginx-fastcgi",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===\nCreate nginx site to run your fastcgi application under nginx front-end\n\nRequirements\n===\nShould work on any platform where nginx is installed. Tested on Ubuntu.\n\nLimitations\n===\nfastcgi standalone server mode is only supported\n\nDEFINITIONS\n===\n``nginx_fastcgi``\n\nThis definition can be used to create nginx site to run your fastcgi application under nginx front-end.\n \nThe definition takes the following params:\n \n* name: specifies a single path (string) where nginx site config will be installed. No default, this must be specified.\n* socket: specifies the port or socket on which the FastCGI-server is listening, see http://wiki.nginx.org/HttpFastcgiModule#fastcgi_pass. No default, this must be specified.\n* static: specifies location of static files (not handled by application, but nginx)\n* servers: specifies all virtual hosts to be included into site config\n* cookbook: select the template source from the specified cookbook. By default it will use the cookbook where the definition is used.\n* fastcgi_param: specifies additional fastcgi_params to be included into location block\n\nSee USAGE below.\n\nUsage\n===\n\nTo install nginx site config for http virtual host 127.0.0.1:80 with hostname foo.site.x:\n    \n    nginx_fastcgi '/etc/nginx/sites-available/foo.site.conf' do\n        socket '/tmp/application.socket'\n        servers [\n            {\n                :ip => '127.0.0.1',\n                :server_name => 'foo.site.x'\n            }\n        ]\n    end\n\n\nTo install nginx site config for https virtual host with hostname bar.site.x:\n    \n    nginx_fastcgi '/etc/nginx/sites-available/foo.site.conf' do\n        socket '/tmp/application.socket'\n        servers [\n            {\n                :server_name => 'bar.site.x',\n                :ssl => true,\n                :ssl_include_path => 'nginx_ssl_settings.conf'\n                \n            }\n        ]\n    end\n\nTo install nginx site config with static files handle by nginx:\n\n    nginx_fastcgi '/etc/nginx/sites-available/foo.site.conf' do\n        root  '/var/www/MyApp/root'\n        socket '/tmp/application.socket'\n        servers [\n            {\n                :server_name => 'foo.site.x',\n            }\n        ]\n    end\n\nTo install nginx site config for http/https virtual hosts with hostname bar.site.x, with all http traffic get redirected to https host:\n    \n    nginx_fastcgi '/etc/nginx/sites-available/foo.site.conf' do\n        socket '/tmp/application.socket'\n        servers [\n            {\n                :ip => '127.0.0.1',\n                :server_name => 'bar.site.x',\n                :redirect => 'https'                \n            },\n            {\n                :ip => '127.0.0.1',\n                :server_name => 'bar.site.x',\n                :ssl => true,\n                :ssl_include_path => 'nginx_ssl_settings.conf'\n            }\n        ]\n    end\n\nTo install nginx site config with static files handle by nginx:\n\n    nginx_fastcgi '/etc/nginx/sites-available/foo.site.conf' do\n        socket '/tmp/application.socket'\n        static(\n                :location => 'static/',\n                :root => '/var/www/MyApp/root'\n        )\n        servers [\n            {\n                :server_name => 'foo.site.x',\n            }\n        ]\n    end\n\nTo install nginx site config with additional fastcgi_params:\n\n    nginx_fastcgi '/etc/nginx/sites-available/foo.site.conf' do\n        socket '/tmp/application.socket'\n        fastcgi_param  [\n            { :name => 'SCRIPT_NAME', :value => \"\\\"\\\"\" },\n            { :name => 'PATH_INFO' , :value => '$uri' }\n        ]\n        servers [\n            {\n                :server_name => 'foo.site.x',\n            }\n        ]\n    end\n\nFeatures\n===\n\nFor complete examples of usage see cucumber features in features/ dir\n\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ]
}