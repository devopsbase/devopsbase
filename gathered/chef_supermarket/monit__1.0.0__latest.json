{
  "name": "monit Chef cookbook",
  "chef_cookbook_name": "monit",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/monit",
    "https://supermarket.chef.io/cookbooks/monit/download",
    "https://supermarket.chef.io/cookbooks/monit/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/monit/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/monit/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/monit",
    "https://supermarket.chef.io/api/v1/cookbooks/monit/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/monit",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/monit/versions/1.0.0/download",
  "deprecated": false,
  "created": "2010-08-23T19:20:31.000Z",
  "updated": "2016-01-09T01:31:23.375Z",
  "description": "A deprecated Chef cookbook for managing the Monit process manager.",
  "maintainer": {
    "name": "acaiafa",
    "email": "noah@coderanger.net"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 45,
  "downloads_count": 12615051,
  "downloads_count_revision": 345403,
  "repository_url": "http://github.com/poise/poise-monit-compat",
  "issues_url": "http://github.com/poise/poise-monit-compat",
  "chef_source_url": "http://github.com/poise/poise-monit-compat",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Monit Cookbook\n\n[![Build Status](https://img.shields.io/travis/poise/poise-monit-compat.svg)](https://travis-ci.org/poise/poise-monit-compat)\n[![Gem Version](https://img.shields.io/gem/v/poise-monit-compat.svg)](https://rubygems.org/gems/poise-monit-compat)\n[![Cookbook Version](https://img.shields.io/cookbook/v/monit.svg)](https://supermarket.chef.io/cookbooks/monit)\n[![Coverage](https://img.shields.io/codecov/c/github/poise/poise-monit-compat.svg)](https://codecov.io/github/poise/poise-monit-compat)\n[![Gemnasium](https://img.shields.io/gemnasium/poise/poise-monit-compat.svg)](https://gemnasium.com/poise/poise-monit-compat)\n[![License](https://img.shields.io/badge/license-Apache_2-blue.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n\nA **deprecated** [Chef](https://www.chef.io/) cookbook to manage [Monit](https://mmonit.com/monit/).\n\n**IMPORTANT:** This cookbook is deprecated in favor of\n[`poise-monit`](https://github.com/poise/poise-monit/) and exists only for\ncompatibility with the [previous `monit` cookbook](https://github.com/apsoto/monit/).\nAside from critical fixes, no further development is planned.\n\nCompatibility is provided for existing attributes, recipes, and the `monitrc`\ndefinition (now a resource). Internal structure has changed so wrappers using\n`chef-rewind` may not be compatible.\n\n## Recipes\n\n* `monit::default` – Install Monit. Included automatically by all other recipes.\n* `monit::postfix` – Create a Monit service to monitor Postfix.\n* `monit::postgresql` – Create a Monit service to monitor PostgreSQL.\n* `monit::rabbitmq` – Create a Monit service to monitor RabbitMQ.\n* `monit::resque` – Create a Monit service to monitor Resque.\n* `monit::resque_scheduler` – Create a Monit service to monitor `rake resque:scheduler`.\n* `monit::ssh` – Create a Monit service to monitor sshd.\n* `monit::unicorn` – Create a Monit service to monitor Unicorn.\n\n## Attributes\n\n* `node['monit']['notify_email']` – Email address to send alert notifications to. If not set, no emails are generated. *(default: nil)*\n* `node['monit']['alert_blacklist']` – Event types to add to the alert blacklist. *(default: %[action instance pid ppid])*\n* `node['monit']['logfile']` – Path to log messages to. *(default: syslog facility log_daemon)*\n* `node['monit']['poll_period']` – Interval in seconds to check all Monit services at. *(default: 60)*\n\n* `node['monit']['mail_format']['subject']` – Subject for Monit alert emails. *(default: $SERVICE $EVENT)*\n* `node['monit']['mail_format']['from']` – From address for Monit alert emails. *(default: monit@node['fqdn'])*\n* `node['monit']['mail_format']['message']` – Email body for Monit alert emails. *(default: [see attributes.rb](https://github.com/poise/poise-monit-compat/blob/master/chef/attributes/default.rb#L29-L33))*\n\n* `node['monit']['mailserver']['host']` – SMTP server to send emails. *(default: localhost)*\n* `node['monit']['mailserver']['hostname']` – Hostname for SMTP HELO/EHLO. *(default: nil)*\n* `node['monit']['mailserver']['port']` – SMTP port to send emails. *(default: nil)*\n* `node['monit']['mailserver']['username']` – SMTP username to send emails. *(default: nil)*\n* `node['monit']['mailserver']['password']` – SMTP password to send emails. *(default: nil)*\n* `node['monit']['mailserver']['password_suffix']` – SMTP password suffix to send emails. *(default: nil)*\n* `node['monit']['mailserver']['encryption']` – Monit TLS settings to send emails. *(default: nil)*\n* `node['monit']['mailserver']['timeout']` – Timeout for sending emails. *(default: 60)*\n\n* `node['monit']['eventqueue']['set']` – Enable Monit's on-disk event queue. *(default: true)*\n* `node['monit']['eventqueue']['basedir']` – Base path for Monit's on-disk event queue. *(default: /var/monit)*\n* `node['monit']['eventqueue']['slots']` – Number of slots for Monit's on-disk event queue. *(default: 1000)*\n\nThe following HTTPD settings are only used if either a password is set or at least\none value is added to the `allow` array. Otherwise a safer auto-generated\nconfiguration is used. Setting these incorrectly may leave the `monit` command\nline tool non-functional.\n\n* `node['monit']['port']` – Port to listen on for Monit's HTTPD interface. *(default: 3737)*\n* `node['monit']['address']` – Local address to bind to for Monit's HTTPD interface. *(default: nil)*\n* `node['monit']['ssl']` – Enable TLS for Monit's HTTPD interface. *(default: false)*\n* `node['monit']['cert']` – Path the TLS certificate for Monit's HTTPD interface. *(default: '/etc/monit/monit.pem')*\n* `node['monit']['allow']` – Array of ACL values for Monit's HTTPD interface. *(default: [])*\n* `node['monit']['username']` – Username to add to the ACL for Monit's HTTPD interface. *(default: nil)*\n* `node['monit']['password']` – Password to add to the ACL for Monit's HTTPD interface. *(default: nil)*\n\n\nFor the `monit::postgres` recipe:\n\n* `node['monit']['postgres']['pid_file']` – Path to the PID file to monitor for PostgreSQL. *(default: /var/run/postgresql/9.1-main.pid)*\n* `node['monit']['postgres']['unix_socket_path']` – Path to the listener socket to monitor for PostgreSQL. *(default: /var/run/postgresql/.s.PGSQL)*\n* `node['monit']['postgres']['port']` – Port to monitor for PostgreSQL. *(default: 5432)*\n\nFor the `monit::ssh` recipe:\n\n* `node['monit']['ssh_port']` – Port to monitor for sshd. *(default: 22)*\n\nFor the `monit::unicorn` recipe:\n\n* `node['monit']['unicorn']['pid_dir']` – Path to the PID file to monitor for Unicorn. *(default: /path/to/pids)*\n* `node['monit']['unicorn']['worker_count']` – Number of Unicorn workers to create. *(default: 1)*\n\n**NOTE:** The `monit::resque` and `monit::resque_scheduler` recipes require\nadditional attributes to function, however no default values are set so this\nbehavior is undocumented to match the original `monit` cookbook.\n\n## Resources\n\n### `monitrc`\n\nThe `monitrc` resource creates a Monit configuration file. This is a\ncompatibility wrapper for `monit_config` from `poise-monit`.\n\n```ruby\nmonitrc 'myapp' do\n  template_cookbook 'mycookbook'\n  template_source 'myapp.conf.erb'\nend\n```\n\n#### Actions\n\n* `:enable` – Create the configuration. *(default)*\n* `:disable` – Delete the configuration.\n\n#### Properties\n\n* `reload` – Unusued, present only for compatibility.\n* `template_cookbook` – Cookbook to load the template from. *(default: monit)*\n* `template_source` – Path to the template source file. *(default: $name.conf.erb)*\n* `variables` – Variables for the template.\n\n## Sponsors\n\nDevelopment sponsored by [Bloomberg](http://www.bloomberg.com/company/technology/).\n\nThe Poise test server infrastructure is sponsored by [Rackspace](https://rackspace.com/).\n\n## License\n\nCopyright 2015, Noah Kantrowitz\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSome code used under MIT license.\n\nCopyright Alex Soto\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/poise",
      "revision": "~> 2.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/poise-monit",
      "revision": "~> 1.0",
      "self_resolve": true
    }
  ]
}