{
  "name": "kernel-modules Chef cookbook",
  "chef_cookbook_name": "kernel-modules",
  "revision": "0.1.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/kernel-modules",
    "https://supermarket.chef.io/cookbooks/kernel-modules/download",
    "https://supermarket.chef.io/cookbooks/kernel-modules/versions/0.1.1",
    "https://supermarket.chef.io/cookbooks/kernel-modules/versions/0.1.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/kernel-modules/versions/0.1.1",
    "https://supermarket.chef.io/api/v1/cookbooks/kernel-modules",
    "https://supermarket.chef.io/api/v1/cookbooks/kernel-modules/versions/0.1.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Operating Systems & Virtualization",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System/Linux"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/kernel-modules",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/kernel-modules/versions/0.1.1/download",
  "deprecated": false,
  "created": "2016-03-30T07:46:22.392Z",
  "updated": "2016-07-13T10:06:52.133Z",
  "description": "Manage kernel modules on linux",
  "maintainer": {
    "name": "criteo",
    "email": "sre-core@criteo.com"
  },
  "license": "Apache v2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 803,
  "downloads_count_revision": 410,
  "repository_url": "https://github.com/criteo-cookbooks/kernel-modules",
  "issues_url": "https://github.com/criteo-cookbooks/kernel-modules/issues",
  "chef_source_url": "https://github.com/criteo-cookbooks/kernel-modules",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "kernel-modules Cookbook\n=======================\n\n[![Cookbook Version][cookbook_version]][cookbook]\n[![Build Status][build_status]][build_status]\n\nConfigure and Load kernel modules.\n\nRequirements:\n-------------\n### Platforms\n* Centos 6.x/7.x\n* Rhel 6.x/7.x\n\n### Chef\n* Chef version: >= 12.5.1\n\nAttributes\n----------\n#### kernel_modules\n* `node['kernel_modules']['packages']` - used to make the packages requirements\n* `node['kernel_modules']['modules_load.d']` - used to define the `modules_load.d` directory\n* `node['kernel_modules']['modprobe.d']` - use to define the `modprobe.d` directory\n* `node['kernel_modules']['modules']` - use to define the list of modules you want to load/configure\n\nUsage\n-----\nUsing this cookbook will load and configure every module in the attribute: `node['kernel_modules']['modules']`.\n\nFor instance:\n``` ruby\n$ cat roles/modules.rb\nname 'Load modules'\ndescription 'Example for using kernel modules'\n\nrun_list(\n  'kernel-modules'\n)\n\ndefault_attributes(\nkernel_modules:\n  modules: {\n    nfs: {\n      options: [\n        'enable_ino64=1',\n        'nfs4_disable_idmapping=0',\n      ],\n      alias: 'nfs4',\n      action: [:load],\n      onboot: true,\n    },\n  },\n)\n```\nProviders & Resources\n---------------------\n## kernel_module\nThis provider allows to configure and load a kernel module\n\n### Actions\nAction   | Description\n---------|---------------------------\nconfigure | Add the module at boot time (if needed) and set the module's modprobe configuration file\nload | Load the module once it is configured (When used the `configure` action will be implicitly launched before)\nunload| Unload the module\nremove| Remove the modprobe configuration file and remove the module at boot time\n\n### Property\nName | Description | Default| Type\n-----|-------------|--------|-----\n`module_name`| module name| name |_String_\n`onboot`| load the module at boot time| true| _Boolean_\n`reload`| allow the module to be reloaded if module configuration changes| false| _Boolean_\n`force_reload`| allow the module to be unloaded even if the module is used[^1]. | false | _Boolean_\n`alias`| set the modprobe command _alias_| nil| _Array_/_String_\n`options`| set the modprobe command _options_| nil| _Array/String/NilClass_\n`install`| set the modprobe command _install_| nil| _String/NilClass_\n`remove`| set the modprobe command _remove_| nil| _String/NilClass_\n`blacklist`| set the modprobe command _blacklist_| nil| _Boolean/NilClass_\n\nContributing\n------------\n1. Fork the [repository on Github][repository]\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\n\nLicense and Authors\n-------------------\nAuthors: [Jeremy Mauro][author] (<j.mauro@criteo.com>)\n\n```text\nCopyright 2014-2015, Criteo.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n[^1]*Note*: it has no effect unless CONFIG_MODULE_FORCE_UNLOAD was set when the kernel was compiled\n[author]:                   https://github.com/jmauro\n[repository]:               https://github.com/criteo-cookbooks/kernel-modules\n[build_status]:             https://api.travis-ci.org/criteo-cookbooks/kernel-modules.svg?branch=master\n[cookbook_version]:         https://img.shields.io/cookbook/v/kernel-modules.svg\n[cookbook]:                 https://supermarket.chef.io/cookbooks/kernel-modules\n",
  "requires": [
    {
      "kind": "host",
      "label": "rhel",
      "revision": ">= 6.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 6.0",
      "one_of_group": "os"
    }
  ]
}