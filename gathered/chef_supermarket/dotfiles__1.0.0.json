{
  "name": "dotfiles Chef cookbook",
  "chef_cookbook_name": "dotfiles",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/dotfiles",
    "https://supermarket.chef.io/cookbooks/dotfiles/download",
    "https://supermarket.chef.io/cookbooks/dotfiles/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/dotfiles/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/dotfiles/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/dotfiles",
    "https://supermarket.chef.io/api/v1/cookbooks/dotfiles/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/dotfiles",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/dotfiles/versions/1.0.0/download",
  "deprecated": false,
  "created": "2015-11-15T11:39:46.970Z",
  "updated": "2015-12-12T16:38:25.173Z",
  "description": "A collection of custom resources that manage user dotfiles.",
  "maintainer": {
    "name": "oclaussen",
    "email": "claussen.ole@gmail.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 714,
  "downloads_count_revision": 240,
  "repository_url": "https://github.com/oclaussen/chef-dotfiles",
  "issues_url": "https://github.com/oclaussen/chef-dotfiles/issues",
  "chef_source_url": "https://github.com/oclaussen/chef-dotfiles",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# dotfiles\n\nA collection of custom resources that manage user dotfiles.\n\n# Chef Cookie Cutter\n\nThis cookbook bundles the [Cookie Cutter](http://github.com/oclaussen/chef-cookie_cutter)\ngem, which provides a lot of the dotfile functionality. All DSL extensions\nfrom the Cookie Cutter gem are directly available if this cookbook is included.\nIn fact, this cookbook is pretty much the playground, testing area and main\nreason that gem exists.\n\n# Requirements\n\nThis cookbook requires Chef >= 12.5.1.\n\n\n# Resources\n\n* [bash_dotfile](#bash_dotfile) - Creates the Bash configuration file for a user, by default `~/.bashrc`.\n* [bash_it_dotfile](#bash_it_dotfile) - Installs [Bash It](https://github.com/Bash-it/bash-it).\n* [conky_dotfile](#conky_dotfile) - Creates a [Conky](https://github.com/brndnmtthws/conky) configuration file, by default `~/.conkyrc`.\n* [generic_dotfile](#generic_dotfile) - Creates a generic configuration file.\n* [git_dotfile](#git_dotfile) - Creates a [Git](https://git-scm.com) configuration file, by default `~/.gitconfig`.\n* [gnupg_dotfile](#gnupg_dotfile) - Creates a [GnuPG](https://www.gnupg.org) configuration file, by default `~/.gnupg/gpg.conf`.\n* [ssh_dotfile](#ssh_dotfile) - Creates a SSH configuration file, by default `~/.ssh/config`.\n* [tmux_dotfile](#tmux_dotfile) - Creates a [tmux](https://tmux.github.io) configuration file, by default `~/.tmux.conf`.\n* [vim_dotfile](#vim_dotfile) - Creates a [Vim](http://www.vim.org) configuration file, by default `~/.vimrc`.\n* [vim_colors_dotfile](#vim_colors_dotfile) - Creates a [Vim](http://www.vim.org) colorscheme file in '~/.vim/colors/<name>.vim'.\n* [vim_pathogen_dotfile](#vim_pathogen_dotfile) - Installs [Vim Pathogen](https://github.com/tpope/vim-pathogen).\n* [xmonad_dotfile](#xmonad_dotfile) - Creates a [xmonad](http://xmonad.org) configuration file, by default `~/.xmonad/xmonad.hs`.\n* [xresources_dotfile](#xresources_dotfile) - Creates an X resources file, by default `~/.Xresources`.\n* [xsession_dotfile](#xsession_dotfile) - Creates an X startup script file, by default `~/.xsession`.\n* [zsh_dotfile](#zsh_dotfile) - Creates the [Zsh](http://www.zsh.org) configuration file for a user, by default `~/.zshrc`.\n* [oh_my_zsh_dotfile](#oh_my_zsh_dotfile) - Installs [Oh My Zsh](https://github.com/robbyrussell/oh-my-zsh).\n\n## bash_dotfile\n\nCreates the Bash configuration file for a user, by default `~/.bashrc`.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n- [dotfiles_shell](#dotfiles_shell)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|bash_it|Include Bash It configuration. Must be a `bash_it_dotfile` resource or a block.|<code>nil</code>|\n|prompt|Configure the Bash prompt (see [Prompt Builder](#bash-prompt)).|<code>nil</code>|\n|option|Set either a [Bash option](https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html) or [Shell option](http://tldp.org/LDP/abs/html/options.html). This attribute can be specified multiple times.|<code>nil</code>|\n\n### Bash Prompt\n\nThe `bash_dotfile` supports the Prompt Builder and adds the following options:\n* `date`: The date in \"Weekday Month Date\" format (e.g., \"Tue May 26\")\n* `hostname_short`: The hostname up to the first `.'\n* `hostname_long`: The full hostname\n* `hostname`: The full hostname (equivalent to `hostname_long`)\n* `jobs`: The number of jobs currently managed by the shell\n* `tty`: The basename of the shell's terminal device name\n* `shell`: The name of the shell\n* `time`: The current time in 24-hour HH:MM:SS format\n* `time_24h`: The current time in 24-hour HH:MM:SS format\n* `time_12h`: The current time in 12-hour HH:MM:SS format\n* `time_am_pm`: The current time in 12-hour am/pm format\n* `user`: The username of the current user\n* `version`: The version of bash (e.g., 2.00)\n* `version_long`: The release of bash, version + patch level (e.g., 2.00.0)\n* `cwd`: The current working directory, with $HOME abbreviated with a tilde\n* `cwd_base`: The basename of the current working directory, with $HOME abbreviated with a tilde\n* `history`: The history number of this command\n* `command`: The command number of this command\n* `pound`: If the effective UID is 0, a #, otherwise a $\n\n\n## bash_it_dotfile\n\nInstalls [Bash It](https://github.com/Bash-it/bash-it). This resource alone\nwill not configure Bash to use Bash It. To do this, add this resource to a\n`bash_dotfile` resource.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|theme|Set the Bash It theme.|<code>\"bobby\"</code>|\n|option|arguments: (name, value) Export a Bash It option. This attribute can be specified multiple times.|<code>nil</code>|\n|feature|arguments: (name, type) Enables a Bash It feature. This attribute can be specified multiple times.|<code>nil</code>|\n|aliases|Enables an 'aliases' feature. This attribute can be specified multiple times.|<code>nil</code>|\n|completion|Enables a 'completion' feature. This attribute can be specified multiple times.|<code>nil</code>|\n|plugin|Enables a 'plugin' feature. This attribute can be specified multiple times.|<code>nil</code>|\n\n## conky_dotfile\n\nCreates a [Conky](https://github.com/brndnmtthws/conky) configuration file,\nby default `~/.conkyrc`.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|text|Set the Conky TEXT contents|<code>nil</code>|\n|option|arguments: (name, value) Set a Conky option. This attribute can be specified multiple times.|<code>nil</code>|\n\n## generic_dotfile\n\nCreates a generic configuration file.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|parameters|A hash of parameters that can be used in the dotfile.|<code>{}</code>|\n\n## git_dotfile\n\nCreates a [Git](https://git-scm.com) configuration file, by default\n`~/.gitconfig`.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n- [dotfiles_colorscheme](#dotfiles_colorscheme)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|url|Define a URL option. Can be passed an additional block with options. This attribute can be specified multiple times.|<code>nil</code>|\n|git_alias|arguments: (name, command) Define a Git alias. This attribute can be specified multiple times.|<code>nil</code>|\n|include_path|Include an additional config file. This attribute can be specified multiple times.|<code>nil</code>|\n\n### Git color scheme\n\nThe `git_dotfile` resource supports color schemes. If given, it will configure\nthe diff, branches and status output to use colors from the given color scheme.\n\n\n## gnupg_dotfile\n\nCreates a [GnuPG](https://www.gnupg.org) configuration file, by default\n`~/.gnupg/gpg.conf`.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|option|arguments: (name, value, ...) Set a GnuPG option. This attribute can be specified multiple times.|<code>nil</code>|\n\n## ssh_dotfile\n\nCreates a SSH configuration file, by default `~/.ssh/config`.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|option|arguments: (name, value) Set a global SSH option. This attribute can be specified multiple times.|<code>nil</code>|\n|host|Define a host. Can be passed an additional block with options. This attribute can be specified multiple times.|<code>nil</code>|\n\n## tmux_dotfile\n\nCreates a [tmux](https://tmux.github.io) configuration file, by default\n`~/.tmux.conf`.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|prefix_key|Rebind the tmux prefix key.|<code>nil</code>|\n|option|arguments: (name, value=true, scope: '') Set a tmux option with the given scope. This attribute can be specified multiple times.|<code>nil</code>|\n|session_option|arguments: (name, value=true) Set a tmux session option (default scope). This attribute can be specified multiple times.|<code>nil</code>|\n|window_option|arguments: (name, value=true) Set a tmux window option (scope = 'w'). This attribute can be specified multiple times.|<code>nil</code>|\n|server_option|arguments: (name, value=true) Set a tmux server option (scope = 's'). This attribute can be specified multiple times.|<code>nil</code>|\n|bind_key|arguments: (key, command, arguments, ..., no_prefix: false, key_table: nil) Bind a key to a command. This attribute can be specified multiple times.|<code>nil</code>|\n|unbind_key|Remove an existing keybinding. This attribute can be specified multiple times.|<code>nil</code>|\n\n## vim_dotfile\n\nCreates a [Vim](http://www.vim.org) configuration file, by default `~/.vimrc`.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|colors|Set the Vim colorscheme.|<code>nil</code>|\n|pathogen|Include Vim Pathogen configuration. Must be a `vim_pathogen_dotfile` resource or a block.|<code>nil</code>|\n|option|arguments: (name, value=true) Set a Vim option. This attribute can be specified multiple times.|<code>nil</code>|\n|global_variable|arguments: (name, value=true) Set a global Vim variable. This attribute can be specified multiple times.|<code>nil</code>|\n|directory_option|arguments: (name, directory) Set a Vim option to a directory relative to home, and create that directory. This attribute can be specified multiple times.|<code>nil</code>|\n\n## vim_colors_dotfile\n\nCreates a [Vim](http://www.vim.org) colorscheme file in '~/.vim/colors/<name>.vim'.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n- [dotfiles_colorscheme](#dotfiles_colorscheme)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|colors_name|Name of the colorscheme, also determines the filename.|<code>nil</code>|\n|background|If the colorscheme should set a light or dark background.|<code>nil</code>|\n|highlight|arguments: (name, foreground: nil, background: nil, attribute: nil) Define a highlight option. This attribute can be specified multiple times.|<code>nil</code>|\n\n## vim_pathogen_dotfile\n\nInstalls [Vim Pathogen](https://github.com/tpope/vim-pathogen). This resource\nalone will not configure Vim to use Pathogen. To do this, add this resource to\na `vim_dotfile` resource.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|plugin_directory|The target directory where Pathogen stores itself and plugins.|<code>\".vim/bundle\"</code>|\n|install_plugin|arguments: (name, git_repository) Install a plugin for Pathogen. This attribute can be specified multiple times.|<code>nil</code>|\n\n## xmonad_dotfile\n\nCreates a [xmonad](http://xmonad.org) configuration file, by default\n`~/.xmonad/xmonad.hs`.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n- [dotfiles_colorscheme](#dotfiles_colorscheme)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|import|Import a haskell module. This attribute can be specified multiple times.|<code>nil</code>|\n|config|Name of the function that supplies the xmonad config object.|<code>\"defaultConfig\"</code>|\n|config_modifier|Function that is applied to the config object. This attribute can be specified multiple times.|<code>nil</code>|\n|terminal|Name of the terminal emulator that is spawned by default.|<code>\"xterm\"</code>|\n|focus_follows_mouse|Whether the window focus should follow the mouse cursor.|<code>true</code>|\n|border_width|Size of the border around windows.|<code>1</code>|\n|mod_mask|Name of the modifier key. Affects all key bindings.|<code>\"mod1Mask\"</code>|\n|workspaces|Haskell expression that defines the available workspaces.|<code>\"map show [1 .. 9 :: Int]\"</code>|\n|normal_border_color|Border color for normal windows.|<code>\"#dddddd\"</code>|\n|focused_border_color|Border color for focused windows.|<code>\"#ff0000\"</code>|\n|key_binding|arguments: (key, action:, shift: false) Bind an action to a key. This attribute can be specified multiple times.|<code>nil</code>|\n|mouse_binding|arguments: (key, action: shift: false) Bind an action to a mouse button. This attribute can be specified multiple times.|<code>nil</code>|\n|layout_hook|Name of a Haskell function that is used as the layout hook.|<code>nil</code>|\n|manage_hook|Name of a Haskell function that is used as the manage hook.|<code>nil</code>|\n|handle_event_hook|Name of a Haskell function that is used as the manage event hook.|<code>nil</code>|\n|log_hook|Name of a Haskell function that is used as the log hook.|<code>nil</code>|\n|startup_hook|Name of a Haskell function that is used as the startup hook.|<code>nil</code>|\n|haskell_block|Define a plain Haskell block in the configuration file. This attribute can be specified multiple times.|<code>nil</code>|\n\n### Xmonad color scheme\n\nThe `xmonad_dotfile` resource supports color schemes. If given, it will\nconfigure the border color of normal and focused windows to use colors from\nthe given color scheme.\n\n\n## xresources_dotfile\n\nCreates an X resources file, by default `~/.Xresources`.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n- [dotfiles_colorscheme](#dotfiles_colorscheme)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|xresource|arguments: (name, value) Configure an X resource. This attribute can be specified multiple times.|<code>nil</code>|\n\n### X color scheme\n\nThe `xresources_dotfile` resource supports color schemes. If given, it will\nconfigure the default color palette as well as foreground and background colors\nfrom the color scheme.\n\n\n## xsession_dotfile\n\nCreates an X startup script file, by default `~/.xsession`.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n- [dotfiles_colorscheme](#dotfiles_colorscheme)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|wm_command|Shell command that represents the session. The session will stop when this command returns.|<code>nil</code>|\n|command|Shell command that should be executed at the start of the session. This attribute can be specified multiple times.|<code>nil</code>|\n|xresources_from_file|Merge the configuration from the given files into xrdb. This attribute can be specified multiple times.|<code>nil</code>|\n|xresource|arguments: (name, value) Merge a given X resource configuration directly into xrdb. This attribute can be specified multiple times.|<code>nil</code>|\n|option|arguments: (command, option, argument, ...) Set a X option with either the [xsetroot](http://www.x.org/archive/X11R7.5/doc/man/man1/xsetroot.1.html) or [xset](http://www.x.org/archive/X11R7.5/doc/man/man1/xset.1.html) command. This attribute can be specified multiple times.|<code>nil</code>|\n|cursor|Set the X cursor.|<code>nil</code>|\n|background_image|Set the X background image to a bitmap.|<code>nil</code>|\n|background_color|Set the X background to a solid color.|<code>nil</code>|\n|bell|Configure the bell. Arguments can be 'off' or a combination of `volume:`, `pitch:` and `duration:`.|<code>nil</code>|\n|click|Configure key clicks. Arguments can be 'on', 'off' or a volume in percent.|<code>nil</code>|\n|dpms|Configure DPMS parameters. Arguments can be 'off', or a combination of `standby:`, `suspend:` and `off:`.|<code>nil</code>|\n|font_path|Append an element to the current font path.|<code>nil</code>|\n|mouse|arguments: (acceleration: 2, threshold: 0) Configure mouse parameters.|<code>nil</code>|\n|pixel|arguments: (entry:, color:) Configure pixel color values in the color map.|<code>nil</code>|\n|screen_saver|Configure screen saver parameters. Arguments can be 'on' or 'off'.|<code>nil</code>|\n\n### X session color scheme\n\nThe `xsession_dotfile` resource supports color schemes. If given, it will\nconfigure a solid background color from the color scheme.\n\n\n## zsh_dotfile\n\nCreates the [Zsh](http://www.zsh.org) configuration file for a user, by\ndefault `~/.zshrc`.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n- [dotfiles_shell](#dotfiles_shell)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|oh_my_zsh|Include Oh My Zsh configuration. Must be a `oh_my_zsh_dotfile` resource or a block.|<code>nil</code>|\n|prompt|Configure the Zsh prompt (see [Prompt Builder](#zsh-prompt)).|<code>nil</code>|\n|option|Set a [Zsh option](http://linux.die.net/man/1/zshoptions). This attribute can be specified multiple times.|<code>nil</code>|\n\n## oh_my_zsh_dotfile\n\nInstalls [Oh My Zsh](https://github.com/robbyrussell/oh-my-zsh). This resource\nalone will not configure Zsh to use Oh My Zsh. To do this, add this resource\nto a `zsh_dotfile` resource.\n\n\nThis resource includes the following mixins:\n- [dotfiles_user_info](#dotfiles_user_info)\n- [dotfiles_dotfile](#dotfiles_dotfile)\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|plugin_directory|Directory that Oh My Zsh uses to store plugins, relative to home directory.|<code>\"custom/plugins\"</code>|\n|theme|The selected Oh My Zsh theme.|<code>\"robbyrussell\"</code>|\n|option|arguments: (name, value) Export a Oh My Zsh option. This attribute can be specified multiple times.|<code>nil</code>|\n|plugin|arguments: (name, git: nil, enable: true) Install and enable a Oh My Zsh plugin. This attribute can be specified multiple times.|<code>nil</code>|\n\n# Mixin Resources\n\n[Mixin resources](https://github.com/oclaussen/chef-cookie-cutter#mixins) are\nresources that are used like ruby mixins. This means that they can not be used\ndirectly, but add common functionality to other resources.\n\n* [dotfiles_colorscheme](#dotfiles_colorscheme) - Adds support for color schemes to a dotfile resource.\n* [dotfiles_dotfile](#dotfiles_dotfile) - This is the base resource for dotfiles.\n* [dotfiles_shell](#dotfiles_shell) - This is the base resources for shell dotfiles.\n* [dotfiles_user_info](#dotfiles_user_info) - This resource adds a set of properties to a dotfile resource.\n\n## dotfiles_colorscheme\n\nAdds support for color schemes to a dotfile resource.\n\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|colorscheme|Set the color scheme for the dotfile.|<code>nil</code>|\n\n## dotfiles_dotfile\n\nThis is the base resource for dotfiles. It declares default actions and\ncommon properties for all dotfiles. A dotfile has one of these types:\n* `:template` Creates target file relative to the user's home directory, based\non a ruby template.\n* `:git_checkout` Creates a target directory relative to the user's home\ndirectory that is synced with a git repository.\nIn addition, a dotfile can create additional required directories, or\nperform additional actions in form of Chef resources.\n\n\n|Action|Description|Default|\n|------|-----------|-------|\n|[:create]||true|\n|create|Creates the dotfile|false|\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|target|The file or directory created, implementing the dotfile.|<code>nil</code>|\n|source|The source for the dotfile. Either a template or git resource, depending on the dotfile type.|<code>nil</code>|\n|executable|Whether the dotfile should be executable.|<code>false</code>|\n|type|Determines how the dotfile is installed. Either `:template` or `:git_checkout`.|<code>:template</code>|\n|create_directory|Creates a directory relative to the home directory. This attribute can be specified multiple times.|<code>nil</code>|\n|additional_action|A proc defining an additional action to be performed. This attribute can be specified multiple times.|<code>nil</code>|\n\n## dotfiles_shell\n\nThis is the base resources for shell dotfiles. It adds some common properties\nfor shells.\n\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|shell_alias|arguments: (name, command) Define a shell alias. This attribute can be specified multiple times.|<code>nil</code>|\n|variable|arguments: (name, value) Export an environment variable. This attribute can be specified multiple times.|<code>nil</code>|\n|path|Add a directory to the PATH environment variable. This attribute can be specified multiple times.|<code>nil</code>|\n|source_file|Source an external file for custom configuration. This attribute can be specified multiple times.|<code>nil</code>|\n|script|Include a snippet of plain shell script. This attribute can be specified multiple times.|<code>nil</code>|\n\n## dotfiles_user_info\n\nThis resource adds a set of properties to a dotfile resource. It supplies\nuser information that can be used by the dotfile.\n\n\n|Property|Description|Default|\n|--------|-----------|-------|\n|user|User name for which the dotfile is created. Defaults to the current user.||\n|group|Group that will own the created dotfile. Defaults to GID of the provided user.||\n|home|Home directory of the dotfile. All paths will be relative to this. Defaults to the home directory of the provided user.||\n|full_name|Full name of the user. Can be used by all dotfiles that want to use this.||\n|email|Email of the user. Can be used by all dotfiles that want to use it.|<code>nil</code>|\n\n# Recipes\n\n* [dotfiles::colorschemes](#dotfilescolorschemes) - Defines some premade colorschemes for convenience.\n* [dotfiles::shell_options](#dotfilesshell_options) - Defines some common shell options for convenience.\n* [dotfiles::tmux_options](#dotfilestmux_options) - Defines some common tmux options for convenience.\n\n## dotfiles::colorschemes\n\nDefines a set of color schemes in form of [shared blocks]\n(https://github.com/oclaussen/chef-cookie-cutter#shared-blocks). These blocks\ncan be used in any dotfile resource that supports colorschemes. The defined\nblocks are:\n* `:solarized_dark_colors` for the solarized dark color palette\n* `:solarized_light_colors` for the solarized light color palette\n* `:zenburn_colors` for a basic zenburn-inspired theme\n\n## dotfiles::shell_options\n\nDefines a set common shell options in form of [shared blocks]\n(https://github.com/oclaussen/chef-cookie-cutter#shared-blocks). These blocks\ncan be used in any shell dotfile resource. The defined blocks are:\n* `:shell_common_aliases`: a set of general purpose shell aliases\n* `:shell_histoly`: increased history size for bash and zsh.\n\n## dotfiles::tmux_options\n\nDefines a set common tmux options in form of [shared blocks]\n(https://github.com/oclaussen/chef-cookie-cutter#shared-blocks). These blocks\ncan be used in the tmux dotfile resource. The defined blocks are:\n* `:tmux_vi_navigation`: implements vi-like navigation for tmux\n\n# License and Maintainer\n\nMaintainer:: Ole Claussen (<claussen.ole@gmail.com>)\n\nSource:: https://github.com/oclaussen/chef-dotfiles\n\nIssues:: https://github.com/oclaussen/chef-dotfiles/issues\n\nLicense:: Apache 2.0\n",
  "chef_recipes": {
    "dotfiles::colorschemes": "Defines some premade colorschemes for convenience.",
    "dotfiles::shell_options": "Defines some common shell options for convenience.",
    "dotfiles::tmux_options": "Defines some common tmux options for convenience."
  }
}