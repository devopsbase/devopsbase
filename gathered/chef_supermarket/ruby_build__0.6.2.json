{
  "name": "ruby_build Chef cookbook",
  "chef_cookbook_name": "ruby_build",
  "revision": "0.6.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/ruby_build",
    "https://supermarket.chef.io/cookbooks/ruby_build/download",
    "https://supermarket.chef.io/cookbooks/ruby_build/versions/0.6.2",
    "https://supermarket.chef.io/cookbooks/ruby_build/versions/0.6.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/ruby_build/versions/0.6.2",
    "https://supermarket.chef.io/api/v1/cookbooks/ruby_build",
    "https://supermarket.chef.io/api/v1/cookbooks/ruby_build/versions/0.6.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Type/Middleware/Runtime/Ruby",
    "Mode/Executable/Script/Chef Cookbook",
    "Mode/API/Toolkit",
    "Type/Devopsware/Build"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/ruby_build",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/ruby_build/versions/0.6.2/download",
  "deprecated": false,
  "created": "2011-12-10T19:49:54.000Z",
  "updated": "2016-07-20T16:39:26.005Z",
  "description": "Manages the ruby-build framework and its installed rubies. A LWRP is also defined.",
  "maintainer": {
    "name": "tas50",
    "email": "fnichol@nichol.ca"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 41,
  "downloads_count": 6772412,
  "downloads_count_revision": 1260834,
  "repository_url": "https://github.com/chef-rbenv/ruby_build/",
  "issues_url": "https://github.com/chef-rbenv/ruby_build/issues",
  "chef_source_url": "https://github.com/chef-rbenv/ruby_build/",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# <a name=\"title\"></a> chef-ruby_build [![Build Status](https://secure.travis-ci.org/fnichol/chef-ruby_build.png?branch=master)](http://travis-ci.org/fnichol/chef-ruby_build)\n\n## <a name=\"description\"></a> Description\n\nManages the [ruby-build][rb_site] framework and its installed Rubies.\nA lightweight resources and providers ([LWRP][lwrp]) is also defined.\n\n## <a name=\"usage\"></a> Usage\n\nSimply include `recipe[ruby_build]` in your run\\_list to have ruby-build\ninstalled. You will also have access to the `ruby_build_ruby` resource. See\nthe [Resources and Providers](#lwrps) section for more details.\n\n## <a name=\"requirements\"></a> Requirements\n\n### <a name=\"requirements-chef\"></a> Chef\n\nTested on 0.10.8 but newer and older version should work just\nfine. File an [issue][issues] if this isn't the case.\n\n### <a name=\"requirements-platform\"></a> Platform\n\nThe following platforms have been tested with this cookbook, meaning that\nthe recipes and LWRPs run on these platforms without error:\n\n* ubuntu (10.04/10.10/11.04/11.10)\n\nPlease [report][issues] any additional platforms so they can be added.\n\n### <a name=\"requirements-cookbooks\"></a> Cookbooks\n\nThere are **no** external cookbook dependencies. However, if you are\ninstalling [JRuby][jruby] then a Java runtime will need to be installed.\nThe Opscode [java cookbook][java_cb] can be used on supported platforms.\n\n## <a name=\"installation\"></a> Installation\n\nDepending on the situation and use case there are several ways to install\nthis cookbook. All the methods listed below assume a tagged version release\nis the target, but omit the tags to get the head of development. A valid\nChef repository structure like the [Opscode repo][chef_repo] is also assumed.\n\n### <a name=\"installation-platform\"></a> From the Opscode Community Platform\n\nTo install this cookbook from the Opscode platform, use the *knife* command:\n\n    knife cookbook site install ruby_build\n\n### <a name=\"installation-librarian\"></a> Using Librarian-Chef\n\n[Librarian-Chef][librarian] is a bundler for your Chef cookbooks.\nInclude a reference to the cookbook in a [Cheffile][cheffile] and run\n`librarian-chef install`. To install Librarian-Chef:\n\n    gem install librarian\n    cd chef-repo\n    librarian-chef init\n\nTo use the Opscode platform version:\n\n    echo \"cookbook 'ruby_build'\" >> Cheffile\n    librarian-chef install\n\nOr to reference the Git version:\n\n    cat >> Cheffile <<END_OF_CHEFFILE\n    cookbook 'ruby_build',\n      :git => 'git://github.com/fnichol/chef-ruby_build.git', :ref => 'v0.6.0'\n    END_OF_CHEFFILE\n    librarian-chef install\n\n### <a name=\"installation-kgc\"></a> Using knife-github-cookbooks\n\nThe [knife-github-cookbooks][kgc] gem is a plugin for *knife* that supports\ninstalling cookbooks directly from a GitHub repository. To install with the\nplugin:\n\n    gem install knife-github-cookbooks\n    cd chef-repo\n    knife cookbook github install fnichol/chef-ruby_build/v0.6.0\n\n### <a name=\"installation-tarball\"></a> As a Tarball\n\nIf the cookbook needs to downloaded temporarily just to be uploaded to a Chef\nServer or Opscode Hosted Chef, then a tarball installation might fit the bill:\n\n    cd chef-repo/cookbooks\n    curl -Ls https://github.com/fnichol/chef-ruby_build/tarball/v0.6.0 | tar xfz - && \\\n      mv fnichol-chef-ruby_build-* ruby_build\n\n### <a name=\"installation-gitsubmodule\"></a> As a Git Submodule\n\nA dated practice (which is discouraged) is to add cookbooks as Git\nsubmodules. This is accomplishes like so:\n\n    cd chef-repo\n    git submodule add git://github.com/fnichol/chef-ruby_build.git cookbooks/ruby_build\n    git submodule init && git submodule update\n\n**Note:** the head of development will be linked here, not a tagged release.\n\n## <a name=\"recipes\"></a> Recipes\n\n### <a name=\"recipes-default\"></a> default\n\nInstalls the ruby-build codebase and initializes Chef to use the Lightweight\nResources and Providers ([LWRPs][lwrp]).\n\n## <a name=\"attributes\"></a> Attributes\n\n### <a name=\"attributes-git-url\"></a> git_url\n\nThe Git URL which is used to install ruby-build.\n\nThe default is `\"git://github.com/sstephenson/ruby-build.git\"`.\n\n### <a name=\"attributes-git-ref\"></a> git_ref\n\nA specific Git branch/tag/reference to use when installing ruby-build. For\nexample, to pin ruby-build to a specific release:\n\n    node['ruby_build']['git_ref'] = \"v20111030\"\n\nThe default is `\"master\"`.\n\n### <a name=\"attributes-default-ruby-base-path\"></a> default_ruby_base_path\n\nThe default base path for a system-wide installed Ruby. For example, the\nfollowing resource:\n\n    ruby_build_ruby \"1.9.3-p0\"\n\nwill be installed into\n`\"#{node['ruby_build']['default_ruby_base_path']}/1.9.3-p0\"` unless a\n`prefix_path` attribute is explicitly set.\n\nThe default is `\"/usr/local/ruby\"`.\n\n### <a name=\"attributes-upgrade\"></a> upgrade\n\nDetermines how to handle installing updates to the ruby-build framework.\nThere are currently 2 valid values:\n\n* `\"none\"`, `false`, or `nil`: will not update ruby-build and leave it in its\n  current state.\n* `\"sync\"` or `true`: updates ruby-build to the version specified by the\n  `git_ref` attribute or the head of the master branch by default.\n\nThe default is `\"none\"`.\n\n## <a name=\"lwrps\"></a> Resources and Providers\n\n### <a name=\"lwrps-rbr\"></a> ruby_build_ruby\n\n#### <a name=\"lwrps-rbr-actions\"></a> Actions\n\n<table>\n  <thead>\n    <tr>\n      <th>Action</th>\n      <th>Description</th>\n      <th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>install</td>\n      <td>\n        Build and install a Ruby from a definition file. See the ruby-build\n        readme<sup>(1)</sup> for more details.\n      </td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <td>reinstall</td>\n      <td>\n        Force a recompiliation of the Ruby from source. The :install action\n        will skip a build if the target install directory already exists.\n      </td>\n      <td>&nbsp;</td>\n    </tr>\n  </tbody>\n</table>\n\n1. [ruby-build readme][rb_readme]\n\n#### <a name=\"lwrps-rbr-attributes\"></a> Attributes\n\n<table>\n  <thead>\n    <tr>\n      <th>Attribute</th>\n      <th>Description</th>\n      <th>Default Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>definition</td>\n      <td>\n        <b>Name attribute:</b> the name of a built-in definition<sup>(1)</sup>\n        or the path to a ruby-build definition file.\n      </td>\n      <td><code>nil</code></td>\n    </tr>\n    <tr>\n      <td>prefix_path</td>\n      <td>The path to which the Ruby will be installed.</td>\n      <td><code>nil</code></td>\n    </tr>\n    <tr>\n      <td>user</td>\n      <td>\n        A user which will own the installed Ruby. The default value of\n        <code>nil</code> denotes a system-wide Ruby (root-owned) is being\n        targeted. <b>Note:</b> if specified, the user must already exist.\n      </td>\n      <td><code>nil</code></td>\n    </tr>\n    <tr>\n      <td>group</td>\n      <td>\n        A group which will own the installed Ruby. The default value of\n        <code>nil</code> denotes a system-wide Ruby (root-owned) is being\n        targeted. <b>Note:</b> if specified, the group must already exist.\n      </td>\n      <td><code>nil</code></td>\n    </tr>\n  </tbody>\n</table>\n\n1. [built-in definition][rb_definitions]\n\n#### <a name=\"lwrps-rbr-examples\"></a> Examples\n\n##### Install Ruby\n\n    ruby_build_ruby \"1.9.3-p0\" do\n      prefix_path \"/usr/local/ruby/ruby-1.9.3-p0\"\n\n      action      :install\n    end\n\n    ruby_build_ruby \"jruby-1.6.5\"\n\n**Note:** the install action is default, so the second example is more common.\n\n##### Install A Ruby For A User\n\n    ruby_build_ruby \"maglev-1.0.0\" do\n      prefix_path \"/home/deploy/.rubies/maglev-1.0.0\"\n      user        \"deploy\"\n      group       \"deploy\"\n    end\n\n##### Reinstall Ruby\n\n    ruby_build_ruby \"rbx-1.2.4\" do\n      prefix_path \"/opt/rbx-1.2.4\"\n\n      action      :reinstall\n    end\n\n**Note:** the Ruby will be built whether or not the Ruby exists in the\n`prefix_path` directory.\n\n## <a name=\"development\"></a> Development\n\n* Source hosted at [GitHub][repo]\n* Report issues/Questions/Feature requests on [GitHub Issues][issues]\n\nPull requests are very welcome! Make sure your patches are well tested.\nIdeally create a topic branch for every separate change you make.\n\n## <a name=\"license\"></a> License and Author\n\nAuthor:: Fletcher Nichol (<fnichol@nichol.ca>)\n\nCopyright 2011, Fletcher Nichol\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n[chef_repo]:      https://github.com/opscode/chef-repo\n[cheffile]:       https://github.com/applicationsonline/librarian/blob/master/lib/librarian/chef/templates/Cheffile\n[java_cb]:        http://community.opscode.com/cookbooks/java\n[jruby]:          http://jruby.org/\n[kgc]:            https://github.com/websterclay/knife-github-cookbooks#readme\n[librarian]:      https://github.com/applicationsonline/librarian#readme\n[lwrp]:           http://wiki.opscode.com/display/chef/Lightweight+Resources+and+Providers+%28LWRP%29\n[rb_readme]:      https://github.com/sstephenson/ruby-build#readme\n[rb_site]:        https://github.com/sstephenson/ruby-build\n[rb_definitions]: https://github.com/sstephenson/ruby-build/tree/master/share/ruby-build\n\n[repo]:         https://github.com/fnichol/chef-ruby_build\n[issues]:       https://github.com/fnichol/chef-ruby_build/issues\n"
}