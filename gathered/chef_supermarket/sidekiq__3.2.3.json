{
  "name": "sidekiq Chef cookbook",
  "chef_cookbook_name": "sidekiq",
  "revision": "3.2.3",
  "uris": [
    "https://supermarket.chef.io/cookbooks/sidekiq",
    "https://supermarket.chef.io/cookbooks/sidekiq/download",
    "https://supermarket.chef.io/cookbooks/sidekiq/versions/3.2.3",
    "https://supermarket.chef.io/cookbooks/sidekiq/versions/3.2.3/download",
    "https://supermarket.chef.io/api/v1/cookbooks/sidekiq/versions/3.2.3",
    "https://supermarket.chef.io/api/v1/cookbooks/sidekiq",
    "https://supermarket.chef.io/api/v1/cookbooks/sidekiq/versions/3.2.3/download"
  ],
  "labels": [
    "Chef cookbook",
    "Process Management",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/sidekiq",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/sidekiq/versions/3.2.3/download",
  "deprecated": false,
  "created": "2013-01-02T21:22:37.000Z",
  "updated": "2015-03-19T22:39:42.275Z",
  "description": "Installs/Configures sidekiq",
  "maintainer": {
    "name": "sax",
    "email": "ops@wanelo.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 9067942,
  "downloads_count_revision": 1249852,
  "repository_url": "https://github.com/wanelo-chef/sidekiq",
  "issues_url": "https://github.com/wanelo-chef/sidekiq",
  "chef_source_url": "https://github.com/wanelo-chef/sidekiq",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Sidekiq\n=======\n\n## Description\n\n## Requirements\n\n## Attributes\n\n## Usage\n\n```ruby\nsidekiq \"my-queue\" do\n  user \"deploy\"\n  concurrency 2\n  processes 2\n  queues \"job-queue\" => 5, \"other-queue\" => 1\nend\n```\n\n## Sidekiq Monitor\n\nThere are two ways to deploy a Sidekiq Monitor. You can run the `sidekiq::monitor`\nrecipe, which will install a service named `sidekiq-monitor` configured based on\nnode attributes. You can also use the `sidekiq_monitor` LWRP.\n\nBoth ways use a small wrapper Rack application to run the monitoring\nSinatra app that ships with Sidekiq.\n\n### `sidekiq::monitor` recipe\n\nThe user by which Sidekiq Monitor is run is set via the node attribute\n`node['sidekiq']['monitor']['user']`.\n\nThe RACK_ENV by which Sidekiq Monitor is run is set via\n`node['sidekiq']['monitor']['rack_env']`.\n\nRuby should be in the PATH. This can by set by adding to the array\n`node['sidekiq']['monitor']['path_additions']`.\n\n### `sidekiq_monitor` LWRP\n\nThe LWRP can be used where multiple Sidekiq Monitors may be on the same\nnode.\n\n```ruby\nservice 'my-sidekiq-monitor' do\n  supports :enable => true, :disable => true, :restart => true, :reload => true\n  action :nothing\nend\n\nsidekiq_monitor 'my-sidekiq-monitor' do\n  user 'myuser'\n  group 'staff'\n  path_additions ['/opt/rbenv/versions/2.0.0/bin']\n\n  redis_host node['privateaddress']\n  redis_port 6379\n  redis_db 11\n  redis_namespace 'sk'\n\n  unicorn_host node['privateaddress']\n  unicorn_port 8880\n  rack_env 'production'\n\n  notifies :restart, 'service[my-sidekiq-monitor]'\nend\n```\n\nBy default the LWRP will create a user 'sidekiq-monitor' and group\n'sidekiq-monitor' to run as. It will check out a small Rack application\nat `/opt/sidekiq-monitor`. Configuration files will go into\n`/etc/sidekiq-monitor` and log files will go in\n`/var/log/sidekiq-monitor`.\n",
  "requires": [
    {
      "kind": "host",
      "label": "smartos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/smf",
      "revision": ">= 1.5.0",
      "self_resolve": true
    }
  ]
}