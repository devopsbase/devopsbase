{
  "name": "extended_drbd Chef cookbook",
  "chef_cookbook_name": "extended_drbd",
  "revision": "1.0.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/extended_drbd",
    "https://supermarket.chef.io/cookbooks/extended_drbd/download",
    "https://supermarket.chef.io/cookbooks/extended_drbd/versions/1.0.1",
    "https://supermarket.chef.io/cookbooks/extended_drbd/versions/1.0.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/extended_drbd/versions/1.0.1",
    "https://supermarket.chef.io/api/v1/cookbooks/extended_drbd",
    "https://supermarket.chef.io/api/v1/cookbooks/extended_drbd/versions/1.0.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/extended_drbd",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/extended_drbd/versions/1.0.1/download",
  "deprecated": false,
  "created": "2012-04-27T17:15:56.000Z",
  "updated": "2014-11-24T15:35:48.907Z",
  "description": "DRBD recipe",
  "maintainer": {
    "name": "jwitrick",
    "email": "github@thewitricks.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 7005157,
  "downloads_count_revision": 1208030,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "extended_drbd\n=============\n\nThis cookbook is designed to setup and configure a pair of server with\ndrbd.\nPlease Note: this cookbook does not mount the drbd drive.\n\nThis cookbook assumes that you want it to control your firewall using iptables,\nas such it will attempt to open/close the correct ports. If you want to disable\nthis functionality you can modify the attribute `node['iptables']['enabled']` \nand set it to `false`.\n\nThis cookbook can be used in the following situations:\n\n1) Fresh server pair installation (please see below for how to use).\n\n2) Adding a server to another server running drbd.\n\n3) Change drbd.conf file and have drbd update with out restarting.\n\nUsage\n=====\n# How to use when creating a fresh server pair:\n\nPrerequisites:\n\n- Chef client must be installed on both servers.\n\n- The disk location `node['drbd']['disk']['location']` must exist.\n\nNote: In order for this work properly both servers need to be running chef\nat the same time,\n\nYou will need to have the following attribute values specified:\n\n`node['drbd']['primary']['fqdn']` and `node['drbd']['partner']['hostname']`\n\nNote: If you do not specify both attributes then the chef run will error out.\n\nOnce one server has been specified as drbd master you can add the recipe\n\"drbd::drbd_fresh_install\" to the run_list of both servers.\n\n# How to use when adding a new server to another server running drbd:\n\nThis is the same as above except the new server is not specified as the drbd\nmaster, and you dont have to be running chef-client on the other server.\n\n# How to use when changing the drbd.conf file:\n\nOn which ever server you are updated (or both) add the recipe\n\"drbd::drbd_inplace_upgrade\" to the server's run_list. And the next\ntime Chef-client runs it will preform the changes in a safe way.\n\nThe way I have used this have been to call this drbd cookbook from within\nanother cookbook, and have the second cookbook do the logic of decided whether\nor not this is a fresh install or inplace upgrade.\n\nHere is how I use it:\n\n    if ::File.exists?(\"/etc/drbd.conf\")\n      include_recipe \"extended_drbd::drbd_inplace_upgrade\"\n    else\n      include_recipe \"extended_drbd::drbd_fresh_install\"\n    end\n\nAttributes:\n===========\n * `default['drbd']['packages'] = [\"kmod-drbd83\", \"drbd83\"]`\n * `default['drbd']['disk']['location'] = \"/dev/local/data\"`\n * `default['drbd']['mount'] = \"/data\"`\n * `default['drbd']['fs_type'] = \"ext3\"`\n * `default['drbd']['dev'] = \"/dev/drbd0\"`\n * `default['drbd']['master'] = false`\n * `default['drbd']['port'] = 7789`\n * `default['drbd']['configured'] = false`\n * `default['drbd']['syncrate'] = \"36M\"`\n * `default['drbd']['resource'] = \"data\"`\n * `default['drbd']['stop_file'] = \"/etc/drbd_stop_file\"`\n * `default['drbd']['synced']['stop_file'] = \"/etc/drbd_synced_stop_file\"`\n * `default['drbd']['initialized']['stop_file'] = \"/etc/drbd_initialized_stop_file\"`\n\n * `default['drbd']['primary']['fqdn'] = nil` - Fqdn of the primary drbd server\n * `default['drbd']['server']['hostname'] = nil` - Fqdn of the server\n   Note: This will use the `node['fqdn']` if not specified.\n * `default['drbd']['server']['ipaddress'] = nil` - Ipaddress of the server\n   Note: This will use `node['ipaddress']` if nil.\n * `default['drbd']['partner']['hostname'] = nil` - Fqdn of the partner server\n * `default['drbd']['partner']['ipaddress'] = nil` - Ipaddress of the parter server\n   Note: If not specified chef will try to search the chef-server using \n   `node['drbd']['partner']['hostname']` to find the node object.\n\n * `default['drbd']['command_timeout'] = 36000` - A timeout value used when\n   trying to create a filesystem of a huge data store.\n * `default['drbd']['protocol'] = 'C'` - The protocal used by the drbd app.\n * `default['drbd']['disk']['on_io_error_action'] = 'detach'`\n * `default['drbd']['disk']['disk-flushes'] = false`\n * `default['drbd']['disk']['md-flushes'] = false`\n * `default['drbd']['disk']['no-disk-barrier'] = false`\n * `default['drbd']['net']['enabled'] = false`\n * `default['drbd']['net']['sndbuf-size'] = '1M'`\n * `default['drbd']['net']['max-buffers'] = 8000`\n * `default['drbd']['net']['max-epoch-size'] = 8000`\n\n * `default['iptables']['enabled'] = true`\n\n# Testing\nThis recipe includes a number of chefspec unit tests for this cookbook.\n\nTo execute the tests run `rspec spec/`\n\n# License and Author\n\n- Author:: Justin Witrick (<github@thewitricks.com>)\n\n- Copyright:: Justin Witrick.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n",
  "requires": [
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 5.8",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 5.8",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 5.8",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/iptables",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/wait",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}