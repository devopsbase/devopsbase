{
  "name": "homesick Chef cookbook",
  "chef_cookbook_name": "homesick",
  "revision": "0.4.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/homesick",
    "https://supermarket.chef.io/cookbooks/homesick/download",
    "https://supermarket.chef.io/cookbooks/homesick/versions/0.4.0",
    "https://supermarket.chef.io/cookbooks/homesick/versions/0.4.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/homesick/versions/0.4.0",
    "https://supermarket.chef.io/api/v1/cookbooks/homesick",
    "https://supermarket.chef.io/api/v1/cookbooks/homesick/versions/0.4.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Package Management",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Mode/API/Toolkit",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/homesick",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/homesick/versions/0.4.0/download",
  "deprecated": false,
  "created": "2011-08-15T19:27:57.000Z",
  "updated": "2013-06-16T17:51:25.000Z",
  "description": "Chef library cookbook to manage Homesick castle repositories",
  "maintainer": {
    "name": "fnichol",
    "email": "fnichol@nichol.ca"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 3,
  "downloads_count": 6290481,
  "downloads_count_revision": 1258300,
  "repository_url": "http://fnichol.github.io/chef-homesick",
  "issues_url": "http://fnichol.github.io/chef-homesick",
  "chef_source_url": "http://fnichol.github.io/chef-homesick",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# <a name=\"title\"></a> Homesick Chef Cookbook\n\n[![Build Status](https://travis-ci.org/fnichol/chef-homesick.png?branch=master)](https://travis-ci.org/fnichol/chef-homesick)\n\n## <a name=\"description\"></a> Description\n\nChef library cookbook to manage [Homesick][homesick] castle repositories.\n\n## <a name=\"usage\"></a> Usage\n\nSimply include `recipe[homesick]` in your run\\_list and the `homesick_repo`\nresource will be available.\n\nTo use `recipe[homesick::data_bag]`, include it in your run\\_list and have a\ndata bag called `\"users\"` with an item for your user like the following:\n\n    {\n      \"id\"  : \"wigglebottom\",\n      \"homesick_castles\"  : [\n        { \"name\"    : \"dotvim\",\n          \"source\"  : \"git://github.com/fnichol/dotvim.git\"\n        },\n        { \"name\"    : \"dotfiles\",\n          \"source\"  : \"git://github.com/fnichol/dotfiles.git\",\n          \"action\"  : \"update\"\n        }\n      ]\n    }\n\nThe data bag recipe will iterate through a list of usernames defined in\n`node['users']` and attempt to pull in the homesick information from the data\nbag item. In other words, having:\n\n    node['users'] = ['hsolo']\n\nwill set up the `hsolo` user's castles and not use the `wigglebottom` user.\n\n## <a name=\"requirements\"></a> Requirements\n\n### <a name=\"requirements-chef\"></a> Chef\n\nTested on 11.4.4 but newer and older version should work just fine.\nFile an [issue][issues] if this isn't the case.\n\n### <a name=\"requirements-platform\"></a> Platform\n\nThe following platforms have been tested with this cookbook, meaning that the\nrecipes run on these platforms without error:\n\n* ubuntu\n* debian\n* centos\n* scientific\n* mac\\_os\\_x\n* suse\n* openbsd\n\nPlease [report][issues] any additional platforms so they can be added.\n\n### <a name=\"requirements-cookbooks\"></a> Cookbooks\n\nThis cookbook depends on the following external cookbooks:\n\n* [git][git_cb]\n\n## <a name=\"installation\"></a> Installation\n\nDepending on the situation and use case there are several ways to install\nthis cookbook. All the methods listed below assume a tagged version release\nis the target, but omit the tags to get the head of development. A valid\nChef repository structure like the [Opscode repo][chef_repo] is also assumed.\n\n### <a name=\"installation-site\"></a> From the Opscode Community Site\n\nTo install this cookbook from the Community Site, use the *knife* command:\n\n    knife cookbook site install homesick\n\n### <a name=\"installation-berkshelf\"></a> Using Berkshelf\n\n[Berkshelf][berkshelf] is a cookbook dependency manager and development\nworkflow assistant. To install Berkshelf:\n\n    cd chef-repo\n    gem install berkshelf\n    berks init\n\nTo use the Community Site version:\n\n    echo \"cookbook 'homesick'\" >> Berksfile\n    berks install\n\nOr to reference the Git version:\n\n    repo=\"fnichol/chef-homesick\"\n    latest_release=$(curl -s https://api.github.com/repos/$repo/git/refs/tags \\\n    | ruby -rjson -e '\n      j = JSON.parse(STDIN.read);\n      puts j.map { |t| t[\"ref\"].split(\"/\").last }.sort.last\n    ')\n    cat >> Berksfile <<END_OF_BERKSFILE\n    cookbook 'homesick',\n      :git => 'git://github.com/$repo.git', :branch => '$latest_release'\n    END_OF_BERKSFILE\n    berks install\n\n### <a name=\"installation-librarian\"></a> Using Librarian-Chef\n\n[Librarian-Chef][librarian] is a bundler for your Chef cookbooks.\nTo install Librarian-Chef:\n\n    cd chef-repo\n    gem install librarian\n    librarian-chef init\n\nTo use the Community Site version:\n\n    echo \"cookbook 'homesick'\" >> Cheffile\n    librarian-chef install\n\nOr to reference the Git version:\n\n    repo=\"fnichol/chef-homesick\"\n    latest_release=$(curl -s https://api.github.com/repos/$repo/git/refs/tags \\\n    | ruby -rjson -e '\n      j = JSON.parse(STDIN.read);\n      puts j.map { |t| t[\"ref\"].split(\"/\").last }.sort.last\n    ')\n    cat >> Cheffile <<END_OF_CHEFFILE\n    cookbook 'homesick',\n      :git => 'git://github.com/$repo.git', :ref => '$latest_release'\n    END_OF_CHEFFILE\n    librarian-chef install\n\n## <a name=\"recipes\"></a> Recipes\n\n### <a name=\"recipes-default\"></a> default\n\nThis recipe is a no-op and does nothing.\n\nUse this recipe when you only want access to the `homesick_castle` LWRP.\n\n### <a name=\"recipes-data-bag\"></a> data_bag\n\nFetches an list of homesick castles with data drawn from a data bag. The\ndefault data bag is `\"users\"` and the list of user accounts to iterate through\nis set on `node['users']`.\n\nUse this recipe when you want data bag driven data in your workflow.\n\n## <a name=\"attributes\"></a> Attributes\n\n### <a name=\"attributes-data-bag-name\"></a> data_bag_name\n\nThe data bag name containing a group of user account information. This is used\nby the `data_bag` recipe to use as a database of user accounts. The default is\n`\"users\"`.\n\n### <a name=\"attributes-user-array-node-attr\"></a> user_array_node_attr\n\nThe node attributes containing an array of users to be managed. If a nested\nhash in the node's attributes is required, then use a `/` between subhashes.\nFor example, if the users' array is stored in `node['system']['accounts']`),\nthen set `node['homesick']['user_array_node_attr']` to `\"system/accounts\"`.\n\nThe default is `\"users\"`.\n\n### <a name=\"attributes-gem-version\"></a> gem_version\n\nThe version of the Homesick gem to install.\n\nThe default is `\"~> 0.7.0\"`\n(pending [upstream PR #40](https://github.com/technicalpickles/homesick/pull/40)).\n\n## <a name=\"lwrps\"></a> Resources and Providers\n\n### <a name=\"lwrps-castle\"></a> homesick_castle\n\n### <a name=\"lwrps-castle-actions\"></a> Actions\n\n<table>\n  <thead>\n    <tr>\n      <th>Action</th>\n      <th>Description</th>\n      <th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>install</td>\n      <td>Clones the castle and symlinks it.</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <td>update</td>\n      <td>Pulls updates for the castle and re-symlinks it.</td>\n      <td>&nbsp;</td>\n    </tr>\n  </tbody>\n</table>\n\n### <a name=\"lwrps-castle-attributes\"></a> Attributes\n\n<table>\n  <thead>\n    <tr>\n      <th>Attribute</th>\n      <th>Description</th>\n      <th>Default Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>name</td>\n      <td><b>Name attribute:</b> The name of the homesick castle.</td>\n      <td><code>nil</code></td>\n    </tr>\n    <tr>\n      <td>user</td>\n      <td>The user using the castle.</td>\n      <td><code>nil</code></td>\n    </tr>\n    <tr>\n      <td>source</td>\n      <td>The clone URL (http, https, git, etc.) of the castle.</td>\n      <td><code>nil</code></td>\n    </tr>\n  </tbody>\n</table>\n\n#### <a name=\"lwrps-castle-examples\"></a> Examples\n\n##### Install a Castle\n\n    homesick_castle 'dotvim' do\n      user    'wigglebottom\n      source  'git://github.com/fnichol/dotvim.git'\n    end\n\n**Note:** the install action is the default.\n\n##### Pull Updates for a Castle\n\n    homesick_castle 'dotfiles' do\n      user    'wigglebottom\n      source  'git://github.com/fnichol/dotfiles.git'\n      action  :update\n    end\n\n## <a name=\"development\"></a> Development\n\n* Source hosted at [GitHub][repo]\n* Report issues/Questions/Feature requests on [GitHub Issues][issues]\n\nPull requests are very welcome! Make sure your patches are well tested.\nIdeally create a topic branch for every separate change you make.\n\n## <a name=\"license\"></a> License and Author\n\nAuthor:: [Fletcher Nichol][fnichol] (<fnichol@nichol.ca>) [![endorse](http://api.coderwall.com/fnichol/endorsecount.png)](http://coderwall.com/fnichol)\n\nCopyright 2011, Fletcher Nichol\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n[berkshelf]:    http://berkshelf.com/\n[chef_repo]:    https://github.com/opscode/chef-repo\n[cheffile]:     https://github.com/applicationsonline/librarian/blob/master/lib/librarian/chef/templates/Cheffile\n[git_cb]:       http://community.opscode.com/cookbooks/git\n[homesick]:     https://github.com/technicalpickles/homesick\n[librarian]:    https://github.com/applicationsonline/librarian#readme\n\n[fnichol]:      https://github.com/fnichol\n[repo]:         https://github.com/fnichol/chef-homesick\n[issues]:       https://github.com/fnichol/chef-homesick/issues\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "mac_os_x",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "openbsd",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "suse",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/git",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}