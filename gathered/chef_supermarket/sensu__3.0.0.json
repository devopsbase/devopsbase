{
  "name": "sensu Chef cookbook",
  "chef_cookbook_name": "sensu",
  "revision": "3.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/sensu",
    "https://supermarket.chef.io/cookbooks/sensu/download",
    "https://supermarket.chef.io/cookbooks/sensu/versions/3.0.0",
    "https://supermarket.chef.io/cookbooks/sensu/versions/3.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/sensu/versions/3.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/sensu",
    "https://supermarket.chef.io/api/v1/cookbooks/sensu/versions/3.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Monitoring & Trending",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Monitoring/Sensu"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/sensu",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/sensu/versions/3.0.0/download",
  "deprecated": false,
  "created": "2011-11-03T07:06:25.000Z",
  "updated": "2016-09-29T20:17:11.329Z",
  "description": "Installs/Configures Sensu",
  "maintainer": {
    "name": "heavywater",
    "email": "chefs@sonian.net"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 68,
  "downloads_count": 42636038,
  "downloads_count_revision": 2249,
  "repository_url": "https://github.com/sensu/sensu-chef",
  "issues_url": "https://github.com/sensu/sensu-chef/issues",
  "chef_source_url": "https://github.com/sensu/sensu-chef",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "![sensu](https://raw.github.com/sensu/sensu/master/sensu-logo.png)\n\n[![Build Status](https://img.shields.io/travis/sensu/sensu-chef.svg)](https://travis-ci.org/sensu/sensu-chef) [![Cookbook Version](https://img.shields.io/cookbook/v/sensu.svg)](https://supermarket.chef.io/cookbooks/sensu)\n\n## Description\n\nThis cookbook provides custom resources and service recipes to install and configure\n[Sensu](https://github.com/sensu/sensu/wiki), a monitoring framework.\n\nThe custom resources provide building blocks for creating a monitoring\ncookbook specific to your environment (wrapper). **Without such a\nwrapper, no Sensu configuration files will be created for your nodes.**\n\nAn example wrapper cookbook can be found [HERE](https://github.com/portertech/chef-monitor).\n\n[How to Write Reusable Chef Cookbooks](http://bit.ly/10r993N)\n\n## Contributing\n\nSee CODE_OF_CONDUCT.md, CONTRIBUTING.md and TESTING.md documents.\n\n\n## Dependencies\n\n### Platforms\n\n* Ubuntu/Debian\n* RHEL and derivatives\n* Fedora\n* Windows\n\n### Chef\n\n* Chef 12+\n* Earlier versions of Chef (e.g. Chef 11) may work but are not actively supported.\n\n### Cookbooks\n\n* [APT](https://supermarket.chef.io/cookbooks/apt)\n* [YUM](https://supermarket.chef.io/cookbooks/yum)\n* [Windows](https://supermarket.chef.io/cookbooks/windows)\n* [RabbitMQ](https://supermarket.chef.io/cookbooks/rabbitmq)\n* [RedisIO](https://supermarket.chef.io/cookbooks/redisio)\n* [ms_dotnet](https://supermarket.chef.io/cookbooks/ms_dotnet)\n\n**NOTE**: This cookbook either constrains its dependencies optimistically (`>=`) or\n not at all. You're strongly encouraged to more strictly manage these\n dependencies in your wrapper cookbook.\n\n## Package versioning\n\nThis cookbook makes no attempt to manage the versions of its package\ndependencies. If you desire or require management of these versions, you should\nhandle these via your wrapper cookbook.\n\n## Prerequisites\n\n### SSL configuration\n\nRunning Sensu with SSL is recommended; by default this cookbook attempts to load\nSSL credentials from a data bag `sensu`, with an item `ssl`, containing the\nrequired SSL certificates and keys. These data bag items may be encrypted via\nnative Chef encrypted data bags or via Chef Vault.\n\nThe data loaded from the data bag by default is expected to be formatted as\nfollows:\n\n```json\n{\n  \"server\": {\n    \"cert\": \"CERTIFICATE_DATA\",\n    \"key\": \"PRIVATE_KEY_DATA\",\n    \"cacert\": \"CA_CERTIFICATE_DATA\"\n  },\n  \"client\": {\n    \"cert\": \"CERTIFICATE_DATA\",\n    \"key\": \"PRIVATE_KEY_DATA\"\n  }\n}\n```\n\nAll of the above values are expected to be strings comprised of PEM-formatted\ncredentials with escaped line endings. See\n`test/integration/data_bags/sensu/ssl.json` for a more literal example.\n\nIf the attempt to load SSL credentials from a data bag fails, the cookbook will\nlog a warning but proceed with the rest of the Chef run anyway, on the\nassumption that credentials will be inserted into the Chef \"run state\" (i.e.\n`node.run_state['sensu']['ssl']`) in the same format using the\n`Sensu::ChefRunState` helper methods, `set_sensu_run_state` and\n`get_sensu_run_state`.\n\nPlease see the [documentation for the run state helper\nmethods](#helper-modules-and-methods) for more information.\n\nThis cookbook comes with a tool to generate the certificates and data bag items.\nIf the integrity of the certificates is ever compromised, you must regenerate\nand redeploy them.\n\n```\ncd examples/ssl\n./ssl_certs.sh generate\nknife data bag create sensu\n```\n\nUse the plain-text data bag item:\n\n``` shell\nknife data bag from file sensu ssl.json\n```\n\nOr, encrypt it with your data bag secret. See [Encrypt a Data Bag](https://docs.getchef.com/essentials_data_bags.html#encrypt-a-data-bag-item)\nfor more information.\n\n```\nknife data bag --secret-file /path/to/your/secret from file sensu ssl.json\n```\n\n``` shell\n./ssl_certs.sh clean\n```\n\n## Recipes\n\n### sensu::default\n\nInstalls Sensu and creates a base configuration file, intended to be\nextended. This recipe must be included before any of the Sensu LWRP's\ncan be used. This recipe does not enable or start any services.\n\n### sensu::rabbitmq\n\nInstalls and configures RabbitMQ for Sensu, from configuring SSL to\ncreating a vhost and credentials. This recipe relies heavily on the\ncommunity RabbitMQ cookbook LWRP's.\n\n### sensu::redis\n\nInstalls and configures Redis for Sensu. This recipe uses the\nRedisIO cookbook and installs Redis from source.\n\n### sensu::enterprise\n\nInstalls and configures Sensu Enterprise.\n\n### sensu::server_service\n\nEnables and starts the Sensu server.\n\n### sensu::client_service\n\nEnables and starts the Sensu client.\n\n### sensu::api_service\n\nEnables and starts the Sensu API.\n\n### sensu::enterprise_service\n\nEnables and starts Sensu Enterprise.\n\n### sensu::enterprise_dashboard\n\nInstalls and configures Sensu Enterprise Dashboard.\n\n### sensu::enterprise_dashboard_service\n\nEnables and starts Sensu Enterprise Dashboard.\n\n## Attributes\n\n### Installation\n\n`node[\"sensu\"][\"version\"]` - Sensu build to install.\n\n`node[\"sensu\"][\"use_unstable_repo\"]` - If the build resides on the\n\"unstable\" repository.\n\n`node[\"sensu\"][\"directory\"]` - Sensu configuration directory.\n\n`node[\"sensu\"][\"log_directory\"]` - Sensu log directory.\n\n`node[\"sensu\"][\"log_level\"]` - Sensu log level (eg. \"warn\").\n\n`node[\"sensu\"][\"use_ssl\"]` - If Sensu and RabbitMQ are to use SSL.\n\n`node[\"sensu\"][\"user\"]` - The user who owns all sensu files and directories. Default\n\"sensu\".\n\n`node[\"sensu\"][\"group\"]` - The group that owns all sensu files and directories.\nDefault \"sensu\".\n\n`node[\"sensu\"][\"use_embedded_ruby\"]` - If Sensu Ruby handlers and plugins\nuse the embedded Ruby in the Sensu package (default: true).\n\n`node[\"sensu\"][\"init_style\"]` - Style of init to be used when configuring\nSensu services, \"sysv\" and \"runit\" are currently supported.\n\n`node[\"sensu\"][\"service_max_wait\"]` - How long service scripts should wait\nfor Sensu to start/stop.\n\n### Windows\n\nSensu requires Microsoft's .Net Framework to run on Windows. The following attributes influence the installation of .Net via this cookbook:\n\n`node[\"sensu\"][\"windows\"][\"install_dotnet\"]` - Toggles installation of .Net Framework using ms_dotnet cookbook. (default: true)\n\n`node[\"sensu\"][\"windows\"][\"dotnet_major_version\"]` - Major version of .Net Framework to install. (default: 4)\n\nAdjusting the value of `dotnet_major_version` attribute will influence which\n recipe from `ms_dotnet` cookbook will be included. See [`ms_dotnet` cookbook](https://github.com/criteo-cookbooks/ms_dotnet/blob/v2.6.1/README.md)\n for additional details on using this cookbook.\n\n### Transport\n\n`node[\"sensu\"][\"transport\"][\"name\"]` - Name of transport to use for Sensu communications. Default \"rabbitmq\"\n\n### RabbitMQ\n\n`node[\"sensu\"][\"rabbitmq\"][\"hosts\"]` - Array of RabbitMQ hosts as strings, which will be combined with other RabbitMQ attributes to generate the Sensu RabbitMQ transport configuration as an array of hashes. Falls back to `node[\"sensu\"][\"rabbitmq\"][\"host\"]` when empty. Defaults to an empty array.\n\n`node[\"sensu\"][\"rabbitmq\"][\"host\"]` - RabbitMQ host.\n\n`node[\"sensu\"][\"rabbitmq\"][\"port\"]` - RabbitMQ port, usually for SSL.\n\n`node[\"sensu\"][\"rabbitmq\"][\"ssl\"]` - RabbitMQ SSL configuration, DO NOT EDIT THIS.\n\n`node[\"sensu\"][\"rabbitmq\"][\"vhost\"]` - RabbitMQ vhost for Sensu.\n\n`node[\"sensu\"][\"rabbitmq\"][\"user\"]` - RabbitMQ user for Sensu.\n\n`node[\"sensu\"][\"rabbitmq\"][\"password\"]` - RabbitMQ password for Sensu.\n\n### Redis\n\n`node[\"sensu\"][\"redis\"][\"host\"]` - Redis host.\n\n`node[\"sensu\"][\"redis\"][\"port\"]` - Redis port.\n\n### Sensu API\n\n`node[\"sensu\"][\"api\"][\"host\"]` - Sensu API host, for other services to reach it.\n\n`node[\"sensu\"][\"api\"][\"bind\"]` - Sensu API bind address.\n\n`node[\"sensu\"][\"api\"][\"port\"]` - Sensu API port.\n\n### Sensu Enterprise\n\n`node[\"sensu\"][\"enterprise\"][\"repo_protocol\"]` - Sensu Enterprise repo protocol (e.g. http, https)\n\n`node[\"sensu\"][\"enterprise\"][\"repo_host\"]` - Sensu Enterprise repo host\n\n`node[\"sensu\"][\"enterprise\"][\"version\"]` - Desired Sensu Enterprise package version\n\n`node[\"sensu\"][\"enterprise\"][\"use_unstable_repo\"]` - Toggle use of Sensu Enterprise unstable repository\n\n`node[\"sensu\"][\"enterprise\"][\"log_level\"]` - Configure Sensu Enterprise log level\n\n`node[\"sensu\"][\"enterprise\"][\"heap_size\"]` - Configure Sensu Enterprise heap size\n\n`node[\"sensu\"][\"enterprise\"][\"java_opts\"]` - Specify additional Java options when running Sensu Enterprise\n\n## Custom Resources (LWRPs)\n\n### Define a client\n\n```ruby\nsensu_client node[\"name\"] do\n  address node[\"ipaddress\"]\n  subscriptions node[\"roles\"] + [\"all\"]\n  additional(:cluster => node[\"cluster\"])\nend\n```\n\nThe `sensu_client` provider also supports the following optional attributes:\n\n* deregister\n* deregistration\n* keepalive\n* keepalives\n* redact\n* registration\n* safe_mode\n* socket\n\n### Define a handler\n\n```ruby\nsensu_handler \"pagerduty\" do\n  type \"pipe\"\n  command \"pagerduty.rb\"\n  severities [\"ok\", \"critical\"]\nend\n```\n\n### Define a check\n\n```ruby\nsensu_check \"redis_process\" do\n  command \"check-procs.rb -p redis-server -C 1\"\n  handlers [\"default\"]\n  subscribers [\"redis\"]\n  interval 30\n  additional(:notification => \"Redis is not running\", :occurrences => 5)\nend\n```\n\n### Define a filter\n\n```ruby\nsensu_filter \"environment\" do\n  attributes(:client => {:environment => \"development\"})\n  negate true\nend\n```\n\n### Define a mutator\n\n```ruby\nsensu_mutator \"opentsdb\" do\n  command \"opentsdb.rb\"\nend\n```\n\n### Define a custom configuration snippet\n\n```ruby\nsensu_snippet \"irc\" do\n  content(:uri => \"irc://sensu:password@irc.freenode.net:6667#channel\")\nend\n```\n\n## Helper modules and methods\n\n### Run State Helpers\n\nThe `Sensu::ChefRunState` module provides helper methods which populate `node.run_state['sensu']` with arbitrary key/value pairs. This provides a means for wrapper cookbooks to populate the `node.run_state` with data required by the cookbook, e.g. SSL credentials, without cookbook itself enforcing source for that data.\n\n**NOTE**: The `node.run_state` is not persisted locally nor on a Chef server. Data stored here exists only for the duration of the Chef run.\n\n#### `set_sensu_state`\n\nThis method sets values inside the `node.run_state['sensu']` Mash, and expects arguments in the following order:\n\n1. the Chef `node` object\n2. one or more keys, providing the path to walk\n3. the value to set at that path\n\nExample:\n\n`set_sensu_state(node, 'food', 'nachos', true)`\n\nThe above sets the value of `node.run_state['sensu']['food']['nachos']` to `true`.\n\n#### `get_sensu_state`\n\nThis method retrieves the value of a key inside the `node.run_state['sensu']` Mash and expects arguments in the following order:\n\n1. the Chef `node` object\n2. one or more keys, providing the path to walk\n\nExamples:\n\n`get_sensu_state(node, 'food', 'nachos')` would return `true`\n\nWhen no value is set for a requested path, this method returns `nil`:\n\n`get_sensu_state(node, 'this', 'path', 'is', 'invalid')` returns `nil`\n\n## Support\n\nPlease visit [sensuapp.org/support](http://sensuapp.org/support) for details on community and commercial\nsupport resources, including the official IRC channel.\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "oracle",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/windows",
      "revision": ">= 1.8.8",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ms_dotnet",
      "revision": ">= 2.6.1",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/rabbitmq",
      "revision": ">= 2.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/redisio",
      "revision": ">= 1.7.0",
      "self_resolve": true
    }
  ],
  "recommends": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef-vault",
      "revision": ">= 1.3.1"
    }
  ]
}