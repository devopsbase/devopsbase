{
  "name": "rabbitmq Chef cookbook",
  "chef_cookbook_name": "rabbitmq",
  "revision": "3.5.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/rabbitmq",
    "https://supermarket.chef.io/cookbooks/rabbitmq/download",
    "https://supermarket.chef.io/cookbooks/rabbitmq/versions/3.5.1",
    "https://supermarket.chef.io/cookbooks/rabbitmq/versions/3.5.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/rabbitmq/versions/3.5.1",
    "https://supermarket.chef.io/api/v1/cookbooks/rabbitmq",
    "https://supermarket.chef.io/api/v1/cookbooks/rabbitmq/versions/3.5.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Messaging/RabbitMQ"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/rabbitmq",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/rabbitmq/versions/3.5.1/download",
  "deprecated": false,
  "created": "2009-12-08T22:45:48.000Z",
  "updated": "2016-09-20T17:10:57.462Z",
  "description": "Installs and configures RabbitMQ server",
  "maintainer": {
    "name": "jjasghar",
    "email": "cookbooks@opscode.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 141,
  "downloads_count": 45900619,
  "downloads_count_revision": 626787,
  "repository_url": "https://github.com/rabbitmq/chef-cookbook",
  "issues_url": "https://github.com/rabbitmq/chef-cookbook/issues",
  "chef_source_url": "https://github.com/rabbitmq/chef-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "oracle",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "smartos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "suse",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/erlang",
      "revision": ">= 0.9",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "rabbitmq": "Install and configure RabbitMQ",
    "rabbitmq::cluster": "Set up RabbitMQ clustering.",
    "rabbitmq::plugin_management": "Manage plugins with node attributes",
    "rabbitmq::virtualhost_management": "Manage virtualhost with node attributes",
    "rabbitmq::user_management": "Manage users with node attributes"
  },
  "parameters": {
    "rabbitmq": {
      "display_name": "RabbitMQ",
      "description": "Hash of RabbitMQ attributes",
      "type": "hash",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/nodename": {
      "display_name": "RabbitMQ Erlang node name",
      "description": "The Erlang node name for this server.",
      "default": "node['hostname']",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/address": {
      "display_name": "RabbitMQ server IP address",
      "description": "IP address to bind.",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/port": {
      "display_name": "RabbitMQ server port",
      "description": "TCP port to bind.",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/config": {
      "display_name": "RabbitMQ config file to load",
      "description": "Path to the rabbitmq.config file, if any.",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/logdir": {
      "display_name": "RabbitMQ log directory",
      "description": "Path to the directory for log files.",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/mnesiadir": {
      "display_name": "RabbitMQ Mnesia database directory",
      "description": "Path to the directory for Mnesia database files.",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/cluster": {
      "display_name": "RabbitMQ clustering",
      "description": "Whether to activate clustering.",
      "default": "no",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/cluster_config": {
      "display_name": "RabbitMQ clustering configuration file",
      "description": "Path to the clustering configuration file, if cluster is yes.",
      "default": "/etc/rabbitmq/rabbitmq_cluster.config",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/cluster_disk_nodes": {
      "display_name": "RabbitMQ cluster disk nodes",
      "description": "Array of member Erlang nodenames for the disk-based storage nodes in the cluster.",
      "default": [],
      "type": "array",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/erlang_cookie": {
      "display_name": "RabbitMQ Erlang cookie",
      "description": "Access cookie for clustering nodes.  There is no default.",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/virtualhosts": {
      "display_name": "Virtualhosts on rabbitmq instance",
      "description": "List all virtualhosts that will exist",
      "default": [],
      "type": "array",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/enabled_users": {
      "display_name": "Users and their rights on rabbitmq instance",
      "description": "Users and description of their rights",
      "default": [
        {
          "name": "guest",
          "password": "guest",
          "rights": [
            {
              "vhost": null,
              "conf": ".*",
              "write": ".*",
              "read": ".*"
            }
          ]
        }
      ],
      "type": "array",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/disabled_users": {
      "display_name": "Disabled users",
      "description": "List all users that will be deactivated",
      "default": [],
      "type": "array",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/enabled_plugins": {
      "display_name": "Enabled plugins",
      "description": "List all plugins that will be activated",
      "default": [],
      "type": "array",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/disabled_plugins": {
      "display_name": "Disabled plugins",
      "description": "List all plugins that will be deactivated",
      "default": [],
      "type": "array",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/local_erl_networking": {
      "display_name": "Local Erlang networking",
      "description": "Bind erlang networking to localhost",
      "mapping": "cookbook_attribute"
    },
    "rabbitmq/erl_networking_bind_address": {
      "display_name": "Erl Networking Bind Address",
      "description": "Bind Rabbit and erlang networking to an address",
      "mapping": "cookbook_attribute"
    }
  }
}