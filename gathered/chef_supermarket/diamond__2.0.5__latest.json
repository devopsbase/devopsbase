{
  "name": "diamond Chef cookbook",
  "chef_cookbook_name": "diamond",
  "revision": "2.0.5",
  "uris": [
    "https://supermarket.chef.io/cookbooks/diamond",
    "https://supermarket.chef.io/cookbooks/diamond/download",
    "https://supermarket.chef.io/cookbooks/diamond/versions/2.0.5",
    "https://supermarket.chef.io/cookbooks/diamond/versions/2.0.5/download",
    "https://supermarket.chef.io/api/v1/cookbooks/diamond/versions/2.0.5",
    "https://supermarket.chef.io/api/v1/cookbooks/diamond",
    "https://supermarket.chef.io/api/v1/cookbooks/diamond/versions/2.0.5/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/diamond",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/diamond/versions/2.0.5/download",
  "deprecated": false,
  "created": "2012-10-10T17:33:39.000Z",
  "updated": "2016-08-13T14:17:51.616Z",
  "description": "Installs/Configures diamond",
  "maintainer": {
    "name": "cbarraford",
    "email": "cbarraford@gmail.com"
  },
  "license": "All rights reserved",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 1209804,
  "downloads_count_revision": 53,
  "repository_url": "https://github.com/CBarraford/diamond_cookbook",
  "issues_url": "https://github.com/CBarraford/diamond_cookbook",
  "chef_source_url": "https://github.com/CBarraford/diamond_cookbook",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "About\n=====\n\nDiamond is a python daemon that collects system metrics and publishes them to Graphite. It is\ncapable of collecting cpu, memory, network, i/o, load and disk metrics.  Additionally,\nit features an API for implementing custom collectors for gathering metrics from almost any source.\n\nThe documentation can be found on our [wiki](https://github.com/BrightcoveOS/Diamond/wiki). For your\nconvenience the wiki is setup as a submodule of this checkout. You can get it via running\n\n    git submodule init\n    git submodule update\n\nDefinitions\n===========\nThis cookbook has a definition to make it easy to create collector configs. By default, the definition enables the\ncollector. You can supply it with addition parameters. Below is the simplest example.\n\n```\n    collector_config \"CPUCollector\"\n```\n\nThis simple example just enables the collector and it inhereits the default configuration for this collector as defined\nby the collector.\n\nYou can override these default settings by passing additional parameters. Below is an example of this.\n\n```\n    collector_config \"DiskSpaceCollector\" do\n      filesystems      'ext2,ext3,xfs'\n      exclude_filters  \"'^/export/home'\"\n    end\n```\n\nThis example is enabling the DiskSpaceCollector while passing addition settings to specify which filesystems to mine data \nand to exclude certain directories (regex). Read the documentation/collector source code for information on what parameters\neach collector has.\nIt is recommended that instead of passing values directly, inherit them from the node (as show belown).\n\n```\n    collector_config \"DiskSpaceCollector\" do\n      filesystems      node[:diamond][:collectors][:DiskSpaceCollector][:filesystems]\n      exclude_filters  node[:diamond][:collectors][:DiskSpaceCollector][:exclude_filters]\n    end\n```\n\nWhen you are collecting data via snmp, you need to specify that in the definition (as shown below)\n```\n      collector_config \"SNMPInterfaceCollector\" do\n        path      node[:diamond][:collectors][:SNMPInterfaceCollector][:path]\n        snmp      true\n        interval  node[:diamond][:collectors][:SNMPInterfaceCollector][:interval]\n        time__out node[:diamond][:collectors][:SNMPInterfaceCollector][:timeout]\n        retries   node[:diamond][:collectors][:SNMPInterfaceCollector][:retries]\n        port      node[:diamond][:collectors][:SNMPInterfaceCollector][:port]\n        community node[:diamond][:collectors][:SNMPInterfaceCollector][:community]\n        devices   node[:diamond][:collectors][:SNMPInterfaceCollector][:devices]\n      end\n```\n\nWhats with the double underscore ('__')?\nif a double underscore exists in the attribute name, it will be automatically removed when written to the collector config file.\nThis is due to limitations within ruby code. Sometimes a attibute name may be a reserved ruby word (ie timeout), in which\ncase, you can't use that key to specify an attribute for the collector. The use of double underscores ('__') is a work around for that. \n(so 'timeout' is called as 'time__out' in the cookbook, but writes 'timeout' to the config file.\n\nUSAGE\n=====\nIt is recommended that you create a recipe per collector, and add that recipe to the related role.\nWhen passing sensitive data to a diamond collector config (ie a username, password, etc), use data bags \nto encrypt the values.\n\nPublishing to [Chef Supermarket](https://supermarket.getchef.com/)\n=====\n\nTo update the cookbook on the supermarket use\n[stove](https://supermarket.chef.io/tools/stove)\n\n**Example**\n```bash\nstove login --username cbarraford --key ~/.chef/cbarraford.pem\nstove\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/build-essential",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/git",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}