{
  "name": "magento Chef cookbook",
  "chef_cookbook_name": "magento",
  "revision": "0.5.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/magento",
    "https://supermarket.chef.io/cookbooks/magento/download",
    "https://supermarket.chef.io/cookbooks/magento/versions/0.5.0",
    "https://supermarket.chef.io/cookbooks/magento/versions/0.5.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/magento/versions/0.5.0",
    "https://supermarket.chef.io/api/v1/cookbooks/magento",
    "https://supermarket.chef.io/api/v1/cookbooks/magento/versions/0.5.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/magento",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/magento/versions/0.5.0/download",
  "deprecated": false,
  "created": "2010-08-28T04:08:00.000Z",
  "updated": "2014-08-08T17:53:56.759Z",
  "description": "Magento app stack",
  "maintainer": {
    "name": "wik",
    "email": "craftsman@yevgenko.me"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 9,
  "downloads_count": 14703241,
  "downloads_count_revision": 1258751,
  "repository_url": "http://github.com/yevgenko/cookbook-magento",
  "issues_url": "http://github.com/yevgenko/cookbook-magento",
  "chef_source_url": "http://github.com/yevgenko/cookbook-magento",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Magento Cookbook\n\nCollection of recipes to build app stack for the [Magento][] deployments with\n[Chef][]\n\n## Installation\n\nRun the following commands with-in your [Chef Repository][]:\n\n    knife cookbook site install magento\n    knife cookbook upload magento\n\n## Usage\n\nNOTE: currently here is no recipes to deploy actual magento code except\n`[magento::sample]`, so, I encourage everyone to contribute deployment\nworkflows :)\n\n1. first of all checkout the recipes available, see `metadata.rb`\n2. decide the prefered frontend, i.e. nginx, apache, etc.\n3. decide if you will put database and frontend on a single or different nodes\n4. include the recipes where you want the app stack and database configured\n\nFor example, you could start with the following [Chef Roles][]:\n\n    # roles/app.rb\n    name \"app\"\n    run_list \"recipe[magento::nginx]\"\n\n    # roles/db.rb\n    name \"db\"\n    run_list \"recipe[magento::mysql]\"\n    default_attributes \"mysql\" => {\n    \"bind_address\" => \"127.0.0.1\",\n    \"tunable\" => {\n        \"innodb_buffer_pool_size\" => \"1GB\",\n        \"table_cache\" => \"1024\",\n        \"query_cache_size\" => \"64M\",\n        \"query_cache_limit\" => \"2M\"\n    }\n    }\n\nAnd then bootstrap [Rackspace Cloud Servers][] instance with:\n\n    knife rackspace server create 'role[app],role[db]' --server-name magebox --image 49 --flavor 3\n\nOr if you like to deploy sample site:\n\n    knife rackspace server create 'recipe[magento::sample]' --server-name magebox --image 49 --flavor 3\n\nSee [Launch Cloud Instances with Knife][] for the reference.\n\n## Hacking\n\nThe project commes with a helper tasks for bootstraping recipes in a sandbox\nenvironment:\n\n    bundle install\n    bundle exec rake sandbox:init\n    bundle exec rake sandbox:up\n\nSee complete list of the tasks available with:\n\n    bundle exec rake -T\n\nNOTE: The sandbox environment depends on [VirtualBox][] thru the [Vagrant][]\nproject. Please check [Vagrant][] manual and make sure you've correct version of\n[VirtualBox][] installed.\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Added some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n\n[Magento]:http://www.magentocommerce.com/\n[Chef]:http://www.opscode.com/chef/\n[Chef Repository]:http://wiki.opscode.com/display/chef/Chef+Repository\n[Chef Roles]:http://wiki.opscode.com/display/chef/Roles\n[Rackspace Cloud Servers]:http://www.rackspace.com/cloud/cloud_hosting_products/servers/\n[Launch Cloud Instances with Knife]:http://wiki.opscode.com/display/chef/Launch+Cloud+Instances+with+Knife\n[VirtualBox]:https://www.virtualbox.org/\n[Vagrant]:http://vagrantup.com/\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apache2",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nginx",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mysql",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/openssl",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/php",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/php-fpm",
      "revision": ">= 0.4.1",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "magento": "Prepare app stack for magento deployments",
    "magento::mysql": "Create mysql database for magento",
    "magento::apache2": "Install apache2 webserver for magento",
    "magento::nginx": "Install nginx webserver for magento",
    "magento::sample": "Deploy magento sample site"
  },
  "parameters": {
    "magento/dir": {
      "display_name": "Magento installation directory",
      "description": "Location to place magento files.",
      "default": "/var/www/magento",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "magento/gen_cfg": {
      "display_name": "Magento local.xml generator",
      "description": "The weather the chef should generate local.xml file or leave it to someone also.",
      "default": "true",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "magento/run_type": {
      "display_name": "MAGE_RUN_TYPE",
      "description": "",
      "default": "store",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "magento/run_codes": {
      "display_name": "MAGE_RUN_CODE",
      "description": "Domain based run codes",
      "default": "",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "magento/user": {
      "display_name": "Magento server user",
      "description": "The owner of magento installation directory",
      "default": "magento",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "magento/db/database": {
      "display_name": "Magento MySQL database",
      "description": "Magento will use this MySQL database to store its data.",
      "default": "magentodb",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "magento/db/user": {
      "display_name": "Magento MySQL user",
      "description": "Magento will connect to MySQL using this user.",
      "default": "magentouser",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "magento/db/password": {
      "display_name": "Magento MySQL password",
      "description": "Password for the Magento MySQL user.",
      "default": "randomly generated",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "magento/admin/email": {
      "display_name": "Magento Admin email",
      "description": "Email address of the Magento Administrator.",
      "default": "webmaster@localhost",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "magento/admin/user": {
      "display_name": "Magento Admin user",
      "description": "User to access Magento Administration panel.",
      "default": "admin",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "magento/admin/password": {
      "display_name": "Magento Admin password",
      "description": "Password for the Magento Administration.",
      "default": "randomly generated",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "magento/nginx/fastcgi_process": {
      "display_name": "FastCGI Process",
      "description": "FastCGI Process, i.e. one of php-fpm pools, see php-fpm cookbook for details.",
      "default": "unix:/var/run/php-fpm-www.sock",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    }
  }
}