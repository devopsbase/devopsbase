{
  "name": "chrome Chef cookbook",
  "chef_cookbook_name": "chrome",
  "revision": "0.4.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/chrome",
    "https://supermarket.chef.io/cookbooks/chrome/download",
    "https://supermarket.chef.io/cookbooks/chrome/versions/0.4.0",
    "https://supermarket.chef.io/cookbooks/chrome/versions/0.4.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/chrome/versions/0.4.0",
    "https://supermarket.chef.io/api/v1/cookbooks/chrome",
    "https://supermarket.chef.io/api/v1/cookbooks/chrome/versions/0.4.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/chrome",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/chrome/versions/0.4.0/download",
  "deprecated": false,
  "created": "2014-10-10T17:01:24.900Z",
  "updated": "2016-10-01T21:18:10.721Z",
  "description": "Installs/Configures Chrome browser",
  "maintainer": {
    "name": "dhoer",
    "email": "dennis.hoer@gmail.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 11,
  "downloads_count": 8250849,
  "downloads_count_revision": 758006,
  "repository_url": "https://github.com/dhoer/chef-chrome",
  "issues_url": "https://github.com/dhoer/chef-chrome/issues",
  "chef_source_url": "https://github.com/dhoer/chef-chrome",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Chrome Cookbook\n\n[![Build Status](https://travis-ci.org/dhoer/chef-chrome.svg)](https://travis-ci.org/dhoer/chef-chrome)\n\nThis cookbook installs Google Chrome browser (https://www.google.com/chrome/) at compile time, provides a library\nmethod to retrieve version installed, and provides a resource to set \n[default user preferences](https://support.google.com/chrome/a/answer/187948?hl=en).\n\n## Requirements\n\nChef 11.14.2 and Ruby 1.9.3 or higher.\n\n### Platform\n\n- Windows Server 2012 R2\n\n### Cookbooks\n\n- windows\n\n## Usage\n\nInclude the default recipe on a node's runlist to ensure that Chrome is installed.\n\nTo get Chrome version installed:\n\n```ruby\nv = chrome_version\n```\n\n### Resources\n\n#### Preferences\n\nManage a template resource for configuring \n[master preferences](http://www.chromium.org/administrators/configuring-other-preferences).\n\n#### Examples\n    \nThe following example would look for a template named `master_preferences.json.erb` in your cookbook.\n\n```ruby\nchrome 'custom_preferences' do\n  params(\n    homepage: 'https://mycompany.com/'\n    import_bookmarks_from_file: 'c:\\path\\to\\bookmarks.html'\n  )\n  action :preferences\nend\n```\n\nThe Chrome cookbook comes with a `master_preferences.json.erb` template as an example. The following parameter is used \nin the template:\n\n- `homepage` - Sets the homepage URL.\n\nTo use the default template preferences, set cookbook to `chrome`, for example:\n\n```ruby\nchrome 'set_user_preferences' do\n  cookbook 'chrome'\n  params(\n    homepage: 'https://www.getchef.com'\n  )\n  action :preferences\nend\n```\n    \nThe parameter specified will be used as:\n\n- `@params[:homepage]`\n\nIn the template, when you write your own, the `@` is significant.\n\n#### Resource Attributes\n\nCurrent attributes used by preferences:\n\n- name - The name of the preference. \n- cookbook - Optional. Cookbook where the source template is. If this is not defined, Chef will use the named template \nin the cookbook where the definition is used.\n- template - Default `master_preferences.json.erb`, source template file.\n- params - Additional parameters, see Examples.\n\n### Attributes\n\n- `node['chrome']['src']` - URI to Google Chrome FTW (MSI installer).\n- `node['chrome']['master_preferences']` - Path to Chrome master_preferences file.\n- `node['chrome']['32bit_only']` - Install only 32-bit browser on 64-bit machines.\n\n## ChefSpec Matchers\n\nThe Chrome cookbook includes custom [ChefSpec](https://github.com/sethvargo/chefspec) matchers you can use to test your \nown cookbooks.\n\nExample Matcher Usage\n\n```ruby\nexpect(chef_run).to preferences_chrome('name').with(\n  params: {\n    homepage: 'https://www.getchef.com'\n  }\n)\n```\n      \nChrome Cookbook Matchers\n\n- preferences_chrome(name)\n\n## Getting Help\n\n- Ask specific questions on [Stack Overflow](http://stackoverflow.com/questions/tagged/chef-chrome).\n- Report bugs and discuss potential features in [Github issues](https://github.com/dhoer/chef-chrome/issues).\n\n## Contributing\n\nPlease refer to [CONTRIBUTING](https://github.com/dhoer/chef-chrome/blob/master/CONTRIBUTING.md).\n\n## License\n\nMIT - see the accompanying [LICENSE](https://github.com/dhoer/chef-chrome/blob/master/LICENSE.md) file for details.\n",
  "requires": [
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/windows",
      "revision": "~> 1.0",
      "self_resolve": true
    }
  ]
}