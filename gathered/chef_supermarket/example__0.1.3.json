{
  "name": "example Chef cookbook",
  "chef_cookbook_name": "example",
  "revision": "0.1.3",
  "uris": [
    "https://supermarket.chef.io/cookbooks/example",
    "https://supermarket.chef.io/cookbooks/example/download",
    "https://supermarket.chef.io/cookbooks/example/versions/0.1.3",
    "https://supermarket.chef.io/cookbooks/example/versions/0.1.3/download",
    "https://supermarket.chef.io/api/v1/cookbooks/example/versions/0.1.3",
    "https://supermarket.chef.io/api/v1/cookbooks/example",
    "https://supermarket.chef.io/api/v1/cookbooks/example/versions/0.1.3/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Test",
    "Type/Devopsware/Integration"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/example",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/example/versions/0.1.3/download",
  "deprecated": false,
  "created": "2016-03-18T22:05:39.914Z",
  "updated": "2016-09-26T04:35:55.438Z",
  "description": "Recipe cookbook that calls Chef resources defined in a separate resource cookbook dependency. Integration tests are in InSpec.",
  "maintainer": {
    "name": "kevindickerson",
    "email": "kevin.dickerson@loom.technology"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 1548,
  "downloads_count_revision": 205,
  "repository_url": "https://github.com/loom-cookbooks/example",
  "issues_url": "https://github.com/loom-cookbooks/example/issues",
  "chef_source_url": "https://github.com/loom-cookbooks/example",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# example\n\n[![Build Status](https://travis-ci.org/kevindickerson-cookbooks/example.svg?branch=master)](https://travis-ci.org/kevindickerson-cookbooks/example)\n\nThis is a simple cookbook that depends on a resource cookbook called [example_resources](https://supermarket.chef.io/cookbooks/example_resources), which defines a simple Chef resource.\n\nThe purpose of this cookbook is to illustrate the relationship between a cookbook that defines a new Chef resource, and another cookbook that consumes it.\n\nIntegration tests are in InSpec. Unit tests are in ChefSpec.\n\n## To test\n1. Install bundled gems using Bundler in context of ChefDK\n1. Converge in context of Bundler and ChefDK\n1. Verify in context of Bundler and ChefDK\n\n```bash\n$ chef exec bundle install\n$ chef exec bundle exec kitchen converge\n$ chef exec bundle exec kitchen verify\n```\n\n## Gemfile\n\nCurrently ChefDK provides Test Kitchen 1.5.0 which doesn't play nice with InSpec.\n\nNote how I lock gem versions using the Gemfile. Run your tests in the context of these `Gemfile` locks, otherwise you will likely see problems [at the time of this writing].\n\nThis is because ChefDK does a shim thing and locks Test Kitchen to 1.5.0, so I use a Gemfile to lock to Test Kitchen 1.6.0.\n\nThe ChefDK shim looks like this for ChefDK 0.15.2 on OS X:\n\n```bash\n$ cat /opt/chefdk/bin/kitchen\n#!/opt/chefdk/embedded/bin/ruby\n#--APP_BUNDLER_BINSTUB_FORMAT_VERSION=1--\nENV[\"GEM_HOME\"] = ENV[\"GEM_PATH\"] = nil unless ENV[\"APPBUNDLER_ALLOW_RVM\"] == \"true\"\ngem \"chef-config\", \"= 12.7.2\"\ngem \"mixlib-config\", \"= 2.2.1\"\ngem \"mixlib-shellout\", \"= 2.2.6\"\ngem \"mixlib-install\", \"= 0.7.1\"\ngem \"net-scp\", \"= 1.2.1\"\ngem \"net-ssh\", \"= 3.0.2\"\ngem \"safe_yaml\", \"= 1.0.4\"\ngem \"thor\", \"= 0.19.1\"\ngem \"test-kitchen\", \"= 1.5.0\"\n\nspec = Gem::Specification.find_by_name(\"test-kitchen\", \"= 1.5.0\")\nbin_file = spec.bin_file(\"kitchen\")\n\nKernel.load(bin_file)\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/example_resources",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}