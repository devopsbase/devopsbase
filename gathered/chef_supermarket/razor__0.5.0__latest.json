{
  "name": "razor Chef cookbook",
  "chef_cookbook_name": "razor",
  "revision": "0.5.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/razor",
    "https://supermarket.chef.io/cookbooks/razor/download",
    "https://supermarket.chef.io/cookbooks/razor/versions/0.5.0",
    "https://supermarket.chef.io/cookbooks/razor/versions/0.5.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/razor/versions/0.5.0",
    "https://supermarket.chef.io/api/v1/cookbooks/razor",
    "https://supermarket.chef.io/api/v1/cookbooks/razor/versions/0.5.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/razor",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/razor/versions/0.5.0/download",
  "deprecated": false,
  "created": "2012-12-27T22:53:20.000Z",
  "updated": "2013-06-13T20:44:49.000Z",
  "description": "Project Razor",
  "maintainer": {
    "name": "fnichol",
    "email": "fnichol@nichol.ca"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 7,
  "downloads_count": 5036795,
  "downloads_count_revision": 1260802,
  "repository_url": "http://bbg-cookbooks.github.io/razor",
  "issues_url": "http://bbg-cookbooks.github.io/razor",
  "chef_source_url": "http://bbg-cookbooks.github.io/razor",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# <a name=\"title\"></a> Razor Chef Cookbook\n\n[![Build Status](https://secure.travis-ci.org/bbg-cookcooks/razor.png?branch=master)](http://travis-ci.org/bbg-cookbooks/razor)\n\n## <a name=\"description\"></a> Description\n\nChef cookbook to install and manage [Razor][razor_site], a power control,\nprovisioning, and management application designed to deploy both bare-metal\nand virtual computer resources. An LWRP is provided to manage OS and\nmicro kernel images.\n\n## <a name=\"usage\"></a> Usage\n\nInclude `recipe[razor]` in your run\\_list to install the Razor service and its\ndependencies. If you wish to modify or alter the details of the installation\n(i.e. using a different mongodb cookbook, installing nodejs from source, etc.),\nthen compose a custom run\\_list of the child recipes described\n[below](#recipes).\n\n## <a name=\"requirements\"></a> Requirements\n\n### <a name=\"requirements-chef\"></a> Chef\n\nTested on 10.14.4 and 11.2 but newer and older version should work just fine. File an\n[issue][issues] if this isn't the case.\n\n### <a name=\"requirements-platform\"></a> Platform\n\nThe following platforms have been tested with this cookbook, meaning that the\nrecipes run on these platforms without error:\n\n* ubuntu (10.04/12.04/12.10)\n\n### <a name=\"requirements-cookbooks\"></a> Cookbooks\n\nThis cookbook depends on the following external cookbooks:\n\n* [build-essential][build_essential_cb]\n* [git][git_cb]\n* [tftp][tftp_cb]\n* [mongodb][mongodb_cb]\n* [postgresql][postgresql_cb]\n* [nodejs][nodejs_cb]\n\n## <a name=\"installation\"></a> Installation\n\nDepending on the situation and use case there are several ways to install\nthis cookbook. All the methods listed below assume a tagged version release\nis the target, but omit the tags to get the head of development. A valid\nChef repository structure like the [Opscode repo][chef_repo] is also assumed.\n\n### <a name=\"installation-community\"></a> From the Opscode Community Site\n\nTo install this cookbook from the Opscode Community Site, use the *knife*\ncommand:\n\n    knife cookbook site install razor\n\n### <a name=\"installation-berkshelf\"></a> Using Berkshelf\n\n[Berkshelf][berkshelf] is a cookbook dependency manager and development\nworkflow assistant. To install Berkshelf:\n\n    cd chef-repo\n    gem install berkshelf\n    berks init\n\nTo use the Opscode Community Site version:\n\n    echo \"cookbook 'razor'\" >> Berksfile\n    berks install\n\nOr to reference the GitHub version:\n\n    repo=\"bbg-cookbooks/razor\"\n    latest_release=$(curl -s https://api.github.com/repos/$repo/git/refs/tags \\\n    | ruby -rjson -e '\n      j = JSON.parse(STDIN.read);\n      puts j.map { |t| t[\"ref\"].split(\"/\").last }.sort.last\n    ')\n    cat >> Berksfile <<END_OF_BERKSFILE\n    cookbook 'razor',\n      :git => 'git://github.com/$repo.git', :branch => '$latest_release'\n    END_OF_BERKSFILE\n    berks install\n\n### <a name=\"installation-librarian\"></a> Using Librarian-Chef\n\n[Librarian-Chef][librarian] is a bundler for your Chef cookbooks.\nTo install Librarian-Chef:\n\n    cd chef-repo\n    gem install librarian\n    librarian-chef init\n\nTo use the Opscode Community Site version:\n\n    echo \"cookbook 'razor'\" >> Cheffile\n    librarian-chef install\n\nOr to reference the GitHub version:\n\n    repo=\"bbg-cookbooks/razor\"\n    latest_release=$(curl -s https://api.github.com/repos/$repo/git/refs/tags \\\n    | ruby -rjson -e '\n      j = JSON.parse(STDIN.read);\n      puts j.map { |t| t[\"ref\"].split(\"/\").last }.sort.last\n    ')\n    cat >> Cheffile <<END_OF_CHEFFILE\n    cookbook 'razor',\n      :git => 'git://github.com/$repo.git', :ref => '$latest_release'\n    END_OF_CHEFFILE\n    librarian-chef install\n\n## <a name=\"recipes\"></a> Recipes\n\n### <a name=\"recipes-default\"></a> default\n\nInstalls the full Razor stack with all dependencies.\n\nMost users will want to use this recipe.\n\n### <a name=\"recipes-tftp\"></a> \\_tftp\n\nInstalls a tftp server. This recipe is included in the\n[default](#recipes-default) recipe.\n\n### <a name=\"recipes-tftp-files\"></a> \\_tftp_files\n\nInstalls files and configuration needed for PXE booting and Razor\nbootstraping. This recipe is included in the [default](#recipes-default)\nrecipe.\n\n### <a name=\"recipes-mongodb\"></a> \\_mongodb\n\nInstalls a MongoDB server (from packages) if the `\"mongo\"` persistance mode is\nselected and the `mongo/local_server` attribute is set to a truthy value\n(otherwise the recipe is effectively skipped). This recipe is included in the\n[default](#recipes-default) recipe.\n\n### <a name=\"recipes-postgresql\"></a> \\_postgresql\n\nInstalls a PostgreSQL server if the `\"postgres\"` persistent mode is selected\nand the `postgres/local_server` attribute is set to a truthy value. Otherwise\nthe PostgreSQL client libraries are installed.  This recipe is included in the\n[default](#recipes-default) recipe.\n\n### <a name=\"recipes-nodejs\"></a> \\_nodejs\n\nInstalls Node.js and npm (from packages). This recipe is included in the\n[default](#recipes-default) recipe.\n\n### <a name=\"recipes-ruby-from-package\"></a> \\_ruby_from_package\n\nInstalls Ruby (from system packages) and the Bundler gem. This recipe is\nincluded in the [default](#recipes-default) recipe.\n\n### <a name=\"recipes-rubygems-from-source\"></a> \\_rubygems_from_source\n\nInstalls Rubygems from source on older Debian/Ubuntu platforms that ship a\ncrippled Rubygems package. This recipe is included in the\n[ruby_from_package](#recipes-ruby-from-package) recipe and will only be used\non Ubuntu 10.04 nodes.\n\n### <a name=\"recipes-app\"></a> \\_app\n\nInstalls and configures the Razor codebase and service. This recipe is\nincluded in the [default](#recipes-default) recipe.\n\n### <a name=\"recipes-add-images\"></a> \\_add_images\n\nInstalls images in the Razor service (driven off the `images` attribute). This\nrecipe is included in the [default](#recipes-default) recipe.\n\n## <a name=\"attributes\"></a> Attributes\n\n### <a name=\"attributes-bind-address\"></a> bind_address\n\nIP address to which the Razor web services are bound.\n\nThe default is set to `node['ipaddress']`.\n\n### <a name=\"attributes-checkin-interval\"></a> checkin_interval\n\nThe micro kernel checkin interval in seconds.\n\nThe default is `60`.\n\n### <a name=\"attributes-persist-mode\"></a> persist_mode\n\nThe persistence mode that Razor will use. Currently the two supported values are `\"mongo\"` and `\"postgres\"`.\n\nThe default is `\"mongo\"`.\n\n**Note:** The is some upstream Razor code changes needed to support PostgreSQL\nauthentication via a username and password. In the meantime, your mileage may\nvary when using the `\"postgres\"` persistence mode.\n\n### <a name=\"attributes-persist-host\"></a> persist_host\n\nThe hostname or IP adrress of the persistence service.\n\nThe default is `\"127.0.0.1\"`.\n\n### <a name=\"attributes-persist-port\"></a> persist_port\n\nThe port number of the persistence service.\n\nThe default depends on which [persist_mode](#attributes-persist-mode) is\nselected:\n\n* `\"mongo\"`: the value set will be the value of `node['mongodb']['port']` if\n  set and falling back to `27017`.\n* `\"postgres\"`: the value set will be the value of\n  `node['postgresql']['config']['port']` if set and falling back to `5432`.\n\n### <a name=\"attributes-persist-username\"></a> persist_username\n\nThe username used when authenticating to the persistence service.\n\nThe default depends on which [persist_mode](#attributes-persist-mode) is\nselected:\n\n* `\"mongo\"`: a value is not set as the default localhost server does not\n  require authentication.\n* `\"postgres\"`: defaults to `\"razor\"`.\n\n### <a name=\"attributes-persist-password\"></a> persist_password\n\nThe password used when authenticating to the persistence service.\n\nThe default depends on which [persist_mode](#attributes-persist-mode) is\nselected:\n\n* `\"mongo\"`: a value is not set as the default localhost server does not\n  require authentication.\n* `\"postgres\"`: defaults to `\"project_razor\"`.\n\n**Note** do not rely on a default password if at all possible. Securing your\npersistence serivce with adequate password strength is your responsibility.\n\n### <a name=\"attributes-persist-timeout\"></a> persist_timeout\n\nThe connection timeout (in secondss) used when communicating with the\npersistence service.\n\nThe default is `10`.\n\n### <a name=\"attributes-mongo-local-server\"></a> mongo/local_server\n\nWhether or not to install a local MongoDB server on this node. If you want\nRazor to use an external MongoDB server then set this value to something\n\"untruthy\" such as `false` or `nil`.\n\nThe default depends on which [persist_mode](#attributes-persist-mode) is\nselected:\n\n* `\"mongo\"`: defaults to `true`.\n* `\"postgres\"`: defaults to `false`.\n\n### <a name=\"attributes-postgres-local-server\"></a> postgres/local_server\n\nWhether or not to install a local PostgreSQL server on this node. If you want\nRazor to use an external PostgreSQL server then set this value to something\n\"untruthy\" such as `false` or `nil`.\n\nThe default depends on which [persist_mode](#attributes-persist-mode) is\nselected:\n\n* `\"mongo\"`: defaults to `false`.\n* `\"postgres\"`: defaults to `true`.\n\n### <a name=\"attributes-images\"></a> images\n\nA Hash of Razor images to be added. The hash key will correspond to the image\n`name` attribute and the value will be a hash of other attributes to be fed\nto the [razor_image](#lwrps-image) LWRP. For example:\n\n    node['razor']['images'] = {\n      'razor-mk' => {\n        'type'    => 'mk',\n        'url'     => 'http://fdqn.com/razor-mk.iso',\n        'action'  => 'add'\n      },\n      'precise64' => {\n        'url'       => 'http://example.com/precise64.iso',\n        'checksum'  => 'abcabc...',\n        'version'   => '12.04'\n      }\n    }\n\nThe default is an empty hash: `Hash.new`.\n\n### <a name=\"attributes-ruby-system-packages\"></a> ruby_system_packages\n\nAn Array of system packages which will install the Ruby runtime. The\ndefaults are set automatically based on platform and platform\\_version but\ncan be overridden in needed.\n\n### <a name=\"attributes-npm-packages\"></a> npm_packages\n\nAn Array of npm packages to be installed. The defaults are set automatically\nbut can be overridden in needed.\n\n### <a name=\"attributes-install-path\"></a> install_path\n\nThe install base path of the Razor codebase.\n\nThe default is `\"/opt/razor\"`.\n\n### <a name=\"attributes-bundle-cmd\"></a> bundle_cmd\n\nThe bundle command which will be used to install Ruby gems.\n\nThe default is `\"bundle\"` (using `$PATH` lookup).\n\n### <a name=\"attributes-npm-cmd\"></a> npm_cmd\n\nThe npm command which will be used to install npm packages.\n\nThe default is `\"npm\"` (using `$PATH` lookup).\n\n### <a name=\"attributes-app-git-url\"></a> app/git_url\n\nThe Git URL for the Razor codebase.\n\nThe default is `\"https://github.com/puppetlabs/Razor.git\"`.\n\n### <a name=\"attributes-app-git-rev\"></a> app/git_rev\n\nThe Git reference/branch to check out.\n\nThe default is `\"0.9.0\"`. Valid values could be Git SHA hashes, branch names,\nand `\"master\"` for tracking development.\n\n### <a name=\"attributes-rubygems-source-version\"></a> rubygems_source/version\n\nThe version of Rubygems to be compiled (when necessary).\n\nThe default is `\"1.8.24\"`.\n\n### <a name=\"attributes-rubygems-source-url\"></a> rubygems_source/url\n\nThe URL containing Rubygems source which will be compiled (when necessary).\n\nThe default is set based on the Rubygems version attribute above.\n\n### <a name=\"attributes-mongodb-address\"></a> \\[deprecated\\] mongodb_address\n\nIP address which has a running MongoDB service.\n\nThe default is `\"127.0.0.1\"`.\n\n**Note** this value will set the [persist_host](#attributes-persist-host)\nattribute for backwards compatibility. This attribute will be removed in a 1.0\nrelease so please migrate to using `persist_host`.\n\n## <a name=\"lwrps\"></a> Resources and Providers\n\n### <a name=\"lwrps-image\"></a> razor_image\n\n#### <a name=\"lwrps-image-actions\"></a> Actions\n\n<table>\n  <thead>\n    <tr>\n      <th>Action</th>\n      <th>Description</th>\n      <th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>add</td>\n      <td>Add the microkernel or operating system image to razor.</td>\n      <td>Yes</td>\n    </tr>\n  </tbody>\n</table>\n\n#### <a name=\"lwrps-image-attributes\"></a> Attributes\n\n<table>\n  <thead>\n    <tr>\n      <th>Attribute</th>\n      <th>Description</th>\n      <th>Default Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>name</td>\n      <td>\n        <b>Name attribute:</b> The logical name to use for the image.\n      </td>\n      <td><code>nil</code></td>\n    </tr>\n    <tr>\n      <td>type</td>\n      <td>\n        The type of image. Valid values are <code>\"mk\"</code> for micro kernel\n        images and <code>\"os\"</code> for operating system images.\n      </td>\n      <td><code>\"os\"</code></td>\n    </tr>\n    <tr>\n      <td>url</td>\n      <td>\n        HTTP URL containing the image ISO.\n      </td>\n      <td><code>nil</code></td>\n    </tr>\n    <tr>\n      <td>version</td>\n      <td>\n        The version to use for <code>\"os\"</code> images only.\n      </td>\n      <td><code>nil</code></td>\n    </tr>\n    <tr>\n      <td>checksum</td>\n      <td>\n        An optional SHA-256 checksum for the ISO (for added verification).\n      </td>\n      <td><code>nil</code></td>\n    </tr>\n    <tr>\n      <td>iso_path</td>\n      <td>\n        An optional path where the downloaded ISO image will be stored before\n        being added to Razor. If no value is provided a path inside the\n        <code>Chef::Config[:file_cache_path]</code> will be computed.\n      </td>\n      <td><code>nil</code></td>\n    </tr>\n  </tbody>\n</table>\n\n#### <a name=\"lwrps-image-examples\"></a> Examples\n\n##### Adding A Micro Kernel Image\n\n    razor_image \"rz_mk_prod-image.0.9.1.6\" do\n      type      \"mk\"\n      url       \"http://mirror.example.com/images/rz_mk_prod-image.0.9.1.6.iso\"\n      checksum  \"aljdflkjflajkf...\"\n      action    :add\n    end\n\n    razor_image \"rz_mk_prod-image.0.9.1.6\" do\n      type  \"mk\"\n      url   \"http://mirror.example.com/images/rz_mk_prod-image.0.9.1.6.iso\"\n    end\n\n**Note:** the add action is default, so the second example is a more common\nusage.\n\n##### Adding An Operating System Image\n\n    razor_image \"precise64\" do\n      type      \"os\"\n      url       \"http://mirror.example.com/images/ubuntu-amd64-12.04.iso\"\n      checksum  \"lkjdfoidadba...\"\n      version   \"12.04\"\n      iso_path  \"/data/razor_images\"\n    end\n\n    razor_image \"sl64-6.3\" do\n      url     \"http://mirror.example.com/images/scientific-amd64-6.3.iso\"\n      version 6.3\n    end\n\n**Note:** the default for type is `\"os\"` so this can be omitted in most cases.\nThe version attribute can also be a Float.\n\n## <a name=\"development\"></a> Development\n\n* Source hosted at [GitHub][repo]\n* Report issues/Questions/Feature requests on [GitHub Issues][issues]\n\nPull requests are very welcome! Make sure your patches are well tested.\nIdeally create a topic branch for every separate change you make.\n\n## <a name=\"license\"></a> License and Author\n\nAuthor:: [Fletcher Nichol][fnichol] (<fnichol@nichol.ca>)\n\nCopyright 2012, Blue Box Group, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n[berkshelf]:    http://berkshelf.com/\n[build_essential_cb]: http://community.opscode.com/cookbooks/build-essential\n[chef_repo]:    https://github.com/opscode/chef-repo\n[cheffile]:     https://github.com/applicationsonline/librarian/blob/master/lib/librarian/chef/templates/Cheffile\n[git_cb]:       http://community.opscode.com/cookbooks/git\n[kgc]:          https://github.com/websterclay/knife-github-cookbooks#readme\n[librarian]:    https://github.com/applicationsonline/librarian#readme\n[mongodb_cb]:   http://community.opscode.com/cookbooks/mongodb\n[nodejs_cb]:    http://community.opscode.com/cookbooks/nodejs\n[postgresql_cb]: http://community.opscode.com/cookbooks/postgresql\n[razor_site]:   https://github.com/puppetlabs/Razor\n[tftp_cb]:      http://community.opscode.com/cookbooks/tftp\n\n[fnichol]:      https://github.com/fnichol\n[repo]:         https://github.com/bbg-cookbooks/razor\n[issues]:       https://github.com/bbg-cookbooks/razor/issues\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/build-essential",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/git",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/tftp",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mongodb",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/postgresql",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/database",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nodejs",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}