{
  "name": "pki Chef cookbook",
  "chef_cookbook_name": "pki",
  "revision": "0.0.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/pki",
    "https://supermarket.chef.io/cookbooks/pki/download",
    "https://supermarket.chef.io/cookbooks/pki/versions/0.0.1",
    "https://supermarket.chef.io/cookbooks/pki/versions/0.0.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/pki/versions/0.0.1",
    "https://supermarket.chef.io/api/v1/cookbooks/pki",
    "https://supermarket.chef.io/api/v1/cookbooks/pki/versions/0.0.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/pki",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/pki/versions/0.0.1/download",
  "deprecated": false,
  "created": "2011-11-01T15:52:09.000Z",
  "updated": "2013-03-11T19:16:42.000Z",
  "description": "Installs/Configures pki",
  "maintainer": {
    "name": "someara",
    "email": "someara@afistfulofservers.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 3767020,
  "downloads_count_revision": 1255656,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "DESCRIPTION:\n============\nProof of concept PKI implementation, powered by inter-node convergence and stateful resource providers.\n\nREQUIREMENTS\n============\nRHEL6/Centos6 or higher\nhostname resolution taken care of earlier in the runlist (dns, etchosts)\n\nBootstrapped with\n-r 'recipe[selinux::disabled],recipe[yum::epel],recipe[etchosts],recipe[pki::server]' \n-r 'recipe[selinux::disabled],recipe[yum::epel],recipe[etchosts],recipe[pki::client]' \n\nATTRIBUTES\n============\nnode[:pki][:openssldir]\n\nUSAGE\n============\n\nClients check to see if they have an SSL keypair  for their FQDN.\nIf not, pki_servercert is called, which generates a private key and a CSR.\nThe node then posts it's CSR as a node attribute\n\nWhen the server side runs, it searches for a list of clients with the pki csr attribute\nset. When it finds a CSR, it signs it and places the resulting public key in a directory exposed by rsync. \nSince these are public keys, there are no security concerns here.\n\nWhen a client is satisfied about its certificate, it will remove the attribute.\n\n"
}