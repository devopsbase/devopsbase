{
  "name": "iisposh Chef cookbook",
  "chef_cookbook_name": "iisposh",
  "revision": "2.2.5",
  "uris": [
    "https://supermarket.chef.io/cookbooks/iisposh",
    "https://supermarket.chef.io/cookbooks/iisposh/download",
    "https://supermarket.chef.io/cookbooks/iisposh/versions/2.2.5",
    "https://supermarket.chef.io/cookbooks/iisposh/versions/2.2.5/download",
    "https://supermarket.chef.io/api/v1/cookbooks/iisposh/versions/2.2.5",
    "https://supermarket.chef.io/api/v1/cookbooks/iisposh",
    "https://supermarket.chef.io/api/v1/cookbooks/iisposh/versions/2.2.5/download"
  ],
  "labels": [
    "Chef cookbook",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Application Server/IIS"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/iisposh",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/iisposh/versions/2.2.5/download",
  "deprecated": false,
  "created": "2015-12-04T02:11:25.084Z",
  "updated": "2016-01-21T15:59:57.730Z",
  "description": "Installs/Configures IIS Features",
  "maintainer": {
    "name": "carpnick",
    "email": "darrellj@ebsco.com"
  },
  "license": "All rights reserved",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 909,
  "downloads_count_revision": 221,
  "repository_url": "https://github.com/ebsco/iisposh",
  "issues_url": "https://github.com/ebsco/iisposh",
  "chef_source_url": "https://github.com/ebsco/iisposh",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nManage websites, application pools, web applications, and virtual directories in IIS 7.0,7.5,8.0\n\nRequirements\n============\n\nPlatforms\n---------\n\n* Windows Server 2008 (R1, R2)\n* Windows Server 2012 (R1, R2) (Untested)\n\n\nResource/Provider\n=================\n\niisposh_pool\n----------\n\nManage application pools in IIS\n\n### Actions\n\n- :create: - creates an application pool\n- :config: - configure an application pool \n- :delete: - delete an existing application pool\n- :start: - start an application pool\n- :stop: - stop an application pool\n- :restart: - restart an application pool\n\n### Attribute Parameters\n\n- name: name of application pool\n- properties: List of all properties to be set for application pool\n\n### Examples\n\n\t# Create an application pool named TestPool with the following properties set\n\t# recycling.periodicRestart.privatememory\" = 4, processmodel.maxprocesses = 3, managedPipeLineMode = Integrated, managedRunTimeVersion = v4.0\n\t# processModel.IdentityType = SpecificUser, Autostart = True, processmodel.username = mydomain\\username, processmodel.password = mypassword, recycling.logEventOnRecycle = Time,Requests,IsapiUnhealthy,OnDemand,ConfigChange\n\n\tiisposh_pool 'pool' do \n\t\tname \"TestPool\"\n\t\tproperties(\n\t\t\t\t\"recycling.periodicRestart.privatememory\" => 4,\n\t\t\t\t\"processmodel.maxprocesses\" => 3,\n\t\t\t\t\"managedPipeLineMode\" => \"Integrated\",\n\t\t\t\t\"managedRunTimeVersion\" => \"v2.0\",\n\t\t\t\t\"processModel.IdentityType\" => \"SpecificUser\",\n\t\t\t\t\"autostart\" => \"True\",\n\t\t\t\t\"processmodel.username\" => \"mydomain\\\\username\",\n\t\t\t\t\"processmodel.password\"\t=> \"mypassword\",\n\t\t\t\t\"recycling.logEventOnRecycle\" => \"Time,Requests,IsapiUnhealthy,OnDemand,ConfigChange\"\t\n\t\t)\n\t\taction :create\n\tend\n\n\t# Delete the TestPool Application Pool\n\t\n\tiisposh_pool 'pool' do \n\t\tname \"TestPool\"\n\t\taction :delete\n\tend\n\n\n\niisposh_website\n---------\n\nAllows easy management of IIS Websites\n\n### Actions\n\n- :create: - creates a new website\n- :config: - configure a website\n- :delete: - delete an existing website\n- :start: - start a website\n- :stop: - stop a website\n- :restart: - restart a website\n\n### Attribute Parameters\n\n- name: name of website\n- path: Physical path of website files\n- pool: Application pool of the website\n- properties: List of all properties to be set for website\n- bindings: Set website web bindings [[\"protocol\", \"port#\",\"hostheader\", \"IPAddress\"]]\n- powershell_code: String used to convert ruby hashtable to powershell hashtable\n- binding_string: String used to convert ruby array into format usable by powersehll\n\n### Examples\n  # create a new website at the location C:\\inetpub\\wwwroot\\testsite with default binding of port 80\n\t\n\tiisposh_website 'website' do \n\t\tname \"TestSite\"\n\t\taction :create\n\tend\n  \n\t# create a new website at the location C:\\inetpub\\wwwroot\\testsite with the following properties set\n\t# name = TestSite, applicationPool = TestPool, ServerAutoStart = True, logFile.logFormat = W3C, logfile.deirectory = c:\\weblogs, logfile.logExtFileFalgs = Date,Time,ClientIP,ServerIP,Method,UriStem,UriQuery,HttpStatus,BytesSent,TimeTaken,UserAgent\n\t# bindings = http,3030\n\t\n\tiisposh_website 'website' do \n\t\tname \"TestSite\"\n\t\tbindings [[\"http\", \"3030\", \"\", \"\"]]\n\t\tproperties(\n\t\t\t\t\"applicationPool\" => \"TestPool\",\n\t\t\t\t\"physicalPath\"\t=> \"c:\\\\inetpub\\\\wwwroot\\\\testsite\",\n\t\t\t\t\"ServerAutoStart\" => \"True\",\n\t\t\t\t\"logfile.logformat\" => \"W3C\",\n\t\t\t\t\"logfile.directory\" => \"c:\\\\weblogs\",\n\t\t\t\t\"logfile.logExtFileFlags\" => \"Date,Time,ClientIP,ServerIP,Method,UriStem,UriQuery,HttpStatus,BytesSent,TimeTaken,UserAgent\"\n\t\t)\n\t\taction :create\n\tend\n\t\n\t# Delete the TestSite website\n\t\n\t\tiisposh_website 'website' do \n\t\t\tname \"TestSite\"\n\t\t\taction :delete\n\t\tend\n\t\t\n\t# configure a website with the following properties\n\t# name = TestSite, applicationPool = TestPool, ServerAutoStart = True, logFile.logFormat = W3C, logfile.deirectory = c:\\weblogs, logfile.logExtFileFalgs = Date,Time,ClientIP,ServerIP,Method,UriStem,UriQuery,HttpStatus,BytesSent,TimeTaken,UserAgent\n\t# bindings = http,3030\t\n\t\t\n\tiisposh_website 'website' do \n\t\tname \"TestSite\"\n\t\tbindings [[\"http\", \"3030\", \"\", \"\"]]\n\t\tproperties(\n\t\t\t\t\"applicationPool\" => \"TestPool\",\n\t\t\t\t\"physicalPath\"\t=> \"c:\\\\inetpub\\\\wwwroot\\\\testsite\",\n\t\t\t\t\"ServerAutoStart\" => \"True\",\n\t\t\t\t\"logfile.logformat\" => \"W3C\",\n\t\t\t\t\"logfile.directory\" => \"c:\\\\weblogs\",\n\t\t\t\t\"logfile.logExtFileFlags\" => \"Date,Time,ClientIP,ServerIP,Method,UriStem,UriQuery,HttpStatus,BytesSent,TimeTaken,UserAgent\"\n\t\t)\n\t\taction :config\n\tend\t\n\n\t# configure a website with the following properties\n\t# name = TestSite, applicationPool = TestPool, ServerAutoStart = True, logFile.logFormat = W3C, logfile.deirectory = c:\\weblogs, logfile.logExtFileFalgs = Date,Time,ClientIP,ServerIP,Method,UriStem,UriQuery,HttpStatus,BytesSent,TimeTaken,UserAgent\n\t\t\n\tiisposh_website 'website' do \n\t\tname \"TestSite\"\n\t\tproperties(\n\t\t\t\t\"applicationPool\" => \"TestPool\",\n\t\t\t\t\"physicalPath\"\t=> \"c:\\\\inetpub\\\\wwwroot\\\\testsite\",\n\t\t\t\t\"ServerAutoStart\" => \"True\",\n\t\t\t\t\"logfile.logformat\" => \"W3C\",\n\t\t\t\t\"logfile.directory\" => \"c:\\\\weblogs\",\n\t\t\t\t\"logfile.logExtFileFlags\" => \"Date,Time,ClientIP,ServerIP,Method,UriStem,UriQuery,HttpStatus,BytesSent,TimeTaken,UserAgent\"\n\t\t)\n\t\taction :config\n\tend\t\n  \n\t# restart the TestSite website\n\t\n\tiisposh_website 'website' do \n\t\tname \"TestSite\"\n\t\taction :resetart\n\tend\n\t\n\t\niisposh_webapp\n------------\nManage web applications in IIS\n\n### Actions\n\n- :create: - create a web application\n- :config: - configure a web application\n- :delete: - delete a web application\n\n### Attribute Parameters\n\n- name: Name of web application\n- path: Physical Path of web application files\n- site: Name of the website in which the web application belongs to\n- pool: Name of the Application Pool the web application runs under\n- properties: List of properties to be set for the application pool\n\n### Examples\n\n\t# Create a web application named \"TestApp\" located at \"c:\\temp\" under the \"TestSite\" running under the \"TestPool\" application pool\n\t\n\tiisposh_webapp 'webapp' do \n\t\tname \"TestApp\"\n\t\tpool \"TestPool\"\n\t\tsite \"TestSite\"\n\t\tpath \"c:\\\\temp\"\n\t\tproperties(\n\t\t\t\"username\" => \"\",   # example:  domain\\\\username\n\t\t\t\"password\" => \"\"\n\t\t)\n\t\taction :create \n\tend\n\t\n\t# Delete the \"TestApp\" web application under the \"TestSite\" website\n\t\n\tiisposh_webapp 'webapp' do \n\t\tname \"TestApp\"\n\t\tsite \"TestSite\"\n\t\taction :delete \n\tend\n\t\n\niisposh_vdir\n----------\nManage Virtual Directories in  IIS\n\n### Actions\n\n- :create: - create a virtual directory\n- :config: - configure a virtual directory\n- :delete: - delete a virtual directory\n\n### Attribute Parameters\n\n- name: Name of virtual directory\n- path: Physical Path of virtual directory files\n- site: Name of the website in which the virtual directory belongs to\n- properties: List of properties to be set for the virutal directory\n\n### Examples\n\n\t# Create a virtual directory named \"TestDir\" under the \"TestSite\" website with a path of c:\\Temp with the following properties set\n\t# logonMetohod = ClearText, AllowSubDir Config = True\n\t\n\tiisposh_vdir 'vdir' do \n\t\tname \"Testdir\"\n\t\tsite \"TestSite\"\n\t\tpath \"c:\\\\temp\"\n\t\tproperties(\n\t\t\t\"logonMethod\" => \"ClearText\",\n\t\t\t\"allowSubDirConfig\" => \"True\"\n\t\t\t\n\t\t)\n\t\t\n\t\taction :create\n\tend\n \n\t# Delete the \"TestDir\" Virtual Director in the \"TestSite\" website\n\t\n\tiisposh_vdir 'vdir' do \n\t\tname \"Testdir\"\n\t\tsite \"TestSite\"\n\t\taction :delete\n\tend\n\t\nHelpers\n----------\n * See powershell folder\n   * Wrote a powershell script to help discover settings of currently deployed components in IIS.  Pools, WebApps, Sites etc\n * files\\default\\test.ps1\n   * To aid in testing of powershell outside of chef and LWRPs, test.ps1 was created to help test the different function calls.\n\nAuthor\n------\n\n* Author:: Darrell Johnson (<darrellj@ebsco.com>)\t\n* Author:: Nicholas Carpenter (<ncarpenter@ebsco.com>)\t",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/windows_feature",
      "revision": "~> 1.0",
      "self_resolve": true
    }
  ]
}