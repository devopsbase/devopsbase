{
  "name": "system Chef cookbook",
  "chef_cookbook_name": "system",
  "revision": "0.11.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/system",
    "https://supermarket.chef.io/cookbooks/system/download",
    "https://supermarket.chef.io/cookbooks/system/versions/0.11.2",
    "https://supermarket.chef.io/cookbooks/system/versions/0.11.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/system/versions/0.11.2",
    "https://supermarket.chef.io/api/v1/cookbooks/system",
    "https://supermarket.chef.io/api/v1/cookbooks/system/versions/0.11.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Operating Systems & Virtualization",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/system",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/system/versions/0.11.2/download",
  "deprecated": false,
  "created": "2013-10-18T04:38:35.000Z",
  "updated": "2016-09-21T05:09:45.226Z",
  "description": "Installs/Configures system elements such as the hostname and timezone.",
  "maintainer": {
    "name": "xhost",
    "email": "cookbooks@xhost.com.au"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 25,
  "downloads_count": 8642916,
  "downloads_count_revision": 1132,
  "repository_url": "https://github.com/xhost-cookbooks/system",
  "issues_url": "https://github.com/xhost-cookbooks/system/issues",
  "chef_source_url": "https://github.com/xhost-cookbooks/system",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "system Cookbook\n===============\n\n[![Cookbook Version](https://img.shields.io/badge/cookbook-v0.11.2-blue.svg)](https://supermarket.chef.io/cookbooks/system)\n[![Dependency Status](https://gemnasium.com/xhost-cookbooks/system.svg)](https://gemnasium.com/xhost-cookbooks/system)\n[![Code Climate](https://codeclimate.com/github/xhost-cookbooks/system.png)](https://codeclimate.com/github/xhost-cookbooks/system)\n[![Test Coverage](https://codeclimate.com/github/xhost-cookbooks/system/badges/coverage.svg)](https://codeclimate.com/github/xhost-cookbooks/system)\n[![License](https://img.shields.io/badge/license-Apache_2-blue.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n[![Join the chat at https://gitter.im/xhost-cookbooks/system](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/xhost-cookbooks/system?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nBuild Status\n------------\n\n|           |    Travis CI    |\n|-----------|-----------------|\n| **Master** |[![Build status](https://secure.travis-ci.org/xhost-cookbooks/system.png?branch=master)](http://travis-ci.org/xhost-cookbooks/system)|\n| **Latest Release** ([**0.11.2**](https://github.com/xhost-cookbooks/system/releases/tag/v0.11.2)) |[![Build status](https://secure.travis-ci.org/xhost-cookbooks/system.png?branch=v0.11.2)](https://travis-ci.org/xhost-cookbooks/system/builds/161531274)|\n\nOverview\n--------\n\nThis cookbook is designed to provide a set of recipes and LWRPs for managing the core properties of a host's system.\n\nCurrently the main features (from a high level) include:\n- setting the hostname/domain name\n- setting the default NetBIOS name and Workgroup (OS X only)\n- setting the timezone\n- configuring the system-wide profile (`/etc/profile`)\n- managing packages (install, uninstall & upgrade)\n\nAd-hoc style operational tasks such as reboot and shutdown are also implemented by recipes.\n\nGet it now from your (local) [supermarket](https://supermarket.chef.io/cookbooks/system)!\n\n\nRequirements\n------------\n- Chef >= 11.12.0\n- Ruby >= 1.9\n\n### Platforms Supported\n- Debian, Ubuntu\n- CentOS, RHEL, Fedora\n- Arch Linux\n- FreeBSD\n- Mac OS X\n\n### Cookbooks\n- apt\n- cron\n- hostsfile\n\n\nAttributes\n----------\n\nSee `attributes/default.rb` for default values.\n\n- `node['system']['timezone']` - the system timezone to set, default `Etc/UTC`\n- `node['system']['short_hostname']` - the short hostname to set on the node, default is `node['hostname']`\n- `node['system']['domain_name']` - the domain name to set on the node, default `localdomain`\n- `node['system']['netbios_name']` - the NetBIOS name to set on the node, default is `node['system']['short_hostname']` upper-cased (OS X only)\n- `node['system']['workgroup']` - the NetBIOS workgroup name to set on the node, default is `WORKGROUP` (OS X only)\n- `node['system']['static_hosts']` - a hash of static hosts to add to `/etc/hosts`\n- `node['system']['upgrade_packages']` - whether to upgrade the system's packages, default `true`\n- `node['system']['upgrade_packages_at_compile']` - whether upgrade of the system's packages in Chef's compilation phase, default `true`\n- `node['system']['enable_cron']` - whether to include the cron recipe, default `true`\n- `node['system']['packages']['install']` - an array of packages to install (also supports remote package URLs)\n- `node['system']['packages']['install_compile_time']` - an array of packages to install in Chef's compilation phase (also supports remote package URLs)\n- `node['system']['manage_hostsfile']` - whether or not to manage `/etc/hostsfile` (in any way)\n- `node['system']['permanent_ip']` - whether the system has a permenent IP address (http://www.debian.org/doc/manuals/debian-reference/ch05.en.html#_the_hostname_resolution)\n- `node['system']['primary_interface']` - Specify primary network interface, used by hostname to set the correct address in hostsfile, default is `node['network']['default_interface']`\n- `node['system']['delay_network_restart']` - whether to trigger restart event as delayed. false causes an immediate restart instead. default `true`\n\nAttributes (all arrays) to manipulate the system-wide profile (usually for `/etc/profile`):\n\n- `node['system']['profile']['path']` - override the default `PATH` for the system\n- `node['system']['profile']['path_append']` - append more paths to the base path\n- `node['system']['profile']['path_prepend']` - prepend more paths to the base path\n- `node['system']['profile']['append_scripts']` - an array of shell scripts to be appended to the system profile (include raw scripts without shebangs)\n\n\nUsage\n-----\n\n###Recipes\n\n#####`system::default`\nIncludes the `system::update_package_list`, `system::timezone` and `system::hostname` recipes only.\n\nNOTE: if applicable, the system's package manager's package list will be updated, but installed packages won't be upgraded. To upgrade the system's packages, include the `system::upgrade_packages` recipe in your run_list or role.\n\n#####`system::hostname`\nWhen using resources that reference `node['fqdn']` in variables or attribute values, note that you will\nneed to lazy load to get the new hostname that is being set.\n\nUse with variables:\n```\ntemplate '/tmp/foobar.txt' do\n  source 'use_fqdn_in_variable.erb'\n  variables lazy {\n    {\n      fqdn: node['fqdn'],\n      foo: bar\n    }\n  }\nend\n```\n\nUse with a resource attribute:\n```\nlog 'lazy_log_fqdn' do\n  message lazy { node['fqdn'] }\n  level :debug\nend\n```\n\n#####`system::profile`\nManages `/etc/profile` with optional shell scripts to append from `node['system']['profile']['append_scripts']`,\nconfigure `PATH` requirements per attributes documented above.\n\n#####`system::install_packages`\nInstalls a list of system packages as specified in the `node['system']['packages']['install']` attribute.\nWill also install packages provided at compile time from within `node['system']['packages']['install_compile_time']`.\n\n#####`system::uninstall_packages`\nUninstalls a list of system packages as specified in the `node['system']['packages']['uninstall']` attribute.\nWill also uninstall packages provided at compile time from within `node['system']['packages']['uninstall_compile_time']`.\n\n#####`system::reboot`\nAttempts to gracefully reboot the operating system.\n\n#####`system::shutdown`\nAttempts to gracefully shutdown the operating system.\n\n#####`system::timezone`\nSets the timezone of the system.\n\n#####`system::update_package_list`\nUpdates the local package manager's package list.\n\n#####`system::upgrade_packages`\nUpgrades all installed packages of the local package manager.\n\n###LWRPs\n\nThe cookbook currently provides 3 Lightweight Resource Providers that can be used in your own recipes\nby depending on this cookbook. Recipes are provided interfacing each of these for convenience but\nyou may find them useful in your own cookbook usage.\n\n####`system_hostname`\n\n|  Attribute         | Description                                   |  Example           |  Default  |\n|--------------------|-----------------------------------------------|--------------------|-----------|\n|  short_hostname    | The short hostname for the system             |  `starbug`         |  nil      |\n|  domain_name       | The domain name for the system                |  `reddwarf.space`  |  nil      |\n|  static_hosts      | An array of static hosts to add to /etc/hosts |  `[{ '95.211.29.66' => 'supermarket.io' }, { '184.106.28.82' => 'chef.io' }]` |  nil      |\n\n#####Examples\n\nSet the hostname providing the desired FQDN:\n```\nsystem_hostname 'starbug.reddwarf.space'\n```\n\nProviding the short hostname as the resource name and explicitly defining the domain name\n(alas this is a bit verbose), as well as some static hosts:\n```\nsystem_hostname 'starbug' do\n  short_hostname 'starbug'\n  domain_name 'reddwarf.space'\n  static_hosts(({ '95.211.29.66' => 'supermarket.io',\n                  '184.106.28.82' => 'chef.io' }))\nend\n```\nThe `system::hostname` recipe implements it this way as `short_hostname` and `domain_name`\nare the exposed cookbook attributes.\n\n####`system_timezone`\n\n|  Attribute         | Description                                   |  Example             |  Default  |\n|--------------------|-----------------------------------------------|----------------------|-----------|\n|  timezone          | The timezone to set the system to             |  `Australia/Sydney`  | `Etc/UTC` |\n\n#####Example\n\n```\nsystem_timezone 'Australia/Sydney'\n```\n\n####`system_packages`\n\n|  Attribute         | Description                                   |  Example          |  Default    |\n|--------------------|-----------------------------------------------|-------------------|-------------|\n|  packages          | The timezone to set the system to             |  `%w(wget curl)`  | `[]`        |\n|  phase             | The Chef phase to download the packages in    |  `:compile  `     | `:converge` |\n\n#####Example\n\n```\nsystem_packages %w(wget curl).join(',') do\n  packages %w(wget curl)\n  phase :compile\nend\n```\n\n####`system_profile`\n\n|  Attribute         | Description                                           |  Example               |  Default        |\n|--------------------|-------------------------------------------------------|------------------------|-----------------|\n|  filename          | The system profile file to manage                     |  `/etc/profile`        |  `/etc/profile` |\n|  template          | The cookbook erb template for the profile file        |  `custom_profile.erb`  |  `profile.erb`  |\n|  path              | An environment search path to prepend to the default  |  `/opt/local/bin`      |  `[]`           |\n|  append_scripts    | Arbitrary scripts to append to the profile            |  `['export FOO=bar']`  |  `nil`          |\n\n#####Example\n\n```\nsystem_profile '/etc/profile' do\n  path ['/opt/local/bin', '/opt/foo/bin']\n  append_scripts ['export FOO=bar']\nend\n```\n\n### Publish to Chef Supermarket\n\n    $ cd ..\n    $ knife cookbook site share system \"Operating Systems & Virtualization\" -o . -u xhost -k ~/.chef/xhost.pem\n\n\nLicense and Authors\n-------------------\n- Author: Chris Fordham (<chris@fordham-nagy.id.au>)\n\n```text\nCopyright 2011-2016, Chris Fordham\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "arch",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "mac_os_x",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/cron",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/hostsfile",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "system::default": "Sets the system's hostname and timezone, updates the system's installed packages.",
    "system::timezone": "Sets the system's' timezone.",
    "system::hostname": "Sets the system's hostname.",
    "system::profile": "Manage the system's profile such as search path and scripts (/etc/profile).",
    "system::upgrade_packages": "Upgrades the system's installed packages.",
    "system::update_package_list": "Updates the system's list of packages in the package manager's cache.",
    "system::install_packages": "Installs packages to the system with it's native package manager.",
    "system::reboot": "Attempts to gracefully reboot the operating system.",
    "system::shutdown": "Attempts to gracefully shutdown the operating system."
  },
  "parameters": {
    "system/timezone": {
      "display_name": "Timezone",
      "description": "The system timezone, which must be a valid zoneinfo/tz database entry.",
      "required": "optional",
      "default": "UTC",
      "recipes": [
        "system::timezone",
        "system::default"
      ],
      "choice": [
        "Africa/Casablanca",
        "America/Bogota",
        "America/Buenos_Aires",
        "America/Caracas",
        "America/La_Paz",
        "America/Lima",
        "America/Mexico_City",
        "Asia/Almaty",
        "Asia/Baghdad",
        "Asia/Baku",
        "Asia/Bangkok",
        "Asia/Calcutta",
        "Asia/Colombo",
        "Asia/Dhaka",
        "Asia/Hong_Kong",
        "Asia/Jakarta",
        "Asia/Kabul",
        "Asia/Kamchatka",
        "Asia/Karachi",
        "Asia/Kathmandu",
        "Asia/Magadan",
        "Asia/Muscat",
        "Asia/Riyadh",
        "Asia/Seoul",
        "Asia/Singapore",
        "Asia/Tashkent",
        "Asia/Tbilisi",
        "Asia/Tehran",
        "Asia/Tokyo",
        "Asia/Vladivostok",
        "Asia/Yakutsk",
        "Asia/Yekaterinburg",
        "Atlantic/Azores",
        "Atlantic/Cape_Verde",
        "Australia/Adelaide",
        "Australia/Darwin",
        "Australia/Perth",
        "Australia/Sydney",
        "Brazil/Acre",
        "Brazil/DeNoronha",
        "Brazil/East",
        "Brazil/West",
        "Canada/Atlantic",
        "Canada/Newfoundland",
        "Europe/Brussels",
        "Europe/Copenhagen",
        "Europe/Kaliningrad",
        "Europe/Lisbon",
        "Europe/London",
        "Europe/Helsinki",
        "Europe/Madrid",
        "Europe/Moscow",
        "Europe/Paris",
        "Pacific/Auckland",
        "Pacific/Fiji",
        "Pacific/Guam",
        "Pacific/Kwajalein",
        "Pacific/Midway",
        "US/Alaska",
        "US/Central",
        "US/Eastern",
        "US/Hawaii",
        "US/Mountain",
        "US/Pacific",
        "US/Samoa",
        "GMT",
        "UTC",
        "localtime"
      ],
      "calculated": false,
      "type": "string",
      "mapping": "cookbook_attribute"
    },
    "system/short_hostname": {
      "display_name": "Short Hostname",
      "description": "The short hostname that you would like this node to have, e.g. kryten.",
      "required": "recommended",
      "default": "localhost",
      "recipes": [
        "system::hostname",
        "system::default"
      ],
      "choice": [],
      "calculated": false,
      "type": "string",
      "mapping": "cookbook_attribute"
    },
    "system/domain_name": {
      "display_name": "Domain Name",
      "description": "The domain name that you would like this node to have, e.g. domain.suf. Note: Only set a valid domain name to satisfy the resolution of a FQDN; use ignore:ignore for no domain name.",
      "required": "recommended",
      "default": "localdomain",
      "recipes": [
        "system::hostname",
        "system::default"
      ],
      "choice": [],
      "calculated": false,
      "type": "string",
      "mapping": "cookbook_attribute"
    },
    "system/netbios_name": {
      "display_name": "NetBIOS Name",
      "description": "The NetBIOS name to set on the node, default is the value of node/short_hostname upper-cased (OS X only).",
      "required": "optional",
      "recipes": [
        "system::hostname",
        "system::default"
      ],
      "choice": [],
      "calculated": false,
      "type": "string",
      "mapping": "cookbook_attribute"
    },
    "system/workgroup": {
      "display_name": "NetBIOS Workgroup",
      "description": "The NetBIOS workgroup name to set on the node, default is 'WORKGROUP' (OS X only).",
      "required": "optional",
      "default": "WORKGROUP",
      "recipes": [
        "system::hostname",
        "system::default"
      ],
      "choice": [],
      "calculated": false,
      "type": "string",
      "mapping": "cookbook_attribute"
    },
    "system/upgrade_packages": {
      "display_name": "Upgrade Packages",
      "description": "Whether or not the system::upgrade_packages recipe will physically update the system's installed packages.",
      "required": "optional",
      "type": "boolean",
      "choice": [
        true,
        false
      ],
      "default": true,
      "recipes": [
        "system::upgrade_packages"
      ],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/upgrade_packages_at_compile": {
      "display_name": "Upgrade Packages at compile time",
      "description": "Whether or not the system::upgrade_packages recipe will update the system's installed packages at compile time.",
      "required": "optional",
      "type": "boolean",
      "choice": [
        true,
        false
      ],
      "default": true,
      "recipes": [
        "system::upgrade_packages"
      ],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/manage_hostsfile": {
      "display_name": "Manage Hostsfile",
      "description": "Whether or not to manage /etc/hostsfile (in any way).",
      "required": "optional",
      "type": "boolean",
      "choice": [
        true,
        false
      ],
      "default": true,
      "recipes": [
        "system::hostname",
        "system::default"
      ],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/enable_cron": {
      "display_name": "Enable cron recipe",
      "description": "Whether or not the system::timezone recipe will include the cron recipe.",
      "required": "optional",
      "type": "boolean",
      "choice": [
        true,
        false
      ],
      "default": true,
      "recipes": [
        "system::timezone"
      ],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/packages/install": {
      "display_name": "Install Packages",
      "description": "An array of system packages to install with the package resource in execute phase.",
      "required": "optional",
      "type": "array",
      "recipes": [
        "system::install_packages"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/packages/install_compile_time": {
      "display_name": "Install Packages Compile Phase",
      "description": "An array of system packages to install with the package resource in compile phase.",
      "required": "optional",
      "type": "array",
      "recipes": [
        "system::install_packages"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/permanent_ip": {
      "display_name": "Permanent IP Address",
      "description": "Whether the system has a permenent IP address (http://www.debian.org/doc/manuals/debian-reference/ch05.en.html#_the_hostname_resolution).",
      "required": "optional",
      "type": "boolean",
      "choice": [
        true,
        false
      ],
      "default": true,
      "recipes": [
        "system::hostname",
        "system::default"
      ],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/static_hosts": {
      "display_name": "Static Hosts",
      "description": "A hash of static hosts to add to /etc/hosts.",
      "required": "optional",
      "type": "hash",
      "recipes": [
        "system::hostname",
        "system::default"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/primary_interface": {
      "display_name": "Primary Network Interface",
      "description": "Specify primary network interface, used by hostname to set the correct address in hostsfile. default is node['network']['default_interface'].",
      "required": "optional",
      "recipes": [
        "system::hostname",
        "system::default"
      ],
      "choice": [],
      "calculated": false,
      "type": "string",
      "mapping": "cookbook_attribute"
    },
    "system/delay_network_restart": {
      "display_name": "Delay Network Restart",
      "description": "Whether or not the system hostnamem provider will trigger a network restart as delayed vs. immediate.",
      "required": "optional",
      "type": "boolean",
      "choice": [
        true,
        false
      ],
      "default": true,
      "recipes": [
        "system::hostname",
        "system::default"
      ],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/profile/path": {
      "display_name": "System Profile Path",
      "description": "Overrides the default path for the system.",
      "required": "optional",
      "type": "array",
      "recipes": [
        "system::profile"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/profile/path_append": {
      "display_name": "System Profile Path Append",
      "description": "Append more paths to the base path.",
      "required": "optional",
      "type": "array",
      "recipes": [
        "system::profile"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/profile/path_prepend": {
      "display_name": "System Profile Path Prepend",
      "description": "Prepends more paths to the base path.",
      "required": "optional",
      "type": "array",
      "recipes": [
        "system::profile"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "system/profile/append_scripts": {
      "display_name": "System Profile Path Append",
      "description": "An array of shell scripts to be appended to the system profile (include raw scripts without shebangs).",
      "required": "optional",
      "type": "array",
      "recipes": [
        "system::profile"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    }
  }
}