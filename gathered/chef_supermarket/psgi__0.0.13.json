{
  "name": "psgi Chef cookbook",
  "chef_cookbook_name": "psgi",
  "revision": "0.0.13",
  "uris": [
    "https://supermarket.chef.io/cookbooks/psgi",
    "https://supermarket.chef.io/cookbooks/psgi/download",
    "https://supermarket.chef.io/cookbooks/psgi/versions/0.0.13",
    "https://supermarket.chef.io/cookbooks/psgi/versions/0.0.13/download",
    "https://supermarket.chef.io/api/v1/cookbooks/psgi/versions/0.0.13",
    "https://supermarket.chef.io/api/v1/cookbooks/psgi",
    "https://supermarket.chef.io/api/v1/cookbooks/psgi/versions/0.0.13/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Style/Virtualization Level/Application"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/psgi",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/psgi/versions/0.0.13/download",
  "deprecated": false,
  "created": "2013-03-21T14:27:18.000Z",
  "updated": "2014-08-04T07:20:00.845Z",
  "description": "Configures and runs psgi application",
  "maintainer": {
    "name": "melezhik",
    "email": "melezhik@gmail.com"
  },
  "license": "All rights reserved",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 16732721,
  "downloads_count_revision": 1199629,
  "repository_url": "https://github.com/melezhik/cookbooks/tree/master/psgi",
  "issues_url": "https://github.com/melezhik/cookbooks/tree/master/psgi",
  "chef_source_url": "https://github.com/melezhik/cookbooks/tree/master/psgi",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Synopsis\n\nConfigures and runs psgi application\n\n# Prerequisites\n* [Plack](http://search.cpan.org/perldoc?Plack)\n* a chosen web server cpan module should be installed ( see  list in the `web servers supported` section )\n\n# Last release\n\nhttp://community.opscode.com/cookbooks/psgi\n\n# Features\n\n## web servers supported\n- [FCGI](http://search.cpan.org/perldoc?FCGI)\n- [Starman](http://search.cpan.org/perldoc?Starman) \n- [Twiggy](http://search.cpan.org/perldoc?Twiggy) \n\n## web frameworks supported\n- [Catalyst](http://search.cpan.org/perldoc?Catalyst)\n- [Jifty](http://search.cpan.org/perldoc?Jifty)\n- [Dancer](http://search.cpan.org/perldoc?Dancer)\n\n\n# Resources\npsgi_application\n\n# Resource parameters\n- `operator` (Catalyst|Dancer|Jifty), specify web framework to use, optional\n- `server` (FCGI|Starman), specify web server to use, default value is **FCGI**\n- `application_user`, change to this user name before starting the process\n- `application_home`, absolute path to directory holding application home\n- `enable_service`, whether to add service to run levels, default value is **on**. To not enable service set this parameter to 'off'\n- `script` -  the relative or absolute path to psgi script\n- `daemon_name`, optional, if not set - evaluated as basename from `script` \n- `daemon_path` - absolute path to daemon, default value is path to system installed [plackup](http://search.cpan.org/perldoc?plackup)\n- `socket`, optional, specify unix or inet socket\n- `environment`, hash containing environmental variables, default value **{}**\n- `perl5lib`, array containing perl5lib paths, default value **[]**\n- `nproc`, default value `1`, number of child processes to launch\n- `proc_manager`, optional, default value is **FCGI::ProcManager**\n- `proc_title`, optional, how the processes are seen in process list\n- `mount`, optional, mount path, see [Plack::App::URLMap](http://search.cpan.org/perldoc?Plack%3A%3AApp%3A%3AURLMap) for details \n- `config`, absolute path to application configuration file (optional for 'Dancer' operator)\n- `debug`, default value **1**\n- `plackup_environment`, default value **development**\n- `cookbook`, default value `psgi`, the name of cookbook where init script template coming from\n- `ignore_failure` - used in action 'test', whether to ignore test failures, if enabled, than test fail will cause chef runtime exception. Default value is **false**\n\n\n# Web server specific options\n\n## FCGI\n- `proc_manager`\n- `proc_title`\n\n# Init scripts notes\n\n## Ubuntu, CentOS\n\n[upstart](http://upstart.ubuntu.com/) system used\n\n## Debian\n[start-stop-daemon](http://www.unix.com/man-page/Linux/8/start-stop-daemon/) with [System V](http://en.wikipedia.org/wiki/UNIX_System_V) system used\n\n# Usage examples\n\n## run Catalyst application as FCGI standalone server\n\n    psgi_application 'Catalyst FCGI application' do\n        operator            'Catalyst'\n        server              'FCGI'\n        application_user    'user'\n        application_home    '/home/user/app/MyApplication'\n        script              '/home/user/app/MyApplication/scripts/foo.psgi'\n        config              '/home/user/app/MyApplication/app.conf'\n        action              'install'      \n    end\n\n## run Dancer application as FCGI standalone server\n\n    psgi_application 'Dancer FCGI application' do\n        operator            'Dancer'\n        server              'FCGI'\n        application_user    'user'\n        application_home    '/home/user/app/MyApplication'\n        script              '/home/user/app/MyApplication/scripts/foo.psgi'\n        action              'install'      \n    end\n\n## run Jifty application as FCGI standalone server\n\n    psgi_application 'Jifty FCGI application' do\n        operator            'Jifty'\n        server              'FCGI'\n        application_user    'user'\n        application_home    '/home/user/app/MyApplication'\n        script              '/home/user/app/MyApplication/scripts/foo.psgi'\n        config              '/home/user/app/MyApplication/app.conf'\n        action              'install'      \n    end\n\n## run psgi application with Starman server, port 5001\n\n    psgi_application 'psgi Starman application' do\n         server              'Starman'\n         application_user    'user'\n         application_home    '/home/user/app/MyApplication'\n         script              'app.psgi'\n         socket              ':5000'\n         nproc               '2'\n         action              'install'\n    end\n\n## using with non system plackup\n\n    psgi_application 'my application' do\n        server              'Starman'\n        application_user    'user'\n        application_home    '/home/user/app/MyApplication'\n        script              '/home/user/app/MyApplication/scripts/foo.psgi'\n        config              '/home/user/app/MyApplication/app.conf'\n        action              'install'\n        daemon_path         '/home/user/app/MyApplication/cpanlib/bin/plackup'      \n    end\n\n## run smoke test on installed psgi application \n\n    psgi_application 'my application' do\n        application_user    'user'\n        application_group   'user'\n        application_home    '/home/user/app/MyApplication'\n        script              '/home/user/app/MyApplication/scripts/foo.psgi'\n        action              'test'\n    end\n\n\n\n# Tested on\n* Debian-Stable-64-bit, chef 11.4.4\n* Ubuntu 10.04.1 LTS, chef 11.4.4\n* CentOS-6.4-x86_64, , Chef 10.14.0\n\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ]
}