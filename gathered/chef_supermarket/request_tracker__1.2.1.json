{
  "name": "request_tracker Chef cookbook",
  "chef_cookbook_name": "request_tracker",
  "revision": "1.2.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/request_tracker",
    "https://supermarket.chef.io/cookbooks/request_tracker/download",
    "https://supermarket.chef.io/cookbooks/request_tracker/versions/1.2.1",
    "https://supermarket.chef.io/cookbooks/request_tracker/versions/1.2.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/request_tracker/versions/1.2.1",
    "https://supermarket.chef.io/api/v1/cookbooks/request_tracker",
    "https://supermarket.chef.io/api/v1/cookbooks/request_tracker/versions/1.2.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/request_tracker",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/request_tracker/versions/1.2.1/download",
  "deprecated": false,
  "created": "2014-05-22T01:10:53.000Z",
  "updated": "2016-02-10T00:00:35.293Z",
  "description": "Installs/Configures Request Tracker 4",
  "maintainer": {
    "name": "brauliobo",
    "email": "braulio@eita.org.br"
  },
  "license": "GPLv3+",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 8726745,
  "downloads_count_revision": 1250181,
  "repository_url": "https://github.com/coletivoEITA/request-tracker-cookbook",
  "issues_url": "https://github.com/coletivoEITA/request-tracker-cookbook",
  "chef_source_url": "https://github.com/coletivoEITA/request-tracker-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "request\\_tracker Cookbook\n========================\nInstall fetchmail using the system package configure\n\nRequirements\n------------\nPlataforms:\n - Debian\n - Ubuntu\n\nAttributes\n----------\n#### request\\_tracker::default\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:install_from]</tt></td>\n    <td>Choose a custom place to install from in one of: `debian_testing`</td>\n    <td><tt>'system'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:server]</tt></td>\n    <td>Support 'apache' and 'nginx'</td>\n    <td><tt>nginx</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:server_name]</tt></td>\n    <td></td>\n    <td><tt>node[:fqdn]</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:service_name]</tt></td>\n    <td>The filename of the service to be installed</td>\n    <td><tt>request_tracker</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:fcgi_workers]</tt></td>\n    <td>The number of fcgi workers (nginx server)</td>\n    <td><tt>1</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:name]</tt></td>\n    <td>Site name</td>\n    <td><tt>Request Tracker</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:organization]</tt></td>\n    <td>Organization name</td>\n    <td><tt>Request Tracker</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:force_language]</tt></td>\n    <td>Force a specifig language</td>\n    <td><tt>nil</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:correspond_addess]</tt></td>\n    <td>Correspond email</td>\n    <td><tt>''</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:comment_addess]</tt></td>\n    <td>Comment email</td>\n    <td><tt>''</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:web_path]</tt></td>\n    <td>Web path</td>\n    <td><tt>'/rt'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:web_url]</tt></td>\n    <td>Web URL</td>\n    <td><tt>http://#{node[:request_tracker][:domain]}</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:config]['VariableName']</tt></td>\n    <td>Extra configuration keys. All the keys in it will generate a config value on RT_SiteConfig.pm, (e.g. `Set($VariableName, \"value\");`) </td>\n    <td><tt>value</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:db_type]</tt></td>\n    <td>What DB (mysql, Pg, SQLite, ...)</td>\n    <td><tt>mysql</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:db_host]</tt></td>\n    <td>DB host</td>\n    <td><tt>localhost</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:db_port]</tt></td>\n    <td>DB port</td>\n    <td><tt>''</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:db_name]</tt></td>\n    <td>DB name</td>\n    <td><tt>'rt'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:db_user]</tt></td>\n    <td>DB user</td>\n    <td><tt>'rtuser'</tt></td>\n  </tr>\n  <tr>\n    <td><tt>node[:request_tracker][:db_password]</tt></td>\n    <td>DB password</td>\n    <td><tt>''</tt></td>\n  </tr>\n</table>\n\nUsage\n-----\n#### request\\_tracker::default\nJust include `request\\_tracker` in your node's `run_list`:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[request\\_tracker]\"\n  ]\n}\n```\n\nTODO\n----\nInstall from git/code\n\nContributing\n------------\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nAfter 3 consistent patches you become a commiter :)\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nginx",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apache2",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/fetchmail",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}