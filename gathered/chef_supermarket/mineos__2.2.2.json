{
  "name": "mineos Chef cookbook",
  "chef_cookbook_name": "mineos",
  "revision": "2.2.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/mineos",
    "https://supermarket.chef.io/cookbooks/mineos/download",
    "https://supermarket.chef.io/cookbooks/mineos/versions/2.2.2",
    "https://supermarket.chef.io/cookbooks/mineos/versions/2.2.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/mineos/versions/2.2.2",
    "https://supermarket.chef.io/api/v1/cookbooks/mineos",
    "https://supermarket.chef.io/api/v1/cookbooks/mineos/versions/2.2.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/mineos",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/mineos/versions/2.2.2/download",
  "deprecated": false,
  "created": "2013-08-18T21:19:10.000Z",
  "updated": "2014-02-28T14:24:30.000Z",
  "description": "Installs/Configures mineos",
  "maintainer": {
    "name": "kaimi",
    "email": "kaimi+chef@kaimi.cc"
  },
  "license": "GPLv3",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 13964631,
  "downloads_count_revision": 1254343,
  "repository_url": "https://github.com/kaimi/chef-mineos",
  "issues_url": "https://github.com/kaimi/chef-mineos/issues",
  "chef_source_url": "https://github.com/kaimi/chef-mineos",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "mineos Cookbook\n===============\n\nThis cookbook installs and configures [mineos](http://codeemo.com). Refer to \n<http://codeemo.com/mineoswiki/index.php?title=Installing_MineOS> for further\ninformation.\n\n**CAUTION**: If you’re upgrading from 1.0.x (mineos 0.5) to 2.x.x (mineos 0.6), \nplease\n\n- backup your servers (e.g. create an archive via the web ui)\n- remove mineos 0.5 or just setup a new host machine\n- run mineos::default\n- restore your servers (e.g. use the web ui to re-create them from archives)\n\nRequirements\n------------\n\n#### OS\n- potentially any debian-based\n- written for and tested on Ubuntu\n\n#### packages\n- `chef` :) (≥11.6.0)\n\n#### cookbooks\n- `logrotate`\n\nAttributes\n----------\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['group']</tt></td>\n    <td>String</td>\n    <td>the group to grant profile editing rights to</td>\n    <td><tt>mineos</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['basedir']</tt></td>\n    <td>String</td>\n    <td>base directory to checkout the mineos repo to</td>\n    <td><tt>/srv/mineos</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['repository']</tt></td>\n    <td>String</td>\n    <td>the git repo to install mineos from</td>\n    <td><tt>https://github.com/hexparrot/mineos.git</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['version']</tt></td>\n    <td>String</td>\n    <td>version to checkout from the git repo; can be any commit identifier (id, branch, tag, …)</td>\n    <td><tt>master</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['profile_fix']['enable']</tt></td>\n    <td>Boolean</td>\n    <td>whether to overwrite the standard <tt>profile.config</tt> with a patched \n    one to include base profiles for newly released minecraft versions</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['profile_fix']['versions']</tt></td>\n    <td>String[]</td>\n    <td>versions to include in the profile fix</td>\n    <td><tt>[]</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['service']['enable']</tt></td>\n    <td>Boolean</td>\n    <td>whether to enable the webui and “start servers on boot” services</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['config']['basedir']</tt></td>\n    <td>String</td>\n    <td>where to put minecraft server data</td>\n    <td><tt>/var/games/minecraft</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['config']['local']</tt></td>\n    <td>String</td>\n    <td>webui locale (currently, only <tt>en</tt> and <tt>nl</tt> seem to be \n    suported)</td>\n    <td><tt>en</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['config']['logfile']</tt></td>\n    <td>String</td>\n    <td>where to put the mineos log</td>\n    <td><tt>/var/log/mineos.log</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['config']['host']['address']</tt></td>\n    <td>String</td>\n    <td>IP address for the webui to listen on</td>\n    <td><tt>0.0.0.0</tt> (all)</td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['config']['host']['port']</tt></td>\n    <td>int</td>\n    <td>port for the webui to listen on</td>\n    <td><tt>8080</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['config']['ssl']['enable']</tt></td>\n    <td>Boolean</td>\n    <td>whether to enable SSL encryption for the webui</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['config']['ssl']['generate']</tt></td>\n    <td>Boolean</td>\n    <td>whether to generate a self signed SSL cert for the webui</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['config']['ssl']['cert']</tt></td>\n    <td>String</td>\n    <td>where the webui SSL cert is stored; do not change if self signed cert \n    generation is enabled</td>\n    <td><tt>/etc/ssl/certs/mineos.crt</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['config']['ssl']['key']</tt></td>\n    <td>String</td>\n    <td>where the webui SSL private key is stored; do not change if self signed \n    cert generation is enabled</td>\n    <td><tt>/etc/ssl/certs/mineos.key</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['config']['ssl']['ca']</tt></td>\n    <td>String</td>\n    <td>where the webui SSL cert ca is stored; do not change if self signed \n    cert generation is enabled</td>\n    <td><tt>&lt;empty&gt;</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['mineos']['config']['ssl']['chain']</tt></td>\n    <td>String</td>\n    <td>where the webui SSL cert chain is stored; do not change if self signed \n    cert generation is enabled</td>\n    <td><tt>&lt;empty&gt;</tt></td>\n  </tr>\n</table>\n\nUsage\n-----\n\nJust include `mineos` in your node's `run_list`:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[mineos]\"\n  ]\n}\n```\n\nThen, put all the users that should be granted full access to the webinterface \ninto the `['mineos']['group']` group.\n\nOr, write a recipe :)\n\n```ruby\nnode.set['mineos']['config']['ssl']['enable'] = false\nnode.set['mineos']['config']['ssl']['generate'] = false\nnode.set['mineos']['repository'] = \"https://github.com/kaimi/mineos.git\"\n\ninclude_recipe \"mineos\"\n\nuser \"foo\" do\n  home \"/home/foo\"\n  password 'hashedpassword'\n  system true\nend\n\ngroup \"mineos\" do\n  action :modify\n  members [\"foo\"]\nend\n```\n\nContributing\n------------\n\nI am using nvie’s\n[git branching model](http://nvie.com/posts/a-successful-git-branching-model/ \n\"nvie.com: A successfull Git branichng model\"). To contribute you should follow \nthese steps:\n\n0. Check if your proposed change is already implemented in the `develop` branch\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request against the `develop` branch using Github\n\nLicense and Authors\n-------------------\n\nAuthors: ka’imi <kaimi@kaimi.cc>\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/logrotate",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}