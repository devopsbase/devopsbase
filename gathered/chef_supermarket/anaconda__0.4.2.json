{
  "name": "anaconda Chef cookbook",
  "chef_cookbook_name": "anaconda",
  "revision": "0.4.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/anaconda",
    "https://supermarket.chef.io/cookbooks/anaconda/download",
    "https://supermarket.chef.io/cookbooks/anaconda/versions/0.4.2",
    "https://supermarket.chef.io/cookbooks/anaconda/versions/0.4.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/anaconda/versions/0.4.2",
    "https://supermarket.chef.io/api/v1/cookbooks/anaconda",
    "https://supermarket.chef.io/api/v1/cookbooks/anaconda/versions/0.4.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Programming Languages",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/anaconda",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/anaconda/versions/0.4.2/download",
  "deprecated": false,
  "created": "2014-08-23T11:11:40.404Z",
  "updated": "2015-10-12T23:30:59.651Z",
  "description": "Installs/Configures anaconda",
  "maintainer": {
    "name": "thmttch",
    "email": "matt.chu@gmail.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 4511509,
  "downloads_count_revision": 1044712,
  "repository_url": "https://github.com/thmttch/chef-continuum-anaconda",
  "issues_url": "https://github.com/thmttch/chef-continuum-anaconda/issues",
  "chef_source_url": "https://github.com/thmttch/chef-continuum-anaconda",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# anaconda cookbook\n\nChef cookbook for installing [Continuum Analytic](http://continuum.io/)'s\n[Anaconda](https://store.continuum.io/cshop/anaconda/): \"completely free Python\ndistribution for large-scale data processing, predictive analytics, and\nscientific computing\".\n\nThis also serves as a live example of the most up-to-date best practices for\nwriting, maintaining, and testing Chef cookbooks:\n\n- [Berkshelf 3](http://berkshelf.com/) for dependency resolution\n- [Vagrant](https://www.vagrantup.com) for development\n- [Chefspec](https://github.com/sethvargo/chefspec) for rapid testing\n- [Test Kitchen](https://github.com/test-kitchen/test-kitchen) for\ncomprehensive testing across multiple platforms, with tests written in\n[serverspec](http://serverspec.org/)\n- [Foodcritic](http://acrmp.github.io/foodcritic/) for style checking\n\n## Requirements\n\nThis repo has only been tested with RVM; YMMV with other installation methods\n(rbenv, chef-dk, etc).\n\n- Berkshelf 3.1.3\n- Chefspec 4.0.0\n- Test Kitchen 1.2.1\n- Foodcritic 4.0.0\n- Vagrant 1.6+\n  - [vagrant-omnibus](https://github.com/schisamo/vagrant-omnibus)\n  - [vagrant-berkshelf](https://github.com/berkshelf/vagrant-berkshelf): note\n    that `>= 2.0.1` is required\n\nIt sounds like [Chef-DK](http://www.getchef.com/downloads/chef-dk/) is the new\nrecommended installation path, but I have not had a good experience with it (as\nof *0.1.0-1*). Again, YMMV.\n\n## Quickstart\n\nThe [Vagrantfile](Vagrantfile) is written to get you an Anaconda environment\nwith minimal effort:\n\n```bash\n$> vagrant up --provision\n...\n\n$> vagrant ssh\n$vagrant> export PATH=/opt/anaconda/2.0.1/bin:${PATH}\n$vagrant> conda --version\nconda 3.5.5\n\n# if you included `recipe[anaconda::shell_conveniences]` you don't have to do anything;\n# it's sourced in /etc/profile.d\n$> vagrant ssh\n$vagrant> conda --version\nconda 3.5.5\n```\n\nTo use it in a cookbook:\n\n```ruby\ninclude_recipe 'anaconda::default'\n```\n\n## Usage, recipes, attributes, and resources\n\nThe main recipe is `anaconda::default`. Include it in your runlist, and it will\ninstall the package as well as any necessary dependencies.\n\nThe following are user-configurable attributes. Check\n[attributes/default.rb](attributes/default.rb) for default values.\n\n- `anaconda`\n  - `version`: the version to install\n  - `flavor`: either `x86` (32-bit) or `x86_64` (64-bit)\n  - `install_root`: the parent directory of all anaconda installs. note that\n    individual installs go into `#{install_root}/#{version}`\n  - `accept_license`: must be explicitly set to the string `yes`; any other\n    value will reject the license.\n  - `owner`: the user who owns the install\n  - `group`: the group who owns the install\n\n### `recipe[anaconda::shell_conveniences]`\n\nInclude this to have the environment set for all users (login shells) via\n`/etc/profile.d`.  Useful for development.\n\n```bash\n$> vagrant ssh\n$vagrant> which conda\n/opt/anaconda/2.0.1/bin/conda\n```\n\n### resource `anaconda_package`\n\nYou can use the `anaconda_package` resource to install new packages into the\nAnaconda environment:\n\n```ruby\n# I do not know what 'astroid' is, just using it as a sample package\nanaconda_package 'astroid' do\n  # the other supported action is `:remove`\n  action :install\nend\n```\n\nSee the [resource definition](resources/package.rb) for additional options; in\ngeneral, all it does is present the same options as `conda install`/`conda\nremove`.\n\n## Tests\n\nRun the full test suite:\n\n```bash\n# this will take a really long time\n$> script/cibuild\n...\n\n# check the final result; bash return codes: 0 is good, anything else is not\n$> echo $?\n```\n\nRun just the [chefspecs](spec/default_spec.rb):\n\n```bash\n$> rspec\n```\n\nRun just the test kitchen serverspec [integration\ntests](test/integration/default/serverspec/default_spec.rb):\n\n```bash\n# this is what takes so long: every platform and version is fully built in vagrant\n# the list of OSes is defined in [.kitchen.yml](.kitchen.yml)\n$> kitchen verify\n\n# test a specific OS; `kitchen list`\n$> kitchen verify default-ubuntu-1204\n```\n\nCheck the style with [Foodcritic](http://acrmp.github.io/foodcritic/):\n\n```bash\n$> foodcritic\n```\n\n## Releases and issues\n\nStandard stuff:\n\n- master is the active version in development\n- releases are [made with\n  Github](https://github.com/thmttch/chef-continuum-anaconda/releases), and\n  `git tag`'ed\n\nIssues should be [opened in the Github issue\ntracker](https://github.com/thmttch/chef-continuum-anaconda/issues)\n\n## TODO\n\n- autodetect 64-bit versus 32\n- (TODO does it matter? who uses it?) populate metadata.rb: `suggests`,\n  `supports`, etc\n- add a pre-provision for kitchen tests to avoid redownloading the installer on\n  every test (really slows down the tests)\n- figure out how to publish onto http://community.opscode.com/; the\n  documentation is unbelievably bad\n\n## Author\n\nAuthor:: Matt Chu (matt.chu@gmail.com)\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": "= 14.04",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/runit",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}