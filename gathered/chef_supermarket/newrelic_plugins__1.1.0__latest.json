{
  "name": "newrelic_plugins Chef cookbook",
  "chef_cookbook_name": "newrelic_plugins",
  "revision": "1.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/newrelic_plugins",
    "https://supermarket.chef.io/cookbooks/newrelic_plugins/download",
    "https://supermarket.chef.io/cookbooks/newrelic_plugins/versions/1.1.0",
    "https://supermarket.chef.io/cookbooks/newrelic_plugins/versions/1.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/newrelic_plugins/versions/1.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/newrelic_plugins",
    "https://supermarket.chef.io/api/v1/cookbooks/newrelic_plugins/versions/1.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Monitoring & Trending",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Monitoring/New Relic"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/newrelic_plugins",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/newrelic_plugins/versions/1.1.0/download",
  "deprecated": false,
  "created": "2014-01-29T19:52:36.000Z",
  "updated": "2014-09-26T20:47:49.742Z",
  "description": "Installs New Relic Plugins.",
  "maintainer": {
    "name": "newrelic",
    "email": "support@newrelic.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 24,
  "downloads_count": 3420616,
  "downloads_count_revision": 2074687,
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "## New Relic Plugin's Cookbook ##\n\n## Overview ##\n\nThis cookbook installs, configures and manages as a service New Relic Plugins on Debian/RHEL.\n\nTo use the cookbook, add it to your Chef cookbooks path under the name `newrelic_plugins`.\n\nRecipes for the following plugins are provided:\n\n - [AWS Cloudwatch](#aws-cloudwatch-plugin)\n - [Example (Ruby)](#example-plugin)\n - [F5](#f-plugin)\n - [Memcached - Java](#memcached-java)\n - [Memcached - Ruby](#memcached-ruby)\n - [MySQL](#mysql-plugin)\n - [Rackspace Load Balancers](#rackspace-load-balancers-plugin)\n - [Wikipedia Example Java](#wikipedia-example-java-plugin)\n - [Wikipedia Example Ruby](#wikipedia-example-ruby-plugin)\n\n## Requirements ##\n\nChef 0.10.10+ and Ohai 6.10+ for `platform_family` support.\n\nThe AWS Cloudwatch, Example, F5, Memcached (Ruby), Rackspace Load Balancers, and Wikipedia Example (Ruby) plugins require:\n\n- Ruby >= 1.8.7 \n- Rubygems >= 1.8\n\nThe MySQL, Memcached (Java) and Wikipedia Example (Java) plugins require: \n\n- Java Runtime Environment (JRE) >= 1.6\n\nThere are several Java and Ruby Chef Cookbooks available on the Chef Community site.\n\n- http://community.opscode.com/cookbooks/java\n- http://community.opscode.com/cookbooks/ruby_build\n\n## Platforms ##\n - Debian \n - Ubuntu \n - CentOS\n - Red Hat\n - Fedora\n - Amazon\n - FreeBSD\n\n## Usage ##\n\nAn example of using the AWS Cloudwatch and MySQL plugins with a defined role. See the below sections for plugin specifics.\n\n    name \"newrelic_plugins\"\n    description \"System that run New Relic plugins\"\n    run_list(\n      \"recipe[newrelic_plugins::aws_cloudwatch]\",\n      \"recipe[newrelic_plugins::mysql]\"\n    )\n    default_attributes(\n      \"newrelic\" => {\n        \"license_key\" => \"NEW_RELIC_LICENSE_KEY\",\n        \"aws_cloudwatch\" => {\n          \"install_path\" => \"/path/to/plugin\",\n          \"user\" => \"newrelic\",\n          \"aws_access_key\" => \"AWS_ACCESS_KEY\",\n          \"aws_secret_key\" => \"AWS_SECRET_KEY\",\n          \"agents\" => [\n            \"ec2\",\n            \"ebs\",\n            \"elb\"\n          ]\n        },\n        \"mysql\" => {\n          \"install_path\" => \"/path/to/plugin\",\n          \"user\" => \"newrelic\",\n          \"servers\" => [\n            {\n              \"name\"          => \"Production 1\",\n              \"host\"          => \"localhost\",\n              \"metrics\"       => \"status,newrelic\",\n              \"mysql_user\"    => \"USER\",\n              \"mysql_passwd\"  => \"CLEAR_TEXT_PASSWORD\"\n            }\n          ]\n        }\n      }\n    )\n\n## AWS Cloudwatch Plugin ##\n\n#### Attributes: ####\n \n `node[:newrelic][:license_key]` - _(required)_ New Relic License Key\n \n `node[:newrelic][:aws_cloudwatch][:install_path]` -  _(required)_ Install directory. Defaults to `/opt/newrelic`. Any downloaded files will be placed here. The plugin will be installed within this directory at `newrelic_aws_cloudwatch_plugin`. \n \n `node[:newrelic][:aws_cloudwatch][:user]` - _(required)_ User to run as\n \n `node[:newrelic][:aws_cloudwatch][:aws_access_key]` -  _(required)_ AWS Cloudwatch Access Key\n \n `node[:newrelic][:aws_cloudwatch][:aws_secret_key]` -  _(required)_ AWS Cloudwatch Secret Key\n \n `node[:newrelic][:aws_cloudwatch][:agents]` -  _(required)_ Array of AWS Cloudwatch agents. Valid values are `ec`, `ec2`, `ebs`, `elb`, `rds`, `sqs`, and `sns`\n \n `node[:newrelic][:aws_cloudwatch][:regions]` - _(optional)_ Array of AWS Cloudwatch regions. e.g. `us-east-1`. Defaults to all available regions.\n\n#### Usage: ####\n\n    name \"newrelic_aws_cloudwatch_plugin\"\n    description \"System that monitors AWS Cloudwatch\"\n    run_list(\n      \"recipe[newrelic_plugins::aws_cloudwatch]\"\n    )\n    default_attributes(\n      \"newrelic\" => {\n        \"license_key\" => \"NEW_RELIC_LICENSE_KEY\",\n        \"aws_cloudwatch\" => {\n          \"install_path\" => \"/path/to/plugin\",\n          \"user\" => \"newrelic\",\n          \"aws_access_key\" => \"AWS_ACCESS_KEY\",\n          \"aws_secret_key\" => \"AWS_SECRET_KEY\",\n          \"agents\" => [\n            \"ec2\",\n            \"ebs\",\n            \"elb\"\n          ]\n        }\n      }\n    )\n\nFor additional info, see https://github.com/newrelic-platform/newrelic_aws_cloudwatch_plugin\n\n## Example Plugin ##\n\n#### Attributes: ####\n\n `node[:newrelic][:license_key]` - _(required)_ New Relic License Key\n \n `node[:newrelic][:example][:install_path]` -  _(required)_ Install directory. Defaults to `/opt/newrelic`. Any downloaded files will be placed here. The plugin will be installed within this directory at `newrelic_example_plugin`.\n \n `node[:newrelic][:example][:user]` - _(required)_ User to run as\n \n#### Usage: ####\n\n    name \"newrelic_example_plugin\"\n    description \"System that runs the Example Plugin\"\n    run_list(\n      \"recipe[newrelic_plugins::example]\"\n    )\n    default_attributes(\n      \"newrelic\" => {\n        \"license_key\" => \"NEW_RELIC_LICENSE_KEY\",\n        \"example\" => {\n          \"install_path\" => \"/path/to/plugin\",\n          \"user\" => \"newrelic\"\n        }\n      }\n    )\n\nFor additional info, see https://github.com/newrelic-platform/newrelic_example_plugin\n\n## F5 Plugin ##\n\n#### Attributes: ####\n\n `node[:newrelic][:license_key]` - _(required)_ New Relic License Key\n \n `node[:newrelic][:f5][:install_path]` -  _(required)_ Install directory. Defaults to `/opt/newrelic`. The plugin will be installed within this directory at `newrelic_f5_plugin`.\n \n `node[:newrelic][:f5][:user]` - _(required)_ User to run as\n \n `node[:newrelic][:f5][:agents]` - _(required)_ Array of F5 agents to monitor.\n\n#### Usage: ####\n\n    name \"newrelic_f5_plugin\"\n    description \"System that monitors F5\"\n    run_list(\n      \"recipe[newrelic_plugins::f5]\"\n    )\n    default_attributes(\n      \"newrelic\" => {\n        \"license_key\" => \"NEW_RELIC_LICENSE_KEY\",\n        \"f5\" => {\n          \"install_path\" => \"/path/to/plugin\",\n          \"user\" => \"newrelic\",\n          \"agents\" => [\n            {\n              \"name\"           => \"f5\",\n              \"hostname\"       => \"localhost\",\n              \"port\"           => 651\n              \"snmp_community\" => \"community\"\n            }\n          ]\n        }\n      }\n    )\n\nFor additional info, see https://github.com/newrelic-platform/newrelic_f5_plugin\n\n## Memcached (Java) ##\n\n#### Attributes: ####\n \n `node[:newrelic][:license_key]` - _(required)_ New Relic License Key\n \n `node[:newrelic][:memcached_java][:install_path]` -  _(required)_ Install directory. Defaults to `/opt/newrelic`. Any downloaded files will be placed here. The plugin will be installed within this directory at `newrelic_memcached_java_plugin`.\n \n `node[:newrelic][:memcached_java][:user]` - _(required)_ User to run as.\n \n `node[:newrelic][:memcached_java][:servers]` -  _(required)_ Array of Memcached Servers. If using the default port, the `port` attribute can be left off.\n\n `node[:newrelic][:memcached_java][:java_options]` -  _(optional)_ String of java options that will be passed to the init script java command. E.g. `-Dhttps.proxyHost=proxy.example.com -Dhttps.proxyPort=12345` for proxy support. Defaults to `-Xmx128m` for max 128mb heap size, but can be overridden.\n \n#### Usage: ####\n\n    name \"newrelic_memcached_java_plugin\"\n    description \"System that monitors Memcached Servers\"\n    run_list(\n      \"recipe[newrelic_plugins::memcached_java]\"\n    )\n    default_attributes(\n      \"newrelic\" => {\n        \"license_key\" => \"NEW_RELIC_LICENSE_KEY\",\n        \"memcached_java\" => {\n          \"install_path\" => \"/path/to/plugin\",\n          \"user\" => \"newrelic\",\n          \"java_options\" => \"-Dhttps.proxyHost=proxy.example.com -Dhttps.proxyPort=12345\",\n          \"servers\" => [\n            {\n              \"name\" => \"Host - 1\",\n              \"host\" => \"host.example.com\",\n              \"port\" => 11211\n            },\n            {\n              \"name\" => \"Host - 2\",\n              \"host\" => \"host2.example.com\"        \n            }\n          ]\n        }\n      }\n    )\n\nFor additional info, see https://github.com/newrelic-platform/newrelic_memcached_java_plugin\n\n## Memcached (Ruby) ##\n\n`node[:newrelic][:license_key]` - _(required)_ New Relic License Key\n \n `node[:newrelic][:memcached_ruby][:install_path]` -  _(required)_ Install directory. Defaults to `/opt/newrelic`. The plugin will be installed within this directory at `newrelic_memcached_ruby_plugin`.\n \n `node[:newrelic][:memcached_ruby][:user]` - _(required)_ User to run as.\n \n `node[:newrelic][:memcached_ruby][:agents]` - _(required)_ Array of Memcached hosts to monitor.\n \n#### Usage: ####\n\n    name \"newrelic_memcached_ruby_plugin\"\n    description \"System that monitors Memcached\"\n    run_list(\n      \"recipe[newrelic_plugins::memcached_ruby]\"\n    )\n    default_attributes(\n      \"newrelic\" => {\n        \"license_key\" => \"NEW_RELIC_LICENSE_KEY\",\n        \"memcached_ruby\" => {\n          \"install_path\" => \"/path/to/plugin\",\n          \"user\" => \"newrelic\",\n          \"agents\" => [\n            {\n              \"name\"      => \"Host - 1\",\n              \"endpoint\"  => \"localhost\",\n              \"port\"      => 11211\n            }\n          ]\n        }\n      }\n    )\n\nFor additional info, see https://github.com/newrelic-platform/newrelic_memcached_plugin\n\n## MySQL Plugin ##\n\n#### Attributes: ####\n \n `node[:newrelic][:license_key]` - _(required)_ New Relic License Key\n \n `node[:newrelic][:msyql][:install_path]` -  _(required)_ Install directory. Defaults to `/opt/newrelic`. Any downloaded files will be placed here. The plugin will be installed within this directory at `newrelic_mysql_plugin`.\n \n `node[:newrelic][:mysql][:user]` - _(required)_ User to run as. Defaults to `root`.\n \n `node[:newrelic][:mysql][:servers]` -  _(required)_ Array of MySQL Servers. If using the default username and password, the `user` and `passwd` attributes can be left off.\n\n `node[:newrelic][:mysql][:java_options]` -  _(optional)_ String of java options that will be passed to the init script java command. E.g. `-Dhttps.proxyHost=proxy.example.com -Dhttps.proxyPort=12345` for proxy support. Defaults to `-Xmx128m` for max 128mb heap size, but can be overridden.\n\n#### Usage: ####\n\n    name \"newrelic_mysql_plugin\"\n    description \"System that monitors MySQL Servers\"\n    run_list(\n      \"recipe[newrelic_plugins::mysql]\"\n    )\n    default_attributes(\n      \"newrelic\" => {\n        \"license_key\" => \"NEW_RELIC_LICENSE_KEY\",\n        \"mysql\" => {\n          \"install_path\" => \"/path/to/plugin\",\n          \"user\" => \"newrelic\",\n          \"java_options\" => \"-Dhttps.proxyHost=proxy.example.com -Dhttps.proxyPort=12345\",\n          \"servers\" => [\n            {\n              \"name\"          => \"Production Master\",\n              \"host\"          => \"master-host\",\n              \"metrics\"       => \"status,newrelic,master\",\n              \"mysql_user\"    => \"USER_NAME_HERE\",\n              \"mysql_passwd\"  => \"USER_CLEAR_TEXT_PASSWORD_HERE\"\n            },\n            {\n              \"name\"          => \"Production Slave\",\n              \"host\"          => \"slave-host\",\n              \"metrics\"       => \"status,newrelic,slave\",\n              \"mysql_user\"    => \"USER_NAME_HERE\",\n              \"mysql_passwd\"  => \"USER_CLEAR_TEXT_PASSWORD_HERE\"\n            }\n          ]\n        }\n      }\n    )\n\nFor additional info, see https://github.com/newrelic-platform/newrelic_mysql_java_plugin\n\n## Rackspace Load Balancers ##\n\n`node[:newrelic][:license_key]` - _(required)_ New Relic License Key\n \n`node[:newrelic][:rackspace_load_balancers][:install_path]` -  _(required)_ Install directory. Defaults to `/opt/newrelic`. The plugin will be installed within this directory at `newrelic_rackspace_load_balancers_plugin`.\n \n`node[:newrelic][:rackspace_load_balancers][:user]` - _(required)_ User to run as.\n \n`node[:newrelic][:rackspace_load_balancers][:username]` - _(required)_ Username for Rackspace Load Balancers\n \n`node[:newrelic][:rackspace_load_balancers][:api_key]` - _(required)_ API Key for Rackspace Load Balancers\n\n`node[:newrelic][:rackspace_load_balancers][:region]` - _(required)_ Region for Rackspace Load Balancers. Valid values: `ord`, `dfw`, or `lon`\n \n#### Usage: ####\n\n    name \"newrelic_rackspace_load_balancers_plugin\"\n    description \"System that monitors Rackspace Load Balancers\"\n    run_list(\n      \"recipe[newrelic_plugins::rackspace_load_balancers]\"\n    )\n    default_attributes(\n      \"newrelic\" => {\n        \"license_key\" => \"NEW_RELIC_LICENSE_KEY\",\n        \"rackspace_load_balancers\" => {\n          \"install_path\" => \"/path/to/plugin\",\n          \"user\"         => \"newrelic\",\n          \"username\"     => \"RACKSPACE_USERNAME\",\n          \"api_key\"      => \"RACKSPACE_API_KEY\",\n          \"region\"       => \"dfw\"\n        }\n      }\n    )\n\nFor additional info, see https://github.com/newrelic-platform/newrelic_rackspace_load_balancers_plugin\n\n## Wikipedia Example Java Plugin\n\n#### Attributes: ####\n \n `node[:newrelic][:license_key]` - _(required)_ New Relic License Key\n \n `node[:newrelic][:wikipedia_example_java][:install_path]` -  _(required)_ Install directory. Defaults to `/opt/newrelic`. Any downloaded files will be placed here. The plugin will be installed within this directory at `newrelic_wikipedia_example_java_plugin`.\n \n `node[:newrelic][:wikipedia_example_java][:user]` - _(required)_ User to run as.\n\n#### Usage: ####\n\n    name \"newrelic_wikipedia_example_java_plugin\"\n    description \"System that monitors Wikipedia\"\n    run_list(\n      \"recipe[newrelic_plugins::wikipedia_example_java]\"\n    )\n    default_attributes(\n      \"newrelic\" => {\n        \"license_key\" => \"NEW_RELIC_LICENSE_KEY\",\n        \"wikipedia_example_java\" => {\n          \"install_path\" => \"/path/to/plugin\",\n          \"user\" => \"newrelic\"\n        }\n      }\n    )\n    \nFor additional info, see https://github.com/newrelic-platform/newrelic_java_wikipedia_plugin\n\n## Wikipedia Example Ruby Plugin\n\n#### Attributes: ####\n \n `node[:newrelic][:license_key]` - _(required)_ New Relic License Key\n \n `node[:newrelic][:wikipedia_example_ruby][:install_path]` -  _(required)_ Install directory. Defaults to `/opt/newrelic`. Any downloaded files will be placed here. The plugin will be installed within this directory at `newrelic_wikipedia_example_ruby_plugin`.\n \n `node[:newrelic][:wikipedia_example_ruby][:user]` - _(required)_ User to run as.\n\n#### Usage: ####\n\n    name \"newrelic_wikipedia_example_ruby_plugin\"\n    description \"System that monitors Wikipedia\"\n    run_list(\n      \"recipe[newrelic_plugins::wikipedia_example_ruby]\"\n    )\n    default_attributes(\n      \"newrelic\" => {\n        \"license_key\" => \"NEW_RELIC_LICENSE_KEY\",\n        \"wikipedia_example_ruby\" => {\n          \"install_path\" => \"/path/to/plugin\",\n          \"user\" => \"newrelic\"\n        }\n      }\n    )\n\nFor additional info, see https://github.com/newrelic-platform/newrelic_wikipedia_plugin\n\n## License ##\n\nThis cookbook is under the included MIT License.\n\n## Contact ##\n\nContribute to this Cookbook at https://github.com/newrelic-platform/newrelic_plugins_chef. Any other feedback or support related questions can be sent to support @ newrelic.com. ",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "suse",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ],
  "chef_recipes": {
    "newrelic_plugins::aws_cloudwatch": "Installs New Relic AWS Cloudwatch Plugin",
    "newrelic_plugins::example": "Installs New Relic Example Plugin",
    "newrelic_plugins::f5": "Installs New Relic F5 Plugin",
    "newrelic_plugins::mysql": "Installs New Relic MySQL Plugin",
    "newrelic_plugins::memcached_java": "Installs New Relic Memcached Java Plugin",
    "newrelic_plugins::memcached_ruby": "Installs New Relic Memcached Ruby Plugin",
    "newrelic_plugins::rackspace_load_balancers": "Installs New Relic Rackspace Load Balancers Plugin",
    "newrelic_plugins::wikipedia_example_java": "Installs New Relic Wikipedia Example Java Plugin",
    "newrelic_plugins::wikipedia_example_ruby": "Installs New Relic Wikipedia Example Ruby Plugin"
  },
  "parameters": {
    "newrelic/license_key": {
      "display_name": "New Relic License Key",
      "description": "License Key for your New Relic account",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::aws_cloudwatch",
        "newrelic_plugins::example",
        "newrelic_plugins::f5",
        "newrelic_plugins::mysql",
        "newrelic_plugins::memcached_java",
        "newrelic_plugins::memcached_ruby",
        "newrelic_plugins::rackspace_load_balancers",
        "newrelic_plugins::wikipedia_example_java",
        "newrelic_plugins::wikipedia_example_ruby"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/aws_cloudwatch/install_path": {
      "display_name": "New Relic AWS Cloudwatch Plugin Install Path",
      "description": "Install Path for New Relic AWS Cloudwatch Plugin",
      "type": "string",
      "required": "required",
      "default": "/opt/newrelic",
      "recipes": [
        "newrelic_plugins::aws_cloudwatch"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/aws_cloudwatch/user": {
      "display_name": "New Relic AWS Cloudwatch Plugin User",
      "description": "User to run as for New Relic AWS Cloudwatch Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::aws_cloudwatch"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/aws_cloudwatch/aws_access_key": {
      "display_name": "New Relic AWS Cloudwatch Plugin Access Key",
      "description": "AWS Access Key for New Relic AWS Cloudwatch Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::aws_cloudwatch"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/aws_cloudwatch/aws_secret_key": {
      "display_name": "New Relic AWS Cloudwatch Plugin Secret Key",
      "description": "AWS Secret Key for New Relic AWS Cloudwatch Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::aws_cloudwatch"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/aws_cloudwatch/agents": {
      "display_name": "New Relic AWS Cloudwatch Plugin Agents",
      "description": "AWS Agents for New Relic AWS Cloudwatch Plugin",
      "type": "array",
      "required": "required",
      "recipes": [
        "newrelic_plugins::aws_cloudwatch"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/aws_cloudwatch/regions": {
      "display_name": "New Relic AWS Cloudwatch Plugin Regions",
      "description": "AWS Regions for New Relic AWS Cloudwatch Plugin",
      "type": "array",
      "required": "optional",
      "recipes": [
        "newrelic_plugins::aws_cloudwatch"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/example/install_path": {
      "display_name": "New Relic Example Plugin Install Directory",
      "description": "Install Directory for New Relic Example Plugin",
      "type": "string",
      "required": "required",
      "default": "/opt/newrelic",
      "recipes": [
        "newrelic_plugins::example"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/example/user": {
      "display_name": "New Relic Example Plugin User",
      "description": "User to run as for New Relic Example Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::example"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/f5/install_path": {
      "display_name": "New Relic F5 Plugin Install Directory",
      "description": "Install Directory for New Relic F5 Plugin",
      "type": "string",
      "required": "required",
      "default": "/opt/newrelic",
      "recipes": [
        "newrelic_plugins::f5"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/f5/user": {
      "display_name": "New Relic F5 Plugin User",
      "description": "User to run as for New Relic F5 Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::f5"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/f5/agents": {
      "display_name": "New Relic F5 Plugin Agents",
      "description": "F5 Agents for New Relic F5 Plugin",
      "type": "array",
      "required": "required",
      "recipes": [
        "newrelic_plugins::f5"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/mysql/install_path": {
      "display_name": "New Relic MySQL Plugin Install Path",
      "description": "Install Path for New Relic MySQL Plugin",
      "type": "string",
      "required": "required",
      "default": "/opt/newrelic",
      "recipes": [
        "newrelic_plugins::mysql"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/mysql/user": {
      "display_name": "New Relic MySQL Plugin User",
      "description": "User to run as for New Relic MySQL Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::mysql"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/mysql_plugin/servers": {
      "display_name": "New Relic MySQL Plugin Server Configurations",
      "description": "Server Configurations for New Relic MySQL Plugin",
      "type": "array",
      "required": "required",
      "recipes": [
        "newrelic_plugins::mysql"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/mysql_plugin/java_options": {
      "display_name": "New Relic MySQL Plugin Java Command Options",
      "description": "Java command options for New Relic MySQL Plugin",
      "type": "string",
      "required": "optional",
      "recipes": [
        "newrelic_plugins::mysql"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/memcached_java/install_path": {
      "display_name": "New Relic Memcached Java Plugin Install Path",
      "description": "Install Path for New Relic Memcached Java Plugin",
      "type": "string",
      "required": "required",
      "default": "/opt/newrelic",
      "recipes": [
        "newrelic_plugins::memcached_java"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/memcached_java/user": {
      "display_name": "New Relic Memcached Java Plugin User",
      "description": "User to run as for New Relic Memcached Java Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::memcached_java"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/memcached_java/servers": {
      "display_name": "New Relic Memcached Java Plugin Servers",
      "description": "Memcached servers for New Relic Memcached Java Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::memcached_java"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/memcached_java/java_options": {
      "display_name": "New Relic Memcached Java Plugin Java Options",
      "description": "Java options for New Relic Memcached Java Plugin",
      "type": "string",
      "required": "optional",
      "recipes": [
        "newrelic_plugins::memcached_java"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/memcached_ruby/install_path": {
      "display_name": "New Relic Memcached Ruby Plugin Install Path",
      "description": "Install Path for New Relic Memcached Ruby Plugin",
      "type": "string",
      "required": "required",
      "default": "/opt/newrelic",
      "recipes": [
        "newrelic_plugins::memcached_ruby"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/memcached_ruby/user": {
      "display_name": "New Relic Memcached Ruby Plugin User",
      "description": "User to run as for New Relic Memcached Ruby Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::memcached_ruby"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/memcached_ruby/agents": {
      "display_name": "New Relic Memcached Ruby Plugin Agents",
      "description": "Agents for New Relic Memcached Ruby Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::memcached_ruby"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/rackspace_load_balancers/install_path": {
      "display_name": "New Relic Rackspace Load Balancers Plugin Install Path",
      "description": "Install Path for Rackspace Load Balancers Plugin",
      "type": "string",
      "required": "required",
      "default": "/opt/newrelic",
      "recipes": [
        "newrelic_plugins::rackspace_load_balancers"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/rackspace_load_balancers/user": {
      "display_name": "New Relic Rackspace Load Balancers Plugin User",
      "description": "User to run as for New Relic Rackspace Load Balancers Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::rackspace_load_balancers"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/rackspace_load_balancers/username": {
      "display_name": "New Relic Rackspace Load Balancers Plugin Username",
      "description": "Username for Rackspace Load Balancers",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::rackspace_load_balancers"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/rackspace_load_balancers/api_key": {
      "display_name": "New Relic Rackspace Load Balancers API Key",
      "description": "API Key for Rackspace Load Balancers",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::rackspace_load_balancers"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/rackspace_load_balancers/region": {
      "display_name": "New Relic Rackspace Load Balancers Region",
      "description": "Region for Rackspace Load Balancers",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::rackspace_load_balancers"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/wikipedia_example_java/install_path": {
      "display_name": "New Relic Wikipedia Example Java Plugin Install Path",
      "description": "Install Path for New Relic Wikipedia Example Java Plugin",
      "type": "string",
      "required": "required",
      "default": "/opt/newrelic",
      "recipes": [
        "newrelic_plugins::wikipedia_example_java"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/wikipedia_example_java/user": {
      "display_name": "New Relic Wikipedia Example Java Plugin User",
      "description": "User to run as for New Relic Wikipedia Example Java Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::wikipedia_example_java"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/wikipedia_example_ruby/install_path": {
      "display_name": "New Relic Wikipedia Example Ruby Plugin Install Path",
      "description": "Install Path for New Relic Wikipedia Example Ruby Plugin",
      "type": "string",
      "required": "required",
      "default": "/opt/newrelic",
      "recipes": [
        "newrelic_plugins::wikipedia_example_ruby"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    },
    "newrelic/wikipedia_example_ruby/user": {
      "display_name": "New Relic Wikipedia Example Ruby Plugin User",
      "description": "User to run as for New Relic Wikipedia Example Ruby Plugin",
      "type": "string",
      "required": "required",
      "recipes": [
        "newrelic_plugins::wikipedia_example_ruby"
      ],
      "choice": [],
      "calculated": false,
      "mapping": "cookbook_attribute"
    }
  }
}