{
  "name": "rackspace_monitoring Chef cookbook",
  "chef_cookbook_name": "rackspace_monitoring",
  "revision": "1.0.6",
  "uris": [
    "https://supermarket.chef.io/cookbooks/rackspace_monitoring",
    "https://supermarket.chef.io/cookbooks/rackspace_monitoring/download",
    "https://supermarket.chef.io/cookbooks/rackspace_monitoring/versions/1.0.6",
    "https://supermarket.chef.io/cookbooks/rackspace_monitoring/versions/1.0.6/download",
    "https://supermarket.chef.io/api/v1/cookbooks/rackspace_monitoring/versions/1.0.6",
    "https://supermarket.chef.io/api/v1/cookbooks/rackspace_monitoring",
    "https://supermarket.chef.io/api/v1/cookbooks/rackspace_monitoring/versions/1.0.6/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Monitoring"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/rackspace_monitoring",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/rackspace_monitoring/versions/1.0.6/download",
  "deprecated": false,
  "created": "2015-05-22T09:03:35.809Z",
  "updated": "2016-08-10T16:20:26.932Z",
  "description": "Installs/Configures rackspace_monitoring",
  "maintainer": {
    "name": "rackspace",
    "email": "rackspace-cookbooks@rackspace.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 746985,
  "downloads_count_revision": 109661,
  "repository_url": "https://github.com/rackspace-cookbooks/rackspace_monitoring",
  "issues_url": "https://github.com/rackspace-cookbooks/rackspace_monitoring/issues",
  "chef_source_url": "https://github.com/rackspace-cookbooks/rackspace_monitoring",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "[![Circle CI](https://circleci.com/gh/rackspace-cookbooks/rackspace_monitoring.svg?style=svg)](https://circleci.com/gh/rackspace-cookbooks/rackspace_monitoring)\n\n# rackspace_monitoring-cookbook\n\nThe Rackspace Cloud-monitoring cookbook provides resource primitives (LWRPs) for use in recipes.\nThe goal is to offer resources to configure [Rackspace Cloud-monitoring](http://www.rackspace.co.uk/cloud/monitoring)\n\n## In scope\n\nThis cookbook focuses on installing the Rackspace monitoring agent and creating check/alarms. Future plans include to support non-cloud servers.\n\n## Out of scope\n\nThis cookbook has not been designed to directly call Rackspace API. Instead it relies on the [Rackspace monitoring agent](http://www.rackspace.com/knowledge_center/article/install-and-configure-the-cloud-monitoring-agent).\n\n## Supported Platforms\n\n* Centos 6.5\n* Ubuntu 12.04\n* Ubuntu 14.04\n\nWindows is not supported yet.\n\n## Usage\n\nPlace a dependency on the rackspace_monitoring cookbook in your cookbook's metadata.rb\n```\ndepends 'rackspace_monitoring'\n```\nThen, in a recipe:\n\n```\nrackspace_monitoring_service 'default' do\n  cloud_credentials_username 'my_user'\n  cloud_credentials_api_key 'uc60892165188d7i786p833917a3v7613'\n  action [:create, :start]\nend\n\nrackspace_monitoring_check 'filesystem' do\n  type 'agent.filesystem'\n  target '/var'\n  alarm true\n  action :create\nend\n```\n\n## Resources\n\n### rackspace_monitoring_service\nThe `rackspace_monitoring_service` resources manages the basic plumbing needed to get a rackspace-monitoring agent instance running with minimal configuration.\n\nThe :create action handles package installation. The internal configuration file contains just enough to get the service up and running, then loads extra configuration from a rackspace-monitoring-agent.conf.d directory.\n\n#### Parameters\n\n* `cloud_credentials_username` - Your cloud username\n* `cloud_credentials_api_key` - Your cloud [api-key](http://www.rackspace.com/knowledge_center/article/view-and-reset-your-api-key)\n* `package_name` - Rackspace monitoring agent package name (default to `rackspace-monitoring-agent`)\n* `package_action` - Which action to run when `:create` default to `install`\n\n#### Actions\n\n* `:create` - Configures everything but the underlying operating system service\n* `:delete` - Removes everything\n* `:start` - Starts the underlying operating system service\n* `:stop` - Stops the underlying operating system service\n* `:restart` - Restarts the underlying operating system service\n* `:reload` - Reloads the underlying operating system service\n* `:disable/:enable` Enables/Disables the underlying operating system service\n\n### rackspace_monitoring_check\nThe `rackspace_monitoring_check` resources creates the agent configuration for a defined type.\n\nThe :create action handles package installation. The internal configuration file contains just enough to get the service up and running, then loads extra configuration from a rackspace-monitoring-agent.conf.d directory.\n\n#### Parameters\n##### Common to all checks\n* `:label` - optional - A friendly label for a check - Default : *Check for `:type`*\n* `:agent_filename` - optional - File name used to create the agent configuration - Default : same as `:type`. If you use the same agent type more than once in a recipe then you should set `:agent_filename`, as otherwise your agents configuration will conflict as they will have the same filename.\n* `:alarm` - optional - Enable or disable the alarm on a check - Default : false\n* `:alarm_criteria` - optional - Criteria used to trigger alarms - Default : agent specific `./libaries/helpers.rb` => `parsed_alarm_criteria`\n* `:period` - optional - The period in seconds for a check. The value must be greater than the minimum period set on your account -Default : 90\n* `:timeout` - optional - The timeout in seconds for a check. This has to be less than the period - Default : 30\n* `:critical` - optional - Threshold for the default alarm criteria - Default : 95\n* `:warning` - optional - Threshold for the default alarm criteria - Default : 90\n* `:notification_plan_id` - optional - Notification plan for the alarms - Default : npTechnicalContactsEmail\n* `:variables` - optional - Additional variables you want to use in the template.`variable_name => 'value'`. It will allow to add attributes to the agent configuration if you need more than the default ones. [Here is an example](https://github.com/rackspace-cookbooks/rackspace_monitoring/blob/master/test/fixtures/cookbooks/rackspace_monitoring_check_test/recipes/http.rb#L8-L9) for `remote.http`. If you want to create your own `:template` you can use all the `:variables` with `@variable_name`.\n\n##### Used on some checks (filesystem/disk/network)\n\n* `:target` - used for filesystem/disk/network only\n  * `disk` : The disk to check (eg '/dev/xvda1') String/Array - Default : Create one file per /dev/(sd|vd|xvd|hd)\n  * `filesystem` : The mount point to check (eg '/var' or 'C:') String/Array - Default : Create one file per filesystem\n  * `network` : The network device to check (eg 'eth0') - Default : Fallback to the default interface\n* `:target_hostname` - required for http only - Server to request for the HTTP check\n* `:send_warning` - required for network only - Threshold for the default send alarm criteria - Default : 18350080\n* `:send_critical` - required for network only - Threshold for the default send alarm criteria - Default : 24903680\n* `:recv_warning` - required for network only - Threshold for the default receive alarm criteria - Default : 18350080\n* `:recv_critical` - required for network only - Threshold for the default send alarm criteria - Default : 24903680\n\n##### Plugins attributes\n* `:plugin_url` - optional if `:plugin_filename` has been provided - Url from where to download a plugin. i.e https://raw.githubusercontent.com/racker/rackspace-monitoring-agent-plugins-contrib/master/chef_node_checkin.py\n* `:plugin_args` - optional - Arguments to pass to the plugin (Array)\n* `:plugin_filename` - optional if `:plugin_url` has been provided, mandatory otherwise.\n* `:plugin_timeout` - optional - The timeout for the plugin execution - Default : 30\n\n##### Template config\n\n* `:cookbook` - optional - Where to look for the agent yaml template - Default : 'rackspace_monitoring'\n* `:template` - optional - Where to look for the agent yaml template - Default : '`:type`.conf.erb' or `custom_check.conf.erb`\n* `:type` - required - Which kind of agent to configure. Supported agents :\n  * [agent.memory](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/appendix-check-types-agent.html#section-ct-agent.memory)\n  * [agent.cpu](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/appendix-check-types-agent.html#section-ct-agent.cpu)\n  * [agent.load](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/appendix-check-types-agent.html#section-ct-agent.load)\n  * [agent.filesystem](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/appendix-check-types-agent.html#section-ct-agent.filesystem)\n  * [agent.disk](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/appendix-check-types-agent.html#section-ct-agent.disk)\n  * [agent.network](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/appendix-check-types-agent.html#section-ct-agent.network)\n  * [agent.plugin](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/appendix-check-types-agent.html#section-ct-agent.plugin)\n  * [remote.http](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/appendix-check-types-remote.html#section-ct-remote.http)\n  * anything else will load `custom_check.conf.erb` and all the parameters and variables will be available in the template. [Rackspace check types](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/appendix-check-types.html)\n\n#### Actions\n* `:create` - Create an agent configuration\n* `:delete` - Removes an agent configuration (will not remove the check)\n* `:disable/:enable` Disable/enable the agent check.\n\n\n### Examples\n#### CPU agent with alarm enabled\n```\nrackspace_monitoring_check 'Cpu check' do\n  type 'agent.cpu'\n  alarm true\n  action :create\nend\n```\n#### Create a new agent config from scratch\nBy example `remote.ping` which is not a supported type\n\n```\nrackspace_monitoring_check 'custom' do\n  type 'remote.ping'\n  cookbook 'rackspace_monitoring_check_test'\n  template 'user_defined.conf.erb'\n  alarm true\n  variables 'count' => '10'\n  action :create\nend\n```\n\nThen you can have your own template :\n\n```\ntype: remote.ping\nlabel: Remote ping check on <%= @target_hostname %>\ndisabled: <%= @disabled %>\nperiod: <%= @period %>\ntimeout: <%= @timeout %>\ntarget_hostname: <%= @target_hostname %>\nmonitoring_zones_poll:\n  - mzdfw\n  - mzord\n  - mziad\ndetails:\n  <% @variables.each do |param,value| %>\n  <%= param -%>: <%= value %>\n  <% end %>\n```\n#### Create a http agent but add some variables not exposed by the resource as parameters\n```\nhostname = 'dummyhost.com'\nrackspace_monitoring_check 'http' do\n  type 'remote.http'\n  target_hostname hostname\n  alarm true\n  variables 'url' => \"http://#{hostname}/healthcheck\",\n            'body' => 'Status OK'\n  action :create\nend\n```\n#### Create a plugin check chef_node_checkin(rackspace-monitoring-agent-plugins-contrib)\n```\nrackspace_monitoring_check 'agent.plugin' do\n  type 'agent.plugin'\n  plugin_url 'https://raw.githubusercontent.com/racker/rackspace-monitoring-agent-plugins-contrib/master/chef_node_checkin.py'\n  plugin_args '--debug'\n  plugin_filename 'awesome_plugin.py'\n  alarm true\n  action :create\nend\n```\n\n## References\n\n* [Available check types](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/appendix-check-types.html)\n* [Common checks attributes](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/service-checks.html)\n* [Cloud monitoring concepts](http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/Concepts.html#concepts-key-terms)\n\n## Contributing\n\n1. Fork the repository on Github\n2. Create a named feature branch (i.e. `add-new-recipe`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request\n\n## License and Authors\n\nAuthors:: Julien Berard (julien.berard@rackspace.co.uk)\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}