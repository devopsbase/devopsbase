{
  "name": "chef_hostname Chef cookbook",
  "chef_cookbook_name": "chef_hostname",
  "revision": "0.2.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/chef_hostname",
    "https://supermarket.chef.io/cookbooks/chef_hostname/download",
    "https://supermarket.chef.io/cookbooks/chef_hostname/versions/0.2.0",
    "https://supermarket.chef.io/cookbooks/chef_hostname/versions/0.2.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/chef_hostname/versions/0.2.0",
    "https://supermarket.chef.io/api/v1/cookbooks/chef_hostname",
    "https://supermarket.chef.io/api/v1/cookbooks/chef_hostname/versions/0.2.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Runtime/JavaScript/Node.js"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/chef_hostname",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/chef_hostname/versions/0.2.0/download",
  "deprecated": false,
  "created": "2016-03-11T01:36:25.265Z",
  "updated": "2016-09-19T19:27:55.348Z",
  "description": "Configures the hostname on a node",
  "maintainer": {
    "name": "lamont",
    "email": "cookbooks@chef.io"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 16634,
  "downloads_count_revision": 204,
  "repository_url": "https://github.com/lamont-cookbooks/chef_hostname",
  "issues_url": "https://github.com/lamont-cookbooks/chef_hostname/issues",
  "chef_source_url": "https://github.com/lamont-cookbooks/chef_hostname",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# chef_hostname Cookbook\n\nSets the node's hostname\n\n* resource-driven cookbook\n* supports FQDNs as hostnames\n* persists after a reboot\n* reloads ohai\n* runs at compile-time (no need to use lazy)\n* fixes up /etc/hosts so node[\"fqdn\"] works\n* runs nearly everywhere\n* supports hostnamectl from systemd\n\n## Motivation\n\n* Make strong guarantees that `node[\"fqdn\"]` in other recipes \"just works\"\n* No need to `lazy { node[\"fqdn\"] }`\n* Be very portable\n\n## Requirements\n\n## Platforms\n- Ubuntu/Debian/Mint/Raspbian\n- RHEL/CentOS/Scientific/Oracle/Fedora/Pidora\n- OpenSUSE/SLES\n- FreeBSD/OpenBSD/NetBSD\n- Docker Containers\n- Windows\n\n### Chef\n- Chef 12.1+\n\n### Cookbooks\n- compat_resource\n\n\n## Custom Resources\n\nhostname Sets the hostname, ensures that reboot will preserve the hostname, re-runs the ohai plugin to set the node data.\n\n### Actions\n\n- :set: Ses the hostname\n\n### Properties\n\n- hostname: hostname to set\n- compile_time:  defaults to running at compile time, set to false to disable\n\n## Examples\n\nSetting hostname to a string:\n\n```ruby\nhostname \"foo.example.com\"\n```\n\nSetting hostname to the node name:\n\n```ruby\nhostname node.name\n```\n\nSetting hostname to whatever attribute you like:\n\n```ruby\nhostname node['set_fqdn']\n```\n\nThere is no need to \"lazy\" arguments to templates and filenames when this is used since it forces itself to run at compile-time.\n\n```ruby\nhostname node.name\n\n# node[\"fqdn\"] will be set here at compile time\ntemplate \"/etc/motd\" do\n  source \"motd.erb\"\n  variables({\n    fqdn: node[\"fqdn\"]\n  })\nend\n\n# /bin/hostname will be set here at compile time\nmyhostname = `/bin/hostname`\n\nfile \"/etc/issue\" do\n  content myhostname\nend\n```\n\nThe hostname resource will drop a line into /etc/hosts so that the `node[\"fqdn\"]` can be resolved correctly, and will re-trigger ohai.  The default is\nto use the node[\"ipaddress\"]` value for the ipaddress on the /etc/hosts line.  In order to override it:\n\n```ruby\nhostname node[\"cloud\"][\"public_hostname\"]\n  ipaddress node[\"cloud\"][\"public_ipv4\"]\nend\n```\n\nIn order to override the editing of the /etc/hosts file pass nil for the ipaddress (note that if you edit the /etc/hosts file you will be responsible\nfor also reloading the ohai plugin and you will want to do both at compile-time yourself in order for `node[\"fqdn\"]` to resolve)\n\n```ruby\nhostname node.name\n  ipaddress nil\nend\n```\n\nAliases can also be added to the line that hostname adds to /etc/hosts:\n\n```ruby\nhostname node.name\n  ipaddress \"259.1.1.1\"\n  aliases [ \"klowns.car.local\", \"britney\" ]\nend\n```\n\n## Notes\n\nThere are no recipes in this cookbook, the resource is meant to be used in your own custom recipes.  There are no attributes in this cookbook,\nyou can drive the resource off of whatever attribute(s) you like.\n\n## TODO\n- fix setting node['fqdn'] correctly on windows\n- mac\n- solaris\n- aix\n- nexus\n- arch\n- gentoo\n\n## License & Authors\n\n```\nAuthor:: Lamont Granquist (<lamont@chef.io>)\n\nCopyright:: 2016-2016, Chef Software, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/compat_resource",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}