{
  "name": "go_cd Chef cookbook",
  "chef_cookbook_name": "go_cd",
  "revision": "0.3.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/go_cd",
    "https://supermarket.chef.io/cookbooks/go_cd/download",
    "https://supermarket.chef.io/cookbooks/go_cd/versions/0.3.0",
    "https://supermarket.chef.io/cookbooks/go_cd/versions/0.3.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/go_cd/versions/0.3.0",
    "https://supermarket.chef.io/api/v1/cookbooks/go_cd",
    "https://supermarket.chef.io/api/v1/cookbooks/go_cd/versions/0.3.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Integration/Go CD",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/go_cd",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/go_cd/versions/0.3.0/download",
  "deprecated": false,
  "created": "2015-02-23T08:37:44.569Z",
  "updated": "2016-04-30T04:10:55.699Z",
  "description": "Installs/Configures go-server",
  "maintainer": {
    "name": "rdeys",
    "email": "ranjib@linux.com"
  },
  "license": "All rights reserved",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 4,
  "downloads_count": 662327,
  "downloads_count_revision": 335,
  "repository_url": "https://github.com/GoatOS/go_cd",
  "issues_url": "https://github.com/GoatOS/go_cd/issues",
  "chef_source_url": "https://github.com/GoatOS/go_cd",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "## go_cd Cookbook\n[Chef](https://www.chef.io/chef/) cookbook for managing [GoCD](http://www.go.cd/).\n\n### Description\nThis cookbook install and configures ThoughtWorks GoCD server and agent.\nThis cookbook is adapted from the other community [GoCD cookbook](https://github.com/ketan/thoughtworks-go-cookbooks) to support running agents as custom user.\n\n### Usage\n\nEither assign the relevent recipes (server or agent) directly to node's run list or use `include_recipe` from wrapper recipes.\n\nThe agent recipe uses `node['go_cd']['server_ip']` attribute to configure the GoCD server. By default this points to localhost. If you are using chef solo, use role or environment to override this value, if you are using chef search capabilties, you can use wrapper recipes as well to specify the GoCD server ip. Example:\n\n```ruby\nnode.default['go_cd']['server_ip'] = search(:node, 'name:gocd-server').first.ipaddress\ninclude_recipe 'go_cd::agent'\n```\n\nThis cookbook is used along side [container](https://github.com/GoatOS/container) and [xml_file](https://github.com/GoatOS/xml_file) cookbooks to create Continuous Integration servers, capable of running unprivileged LXC containers as part of their [build/test pipelines](https://github.com/GoatOS/GoatOS). An example can be found [here](https://github.com/GoatOS/go_cd/blob/master/functional/lxc_spec.rb) (dogfood :-))\n\n## License\n[Apache 2](http://www.apache.org/licenses/LICENSE-2.0)\n\n\n## Contributing\n\n1. Fork it ( https://github.com/GoatOS/go_cd/fork )\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "go_cd::server": "Install GoCD server",
    "go_cd::agent": "Install GoCD agent"
  }
}