{
  "name": "network_interfaces_v2 Chef cookbook",
  "chef_cookbook_name": "network_interfaces_v2",
  "revision": "2.9.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/network_interfaces_v2",
    "https://supermarket.chef.io/cookbooks/network_interfaces_v2/download",
    "https://supermarket.chef.io/cookbooks/network_interfaces_v2/versions/2.9.0",
    "https://supermarket.chef.io/cookbooks/network_interfaces_v2/versions/2.9.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/network_interfaces_v2/versions/2.9.0",
    "https://supermarket.chef.io/api/v1/cookbooks/network_interfaces_v2",
    "https://supermarket.chef.io/api/v1/cookbooks/network_interfaces_v2/versions/2.9.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System/Linux/RedHat",
    "Binding/Provider",
    "Mode/Executable/Script/Chef Cookbook",
    "Style/Virtualization Level/Hardware/Network",
    "Type/Infrastructure/Operating System/Windows",
    "Type/Infrastructure/Operating System/Linux/Ubuntu"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/network_interfaces_v2",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/network_interfaces_v2/versions/2.9.0/download",
  "deprecated": false,
  "created": "2015-05-26T17:51:04.460Z",
  "updated": "2016-09-07T19:01:56.464Z",
  "description": "Providers for configuring network on Ubuntu, RHEL, and Windows",
  "maintainer": {
    "name": "target-cookbooks",
    "email": "jacob.mccann2@target.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 13,
  "downloads_count": 277063,
  "downloads_count_revision": 414,
  "repository_url": "https://github.com/target/network_interfaces_v2-cookbook",
  "issues_url": "https://github.com/target/network_interfaces_v2-cookbook/issues",
  "chef_source_url": "https://github.com/target/network_interfaces_v2-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Cookbook network_interfaces_v2\n==============================\n[![Build Status](https://travis-ci.org/target/network_interfaces_v2-cookbook.svg?branch=travis_ci)](https://travis-ci.org/target/network_interfaces_v2-cookbook)\n\nA cookbook containing providers for defining network interfaces.\n\nSupported Platforms\n===================\n\n* RHEL 6.x\n* RHEL 7.x\n* Ubuntu >= 14.x\n* Windows 2012R2\n\n### Semi-supported\nThese operating systems are not currently being tested on but have been confirmed by other users to be working.\n\n* RHEL 7.x\n* Windows 2008R2\n  * Works if PowerShell/WMF 4.0 is present, which can be installed via `network_interfaces_v2::powershell_installer` recipe\n\nUsage\n=====\n\nAdd `depends 'network_interfaces_v2'` to your cookbook metadata.rb file.  This\nwill give you access to the providers documented below.\n\nRecipes\n=======\n\ndefault\n-------\nDoes nothing and does not need to be included.\n\npowershell_installer\n--------------------\nInstalls WMF 4.0 for Windows 2008 R2 which is a prereq for this cookbook's providers to work on Windows 2008 R2.\n\nnetwork_interface\n=================\nProvider for managing network interfaces.\n\nAttributes\n----------\n* device (**REQUIRED**) - Device name\n* onboot (default: true) - Wether or not to online device on boot\n* bootproto (default: 'dhcp') - Device protocol\n* bond_mode - Bonding mode\n* address - IP address\n* netmask - Netmask\n* gateway - Gateway IP address\n* broadcast - Broadcast address\n* mtu - MTU\n* hw_address - For linux it sets MAC address of device, for windows it selects device matching MAC to configure\n* vlan\n * debian - VLAN device interface\n * RHEL - true/false if device defined is a VLAN interface\n * Win - Integer VlanID to tag to defined device\n* post_up - Post up command to run after modifying the interface\n* reload (default: true) - Wether or not to reload the device on config changes\n* reload_type (default: :immediately) - When to reload device on config changes\n* cookbook (default: 'network_interfaces_v2') - Cookbook to look for template files in\n* source (default: 'ifcfg.erb') - Template file to use for interface config\n\n#### Debian Only Attributes\n* ipv6 (true/false) - Wether this is an inet or inet6 network interface.\n* bridge_stp (true/false) - Wether to enable/disable bridge STP.  Applies to debian only.\n* bridge_ports - Array of interfaces to add to defined bridge\n* metric -\n* bond_slaves - Array of interfaces to add to defined bond\n* pre_up (default: 'sleep 2')- Pre up command\n* up - Up command\n* post_up - Post up command\n* pre_down - Pre down command\n* down - Down command\n* post_down - Post down command\n* custom - Hash of extra attributes to put in device config\n\n#### RHEL Only Attributes\n* prefix - Netmask length (e.g. 24 for 255.255.255.0)\n* dns - Array of DNS servers\n* type - Protocol Type.  Applies to RHEL only.\n* bond_master - Device that is the bond master for defined device.  Applies to RHEL only.\n* nm_controlled (default: false)- If device should be controlled by network manager.\n* type (default: 'Ethernet') -\n* ipv6init - true/false\n* nozeroconf - true/false\n* userctl - true/false\n* peerdns - true/false\n* bridge_device - Bridge to add defined interface to\n* devicetype - Set the type of device (e.g. 'ovs')\n* ovs_bridge - OVS Bridge to bind ovs port to (primarily used when `type` is set as 'OVSPort')\n* dns_domain - DNS domain\n* zone - FirewallD zone\n* arpcheck - Whether to arping before bringing up an ethernet device to check for an IP conflict (default: true)\n* hotplug - Activate devices on hotplug (default: true)\n\n#### Windows Only Attributes\n* hw_address - Can be used to define what device to manage\n* index - Can be used to define what device to manage\n* dns - Array of DNS servers\n* dns_domain - DNS domain\n* ddns - true/false dynamic dns registration\n* netbios - Enable/Disable netbios on the interface.  Valid values: true, false, 'dhcp'\n\nProviders\n---------\n\nLong name | Short name\n----------|-----------\nChef::Provider::NetworkInterface::Rhel | rhel_network_interface\nChef::Provider::NetworkInterface::Debian | debian_network_interface\nChef::Provider::NetworkInterface::Win | win_network_interface\n\nExamples\n--------\n\nBasic example:\n```ruby\nnetwork_interface 'eth1' do\n  bootproto 'static'\n  address '10.12.10.11'\n  netmask '255.255.255.0'\n  gateway '10.12.10.1'\nend\n```\n\nTwo interface DHCP bond0 on rhel family\n```ruby\nnetwork_interface 'eth1' do\n  bootproto 'none'\n  bond_master 'bond0'\nend\n\nnetwork_interface 'eth2' do\n  bootproto 'none'\n  bond_master 'bond0'\nend\n\nnetwork_interface 'bond0' do\n  bond_mode 'mode=1 miimon=100'\nend\n```\n\nTwo interface DHCP bond0 on debian family\n```ruby\nnetwork_interface 'bond0' do\n  bond_slaves ['eth1', 'eth2']\n  bond_mode '0'\nend\n\nnetwork_interface 'eth1' do\n  bootproto 'manual'\n  bond_master 'bond0'\nend\n\nnetwork_interface 'eth2' do\n  bootproto 'manual'\n  bond_master 'bond0'\nend\n```\n\nOn windows manage device with MAC '00-25-B5-5B-00-25', name it 'eth2',\nmake it DHCP (default bootproto) and VLAN tagged to VLAN 12\n```ruby\nnetwork_interface 'eth2' do\n  hw_address '00-25-B5-5B-00-25'\n  vlan 12\nend\n```\n\nTesting\n=======\nRequires [ChefDK](https://downloads.chef.io/chef-dk/) 0.12.0.\n\n```\nrubocop\nfoodcritic -f any -X spec .\nrspec --color --format progress\nkitchen test\n```\n\nLicense and Authors\n===================\n\nAuthor:: Jacob McCann (<jacob.mccann2@target.com>)\n\nBased on work from https://github.com/redguide/network_interfaces\n\n```text\nCopyright:: 2015, Target Corporation\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 14.04",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 6.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 6.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/kernel_module",
      "revision": "~> 1.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/powershell",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}