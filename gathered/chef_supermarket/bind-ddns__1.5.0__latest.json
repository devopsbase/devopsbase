{
  "name": "bind-ddns Chef cookbook",
  "chef_cookbook_name": "bind-ddns",
  "revision": "1.5.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/bind-ddns",
    "https://supermarket.chef.io/cookbooks/bind-ddns/download",
    "https://supermarket.chef.io/cookbooks/bind-ddns/versions/1.5.0",
    "https://supermarket.chef.io/cookbooks/bind-ddns/versions/1.5.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/bind-ddns/versions/1.5.0",
    "https://supermarket.chef.io/api/v1/cookbooks/bind-ddns",
    "https://supermarket.chef.io/api/v1/cookbooks/bind-ddns/versions/1.5.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Networking",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Mode/CLI",
    "Type/Infrastructure/Network/DNS"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/bind-ddns",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/bind-ddns/versions/1.5.0/download",
  "deprecated": false,
  "created": "2015-10-14T02:54:26.626Z",
  "updated": "2016-08-02T20:14:32.339Z",
  "description": "Install and configure ISC Bind on server and nsupdate on clients",
  "maintainer": {
    "name": "samuel_bernard",
    "email": "dps.team@s4m.io"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 1936,
  "downloads_count_revision": 135,
  "repository_url": "https://gitlab.com/s4m-chef-repositories/bind-ddns",
  "issues_url": "https://gitlab.com/s4m-chef-repositories/bind-ddns/issues",
  "chef_source_url": "https://gitlab.com/s4m-chef-repositories/bind-ddns",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Bind DDNS\n=========\n\nDescription\n-----------\n\nInstall and configure **ISC Bind** <https://www.isc.org/downloads/bind/> with\nfull Dynamic DNS support.\n\nOn client side, install **nsupdate**, provide a generic provider and a recipe\nto update DNS entries.\n\nRequirements\n------------\n\n### Cookbooks and gems\n\nDeclared in [metadata.rb](metadata.rb) and in [Gemfile](Gemfile).\n\n### Platforms\n\n- RHEL Family 7, tested on Centos\n\nNote: it should work fine on Debian 8 but the official docker image does not\nallow systemd to work easily, so it could not be tested.\n\nUsage\n-----\n\n### Easy Setup\n\nAdd `recipe[bind-ddns::server]` in your run-list to install and configure\n**Bind**. Configuration will be fetched from attributes `options`, `zones` and\n`keys`.\n\nTo add a client, add `recipe[bind-ddns::client]`. **nsupdate** recipe will\nupdate all records defined in `records`.\n\nTo see an example, look at [.kitchen.yml](.kitchen.yml).\n\n### Test\n\nThis cookbook is fully tested through the installation of a server and a client\nin docker hosts. This uses kitchen, docker and some monkey-patching.\n\nIf you run kitchen list, you will see 2 suites, Each corresponds to a different\nserver:\n\n- server-ddns-centos-7: Bind server\n- client-ddns-centos-7: DNS client with **nsupdate**\n\nFor more information, see [.kitchen.yml](.kitchen.yml) and [test](test)\ndirectory.\n\nAttributes\n----------\n\nConfiguration is done by overriding default attributes. All configuration keys\nhave a default defined in [attributes/default.rb](attributes/default.rb).\nPlease read it to have a comprehensive view of what and how you can configure\nthis cookbook behavior.\n\nNote: for fields needing an IP address, it is possible to set an interface\nname, which will be resolved to its first non-local address.\n\n### Specific configuration (client or server)\n\nTo allow clients and servers to share a same role, it is possible to define\nspecific configuration keys applicable to one of the status (client or server).\n\nSpecific configurations can be any of the attributes defined in\n[attributes/default.rb](attributes/default.rb) but in either \"client-config\"\nor \"server-config\" sub-tree.\n\nA node is declared as server if its FQDN is included in attribute\n\"\\['bind-ddns'\\]\\['servers'\\]\" defined as an array. Else, it is considered\nas a client.\n\nRecipes\n-------\n\n### default\n\nCall **init** and then, following the node status, call **client** or\n**server** recipe.\n\n### init\n\nDetermine if the current machine is a server or a client. Write the result\nin \"run\\_state\\['bind-ddns'\\]\\['status'\\]\". Then merge default and specific\n(client or server) configurations and store the result in\n\"run\\_state\\['bind-ddns'\\]\\['config'\\]\".\n\nNote: **init** is included in all recipes.\n\n### package\n\nInstall **Bind** package.\n\n### package\\_client\n\nInstall **Bind utils** package.\n\n### config\n\nConfigure **Bind** server: *named.conf*, *keys* and *zones*.\nThen check configuration through **named-checkconf**.\n\n### service\n\nEnable and start *named* service, subscribes on *named-checkconf* resource.\n\n### nsupdate\n\nCall **bind-ddns** default provider (which call **nsupdate** command) based on\nattribute `records`. See [.kitchen.yml](.kitchen.yml) for more information.\n\nReplace some missing configuration attributes:\n- domain (name attribute) by the FQDN\n- data by the ip defined in \"node[:ipaddress]\"\n- zone by the tail part of the domain\n\n### resolvconf\n\nSet *resolv.conf* using `server` attribute.\n\n### client\n\nInstall **Bind utils**, configure *resolv.conf* if requested (by attribute\n`set_resolv_conf`) with recipe **resolvconf** and call **nsupdate** recipe.\n\n### server\n\nInstall, configure and launch **Bind**. Then call **client** recipe.\n\nResources/Providers\n-------------------\n\n### default\n\nAdd, update or remove a DNS record using **nsupdate**. Read the\n[resources/default.rb](resource file) for more details.\n\nSimple example:\n```ruby\nbind_ddns 'test.foo' do\n  server 'ns.foo'\n  data \"10.11.12.13\"\n  keyname 'foo'\n  secret 'XXXX'\nend\n```\n\nUse action `:delete` to delete an entry (default is :add).\n\nChangelog\n---------\n\nAvailable in [CHANGELOG](CHANGELOG).\n\nContributing\n------------\n\nPlease read carefully [CONTRIBUTING.md](CONTRIBUTING.md) before making a merge\nrequest.\n\nLicense and Author\n------------------\n\n- Author:: Samuel Bernard (<samuel.bernard@s4m.io>)\n\n```text\nCopyright:: 2015-2016, Sam4Mobile\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 7.1",
      "one_of_group": "os"
    }
  ]
}