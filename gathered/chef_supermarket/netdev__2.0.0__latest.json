{
  "name": "netdev Chef cookbook",
  "chef_cookbook_name": "netdev",
  "revision": "2.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/netdev",
    "https://supermarket.chef.io/cookbooks/netdev/download",
    "https://supermarket.chef.io/cookbooks/netdev/versions/2.0.0",
    "https://supermarket.chef.io/cookbooks/netdev/versions/2.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/netdev/versions/2.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/netdev",
    "https://supermarket.chef.io/api/v1/cookbooks/netdev/versions/2.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Networking",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/Europe/EU",
    "Mode/Executable/Script/Chef Cookbook",
    "Style/Virtualization Level/Hardware/Network",
    "Type/Infrastructure/Network"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/netdev",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/netdev/versions/2.0.0/download",
  "deprecated": false,
  "created": "2013-05-10T15:20:14.000Z",
  "updated": "2016-01-15T23:08:08.053Z",
  "description": "Provides a set of vendor-neutral resources for managing networking devices",
  "maintainer": {
    "name": "chef",
    "email": "releng@getchef.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 3,
  "downloads_count": 2507656,
  "downloads_count_revision": 1253929,
  "repository_url": "https://github.com/chef-partners/netdev",
  "issues_url": "https://github.com/chef-partners/netdev/issues",
  "chef_source_url": "https://github.com/chef-partners/netdev",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "netdev Cookbook\n===============\n[![Build Status](https://secure.travis-ci.org/opscode-cookbooks/omnibus.png?branch=master)](http://travis-ci.org/opscode-cookbooks/netdev)\n\nProvides a set of vendor-agnostic resources for managing networking devices.\n\nRequirements\n------------\n\n- Chef 11.0.0+\n- Supported networking device from Arista or Juniper.\n\nUsage\n-----\nAdd a dependency on netdev to your cookbook's `metadata.rb`\n\n```ruby\ndepends 'netdev'\n```\n\nResources/Providers\n-------------------\n\nAll resources are fully documented on [Chef's offical documentation site](http://docs.opscode.com/junos.html).\n\nResource | Description | Example Usage |\n-------|-------------|---------|\n__netdev_interface__ | This resource provides an abstraction for managing physical interfaces on network elements. | [netdev_interface integation test fixture](test/fixtures/cookbooks/interface/recipes/create.rb)\n__netdev\\_l2\\_interface__ | This resource provides an abstraction for creating and deleting layer 2 interfaces on network devices. | [netdev_l2_interface integation test fixture](test/fixtures/cookbooks/l2_interface/recipes/create.rb).\n__netdev\\_lag__ | This resource provides an abstraction for creating and deleting link aggregation group interfaces. | [netdev_lag integation test fixture](test/fixtures/cookbooks/lag/recipes/create.rb).\n__netdev\\_vlan__ | This resource provides an abstraction for creating and deleting VLANs. | [netdev_vlan integation test fixture](test/fixtures/cookbooks/vlan/recipes/create.rb).\n\nTesting\n-------\nYou can run the tests in this cookbook using Rake:\n\n```text\nrake integration  # Run Test Kitchen integration tests\nrake style        # Run all style checks\nrake style:chef   # Lint Chef cookbooks\nrake style:ruby   # Run Ruby style checks\nrake travis:ci    # Run tests on Travis\n```\n\nTest Kitchen\n------------\n\nTest Kitchen 1.0.0+ ships with a [proxy driver](https://github.com/opscode/test-kitchen/commit/dc6af31bcfbc2decbfda4d905a185affe0ff101a) that proxies commands through to a test instance whose lifecycle is not managed by Test Kitchen. This driver is useful for testing against long-lived non-ephemeral test instances that are simply \"reset\" between test runs. This driver is also perfect for testing against physical network equipment!\n\nYou will need to specify the location and login details for the switch you will be running Test Kitchen against. This should be done in a `.kitchen.local.yml` file:\n\n```yaml\nplatforms:\n- name: junos-13.2\n  driver:\n    # Set the login user of the test switch\n    username: schisamo\n    # Set the ipaddress or DNS name of the test switch.\n    host: 10.66.44.10\n    # Set the port sshd is listening on; defaults to 22.\n    port: 22\n```\n\nThis repository ships with an example file which can easily be copied into place:\n\n```\ncp kitchen.local.example.yml kitchen.local.yml\n```\n\n### Juniper Equipment\n\nRequirements:\n\n* Juniper switch/router running `JUNOS 13.2*` (other Junos versions\nmay work).\n* Switch is [configured for external remote access via SSH](http://www.juniper.net/techpubs/en_US/junos/topics/task/configuration/ssh-services-configuring.html).\n* A valid user account on the test switch [configured for paswordless key-based SSH access](http://pileofbits.com/2013/03/11/junos-ssh-key-authentication/).\n\nTest run resets on Juniper device is achieved using Juno's [rescue configuration](http://www.juniper.net/techpubs/en_US/junos11.4/topics/task/configuration/junos-software-rescue-configuration-creating-restoring.html) feature. A _rescue configuration_ allows you to define a known working configuration or a configuration with a known state that you can roll back to at any time.\n\nCreating a rescue configuration is easy. SSH into your switch and run the following command:\n\n```\n{master:0}\nschisamo@junos-chef-dev> request system configuration rescue save\n\n{master:0}\nschisamo@junos-chef-dev>\n```\n\nYou now have a known good state to roll back to! Test Kitchen activates the rescue\nconfiguration by issuing the command `cli -c 'configure; rollback rescue; commit'`\nduring the CREATE and DESTROY stages of testing. Reference the [.kitchen.yml](.kitchen.yml)\nfor some additional environment variables that are used to set `host`, `username` and\nsshd `port` of the switch being tested against.\n\n### Arista Equipment\n\nCurrently not supported.\n\nLicense & Authors\n-----------------\n\n- Author: Peter Sprygada (Arista Networks)\n- Author: Jeremy Schulman (Juniper Networks)\n- Author: Seth Chisamore (CHEF, Inc.)\n\n```text\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
}