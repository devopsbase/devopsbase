{
  "name": "cloudfoundry-router Chef cookbook",
  "chef_cookbook_name": "cloudfoundry-router",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/cloudfoundry-router",
    "https://supermarket.chef.io/cookbooks/cloudfoundry-router/download",
    "https://supermarket.chef.io/cookbooks/cloudfoundry-router/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/cloudfoundry-router/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/cloudfoundry-router/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/cloudfoundry-router",
    "https://supermarket.chef.io/api/v1/cookbooks/cloudfoundry-router/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Operating Systems & Virtualization",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Cloud Platform/Cloud Foundry"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/cloudfoundry-router",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/cloudfoundry-router/versions/1.0.0/download",
  "deprecated": false,
  "created": "2012-12-03T17:14:25.000Z",
  "updated": "2013-02-16T20:31:01.000Z",
  "description": "Installs/Configures cloudfoundry-router",
  "maintainer": {
    "name": "andreacampi",
    "email": "andrea.campi@zephirworks.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 7266767,
  "downloads_count_revision": 1211098,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nInstall the Cloud Foundry [router](https://github.com/cloudfoundry/router),\na mandatory component of a [Cloud Foundry](http://www.cloudfoundry.org)\ninstallation.\n\nRequirements\n============\n\nPlatform\n--------\n\n* Ubuntu\n\nTested on:\n\n* Ubuntu 10.04\n* Ubuntu 12.04\n\nCookbooks\n---------\n\n* cloudfoundry\n* cloudfoundry-nginx\n* rbenv\n\nUsage\n=====\n\nThis recipe will install a CloudFoundry Router on the target node along\nwith the necessary configuration files and init scripts to run it. In\naddition, it will install and configure an nginx server that sits in\nfront of the Router. To use in your recipes:\n\n    include_recipe \"cloudfoundry-router\"\n\nAttributes\n==========\n\n* `node['cloudfoundry_router']['vcap']['install_path']` - Path to a directory\nthat will hold the code for the router. Defaults to `/srv/vcap-router`.\n* `node['cloudfoundry_router']['vcap']['repo']` - Source repository for the\nrouter code. Defaults to `https://github.com/cloudfoundry/router.git`.\n* `node['cloudfoundry_router']['vcap']['reference']` - Git reference to use\nwhen fetching the router code. Can be either a specific sha or a reference\nsuch as `HEAD` or `master`. Defaults to the last revision that has been\ntested with the `cloudfoundry` family of cookbooks.\n* `node['cloudfoundry_router']['ruby_version']` - Version of the ruby\ninterpreter to use to run the stager daemon. Defaults to\n`node['cloudfoundry']['ruby_1_9_2_version']`.\n* `node['cloudfoundry_router']['listen_ip']` - IP address of the interface\nthat nginx will bind to. Defaults to `0.0.0.0`.\n* `node['cloudfoundry_router']['listen_port']` - TCP port that nginx\nwill bind to. Defaults to `80`.\n* `node['cloudfoundry_router']['socket_file']` - Unix socket for the\nconnection between the router and nginx. Defaults to `/tmp/router.sock\"`.\n* `node['cloudfoundry_router']['access_log']` - Where to write the router's\naccess log. Defaults to `File.join(node['cloudfoundry']['log_dir'], \"vcap.access.log\")`.\n* `node['cloudfoundry_router']['client_max_body_size']` - The maximum\naccepted body size of a client request. Default is `256M`.\n* `node['cloudfoundry_router']['trace_key']` - Shared secret to use for\ntracing requests through the router. Default is `222`.\n* `node['cloudfoundry_router']['log_level']` - Log level for the router.\nDefaults to `info\"`.\n* `node['cloudfoundry_router']['log_file']` - Where to write the router's\nlogs. Defaults to `File.join(node['cloudfoundry']['log_dir'], \"router.log\")`.\n* `node['cloudfoundry_router']['pid_file']` - Where to write the router's\npid file. Default is `File.join(node['cloudfoundry']['pid_dir'], \"router.pid\")`.\n\nLicense and Author\n==================\n\n* Author:: Andrea Campi (<andrea.campi@zephirworks.com>)\n* Author:: Trotter Cashion (<cashion@gmail.com>)\n\n* Copyright:: 2012 ZephirWorks\n* Copyright:: 2012 Trotter Cashion\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/cloudfoundry",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/cloudfoundry-nginx",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/rbenv",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}