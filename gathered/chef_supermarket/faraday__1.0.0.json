{
  "name": "faraday Chef cookbook",
  "chef_cookbook_name": "faraday",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/faraday",
    "https://supermarket.chef.io/cookbooks/faraday/download",
    "https://supermarket.chef.io/cookbooks/faraday/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/faraday/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/faraday/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/faraday",
    "https://supermarket.chef.io/api/v1/cookbooks/faraday/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/faraday",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/faraday/versions/1.0.0/download",
  "deprecated": false,
  "created": "2015-04-01T21:56:14.107Z",
  "updated": "2016-10-01T14:14:12.915Z",
  "description": "Installs/Configures Faraday",
  "maintainer": {
    "name": "sliim",
    "email": "sliim@mailoo.org"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 253529,
  "downloads_count_revision": 234,
  "repository_url": "https://github.com/sliim-cookbooks/faraday",
  "issues_url": "https://github.com/sliim-cookbooks/faraday/issues",
  "chef_source_url": "https://github.com/sliim-cookbooks/faraday",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "faraday Cookbook\n================\nInstalls and configures [Faraday](https://www.faradaysec.com) - A collaborative penetration testing tool!\n\n[![Cookbook Version](https://img.shields.io/cookbook/v/faraday.svg)](https://community.opscode.com/cookbooks/faraday) [![Build Status](https://travis-ci.org/sliim-cookbooks/faraday.svg?branch=master)](https://travis-ci.org/sliim-cookbooks/faraday) \n\nRequirements\n------------\n#### Cookbooks\n- `poise-python` - https://supermarket.chef.io/cookbooks/poise-python\n- `cron` - https://supermarket.chef.io/cookbooks/cron\n\n#### Services\n- `couchdb`\n\n#### Platforms\nThe following platforms and versions are tested and supported using Opscode's test-kitchen.\n- `Debian 7`\n- `Debian 8`\n\nAttributes\n----------\n#### faraday::default\n\n|  Key                        |  Type   |  Description                                                           |\n| --------------------------- | ------- | ---------------------------------------------------------------------- |\n| `[faraday][packages]`       | Array   | Package list to install (default: `[git-core, libpq-dev]`)             |\n| `[faraday][git_repository]` | String  | Faraday repository (default: `https://github.com/infobyte/faraday`)    |\n| `[faraday][git_reference]`  | String  | Faraday reference or version (default: `master`)                       |\n| `[faraday][install_dir]`    | String  | Faraday install directory (default: `/opt/faraday`)                    |\n| `[faraday][python_runtime]` | String  | Python runtime to use, used for `poise-python` cookbook (default: `2`) |\n\n#### faraday::config\n\n|  Key               |  Type  |  Description                                     |\n| ------------------ | ------ | ------------------------------------------------ |\n| `[faraday][user]`  | String | User to configure, must exists (default: `root`) |\n| `[faraday][home]`  | String | User's home directory (default: `/root`)         |\n\nAll others attributes in `['faraday']['config']` namespace will generate dynamically the\nconfiguration file as XML format in `$HOME/.faraday/config/config.xml`.\n\nUse the `['faraday']['config_attrs']` namespace to set xml attributes. See `attributes/config.rb` for more details.\n\n#### faraday::service\n\n|  Key                 |  Type  |  Description                                          |\n| -------------------- | ------ | ----------------------------------------------------- |\n| `[faraday][service]` |  Hash  | Hash of variables to override for service init script |\n\n#### faraday::cscan\n|  Key                             |  Type  |  Description                                                                  |\n| -------------------------------- | ------ | ----------------------------------------------------------------------------- |\n| `[faraday][cscan][pip_packages]` | Array  | Python packages to install (default: `[python-owasp-zap-v2 w3af-api-client]`) |\n| `[faraday][cscan][config]`       | Hash   | Configuration for default cscan (default: `node[faraday][config]`)            |\n| `[faraday][cscan][ips]`          | Array  | List of IPs for default cscan (default: `[127.0.0.1]`)                        |\n| `[faraday][cscan][websites]`     | Array  | List of websites for default cscan (default: `[http://127.0.0.1:80]`)         |\n\nUsage\n-----\n#### faraday::default\nInclude `faraday` in your node's `run_list` to install faraday and its requirements:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[faraday]\"\n  ],\n  \"attributes\": {\n    \"faraday\": {\n      \"git_reference\": \"v1.0.15\",\n      \"install_dir\": \"/opt/faraday-1.0.15\"\n    }\n  }\n}\n```\n\n#### faraday::config\nInclude `faraday::config` in your node's `run_list` to configure faraday for a user:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[faraday::config]\"\n  ],\n  \"attributes\": {\n    \"faraday\": {\n      \"user\": \"my_user\",\n      \"config\": {\n        \"couch_uri\": \"http://127.0.0.1:5984\",\n        \"last_workspace\": \"my_workspace\"\n      }\n    }\n  }\n}\n```\n\n#### faraday::service\nInclude `faraday::service` in your node's `run_list` to configure faraday as a server (*Experimental*):\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[faraday]\",\n    \"recipe[faraday::service]\"\n  ],\n  \"attributes\": {\n    \"faraday\": {\n      \"git_reference\": \"v1.0.15\",\n      \"install_dir\": \"/opt/faraday\",\n      \"python_runtime\": \"2\",\n      \"service\": {\n        \"RUN\": \"true\",\n        \"NAME\": \"faraday-server\",\n        \"USER\": \"faraday\",\n        \"INSTALL_DIR\": \"/opt/faraday\",\n        \"DAEMON_ARGS\": \"faraday.py --gui=no-gui --port 31337\"\n      },\n      \"config\": {\n        \"version\": \"1.0.15\",\n        \"couch_uri\": \"http://127.0.0.1:5984\"\n      }\n    }\n  }\n}\n```\n\n#### faraday::cscan\nInclude `faraday::cscan` in your node's `run_list` to configure default continuous scanning:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[faraday::cscan]\"\n  ],\n  \"attributes\": {\n    \"faraday\": {\n      \"cscan\": {\n        \"config\": {\n          \"couch_uri\": \"https://couchdb-host:6984\",\n          \"last_workspace\": \"cscan_workspace\"\n        },\n        \"ips\": [\"192.168.0.1\"],\n        \"websites\": [\"http://192.168.0.1\"]\n      }\n    }\n  }\n}\n```\n\n#### Custom resources\n\n##### faraday_config\nThis LWRP can be used to deploy many faraday configuration.\n\n###### Actions\n|  Action   |  Description                             |\n| --------- | ---------------------------------------- |\n| `:create` | Create configuration for a specific user |\n| `:delete` | Delete user's configuration file         |\n\n###### Attributes\n|  Attribute     |  Type  |  Description                                                                           |\n| -------------- | ------ | -------------------------------------------------------------------------------------- |\n| `owner`        | String | Owner config file, this is the name attribute of this resource                         |\n| `home`         | String | Home directory, if nil: provider will determine it depending of owner (default: `nil`) |\n| `file`         | String | Configuration file name (default: `config.xml`)                                        |\n| `cookbook`     | String | Optional cookbook name for template resource (default: `faraday`)                      |\n| `config`       | Hash   | Configuration to deploy (default: `{}`)                                                |\n| `config_attrs` | Hash   | Config attributes (default: `{}`)                                                      |\n\n###### Example\n```ruby\nfaraday_config 'sliim' do\n  config last_workspace: 'sliim-corp'\n  end\n\nfaraday_config 'sliim' do\n  action :delete\n  file 'user.xml'\nend\n```\n\n##### faraday_cscan\nInstall and configure a continuous scanning directory.\n\n###### Actions\n|  Action       |  Description                                |\n| ----------    | ------------------------------------------- |\n| `:install`    | Install a new continuous scanning directory |\n| `:configure`  | Configure a continuous scanning install     |\n\n###### Attributes\n|  Attribute       |  Type  |  Description                                                                           |\n| ---------------- | ------ | -------------------------------------------------------------------------------------- |\n| `name`           | String | Continuous scanning name (final dirname will be prepended with `cscan-`)               |\n| `path`           | String | Optional path where will be created cscan dir (default: `FARADAY_INSTALL_DIR/scripts`) |\n| `git_repository` | String | cscan repository (default: `https://github.com/infobyte/cscan`)                        |\n| `git_reference`  | String | cscan reference (default: `master`)                                                    |\n| `ips`            | Array  | List of IPs to configure (default: `[]`)                                               |\n| `websites`       | Array  | List of websites to configure (default: `[]`)                                          |\n| `config`         | Hash   | Config attributes (default: `node[faraday][cscan][config]`)                            |\n| `cookbook`       | String | Optional cookbook name for templates (default: `faraday`)                              |\n| `crond`          | Hash   | Cron setup. These attributes will be used for `cron_d` resource (default: `{}`)        |\n\n###### Example\n```ruby\nfaraday_cscan 'local' do\n  action [:install, :configure]\n  ips ['10.0.1.2',\n       '10.0.1.3',\n       '10.0.1.4']\n  crond hour: 13,\n        minute: 37,\n        weekday: 5,\n        user: 'faraday',\n        mailto: 'you@gmail.com',\n        command: ./cscan.py -p nmap.sh >> cron.log 2>&1 && mv output/* /opt/faraday/.faraday/report/cscan-local\n\nend\n```\n\nTests\n-----\n\n- First, install dependencies:  \n`bundle install`\n\n- Run Checkstyle and ChefSpec:  \n`bundle exec rake`\n\n- Run Kitchen tests:\n`bundle exec rake kitchen`\n\nIf you have Docker, you can use the kitchen driver which is faster:\n`export KITCHEN_YAML=.kitchen.docker.yml`  \n`bundle exec rake kitchen`  \n\nContributing\n------------\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\nAuthors: Sliim <sliim@mailoo.org> \n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": "> 7.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/poise-python",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/cron",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "faraday::default": "Faraday install with python venv",
    "faraday::config": "Configure Faraday for a specific user",
    "faraday::service": "Configure a Faraday server",
    "faraday::cscan": "Install continuous scanning tool"
  }
}