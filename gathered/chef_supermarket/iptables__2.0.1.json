{
  "name": "iptables Chef cookbook",
  "chef_cookbook_name": "iptables",
  "revision": "2.0.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/iptables",
    "https://supermarket.chef.io/cookbooks/iptables/download",
    "https://supermarket.chef.io/cookbooks/iptables/versions/2.0.1",
    "https://supermarket.chef.io/cookbooks/iptables/versions/2.0.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/iptables/versions/2.0.1",
    "https://supermarket.chef.io/api/v1/cookbooks/iptables",
    "https://supermarket.chef.io/api/v1/cookbooks/iptables/versions/2.0.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/iptables",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/iptables/versions/2.0.1/download",
  "deprecated": false,
  "created": "2009-10-28T19:14:10.000Z",
  "updated": "2016-10-11T06:56:45.866Z",
  "description": "Installs the iptables daemon and provides a LWRP for managing rules",
  "maintainer": {
    "name": "chef",
    "email": "cookbooks@chef.io"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 114,
  "downloads_count": 17642128,
  "downloads_count_revision": 46287,
  "repository_url": "https://github.com/chef-cookbooks/iptables",
  "issues_url": "https://github.com/chef-cookbooks/iptables/issues",
  "chef_source_url": "https://github.com/chef-cookbooks/iptables",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# iptables Cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/iptables.svg?branch=master)](https://travis-ci.org/chef-cookbooks/iptables)\n[![Cookbook Version](https://img.shields.io/cookbook/v/iptables.svg)](https://supermarket.chef.io/cookbooks/iptables)\n\nInstalls iptables and provides a custom resource for adding and removing iptables rules\n\n## Requirements\n#### Platforms\n* Ubuntu/Debian\n* RHEL/CentOS and derivatives\n\n#### Chef\n* Chef 12+\n\n#### Cookbooks\n* compat_resource\n\n\n## Recipes\n\n#### default\n\nThe default recipe will install iptables and provides a ruby script\n(installed in `/usr/sbin/rebuild-iptables`) to manage rebuilding\nfirewall rules from files dropped off in `/etc/iptables.d`.\n\n## Custom Resource\n\n#### rule\n\nThe custom resource drops off a template in `/etc/iptables.d` after the\n`name` parameter. The rule will get added to the local system firewall\nthrough notifying the `rebuild-iptables` script. See __Examples__ below.\n\nNOTE: In the 1.0 release of this cookbook the iptables_rule definition was\nconverted to a custom resource.  This changes the behavior of disabling\niptables rules. Previously a rule could be disabled by specifying `enable false`.\nYou must now specify `action :disable`\n\n## Usage\n\nAdd `recipe[iptables]` to your runlist to ensure iptables is installed / running\nand to ensure that the `rebuild-iptables` script is on the system.\nThen create use iptables_rule to add individual rules. See __Examples__.\n\nSince certain chains can be used with multiple tables (e.g., _PREROUTING_),\nyou might have to include the name of the table explicitly (i.e., _*nat_,\n_*mangle_, etc.), so that the `/usr/sbin/rebuild-iptables` script can infer\nhow to assemble final ruleset file that is going to be loaded. Please note,\nthat unless specified otherwise, rules will be added under the __filter__\ntable by default.\n\n#### Examples\n\nTo enable port 80, e.g. in an `my_httpd` cookbook, create the following\ntemplate:\n\n```text\n# Port 80 for http\n-A FWR -p tcp -m tcp --dport 80 -j ACCEPT\n```\n\nThis template would be located at:\n`my_httpd/templates/default/http.erb`. Then within your recipe call:\n\n```ruby\niptables_rule 'http' do\n  action :enable\nend\n```\n\nTo redirect port 80 to local port 8080, e.g., in the aforementioned `my_httpd`\ncookbook, create the following template:\n\n```text\n*nat\n# Redirect anything on eth0 coming to port 80 to local port 8080\n-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\n```\n\nPlease note, that we explicitly add name of the table (being _*nat_ in this\nexample above) where the rules should be added.\n\nThis would most likely go in the cookbook,\n`my_httpd/templates/default/http_8080.erb`. Then to use it in\n`recipe[httpd]`:\n\n```ruby\niptables_rule 'http_8080' do\n  action :enable\nend\n```\n\n\n## Chefspec Matchers\n\n* enable_iptables_rule(resource_name)\n* disable_iptables_rule(resource_name)\n\n\n## License & Authors\n\n**Author:** Cookbook Engineering Team (<cookbooks@chef.io>)\n\n**Copyright:** 2008-2015, Chef Software, Inc.\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "oracle",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/compat_resource",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "default": "Installs iptables and sets up .d style config directory of iptables rules"
  }
}