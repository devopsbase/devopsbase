{
  "name": "beaver Chef cookbook",
  "chef_cookbook_name": "beaver",
  "revision": "0.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/beaver",
    "https://supermarket.chef.io/cookbooks/beaver/download",
    "https://supermarket.chef.io/cookbooks/beaver/versions/0.1.0",
    "https://supermarket.chef.io/cookbooks/beaver/versions/0.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/beaver/versions/0.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/beaver",
    "https://supermarket.chef.io/api/v1/cookbooks/beaver/versions/0.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Monitoring & Trending",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/beaver",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/beaver/versions/0.1.0/download",
  "deprecated": false,
  "created": "2013-06-02T19:35:37.000Z",
  "updated": "2016-02-25T09:15:24.839Z",
  "description": "Installs/Configures beaver",
  "maintainer": {
    "name": "nd",
    "email": "nd@kaeufli.ch"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 6,
  "downloads_count": 7837049,
  "downloads_count_revision": 1215969,
  "repository_url": "https://github.com/alappe/cookbook-beaver",
  "issues_url": "https://github.com/alappe/cookbook-beaver",
  "chef_source_url": "https://github.com/alappe/cookbook-beaver",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "beaver Cookbook\n===============\n\nInstall [beaver](https://github.com/josegonzalez/beaver) â€” the python daemon that munches on logs and sends their\ncontents to logstash.\n\nRequirements\n------------\n\n### Ohai and Chef:\n\nThis cookbook makes use of `node['platform_family']` to simplify\nplatform selection logic. This attribute was introduced in Ohai v0.6.12.\n\n### Platform:\n\nThe following platform families are supported:\n\n* Debian\n\n### Cookbooks\n\n* python (to use the pip LWRP)\n\nAttributes\n----------\n\n### beaver::default\n|Key|Type|Description|Default|\n|---|----|-----------|-------|\n|<tt>['beaver']['version']</tt>|String|Version to install via pip|<tt>29</tt>|\n|<tt>['beaver']['log_path']</tt>|String|Log path|<tt>/var/log</tt>|\n|<tt>['beaver']['log_file']</tt>|String|Log file|<tt>beaver.log</tt>|\n|<tt>['beaver']['config_path']</tt>|String|Configuration path|<tt>/etc/beaver</tt>|\n|<tt>['beaver']['config_file']</tt>|String|Configuration file|<tt>beaver.conf</tt>|\n|<tt>['beaver']['respawn_delay']</tt>|String|Initial respawn delay for exponential backoff|<tt>3</tt>|\n|<tt>['beaver']['max_failure']</tt>|String|Max failures before exponential backoff terminates|<tt>7</tt>|\n|<tt>['beaver']['sincedb_path']</tt>|String|Full path to an sqlite3 database. Will be created at this path if it does not exist.|<tt>7</tt>|\n|<tt>['beaver']['transport']</tt>|String|Either redis, mqtt, rabbitmq, sqs_aws, udp or zeromq|<tt>redis</tt>|\n|<tt>['beaver']['format']</tt>|String|Format to use when sending to transport: either json, msgpack, string.|<tt>redis</tt>|\n|<tt>['beaver']['redis']['url']</tt>|String|Redis URL|<tt>redis://localhost:6379/0</tt>|\n|<tt>['beaver']['redis']['namespace']</tt>|String|Redis namespace|<tt>logstash:beaver</tt>|\n|<tt>['beaver']['mqtt']['host']</tt>|String|Host for mosquitto|<tt>localhost</tt>|\n|<tt>['beaver']['mqtt']['port']</tt>|Integer|Port for mosquitto|<tt>1883</tt>|\n|<tt>['beaver']['mqtt']['clientid']</tt>|String|Clientid for mosquitto|<tt>mosquitto</tt>|\n|<tt>['beaver']['mqtt']['keepalive']</tt>|Integer|Keepalive for mosquitto|<tt>60</tt>|\n|<tt>['beaver']['mqtt']['topic']</tt>|String|Topic for mosquitto|<tt>/logstash</tt>|\n|<tt>['beaver']['rabbitmq']['host']</tt>|String|Host for rabbitmq|<tt>localhost</tt>|\n|<tt>['beaver']['rabbitmq']['port']</tt>|Integer|Port for rabbitmq|<tt>5672</tt>|\n|<tt>['beaver']['rabbitmq']['vhost']</tt>|String|Vhost for rabbitmq|<tt>/</tt>|\n|<tt>['beaver']['rabbitmq']['vhost']</tt>|String|Vhost for rabbitmq|<tt>/</tt>|\n|<tt>['beaver']['rabbitmq']['username']</tt>|String|Username for rabbitmq|<tt>guest</tt>|\n|<tt>['beaver']['rabbitmq']['password']</tt>|String|Password for rabbitmq|<tt>guest</tt>|\n|<tt>['beaver']['rabbitmq']['queue']</tt>|String|Queue for rabbitmq|<tt>logstash-queue</tt>|\n|<tt>['beaver']['rabbitmq']['exchange_type']</tt>|String|Exchange-type for rabbitmq|<tt>direct</tt>|\n|<tt>['beaver']['rabbitmq']['exchange_durable']</tt>|Integer|Whether this exchange should be durable|<tt>0</tt>|\n|<tt>['beaver']['rabbitmq']['key']</tt>|String|Key for rabbitmq|<tt>logstash-key</tt>|\n|<tt>['beaver']['rabbitmq']['exchange']</tt>|String|Exchange for rabbitmq|<tt>logstash-exchange</tt>|\n|<tt>['beaver']['sqs_aws']['access_key']</tt>|String|Access Key for AWS SQS|<tt></tt>|\n|<tt>['beaver']['sqs_aws']['secret_key']</tt>|String|Secret Key for AWS SQS|<tt></tt>|\n|<tt>['beaver']['sqs_aws']['region']</tt>|String|AWS region to use|<tt>us-east-1</tt>|\n|<tt>['beaver']['sqs_aws']['queue']</tt>|String|Queue to use|<tt>us-east-1</tt>|\n|<tt>['beaver']['udp']['host']</tt>|String|UDP host to send to|<tt>127.0.0.1</tt>|\n|<tt>['beaver']['udp']['port']</tt>|Integer|UDP port to send to|<tt>127.0.0.1</tt>|\n|<tt>['beaver']['zeromq']['address']</tt>|String|ZeroMQ address|<tt>tcp://localhost:2120</tt>|\n|<tt>['beaver']['zeromq']['hwm']</tt>|String|High Watermark for ZeroMQ|<tt></tt>|\n|<tt>['beaver']['zeromq']['bind']</tt>|String|Whether to bind ZeroMQ|<tt></tt>|\n|<tt>['beaver']['use_tunnel']</tt>|Boolean|Use the selected transport through an ssh tunnel?|<tt>false</tt>|\n|<tt>['beaver']['ssh']['tunnel']</tt>|String|SSH Tunnel in the format user@host:port|<tt>nil</tt>|\n|<tt>['beaver']['ssh']['key_file']</tt>|String|Path to id_rsa key file relative to `config_dir`|<tt>id_rsa</tt>|\n|<tt>['beaver']['ssh']['tunnel_port']</tt>|Integer|Port to have locally for tunnel|<tt>6379</tt>|\n|<tt>['beaver']['ssh']['remote_host']</tt>|String|Remote host of ssh tunnel|<tt>localhost</tt>|\n|<tt>['beaver']['ssh']['remote_port']</tt>|Integer|Remote port of ssh tunnel|<tt>6379</tt>|\n|<tt>['beaver']['ssh']['generate_keypair']</tt>|Boolean|Whether to generate and expose keypair or not|<tt>false</tt>|\n\nUsage\n-----\n#### beaver::default\n\nJust include `beaver` in your node's `run_list`:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[beaver]\"\n  ]\n}\n```\n\nAnd configure beaver either in role or on the node. If you set\n`['beaver']['ssh']['generate_keypair']` to true the cokbook will create\na public-key pair in the `config_path` and will expose the public key on\nthe node. This key can then be searched by e.g. the logstash host and\ngrant password-free access to tunnel e.g. redis (or anything else)\nthrough it.\n\nContributing\n------------\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write you change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nAuthors\n-------\n\n* Andreas Lappe\n\nLicense\n-------\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/python",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "beaver": "Installs and configures beaver to ship logs to logstash"
  }
}