{
  "name": "monitor Chef cookbook",
  "chef_cookbook_name": "monitor",
  "revision": "0.0.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/monitor",
    "https://supermarket.chef.io/cookbooks/monitor/download",
    "https://supermarket.chef.io/cookbooks/monitor/versions/0.0.2",
    "https://supermarket.chef.io/cookbooks/monitor/versions/0.0.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/monitor/versions/0.0.2",
    "https://supermarket.chef.io/api/v1/cookbooks/monitor",
    "https://supermarket.chef.io/api/v1/cookbooks/monitor/versions/0.0.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Monitoring & Trending",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook",
    "Mode/API/Toolkit",
    "Type/Devopsware/Monitoring/Sensu"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/monitor",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/monitor/versions/0.0.2/download",
  "deprecated": false,
  "created": "2013-05-06T19:24:45.000Z",
  "updated": "2013-10-02T20:42:38.000Z",
  "description": "A cookbook for monitoring services, using Sensu, a monitoring framework.",
  "maintainer": {
    "name": "portertech",
    "email": "portertech@gmail.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 11,
  "downloads_count": 4990783,
  "downloads_count_revision": 1244286,
  "repository_url": "https://github.com/portertech/chef-monitor",
  "issues_url": "https://github.com/portertech/chef-monitor",
  "chef_source_url": "https://github.com/portertech/chef-monitor",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nMonitor is a cookbook for monitoring services, using Sensu, a\nmonitoring framework. The default recipe installs & configures the\nSensu client (monitoring agent), as well as common service check\ndependencies. The master recipe installs & configures the Sensu server,\nAPI, dashboard, & their dependencies (eg. RabbitMQ & Redis). The\nremaining recipes are intended to put monitoring checks in place in\norder to monitor specific services (eg. `recipe[monitor::redis]`).\n\nLearn more about Sensu [Here](http://docs.sensuapp.org/).\n\nRequirements\n============\n\nThe [Sensu cookbook](http://community.opscode.com/cookbooks/sensu).\n\nAttributes\n==========\n\n`node[\"monitor\"][\"master_address\"]` - Bypass the chef node search and\nexplicitly set the address to reach the master server.\n\n`node[\"monitor\"][\"environment_aware_search\"]` - Defaults to false.\nIf true, will limit search to the node's chef_environment.\n\n`node[\"monitor\"][\"use_local_ipv4\"]` - Defaults to false. If true,\nuse cloud local\\_ipv4 when available instead of public\\_ipv4.\n\n`node[\"monitor\"][\"sensu_plugin_version\"]` - Sensu Plugin library\nversion.\n\n`node[\"monitor\"][\"additional_client_attributes\"]` - Additional client\nattributes to be passed to the sensu_client LWRP.\n\n`node[\"monitor\"][\"default_handlers\"]` - Default event handlers.\n\n`node[\"monitor\"][\"metric_handlers\"]` - Metric event handlers.\n\nUsage\n=====\n\nExample: To monitor the Redis service running on a Chef node, include\n\"recipe[monitor::redis]\" in its run list.\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/sensu",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}