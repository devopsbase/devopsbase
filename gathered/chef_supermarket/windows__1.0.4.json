{
  "name": "windows Chef cookbook",
  "chef_cookbook_name": "windows",
  "revision": "1.0.4",
  "uris": [
    "https://supermarket.chef.io/cookbooks/windows",
    "https://supermarket.chef.io/cookbooks/windows/download",
    "https://supermarket.chef.io/cookbooks/windows/versions/1.0.4",
    "https://supermarket.chef.io/cookbooks/windows/versions/1.0.4/download",
    "https://supermarket.chef.io/api/v1/cookbooks/windows/versions/1.0.4",
    "https://supermarket.chef.io/api/v1/cookbooks/windows",
    "https://supermarket.chef.io/api/v1/cookbooks/windows/versions/1.0.4/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System/Windows"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/windows",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/windows/versions/1.0.4/download",
  "deprecated": false,
  "created": "2011-07-08T22:13:56.000Z",
  "updated": "2016-09-07T22:27:44.210Z",
  "description": "Provides a set of useful Windows-specific primitives.",
  "maintainer": {
    "name": "chef",
    "email": "cookbooks@opscode.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 273,
  "downloads_count": 78232603,
  "downloads_count_revision": 1187085,
  "repository_url": "https://github.com/chef-cookbooks/windows",
  "issues_url": "https://github.com/chef-cookbooks/windows/issues",
  "chef_source_url": "https://github.com/chef-cookbooks/windows",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nProvides a set of Windows-specific primitives (Chef resources) meant to aid in the creation of cookbooks/recipes targeting the Windows platform.\n\nRequirements\n============\n\nPlatform\n--------\n\n* Windows XP\n* Windows Server 2003\n* Windows Vista\n* Windows 7\n* Windows Server 2008 (R1, R2)\n\nResource/Provider\n=================\n\n`windows_package`\n-----------------\n\nManage Windows application packages in an unattended, idempotent way.\n\nThe following application installers are currently supported:\n\n* MSI packages\n* InstallShield\n* Wise InstallMaster\n* Inno Setup\n* Nullsoft Scriptable Install System\n\nIf the proper installer type is not passed into the resource's installer_type attribute, the provider will do it's best to identify the type by introspecting the installation package.  If the installation type cannot be properly identified the `:custom` value can be passed into the installer_type attribute along with the proper flags for silent/quiet installation (using the `options` attribute..see example below).\n\n__PLEASE NOTE__ - For proper idempotence the resource's `package_name` should be the same as the 'DisplayName' registry value in the uninstallation data that is created during package installation.  The easiest way to definitively find the proper 'DisplayName' value is to install the package on a machine and search for the uninstall information under the following registry keys:\n\n* `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall`\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall`\n* `HKEY_LOCAL_MACHINE\\Software\\Wow6464Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall`\n\nFor maximum flexibility the `source` attribute supports both remote and local installation packages.\n\n### Actions\n\n- :install: install a package\n- :remove: remove a package. The remove action is completely hit or miss as many application uninstallers do not support a full silent/quiet mode.\n\n### Attribute Parameters\n\n- package_name: name attribute. The 'DisplayName' of the application installation package.\n- source: The source of the windows installer.  This can either be a URI or a local path.\n- installer_type: They type of windows installation package. valid values are: :msi, :inno, :nsis, :wise, :installshield, :custom.  If this value is not provided, the provider will do it's best to identify the installer type through introspection of the file.\n- checksum: useful if source is remote, the SHA-256 checksum of the file--if the local file matches the checksum, Chef will not download it\n- options: Additional options to pass the underlying installation command\n\n### Examples\n\n    # install PuTTY (InnoSetup installer)\n    windows_package \"PuTTY version 0.60\" do\n      source \"http://the.earth.li/~sgtatham/putty/latest/x86/putty-0.60-installer.exe\"\n      installer_type :inno\n      action :install\n    end\n    \n    # install 7-Zip (MSI installer)\n    windows_package \"7-Zip 9.20 (x64 edition)\" do\n      source \"http://downloads.sourceforge.net/sevenzip/7z920-x64.msi\"\n      action :install\n    end\n    \n    # install Notepad++ (Y U No Emacs?) using a local installer\n    windows_package \"Notepad++\" do\n      source \"c:/installation_files/npp.5.9.2.Installer.exe\"\n      action :install\n    end\n    \n    # install VLC for that Xvid (NSIS installer)\n    windows_package \"VLC media player 1.1.10\" do\n      source \"http://superb-sea2.dl.sourceforge.net/project/vlc/1.1.10/win32/vlc-1.1.10-win32.exe\"\n      action :install\n    end\n    \n    # install Firefox as custom installer and manually set the silent install flags\n    windows_package \"Mozilla Firefox 5.0 (x86 en-US)\" do\n      source \"http://archive.mozilla.org/pub/mozilla.org/mozilla.org/firefox/releases/5.0/win32/en-US/Firefox%20Setup%205.0.exe\"\n      options \"-ms\"\n      installer_type :custom\n      action :install\n    end\n    \n    # Google Chrome FTW (MSI installer)\n    windows_package \"Google Chrome\" do\n      source \"https://dl-ssl.google.com/tag/s/appguid%3D%7B8A69D345-D564-463C-AFF1-A69D9E530F96%7D%26iid%3D%7B806F36C0-CB54-4A84-A3F3-0CF8A86575E0%7D%26lang%3Den%26browser%3D3%26usagestats%3D0%26appname%3DGoogle%2520Chrome%26needsadmin%3Dfalse/edgedl/chrome/install/GoogleChromeStandaloneEnterprise.msi\"\n      action :install\n    end\n    \n    # remove Google Chrome (but why??)\n    windows_package \"Google Chrome\" do\n      action :remove\n    end\n    \n    # remove 7-Zip\n    windows_package \"7-Zip 9.20 (x64 edition)\" do\n      action :remove\n    end\n    \n\n`windows_registry`\n-----------------\n\nCreates and modifies Windows registry keys.\n\n### Actions\n\n- :create: create a new registry key with the provided values.\n- :modify: modify an existing registry key with the provided values.\n- :remove: removes a value from an existing registry key\n\n### Attribute Parameters\n\n- key_name: name attribute. The registry key to create/modify.\n- values: hash of the values to set under the registry key. The individual hash items will become respective 'Value name' => 'Value data' items in the registry key.\n\n### Examples\n  \n    # make the local windows proxy match the one set for Chef\n    proxy = URI.parse(Chef::Config[:http_proxy])\n    windows_registry 'HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings' do\n      values 'ProxyEnable' => 1, 'ProxyServer' => \"#{proxy.host}:#{proxy.port}\", 'ProxyOverride' => '<local>'\n    end\n    \n    # enable Remote Desktop and poke the firewall hole\n    windows_registry 'HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server' do\n      values 'FdenyTSConnections' => 0\n    end\n    \n    # Delete an item from the registry\n    windows_registry 'HKCU\\Software\\Test' do\n      #Key is the name of the value that you want to delete the value is always empty\n      values 'ValueToDelete' => ''\n      action :remove\n    end\n    \n### Library Methods\n\n    Registry::value_exists?('HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run','BGINFO')\n    Registry::key_exists?('HKLM\\SOFTWARE\\Microsoft')\n    BgInfo = Registry::get_value('HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run','BGINFO')\n\n'windows_auto_run'\n------------------\n\n### Actions\n- :create: Create an item to be run at login\n- :remove: Remove an item that was previously setup to run at login\n\n### Attribute Parameters\n- :name: Name attribute. The name of the value to be stored in the registry\n- :program: The program to be run at login\n- :args: The arguments for the program\n\n### Examples\n\n  # Run BGInfo at login\n  windows_auto_run 'BGINFO' do\n    program \"C:/Sysinternals/bginfo.exe\"\n    args \"\\\"C:/Sysinternals/Config.bgi\\\" /NOLICPROMPT /TIMER:0\"\n    not_if { Registry.value_exists?(Windows::KeyHelper::AUTO_RUN_KEY, 'BGINFO') }\n    action :create\n  end\n\n'windows_path'\n--------------\n\n### Actions\n- :add: Add an item to the system path\n- :remove: Remove an item from the system path\n\n### Attribute Parameters\n- :path: Name attribute. The name of the value to add to the system path\n\n### Examples\n\n    #Add Sysinternals to the system path\n    windows_path 'C:\\Sysinternals' do\n      action :add\n    end\n    \n    #Remove Sysinternals from the system path\n    windows_path 'C:\\Sysinternals' do\n      action :remove\n    end\n\n`windows_zipfile`\n-----------------\n\nMost version of Windows do not ship with native cli utility for managing compressed files.  This resource provides a pure-ruby implementation for managing zip files. Be sure to use the `not_if` or `only_if` meta parameters to guard the resource for idempotence or action will be taken on the zip file every Chef run.\n\n### Actions\n\n- :unzip: unzip a compressed file\n\n### Attribute Parameters\n\n- path: name attribute. The path where files will be unzipped to.\n- source: The source of the zip file. This can either be a URI or a local path.\n- overwrite: force an overwrite of the files if the already exists.\n\n### Examples\n\n    # unzip a remote zip file locally\n    windows_zipfile \"c:/bin\" do\n      source \"http://download.sysinternals.com/Files/SysinternalsSuite.zip\"\n      action :unzip\n      not_if {::File.exists?(\"c:/bin/PsExec.exe\")}\n    end\n    \n    # unzip a local zipfile\n    windows_zipfile \"c:/the_codez\" do\n      source \"c:/foo/baz/the_codez.zip\"\n      action :unzip\n    end\n\nUsage\n=====\n\nJust place an explicit dependency on this cookbook (using depends in the cookbook's metadata.rb) from any cookbook where you would like to use these Windows-specific resources.\n\nChanges/Roadmap\n===============\n\n## Future\n\n* package preseeding/response_file support\n* package installation location via a `target_dir` attribute.\n* [COOK-666] windows_package should support CoApp packages\n\n## v1.0.4\n\n* [COOK-700] new resources and improvements to the windows_registry provider (thanks Paul Morton!)\n  * Open the registry in the bitednes of the OS\n  * Provide convenience methods to check if keys and values exit\n  * Provide convenience method for reading registry values\n  * NEW - `windows_auto_run` resource/provider\n  * NEW - `windows_env_vars` resource/provider\n  * NEW - `windows_path` resource/provider\n* re-write of the windows_package logic for determining current installed packages\n* new checksum attribute for windows_package resource...useful for remote packages\n\n## v1.0.2:\n\n* [COOK-647] account for Wow6432Node registry redirecter\n* [COOK-656] begin/rescue on win32/registry\n\n## 1.0.0:\n\n* [COOK-612] initial release\n\nLicense and Author\n==================\n\nAuthor:: Seth Chisamore (<schisamo@opscode.com>)\nAuthor:: Doug MacEachern (<dougm@vmware.com>)\nAuthor:: Paul Morton (<pmorton@biaprotect.com>)\n\nCopyright:: 2011, Opscode, Inc.\nCopyright:: 2010, VMware, Inc.\nCopyright:: 2011, Business Intelligence Associates, Inc\n\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ]
}