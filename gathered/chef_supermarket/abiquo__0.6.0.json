{
  "name": "abiquo Chef cookbook",
  "chef_cookbook_name": "abiquo",
  "revision": "0.6.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/abiquo",
    "https://supermarket.chef.io/cookbooks/abiquo/download",
    "https://supermarket.chef.io/cookbooks/abiquo/versions/0.6.0",
    "https://supermarket.chef.io/cookbooks/abiquo/versions/0.6.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/abiquo/versions/0.6.0",
    "https://supermarket.chef.io/api/v1/cookbooks/abiquo",
    "https://supermarket.chef.io/api/v1/cookbooks/abiquo/versions/0.6.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Operating Systems & Virtualization",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/abiquo",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/abiquo/versions/0.6.0/download",
  "deprecated": false,
  "created": "2014-12-19T09:44:13.138Z",
  "updated": "2016-09-05T10:06:39.157Z",
  "description": "Installs and configures an Abiquo platform",
  "maintainer": {
    "name": "nacx",
    "email": "ignasi.barrera@abiquo.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 1494241,
  "downloads_count_revision": 249,
  "repository_url": "https://github.com/abiquo/abiquo-cookbook",
  "issues_url": "https://github.com/abiquo/abiquo-cookbook/issues",
  "chef_source_url": "https://github.com/abiquo/abiquo-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Abiquo Cookbook\n===============\n\n[![Build Status](https://travis-ci.org/abiquo/abiquo-cookbook.svg?branch=master)](https://travis-ci.org/abiquo/abiquo-cookbook)\n[![Abiquo Cookbook](http://img.shields.io/badge/cookbook-v0.6.0-blue.svg?style=flat)](https://supermarket.chef.io/cookbooks/abiquo)\n[![Chef Version](http://img.shields.io/badge/chef-v11.16-orange.svg?style=flat)](https://www.chef.io)\n\nThis cookbook provides several recipes to install an upgrade an Abiquo platform.\nIt allows to provision an Abiquo Server, the Remote Services server, standalone V2V\nserver, monitoring server and a KVM hypervisor from scratch, as long as upgrading \nan existing Abiquo installation using the latest nightly builds.\n\n# Requirements\n\n* CentOS >= 6.5\n\nThis cookbook depends on the following cookbooks:\n\n* apache2\n* ark\n* cassandra-dse\n* iptables\n* java-management\n* selfsigned\\_certificate\n* selinux\n* yum\n\n# Recipes\n\nThe cookbook contains the following recipes:\n\n* `recipe[abiquo]` - Installs an Abiquo Platform\n* `recipe[abiquo::repository]` - Configures the Abiquo yum repositories\n* `recipe[abiquo::install_monolithic]` - Installs an Abiquo Monolithic\n* `recipe[abiquo::install_server]` - Installs an Abiquo Server\n* `recipe[abiquo::install_remoteservices]` - Installs the Abiquo Remote Services\n* `recipe[abiquo::install_v2v]` - Installs an standalone V2V Server\n* `recipe[abiquo::install_kvm]` - Installs the KVM hypervisor\n* `recipe[abiquo::setup_monolithic]` - Configures the Abiquo Monolithic Server\n* `recipe[abiquo::setup_server]` - Configures the Abiquo Server\n* `recipe[abiquo::setup_remoteservices]` - Configures the Abiquo Remote Services\n* `recipe[abiquo::setup_v2v]` - Configures an standalone V2V Server\n* `recipe[abiquo::setup_kvm]` - Configures the KVM hypervisor\n* `recipe[abiquo::upgrade]` - Upgrades an Abiquo Platform\n* `recipe[abiquo::install_database]` - Installs the Abiquo database\n* `recipe[abiquo::install_ext_services]` - Installs the Abiquo supporting services like Redis, RabbitMQ, etc.\n* `recipe[abiquo::install_jce]` - Installs the JCE unlimited strength jurisdiction policy files\n* `recipe[abiquo::monitoring]` - Installs an Abiquo monitoring node with KairosDB and Cassandra\n* `recipe[abiquo::certificate]` - Configures the SSL certificates\n\n# Attributes\n\nThe following attributes are under the `node['abiquo']` namespace.\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\n`['profile']` | The profile to install: \"monolithic\", \"server\", \"remoteservices\", \"v2v\", \"kvm\" or \"monitoring\" | String | \"monolithic\"\n`['install_ext_services']` | Whether or not to install supporting services like MariaDB, Redis, RabbitMQ, etc. | Boolean | true\n`['ui_address_type']` | The attribute to use as the Abiquo UI address: \"fqdn\", \"ipaddress\", \"fixed\" | String | \"fqdn\"\n`['ui_address']` | When `['ui_address_type']` is `fixed` use this as address | String | node['fqdn']\n`['nfs']['mountpoint']` | The path where the image repository is mounted | String | \"/opt/vm\\_repository\"\n`['nfs']['location']` | If set, the NFS repository to mount | String | nil\n`['license']` | The Abiquo license to install | String | nil\n`['properties']` | Hash with additional Abiquo properties to add to the Abiquo configuration file | Hash | {}\n`['yum']['repository']` | The main Abiquo yum repository | String | \"http://mirror.abiquo.com/abiquo/3.2/os/x86_64\"\n`['yum']['nightly-repo']` | A yum repository with nightly builds | String | nil\n`['db']['host']` | The database host used when running the database upgrade | String | \"localhost\"\"\n`['db']['port']` | The database port used when running the database upgrade | Integer | 3306\n`['db']['user']` | The database user used when running the database upgrade | String | \"root\"\n`['db']['password']` | The database password used when running the database upgrade | String | nil\n`['db']['install']` | Install the database when installing the Monolithic profile | Boolean | true\n`['db']['upgrade']` | Run the database upgrade when upgrading the monolithic profile | Boolean | true\n`['aim']['port']` | In a KVM, the port where the Abiquo AIM agent will listen | Integer | 8889\n`['tomcat']['http-port']` | The port where the Tomcat listens to HTTP traffic | Integer | 8009\n`['tomcat']['ajp-port']` | The port where the Tomcat listens to AJP traffic | Integer | 8010\n`['tomcat']['wait-for-webapps']` | If Chef will wait for the webapps to be running after restarting Tomcat | Boolean | false\n`['ssl']['certificatefile']` | The path to the SSL certificate | String | \"/etc/pki/tls/certs/ca.cert\"\n`['ssl']['keyfile']` | The path to the certificate's key | String | \"/etc/pki/tls/private/ca.key\"\n`['kairosdb']['port']` | The host where KairosDB is listening | Integer | 8080\n`['kairosdb']['version']` | The version of KairosDB to install in the monitoring node | String | \"0.9.4\"\n`['kairosdb']['release']` | The release of the configured KairosDB version to install in the monitoring node | String | \"6\"\n`['cassandra']['cluster_name']` | The name for the Cassandra cluster in the monitoring node | String | \"abiquo\"\n\n# Resources and providers\n\nThe Abiquo cookbook provides the following LWRPs:\n\n## abiquo\\_wait\\_for\\_webapp\n\nThis LWRP will make the Chef run wait until the configured webapp is started.\n\n### Parameters\n\n* `host` - The address where the webapp is running\n* `port` - The port where the webapp is listening\n* `webapp` - The name of the webapp\n* `open_timeout` - The timeout to open a connection to the webapp\n* `read_timeout` - The timeout to read from a connection to the webapp\n\n### Example\n\n    abiquo_wait_for_webapp \"api\" do\n        host \"localhost\"\n        port 8009\n        retries 3   # Retry if Tomcat is still not started\n        retry_delay 5\n        action :wait\n    end\n\n## abiquo\\_wait\\_for\\_port\n\nThis LWRP will make the Chef run wait until the configured port is open.\n\n### Parameters\n\n* `host` - The address where the service is running\n* `port` - The port where the service is listening\n* `service` - The name of the service\n* `delay` - The delay in seconds between retries\n* `timeout` - The timeout for a connection to be considered failed\n\n### Example\n\n    abiquo_wait_for_port \"cassandra\" do\n        host \"localhost\"\n        port 9160\n        delay 10\n        timeout 5\n        action :wait\n    end\n\n# Usage\n\nThe cookbook is pretty straightforwatd to use. Just set the `node['abiquo']['profile']` attribute\naccording to the profile you want to install or upgrade and and include one of the following recipes\nin the run list:\n\n* `recipe[abiquo]` - To perform an installation from scratch\n* `recipe[abiquo::upgrade]` - To upgrade an existing installation\n\nThe available profiles are: `monolithic`, `remoteservices`, `server`, `v2v` and `kvm`.\n\nWhen installing the Abiquo Monolithic profile, you may also want to set the `node['selfsigned_certificate']['cn']`\nattribute to match the hostname of the node. You can also use it together with the [hostname](http://community.opscode.com/cookbooks/hostname) cookbook to make sure the node will have it properly configured.\n\n# Testing\n\nIn order to test the cookbook you will need to install [Vagrant](https://www.vagrantup.com/) and [VirtualBox](https://www.virtualbox.org/). Once installed you can run the unit and integration tests as follows:\n\n    bundle install\n    bundle exec rake          # Run the unit and style tests\n    bundle exec rake kitchen  # Run the integration tests\n\nThe tests and Gemfile have been developed using Ruby 2.1.5, and that is the recommended Ruby version to use to run the tests. Other versions may cause conflicts with the versions of the gems Bundler will install.\n\n# License and Authors\n\n* Author:: Ignasi Barrera (ignasi.barrera@abiquo.com)\n* Author:: Marc Cirauqui (marc.cirauqui@abiquo.com)\n\nCopyright:: 2014, Abiquo\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 6.5",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apache2",
      "revision": "~> 3.1.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ark",
      "revision": "~> 0.9.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/cassandra-dse",
      "revision": "~> 4.1.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/iptables",
      "revision": "~> 2.0.1",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java-management",
      "revision": "~> 1.0.3",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/selfsigned_certificate",
      "revision": "~> 0.1.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/selinux",
      "revision": "~> 0.9.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": "~> 3.8.2",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "abiquo": "Installs and configures an Abiquo platform",
    "abiquo::repository": "Configures the Abiquo yum repositories",
    "abiquo::install_monolithic": "Installs the Abiquo Monolithic packages",
    "abiquo::install_remoteservices": "Installs the Abiquo Remote Services",
    "abiquo::install_server": "Installs the Abiquo Management Server",
    "abiquo::install_v2v": "Installs an standalone V2V server",
    "abiquo::install_kvm": "Installs a KVM hypervisor",
    "abiquo::setup_monolithic": "Configures and starts the Abiquo Platform",
    "abiquo::setup_remoteservices": "Configures and starts the Abiquo Remote Services",
    "abiquo::setup_server": "Configures the Abiquo Management Server",
    "abiquo::setup_v2v": "Configures an standalone V2V server",
    "abiquo::setup_kvm": "Configures a KVM hypervisor",
    "abiquo::upgrade": "Upgrades an Abiquo platform",
    "abiquo::install_database": "Creates the Abiquo database",
    "abiquo::certificate": "Installs a custom SSL certificate in the Apache",
    "abiquo::install_jce": "Installs the JCE unlimited strength jurisdiction policy files",
    "abiquo::monitoring": "Installs an Abiquo monitoring node with a Cassandra backed KairosDB",
    "abiquo::install_ext_services": "Installs Abiquo supporting services (MariaDB, RabbitMQ, Redis)"
  }
}