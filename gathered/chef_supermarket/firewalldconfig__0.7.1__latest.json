{
  "name": "firewalldconfig Chef cookbook",
  "chef_cookbook_name": "firewalldconfig",
  "revision": "0.7.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/firewalldconfig",
    "https://supermarket.chef.io/cookbooks/firewalldconfig/download",
    "https://supermarket.chef.io/cookbooks/firewalldconfig/versions/0.7.1",
    "https://supermarket.chef.io/cookbooks/firewalldconfig/versions/0.7.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/firewalldconfig/versions/0.7.1",
    "https://supermarket.chef.io/api/v1/cookbooks/firewalldconfig",
    "https://supermarket.chef.io/api/v1/cookbooks/firewalldconfig/versions/0.7.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/firewalldconfig",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/firewalldconfig/versions/0.7.1/download",
  "deprecated": false,
  "created": "2015-04-27T03:25:19.310Z",
  "updated": "2016-06-01T17:05:01.143Z",
  "description": "Installs/Configures firewalld using configuration files",
  "maintainer": {
    "name": "jtk",
    "email": "jtk@uic.edu"
  },
  "license": "Apache v2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 196713,
  "downloads_count_revision": 46,
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "firewalldconfig LWRP\n====================\n\n[Firewalld](https://fedoraproject.org/wiki/FirewallD) the dynamic firewall\nmanager introduced in Fedora 15, Centos/RHEL 7, and Ubuntu 14.10.\n\n# Resource Overview\n\nThis `firewalldconfig` cookbook provides resources for managing firewalld\nconfiguration. This cookbook treats firewalld in the manner in which it is\ndesigned, with zones and services as resources and source IPs, open ports,\netc. as state attributes on firewalld zones.\n\nOther firewall configuration LWRPs treat open ports as resources. This is a\nmistake because a port being open is only in firewalld is only meaningful in\nrelation to the source network traffic matched to the zone. Also, managing\nindividual ports as resources makes it quite difficult to write a recipe that\nimplements a firewall security policy for an organization.\n\nTo understand how to use this cookbook, the first step must be to understand\nthe design of firewalld. In short, firewalld is organized around zones. A\nzone has incoming traffic matched to it by interface or source. Within a zone\nthere are allowed services and ports, with a service simply being a simple way\nto refer to a list of ports. Firewall rich-rules add more specific behavior\nwithin a zone such as to target particular hosts within the zone to be allowed\nor denied access to a service.\n\nIn addition to the LWRP resources and providers, this cookbook provides recipes\nthat can save your node's firewalld configuration to your node attributes and\ndeploy your firewall configuration from node attributes. This allows you to\ncentrally audit or manage your firewall configurations through the node\nattributes.\n\n## default\n\nThe filewalldconfig default resource manages your main firewall configuration\nin `firewalld.conf`.\n\n### Actions\n\n* `:create` - Create firewalld configuration with default options.\n* `:create_if_missing` - Create firewalld configuration only if config is missing.\n* `:merge` - Default. Configure firewalld configuration, using existing configuration for defaults.\n\n### Attributes\n\n* `file` - Name attribute. Configuration file name or path. You probably always want to specify \"firewalld.conf\"\n* `cleanup_on_exit` - Remove firewall rules when firewalld stops. Sets firewalld `CleanupOnExit`. Boolean, default `true`.\n* `default_zone` - Default Firewalld zone. Sets firewalld `DefaultZone`. String, default `public`.\n* `ipv6_rpfilter` - Reverse path filter test on IPv6 packets. Sets firewalld `IPV6_rpfilter`. Boolean, default `true`.\n* `lockdown` - Firewalld lockdown mode. Sets firewalld `Lockdown`. Boolean, default `false`.\n* `minimal_mark` - Sets firewalld `MinimalMark`. Integer, default `100`.\n\n## service\n\nThe filewalldconfig `service` resource manages firewalld service entries.\nA service is simply a list of TCP/UDP network ports with a name and\ndescription.\n\nPlease note that firewalld services have default settings stored in\n`/usr/lib/firewalld/services` and configured values in\n`/etc/firewalld/services`. This resource creates and deletes configurations,\nbut not the defaults provided by firewalld. So deleting a service will only\nremove customizations if the service is also defined by a default.\n\n### Actions\n\n* `:create` - Default. Create firewalld service.\n* `:create_if_missing` - Create firewalld service if not configured.\n* `:delete` - Remove configuration for service.\n\n### Attributes\n\n* `:name` - Name attribute. Service name. String.\n* `:description` - Service description. String.\n* `:short` - Service short description. String.\n* `:ports` - Ports included in service. Array of Strings of the form `portid[-portid]/protocol`.\n\n## zone\n\nThe filewalldconfig `zone` resource manages firewalld zones. A zone consists\nof `interfaces` and `sources` to match incoming traffic, `ports` and `services`\nto permit designated traffic, and `rules` for rich-rule specifications to\nimplement more sophisiticated behavior. All of these zone features are\nspecified as arrays. Actions for zones provide capabilites to add and remove\nfeatures for a zone.\n\nPlease note that firewalld zones have default settings stored in\n`/usr/lib/firewalld/zones` and configured values in\n`/etc/firewalld/zones`. This resource creates and deletes configurations,\nbut not the defaults provided by firewalld. So deleting a zone will only\nremove customizations if the service is also defined by a default.\n\n### Actions\n\n* `:create` - Create firewalld zone as specified.\n* `:create_if_missing` - Create firewalld zone if not configured.\n* `:delete` - Remove configuration for zone.\n* `:filter` - Remove any features for a zone not explicitly listed.\n* `:merge` - Default. Add listed features to zone.\n* `:prune` - Remove listed features from zone.\n\n### Attributes\n\n* `:name` - Name attribute. Zone name. String.\n* `:description` - Zone description. String.\n* `:short` - Zone short description. String.\n* `:interfaces` - Interfaces for matching incoming traffic to zone. Array of interfaces names.\n* `:forward_ports` - FIXME - NOT IMPLEMENTED YET (target 0.8.0 release)\n* `:sources` - Sources for matching incoming traffic to zone. Array of IP address specifications.\n* `:ports` - Ports allowed to zone. Array of Strings of the form `portid[-portid]/protocol`.\n* `:rules` - Rich-rule specifications. Array of Hashes as described below.\n* `:services` - Services allowed to zone. Array of service names.\n* `:target` - Target for zone. May be one of `default`, `accept`, `drop`, or `reject`.\n\n#### Rich-rule specification\n\n* `:family` - String, `ipv4` or `ipv6`\n* `:source` - String, IP address specification, requires family.\n* `:source_invert` - If set to `true`, invert source matching.\n* `:destination` - String, IP address specification, requires family.\n* `:destination_invert` - If set to `true`, invert destination matching.\n* `:service` - String, service name to match.\n* `:port` - String, port specification to match, `portid[-portid]/protocol`.\n* `:protocol` - String, protocol to match (see `/etc/protocols`).\n* `:icmp_block` - String, icmp-block value. Not allowed with `:action`.\n* `:masquerade` - If set to `true`, masuerade matched traffic. Not allowed with `:action`.\n* `:forward_port` - Hash. See specification below.\n* `:log` - true or Hash. If Hash, it may include `:prefix`, `:level`, `:limit`.\n* `:audit` - true or Hash. If Hash, it may include `:limit`.\n* `:action` - String, `accept`, `reject`, `drop`.\n* `:reject_with` - Rejection type. See `iptables-extensions(8)`.\n* `:limit` - String, \"rate/duration\". Modifies :action.\n\n#### Forward ports specification\n\n* `:port` - String, port specification, `portid[-portid]/protocol`.\n* `:protocol` - String, \"tcp\" or \"udp\".\n* `:to_port` - String, forward target port.\n* `:to_addr` - String, forward target address.\n\n# Recipes\n\n* `default` - Installs and enables `firewalld`.\n* `deploy_from_node_attributes` - Installs, enables, and configures `firewalld` from node attributes.\n* `record` - Records firewalld configuration to node attributes.\n\n# Usage\n\nIf you're using [Berkshelf](http://berkshelf.com/), just add `firewalldconfig` to your\n`Berksfile` and `metadata.rb`:\n\n```ruby\n# Berksfile\ncookbook 'firewalldconfig'\n\n# metadata.rb\ndepends 'firewalldconfig'\n```\n\n## Recipes\n\nIn your recipes using this LWRP you should should always start with by\nincluding the `firewalldconfig` default recipe. This ensures that firewalld\nis properly installed and enabled. The default recipe also provides an\nresource, `execute[firewalld-reload]` for reloading firewalld. Using this\napproach to reload firewalld is important because at the time of this\nwriting reloading firewalld with the service target was unstable and results\nin firewalld crashing if a second reload is requested before the first\nresolves.\n\nA simple recipe to configure firewalld with the public zone as the default\nwith only services `http`, `https`, and `ssh` permitted:\n\n```ruby\ninclude_recipe 'firewalldconfig'\n\nfirewalldconfig 'firewalld.conf' do\n  default_zone 'public'\nend\n\nfirewalldconfig_zone 'public' do\n  services %w(http https ssh)\n  action :create\nend\n```\n\nContributing\n------------\n1. Fork the project\n2. Create a feature branch corresponding to you change\n3. Commit and test thoroughly\n4. Create a Pull Request on github\n\n\nLicense & Authors\n-----------------\n- Author:: Johnathan Kupferer <jtk@uic.edu>\n\n```text\nCopyright 2015, The University of Illinois at Chicago\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 21.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 7.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "rhel",
      "revision": ">= 7.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 14.10",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/xml",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}