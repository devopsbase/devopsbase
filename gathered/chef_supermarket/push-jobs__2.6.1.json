{
  "name": "push-jobs Chef cookbook",
  "chef_cookbook_name": "push-jobs",
  "revision": "2.6.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/push-jobs",
    "https://supermarket.chef.io/cookbooks/push-jobs/download",
    "https://supermarket.chef.io/cookbooks/push-jobs/versions/2.6.1",
    "https://supermarket.chef.io/cookbooks/push-jobs/versions/2.6.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/push-jobs/versions/2.6.1",
    "https://supermarket.chef.io/api/v1/cookbooks/push-jobs",
    "https://supermarket.chef.io/api/v1/cookbooks/push-jobs/versions/2.6.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook",
    "Mode/CLI"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/push-jobs",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/push-jobs/versions/2.6.1/download",
  "deprecated": false,
  "created": "2014-02-20T01:02:30.000Z",
  "updated": "2016-09-22T04:35:44.025Z",
  "description": "Installs the Chef Push Jobs Client",
  "maintainer": {
    "name": "chef",
    "email": "cookbooks@chef.io"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": false,
  "rating": null,
  "followers_count": 15,
  "downloads_count": 3836799,
  "downloads_count_revision": 685,
  "repository_url": "https://github.com/chef-cookbooks/push-jobs",
  "issues_url": "https://github.com/chef-cookbooks/push-jobs/issues",
  "chef_source_url": "https://github.com/chef-cookbooks/push-jobs",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# push-jobs cookbook\n[![Build Status](https://travis-ci.org/chef-cookbooks/push-jobs.svg?branch=master)](http://travis-ci.org/chef-cookbooks/push-jobs)\n[![Cookbook Version](https://img.shields.io/cookbook/v/push-jobs.svg)](https://supermarket.chef.io/cookbooks/push-jobs)\n\nInstalls the Chef Push client package and sets it up to run as a service.\n\nThe official documentation is on\n[docs.chef.io](https://docs.chef.io/push_jobs.html)\n\n## Requirements\nRequires Chef Server with the Chef Push Server add-on.\n\n#### Platforms\n* Debian/Ubuntu\n* Windows\n\nTested on Ubuntu 10.04, 12.04, CentOS 6.4, and Windows 2008 R2. It may work on other debian, rhel, or windows platform families with or without modification.\n\nTesting for Ubuntu/CentOS can be done with Test Kitchen, see TESTING.md in this repository.\n\n\n#### Chef\n- Chef 11.4+\n\n#### Cookbooks\n* [runit](https://supermarket.chef.io/cookbooks/runit)\n* [windows](https://supermarket.chef.io/cookbooks/windows)\n* [chef-ingredient](https://supermarket.chef.io/cookbooks/chef-ingredient)\n\n\n## Install the Workstation\nTo set up the Chef push jobs workstation, install the knife push plugin. The simplest way to install the plugin is by entering the following command at a shell prompt:\n\n    chef gem install knife-push  \n\nAlternatives to chef gem install be found at https://docs.chef.io/plugin_knife_custom.html#install-a-plugin. Once installed, the following subcommands will be available: \n* knife job list\n* knife job start\n* knife job status.\n\n## Usage\n\nInclude the default recipe in a node's run list. On Windows, the URL to the package to install and its SHA256 checksum are required so the package may be retrieved. For example:\n\n    node.default['push_jobs']['package_url'] = \"http://www.example.com/pkgs/opscode-push-jobs-client-windows-1.1.5-1.windows.msi\"\n    node.default['push_jobs']['package_checksum'] = \"a-sha256-checksum\"\n\nSet a whitelist of job names and their commands in the configuration file. This is automatically generated from the `node['push_jobs']['whitelist']` attribute Hash, such as:\n\n    node.default['push_jobs']['whitelist'] = {\n      \"chef-client\" => \"chef-client\",\n      \"apt-get-update\" => \"apt-get update\"\n    }\n\nAs this is an attribute, interesting uses arise from orchestrating a\nChef Client run. Assuming the above is present on the node prior to\nrunning the recipe, run Chef Client with this command from the local\nworkstation:\n\n    knife job start chef-client A_NODE_NAME\n\nNew jobs can be added to the whitelist simply by creating attributes.\nThis can be done with `knife exec`:\n\n    knife exec -E 'nodes.transform(\"name:A_NODE_NAME\") do |n|\n      n.set[\"push_jobs\"][\"whitelist\"][\"ntpdate\"] = \"ntpdate -u time\"\n    end'\n\nThen, run the chef-client job, and then the ntpdate job:\n\n    knife job start chef-client A_NODE_NAME\n    knife job start ntpdate A_NODE_NAME\n\nIn a future release, an LWRP may be added to automatically add push\njobs.\n\n## Attributes\n\nAttributes are documented in metadata.rb. See `attributes/default.rb`\nfor default values.\n\n## Recipes\n\nThere are several recipes in this cookbook, so they can be used all\ntogether (include the `default` recipe), or as necessary.\n\n#### default\n\nThe default recipe includes the appropriate recipe based on the node's\n`platform_family`. It will `raise` an error if:\n\n- The package URL and checksum attributes are not set on Windows\n- The whitelist is not a Hash.\n- The node's platform is not supported.\n\n#### config\n\nThis recipe ensures the platform-specific configuration directory\n(`/etc/chef`) is created, and renders the configuration file\n(`push-jobs-client.rb`) using the `whitelist` attribute.\nAny environment variables can be set using `environment_variables`\nattribute with key value pairs.\nYou can provide your own `push-jobs-client.rb.erb` template file in\na wrapper cookbook and set the `['config']['template_cookbook']`\nattribute to the name of that wrapper cookbook.\n\n\nThe path to the configuration file is set using the `PushJobsHelper`\nmodule's `#config_path` method. This is done to ensure the correct\nfile path is used on Linux and Windows platforms, as it uses\n`Chef::Config`'s `#platform_specific_path` method.\n\n#### linux\n\nThis recipe downloads and installs the Chef Push client from CHEF's public repositories. Setting the `node['push_jobs']['package_version']` attribute installs a specific version from the public repositories. Setting the `node['push_jobs']['package_url']` and `node['push_jobs']['package_checksum']` attributes together will override the default behavior and download the package from the specified URL.\n\n#### knife\n\nIf the `node['push_jobs']['gem_url']` attribute is set, this\nrecipe will download the knife-pushy gem to the system.\n\nUse this recipe on workstation systems that should manage running jobs\nwith the knife plugin.\n\n#### service\n\nThis recipe is responsible for handling the service resource based on\nthe node's platform. On Linux (Debian and RHEL families), it will\ncreate a `runit` service. The default logger is used, and the log will\nbe `/var/log/push-jobs-client/current`. On Windows, it will add a\nregistry key for the Chef Push client, and manage the Windows service.\n\nThe service resources expect to be restarted if the configuration\ntemplate is changed, using `subscribes` notification.\n\n#### windows\n\nThe `node['push_jobs']['package_url']` and `node['push_jobs']['package_checksum']` attributes must be set\nto use this recipe. The URL will be used (with the\nchecksum attribute) to install the package using the `windows_package`\nresource from the `windows` cookbook.\n\n## Client Connection Configuration\n\nThe push job client establishes a command and heartbeat channel to the\npush server over **tcp**.  The tcp connection information is read from \nthe Chef Server upon startup of the push client service from an endpoint\nsimilar to the following:\n\n    https://private-chef-server/organizations/org1/pushy/config/\n\nThe connection information for the push server is established when the\npush server is installed and the Chef Server is reconfigured.  In the case\nthe Chef Server is not providing the correct push server configuration, \nplease verify hostnames are correct and that both the push server and \nChef Server have been reconfigured.\n\n## Verify Push Jobs Client Connection\n\nIf the push client has been successfully installed on a node, the \nclient should be able to successfully respond to a `knife job` directed\nto the node.  If the node is not responding correctly, please consult the \nlogs `/var/log/push-jobs-client/current` (for Debian and Rhel families) and\nlook for entries similar to the following:\n\n    INFO: [pclient] Starting client ...\n    INFO: [pclient] Retrieving configuration from https://private-chef-server/organizations/org1/pushy/config/pc_6_1 ...\n    INFO: [pclient] Connecting to command channel at tcp://private-chef-server:10002\n    INFO: [pclient] Listening for server heartbeat at tcp://private-chef-server:10000\n    INFO: [pclient] Started client.\n\n## License & Authors\n\n* Author: Joshua Timberman (<joshua@chef.io>)\n* Author: Charles Johnson (<charles@chef.io>)\n* Author: Christopher Maier (<cm@chef.io>)\n\n```text\nCopyright:: 2009-2015, Chef Software, Inc\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/runit",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/windows",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef-ingredient",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}