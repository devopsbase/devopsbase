{
  "name": "hipsnip-mongodb Chef cookbook",
  "chef_cookbook_name": "hipsnip-mongodb",
  "revision": "1.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/hipsnip-mongodb",
    "https://supermarket.chef.io/cookbooks/hipsnip-mongodb/download",
    "https://supermarket.chef.io/cookbooks/hipsnip-mongodb/versions/1.1.0",
    "https://supermarket.chef.io/cookbooks/hipsnip-mongodb/versions/1.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/hipsnip-mongodb/versions/1.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/hipsnip-mongodb",
    "https://supermarket.chef.io/api/v1/cookbooks/hipsnip-mongodb/versions/1.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Databases",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Data Store/Document-oriented/MongoDB"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/hipsnip-mongodb",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/hipsnip-mongodb/versions/1.1.0/download",
  "deprecated": false,
  "created": "2013-05-01T15:24:03.000Z",
  "updated": "2014-04-07T01:00:21.000Z",
  "description": "Installs/Configures mongodb",
  "maintainer": {
    "name": "boroczadam",
    "email": "adam@hipsnip.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 7549112,
  "downloads_count_revision": 1258140,
  "repository_url": "https://github.com/hipsnip-cookbooks/mongodb",
  "issues_url": "https://github.com/hipsnip-cookbooks/mongodb",
  "chef_source_url": "https://github.com/hipsnip-cookbooks/mongodb",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description [![Build Status](https://travis-ci.org/hipsnip-cookbooks/mongodb.png)](https://travis-ci.org/hipsnip-cookbooks/mongodb)\n===========\nThis is a cookbook for setting up MongoDB either as a single instance, or as a replica set.\nYou can use the resource providers (see below) for creating your own layout of nodes,\nor the recipes to automatically set things up from node attributes.\n\nPlease note that this cookbook does not use the 10gen apt repository, and instead\ndownloads the required binaries from a given server. This gives you the ability to\npoint it at your own custom build of MongoDB (say with SSL included).\n\n\nCompatibility\n=============\nIntegration tested on 64bit Ubuntu `12.04` with Chef `11.4`, but assumed to work with other Debian-based\ndistros as well.\n\n> NOTE: Running MongoDB on 32bit nodes is generally a bad idea, so we'll raise an exception\nif someone tries to do it here.\n\n\nUsage\n=====\nOn the most basic level, just include the `hipsnip-mongodb::mongod` recipe to set up a single instance,\nor the `hipsnip-mongodb::replica_set` recipe to set up a replica set. These will set sensible\ndefaults and will work fine out of the box, but you have the ability to customize them\nusing the attributes below.\n\n> NOTE: The `replica_set` recipe will not work with Chef Solo. You can use the resource providers\nbelow to manually build your own replica set, if you don't use Chef Server.\n\n\nAttributes\n==========\n\nPlease note that many of the attributes below directly map to settings in the MongoDB\nconfiguration file. For more details on these settings, please refer to the\nmanual [here](http://docs.mongodb.org/manual/reference/configuration-options/).\n\n\n### Download settings\n\n    default['mongodb']['download']['version'] # The version to download (currently 2.4.3)\n    default['mongodb']['download']['checksum'] # SHA256 checksum of the version archive\n\n    # don't change these, unless you're running your own download server\n    default['mongodb']['download']['host'] # The host we're downloading from (defaults to 'fastdl.mongodb.org')\n    default['mongodb']['download']['subfolder'] # The subfolder we're downloading from (defaults to 'linux/')\n    default['mongodb']['download']['cache_dir'] # Where to store the downloaded archive (defaults to '/usr/local/src')\n\n\n### Global MongoDB configuration\n\nThese attributes are set globally on a node, and will apply to all instances\nwhich are deployed on that node.\n\n    default['mongodb']['user'] # The user to run MongoDB under (defaults to 'mongodb')\n    default['mongodb']['group'] # The group to run MongoDB under (defaults to 'mongodb')\n    default['mongodb']['group_id'] # Group ID for mongo group (defaults to 3500)\n\n    default['mongodb']['log_dir'] # Log folder (defaults to '/var/log/mongo')\n    default['mongodb']['data_dir'] # Data directory (defaults to '/var/lib/mongo_data')\n    default['mongodb']['journal_dir'] # Journal directory (defaults to '/var/lib/mongo_journal')\n\n\n    default['mongodb']['journal'] # Whether to turn journaling on (defaults to True)\n    default['mongodb']['journal_commit_interval'] # journalCommitInterval setting (defaults to 100)\n\n    default['mongodb']['syslog'] # Whether to send all log entries to syslog (defaults to True)\n    default['mongodb']['log_append'] # Just leave this on true (defaults to True)\n    default['mongodb']['log_cpu'] # Tell mongodb to periodically report CPU use in the logs (defaults to False)\n    default['mongodb']['log_verbose'] # Whether to enable verbose logging (defaults to False)\n    default['mongodb']['log_quiet'] # Reduce logging output (defaults to True)\n\n    default['mongodb']['auth_enabled'] # Whether authentication is enabled (defaults to False)\n    default['mongodb']['auth_keyfile'] # Authentication key file for replica sets (defaults to '')\n\n    default['mongodb']['http_enabled'] # Whether to enable the HTTP interface (defaults to False)\n    default['mongodb']['rest_enabled'] # Whether to enable the rest interface (defaults to False)\n    default['mongodb']['scripting_enabled'] # Whether to allow scripting (defaults to True)\n    default['mongodb']['tablescan_enabled'] # Whether to allow table scans (defaults to True)\n    default['mongodb']['prealloc_enabled'] # Set to false to disable file preallocation (defaults to True)\n\n    default['mongodb']['oplog'] # Oplog size in MB (defaults to 100)\n    default['mongodb']['small_files'] # Set to true to reduce the amount preallocated (defaults to False)\n    default['mongodb']['open_file_limit'] # The ulimit for open file descriptors set on the mongodb user (defaults to 64000)\n    default['mongodb']['set_tcp_keepalive_time'] # Whether to update the TCP keepalive time on the system (defaults to False)\n    default['mongodb']['tcp_keepalive_time'] # The new value for the TCP keepalive time (defaults to 300)\n\n\n### Gem settings\n\n    default['mongodb']['gem_version']['mongo'] # The version of the mongo gem to install (defaults to '1.8.5')\n    default['mongodb']['gem_version']['bson_ext'] # The version of the bson_ext gem to install (defaults to '1.8.5')\n\n\n### Misc.\n\n    default['mongodb']['node_check']['retries'] # The number of times to retry health checks (defaults to 3)\n    default['mongodb']['node_check']['timeout'] # Number of seconds to wait before retrying (defaults to 10)\n\n\n### Instance configuration\n\nThese settings will be used by the `mongod` and `replica_set` recipes when configuring\na new mongodb instance.\n\n    default['mongodb']['mongod']['port'] # The port to run the instance on (defaults to 27017)\n    default['mongodb']['mongod']['bind_ip'] # Comma-separated list of IPs to bind to - leave blank to bind to all (defauts to '')\n\n    # The attributes below are only used when setting up replica sets\n\tdefault['mongodb']['mongod']['replica_set'] # The replica set to join (defaults to 'my_set')\n    default['mongodb']['mongod']['arbiter_only'] # defaults to False\n    default['mongodb']['mongod']['build_indexes'] # defaults to True\n    default['mongodb']['mongod']['hidden'] # defaults to False\n    default['mongodb']['mongod']['priority'] # defaults to 1.0\n    default['mongodb']['mongod']['tags'] # defaults to {}\n    default['mongodb']['mongod']['slave_delay'] # defaults to 0\n    default['mongodb']['mongod']['votes'] # defaults to 1\n\n    # Use the value of this property when setting the address for a given replica set node\n    #    leave blank to use 'bind_ip' - can't both be blank!\n    default['mongodb']['node_address_attribute'] # defaults to 'fqdn'\n\n\n\nResources\n=========\n\n## hipsnip_mongodb_mongod\n\nSets up a mongod instance with the given parameters on the local host. It waits for\nthe node to come online, and performs a basic health check on it before handing\ncontrol back. Internally it uses the `hipsnip_mongodb_check_node` provider (see below) to\nverify that the node is up.\n\n### Actions\n\n* create (default)\n\n### Attributes\n\nThe value passed to `name` will be used as a postfix to the service name, configuration\nfile and data/journal directory of the new MongoDB instance. Using \"default\" as\nthe instance name has special meaning, and will cause the provider to not use a postfix.\nSee below for examples.\n\n* bind_ip : The IP address to bind to - leave empty to bind to all addresses (defaults to \"\")\n* port : The port to run the MongoDB service on (defaults to 27017)\n* replica_set : The name of the replica set this node will be a part of - leave\nblank to configure without a replica set (defaults to \"\")\n\n> NOTE: Setting the `replica_set` attribute alone will not trigger replica set\ncreation. You need to use the `hipsnip_mongodb_replica_set` provider to do that.\n\n### Examples\n\nTo set up a new MongoDB service called `mongod`, running on port `27018`,\nwith the config file `/etc/mongodb/mongd.conf` and data stored under `/var/lib/mongo_data/mongod`:\n\n    hipsnip_mongodb_mongod \"default\" do\n        port 27018\n    end\n\n\nTo set up a new MongoDB service called `mongod-primary`, running on port `27019`,\nwith the config file `/etc/mongodb/mongod-primary.conf` and data stored under `/var/lib/mongo_data/mongod-primary`:\n\n    hipsnip_mongodb_mongod \"primary\" do\n        port 27019\n        replica_set \"my_set\"\n    end\n\nIt will also fill in the `replSet` configuration directive, but will not initialize\nthe replica set.\n\n\n\n## hipsnip_mongodb_check_node\n\nUsed to check if a given node is up. If it can't connect, or if the health check fails,\nit waits a few seconds and retries. The time spent waiting can be adjusted via\n`node['mongodb']['node_check']['timeout']`, while the maximum number of retires can\nbe set in `node['mongodb']['node_check']['retries']`. The actual wait time increases\nexponentially, calculated by `retries * timeout`.\n\n> NOTE: On the first starup, MongoDB can spend quite some time pre-allocating data\nand journal files. Depending on the speed of your hardware, and the oplog size\nyou specify, you may need to increase the timeout setting to avoid a failure during\nyour initial chef run.\n\n### Actions\n\n* run (default)\n\n### Attributes\n\n* node_ip (name attribute)\n* port (defaults to 27017)\n\n### Examples\n\nTo run a health check on the default node:\n\n    hipsnip_mongodb_check_node \"127.0.0.1\" do\n    \tport 27017 # you could actually omit the port in this case\n    end\n\n\n\n## hipsnip_mongodb_replica_set\n\nTakes a list of member nodes, and then it either initializes or updates the given\nreplica set (if it already exists). It also performs a health check after the replica\nset initialization or reconfiguration, to make sure all is well before handing control\nback. Failed health checks are reattempted - this can be controlled via `node['mongodb']['node_check']['timeout']`\nand `node['mongodb']['node_check']['retries']`.\n\n### Actions\n\n* create (default)\n\n### Attributes\n\n* replica_set : The name of the replica set (name attribute)\n* members : The list of member nodes\n\nThe member nodes are represented as hashes, and have the following fields:\n\n* id (required) : The unique id of the member, between 0 and 255. Should not change between reconfigurations!\n* host (required) : The address where the node can be reached in the `host:port` format.\n* arbiter_only\n* build_indexes\n* hidden\n* priority\n* tags\n* slave_delay\n* votes\n\nThe last few are direct references to replica set node configuration directives - please\nrefer to the MongoDB documentation for details.\n\n### Examples\n\nTo set up a replica set with a couple of nodes:\n\n    hipsnip_mongodb_replica_set \"my_set\" do\n        members [\n            {\n                'id' => 0,\n                'host' => '127.0.0.1:27017'\n            },\n            {\n                'id' => 1,\n                'host' => '127.0.0.1:27018'\n            }\n        ]\n    end\n\n\n\nDevelopment\n============\nPlease refer to the Readme [here](https://github.com/hipsnip-cookbooks/cookbook-development/blob/master/README.md)\n\n\nLicense and Author\n==================\n\nAuthor:: Adam Borocz ([on GitHub](https://github.com/motns))\n\nCopyright:: 2013, HipSnip Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 12.04",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/sysctl",
      "revision": "~> 0.3.2",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "hipsnip-mongodb": "Downloads and unpacks the required version of MongoDB - does not set up an instance",
    "hipsnip-mongodb::mongo_gem": "Installs the required version of the mongo and bson_ext gems",
    "hipsnip-mongodb::mongod": "Sets up a single mongod instance - don't use for replica sets",
    "hipsnip-mongodb::replica_set": "Automatically sets up and configures a replica set using Chef Search"
  }
}