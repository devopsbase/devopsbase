{
  "name": "gelf_handler Chef cookbook",
  "chef_cookbook_name": "gelf_handler",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/gelf_handler",
    "https://supermarket.chef.io/cookbooks/gelf_handler/download",
    "https://supermarket.chef.io/cookbooks/gelf_handler/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/gelf_handler/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/gelf_handler/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/gelf_handler",
    "https://supermarket.chef.io/api/v1/cookbooks/gelf_handler/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Monitoring & Trending",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/gelf_handler",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/gelf_handler/versions/1.0.0/download",
  "deprecated": false,
  "created": "2012-11-26T04:44:29.000Z",
  "updated": "2013-07-03T23:38:10.000Z",
  "description": "Installs/Configures a Chef handler which reports run failures and to a GELF server. Derived from Jon Woods gem.",
  "maintainer": {
    "name": "peter_donald",
    "email": "peter@realityforge.org"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 6042750,
  "downloads_count_revision": 1207275,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\n[![Build Status](https://secure.travis-ci.org/realityforge/chef-gelf_handler.png?branch=master)](http://travis-ci.org/realityforge/chef-gelf_handler)\n\nA cookbook that a handler that sends chef run results to a GELF server such as\nLogstash or Graylog. If you have the [ohai-system_pacakges](https://github.com/finnlabs/ohai-system_packages/)\nplugin installed, it will also send package statistics.\n\nRequirements\n============\n\nThe `chef_handler` cookbook.\n\nAttributes\n==========\n\nThis cookbook uses the following attributes to configure how it is installed.\n\n* `node['chef_client']['handler']['gelf']['host']` - The gelf server host. Defaults to nil.\n* `node['chef_client']['handler']['gelf']['port']` - The gelf server port. Defaults to 12201.\n* `node['chef_client']['handler']['gelf']['facility']` - The facility under which to report. Defaults to 'chef-client'.\n* `node['chef_client']['handler']['gelf']['report_host']` - The host to report messages as coming from. Defaults to `node['fqdn']`.\n* `node['chef_client']['handler']['gelf']['blacklist']` - A hash of cookbooks, resources and actions to ignore in the change list.. Defaults to `{}`.\n\nUsage\n=====\n\nSet the host and port properties on the node and include the \"gelf_handler::default\" recipe.\n\nBlacklisting\n------------\n\nSome resources report themselves as having updated on every run even if nothing changed, or\nare just things you don't care about. To reduce the amount of noise in your logs these can be\nignored by providing a blacklist. In this example we don't want to be told about the GELF handler\nbeing activated:\n\n  node['chef_client']['handler']['gelf']['blacklist'] =\n     {\"chef_handler\" => {\"chef_handler\" => [ \"nothing\", \"enable\" ]}\n\n\nCredits\n=======\n\nThe handler was originally written by Jon Wood and was converted to a cookbook by Peter Donald.\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef_handler",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "recommends": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ohai-system_packages",
      "revision": ">= 0.0.0"
    }
  ]
}