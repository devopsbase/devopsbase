{
  "name": "powershell Chef cookbook",
  "chef_cookbook_name": "powershell",
  "revision": "3.3.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/powershell",
    "https://supermarket.chef.io/cookbooks/powershell/download",
    "https://supermarket.chef.io/cookbooks/powershell/versions/3.3.1",
    "https://supermarket.chef.io/cookbooks/powershell/versions/3.3.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/powershell/versions/3.3.1",
    "https://supermarket.chef.io/api/v1/cookbooks/powershell",
    "https://supermarket.chef.io/api/v1/cookbooks/powershell/versions/3.3.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System/Windows"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/powershell",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/powershell/versions/3.3.1/download",
  "deprecated": false,
  "created": "2011-05-20T15:05:34.000Z",
  "updated": "2016-09-02T19:21:47.995Z",
  "description": "Installs/Configures PowerShell on the Windows platform",
  "maintainer": {
    "name": "chef",
    "email": "cookbooks@chef.io"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 80,
  "downloads_count": 20247025,
  "downloads_count_revision": 3539,
  "repository_url": "https://github.com/chef-cookbooks/powershell",
  "issues_url": "https://github.com/chef-cookbooks/powershell/issues",
  "chef_source_url": "https://github.com/chef-cookbooks/powershell",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Powershell Cookbook\n===================\n[![AppVeyor Build status](https://ci.appveyor.com/api/projects/status/ej1qiur29xbuc2eq/branch/master?svg=true)](https://ci.appveyor.com/project/ChefWindowsCookbooks/powershell/branch/master)\n[![Travis Build Status](https://travis-ci.org/chef-cookbooks/powershell.svg?branch=master)](http://travis-ci.org/chef-cookbooks/powershell)\n[![Cookbook Version](https://img.shields.io/cookbook/v/powershell.svg)](https://supermarket.chef.io/cookbooks/powershell)\n\nInstalls and configures PowerShell 2.0, 3.0, 4.0 or 5.0.\n\nFor users of Chef 10 without the `powershell_script` built-in resource, this cookbook also includes a resource/provider for executing scripts using the PowerShell interpreter.\n\nRequirements\n------------\n\n### Platforms\n\nNot every version of Windows supports every version of Powershell. The following table illustrates Powershell support across the Windows family. **Included** means that the base installation of the operating system includes the indicated version of Powershell.\n\n<table>\n  <tr>\n    <th>Windows Version</th>\n    <th>PowerShell 2.0</th>\n    <th>PowerShell 3.0</th>\n    <th>PowerShell 4.0</th>\n    <th>PowerShell 5.0</th>\n  </tr>\n  <tr>\n    <td>Windows XP</td>\n    <td>Supported</td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>Windows Server 2003 / 2003 R2</td>\n    <td>Supported</td>\n    <td>Not Available</td>\n    <td>Not Available</td>\n    <td>Not Available</td>\n  </tr>\n  <tr>\n    <td>Windows Server 2008 / Vista</td>\n    <td>Supported</td>\n    <td>Supported</td>\n    <td>Not Available</td>\n    <td>Not Available</td>\n  </tr>\n  <tr>\n    <td>Windows Server 2008 R2</td>\n    <td>Included</td>\n    <td>Supported</td>\n    <td>Supported</td>\n    <td>Supported</td>\n  </tr>\n  <tr>\n    <td>Windows Server 2012 / Windows 8</td>\n    <td>Included</td>\n    <td>Included</td>\n    <td>Supported</td>\n    <td>Supported</td>\n  </tr>\n  <tr>\n    <td>Windows Server 2012R2 / Windows 8.1</td>\n    <td>Included</td>\n    <td>Not Available</td>\n    <td>Included</td>\n    <td>Supported</td>\n  </tr>\n</table>\n\n### Cookbooks\n\n* windows\n\nPowerShell also requires the appropriate version of the Microsoft .NET Framework to be installed, if the operating system does not ship with that version. The following community cookbooks are used to install the correct version of the .NET Framework:\n\n* ms_dotnet\n\nResource/Provider\n-----------------\n\n**Note**: In Chef 11, use the built-in [powershell_script](http://docs.chef.io/resource_powershell_script.html) resource.\n\n### `powershell`\n\nExecute a script using the PowerShell interpreter (much like the script resources for bash, csh, perl, python and ruby). A temporary file is created and executed like other script resources, rather than run inline. By their nature, Script resources are not idempotent, as they are completely up to the user's imagination. Use the `not_if` or `only_if` meta parameters to guard the resource for idempotence.\n\n#### Actions\n\n- :run: run the script\n\n#### Attribute Parameters\n\n- `command`: name attribute. Name of the command to execute.\n- `code`: quoted string of code to execute.\n- `creates`: a file this command creates - if the file exists, the command will not be run.\n- `cwd`: current working directory to run the command from.\n- `flags`: command line flags to pass to the interpreter when invoking.\n- `environment`: A hash of environment variables to set before running this command.\n- `user`: A user name or user ID that we should change to before running this command.\n- `group`: A group name or group ID that we should change to before running this command.\n- `returns`: The return value of the command (may be an array of accepted values). This resource raises an exception if the return value(s) do not match.\n- `timeout`: How many seconds to let the command run before timing it out.\n\n#### Examples\n\n```ruby\n# change the computer's hostname\npowershell \"rename hostname\" do\n  code <<-EOH\n  $computer_name = Get-Content env:computername\n  $new_name = 'test-hostname'\n  $sysInfo = Get-WmiObject -Class Win32_ComputerSystem\n  $sysInfo.Rename($new_name)\n  EOH\nend\n```\n\n```ruby\n# write out to an interpolated path\npowershell \"write-to-interpolated-path\" do\n  code <<-EOH\n  $stream = [System.IO.StreamWriter] \"#{Chef::Config[:file_cache_path]}/powershell-test.txt\"\n  $stream.WriteLine(\"In #{Chef::Config[:file_cache_path]}...word.\")\n  $stream.close()\n  EOH\nend\n```\n\n```ruby\n# use the change working directory attribute\npowershell \"cwd-then-write\" do\n  cwd Chef::Config[:file_cache_path]\n  code <<-EOH\n  $stream = [System.IO.StreamWriter] \"C:/powershell-test2.txt\"\n  $pwd = pwd\n  $stream.WriteLine(\"This is the contents of: $pwd\")\n  $dirs = dir\n  foreach ($dir in $dirs) {\n    $stream.WriteLine($dir.fullname)\n  }\n  $stream.close()\n  EOH\nend\n```\n\n```ruby\n# cwd to a winodws env variable\npowershell \"cwd-to-win-env-var\" do\n  cwd ENV['TEMP']\n  code <<-EOH\n  $stream = [System.IO.StreamWriter] \"./temp-write-from-chef.txt\"\n  $stream.WriteLine(\"chef on windows rox yo!\")\n  $stream.close()\n  EOH\nend\n```\n\n```ruby\n# pass an env var to script\npowershell \"read-env-var\" do\n  cwd Chef::Config[:file_cache_path]\n  environment ({'foo' => 'BAZ'})\n  code <<-EOH\n  $stream = [System.IO.StreamWriter] \"./test-read-env-var.txt\"\n  $stream.WriteLine(\"FOO is $env:foo\")\n  $stream.close()\n  EOH\nend\n```\n\n### `powershell_module`\n\nInstalls or uninstalls a Powershell module. You either need to install rubyzip with chef_gem or\ninclude the default recipe before using this resource.\n\n#### Actions\n\n- :install: install the powershell module\n- :uninstall: uninstall the powershell module\n\n#### Attribute Parameters\n\n- `name`: name attribute. Name of the module to install or uninstall.\n- `source`: quoted string of Local directory path(Not zipfile) or URL for the zipped module folder.\n- `package_name`: quoted string of name of the module to install or uninstall.\n- `destination`: location where module should be installed\n\n#### Examples\n\n```ruby\ninclude_recipe 'powershell::default'\n\n# Install module from local directory path\n# change the package_name and source\npowershell_module \"PsUrl\" do\n  package_name \"PsUrl\"\n  source \"C:\\\\PsUrl\"\nend\n```\n\n```ruby\n# Install from URL of zipped module folder\npowershell_module \"posh-git\" do\n  package_name \"posh-git\"\n  source \"https://github.com/dahlbyk/posh-git/zipball/master\"\nend\n```\n\n```ruby\n# change the package_name\npowershell_module \"Uninstall PsUrl\" do\n  package_name \"PsUrl\"\n  action :uninstall\nend\n```\n\n```ruby\n# Install without using 'source' attribute\npowershell_module \"https://github.com/dahlbyk/posh-git/zipball/master\" do\n  package_name \"posh-git\"  \nend\n```\n\nMixin\n-----\n\nThe `Chef::Mixin::PowershellOut` mixin has been moved to the [windows](http://ckbk.it/windows) cookbook.\n\nUsage\n-----\n\n**Note**: The installation may require a restart of the node being configured before PowerShell can be used.\n\n### default\n\nThe default recipe is needs to be included before using the powershell_module resource.\n\n### powershell2\n\nInclude the `powershell2` recipe in a run list, to ensure PowerShell 2.0 is installed.\n\nOn the following versions of Windows the PowerShell 2.0 package will be downloaded from Microsoft and installed:\n\n- Windows XP\n- Windows Server 2003\n- Windows Server 2008\n- Windows Vista\n\nOn the following versions of Windows, PowerShell 2.0 is present and must just be enabled:\n\n- Windows 7\n- Windows Server 2008 R2\n- Windows Server 2008 R2 Core\n\n### powershell3\n\nInclude the `powershell3` recipe in a run list, to install PowerShell 3.0 is installed on applicable platforms. If a platform is not supported or if it already includes PowerShell 3.0, an exception will be raised.\n\n### powershell4\n\nInclude the `powershell4` recipe in a run list, to install PowerShell 4.0 is installed on applicable platforms. If a platform is not supported or if it already includes PowerShell 4.0, an exception will be raised.\n\n### powershell5\n\nInclude the `powershell5` recipe in a run list, to install PowerShell 5.0 is installed on applicable platforms. If a platform is not supported or if it already includes PowerShell 5.0, an exception will be raised.\n\nReferences\n----------\n\n* Installing [Windows Management Framework 2.0](http://support.microsoft.com/kb/968929)\n* Installing [Windows Management Framework 3.0](http://www.microsoft.com/en-us/download/details.aspx?id=34595)\n* Installing [Windows Management Framework 4.0](http://www.microsoft.com/en-us/download/details.aspx?id=40855)\n* Installing [Windows Management Framework 5.0](https://www.microsoft.com/en-us/download/details.aspx?id=50395)\n\nLicense & Authors\n-----------------\n\n- Author:: Seth Chisamore (<schisamo@chef.io>)\n- Author:: Julian Dunn (<jdunn@chef.io>)\n\n```text\nCopyright:: 2011-2015, Chef Software, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/windows",
      "revision": ">= 1.2.8",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ms_dotnet",
      "revision": ">= 2.6",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef_handler",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "powershell::default": "Makes sure RubyZip is installed (for powershell_module)",
    "powershell::powershell2": "Installs PowerShell 2.0",
    "powershell::powershell3": "Installs PowerShell 3.0",
    "powershell::powershell4": "Installs PowerShell 4.0",
    "powershell::powershell5": "Installs PowerShell 5.0",
    "powershell::winrm": "Configures WinRM",
    "powershell::dsc": "Desired State Configuration",
    "powershell::enable_lcm": "Enable the DSC Local Configuration Manager",
    "powershell::disable_lcm": "Disable the DSC Local Configuration Manager"
  }
}