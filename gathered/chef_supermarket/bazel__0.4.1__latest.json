{
  "name": "bazel Chef cookbook",
  "chef_cookbook_name": "bazel",
  "revision": "0.4.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/bazel",
    "https://supermarket.chef.io/cookbooks/bazel/download",
    "https://supermarket.chef.io/cookbooks/bazel/versions/0.4.1",
    "https://supermarket.chef.io/cookbooks/bazel/versions/0.4.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/bazel/versions/0.4.1",
    "https://supermarket.chef.io/api/v1/cookbooks/bazel",
    "https://supermarket.chef.io/api/v1/cookbooks/bazel/versions/0.4.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/bazel",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/bazel/versions/0.4.1/download",
  "deprecated": false,
  "created": "2016-05-30T06:57:18.873Z",
  "updated": "2016-10-12T04:19:44.744Z",
  "description": "Installs/Configures bazel",
  "maintainer": {
    "name": "yugui",
    "email": "gge@gengo.com"
  },
  "license": "BSD 3-Clause License",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 262,
  "downloads_count_revision": 23,
  "repository_url": "https://github.com/gengo/cookbook-bazel",
  "issues_url": "https://github.com/gengo/cookbook-bazel/issues",
  "chef_source_url": "https://github.com/gengo/cookbook-bazel",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "bazel Cookbook\n=======================\nInstalls/Configures [Bazel](http://bazel.io)\n\n[![Build Status](https://travis-ci.org/gengo/cookbook-bazel.svg?branch=master)](https://travis-ci.org/gengo/cookbook-bazel)\n\nUsage\n-----\n#### bazel::default Recipe\nJust include `bazel` in your node's `run_list`:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[bazel]\"\n  ]\n}\n```\n\n#### Custom Resources\n\n```ruby\nbazel_installation('bazel') do\n  version '0.3.0'\n  action :create\nend\n```\n\nRequirements\n------------\n#### chef\nChef 12.5+\n\n#### cookbooks\n* build-essential\n* java\n* poise-python\n* zip\n* apt\n* homebrew\n\nAttributes\n----------\n\n#### bazel::default\n| Key                                | Type    | Description              | Default      |\n|------------------------------------|---------|--------------------------|--------------|\n| `['bazel']['version']`             | String  | Bazel version to install | 0.3.0        |\n| `['bazel']['prefix']`              | String  | installation prefix      | `/usr/local` |\n| `['bazel']['installation_method']` | String  | how to install Bazel     | package      |\n\nValid values for `installation_method` are:\n\n`script`\n: Installs Bazel with an installer script\n`package`\n: Installs Bazel with a package management system in the package\n`homebrew`\n: More specifically than `package`, installs Bazel with homebrew\n`apt`\n: More specifically than `package`, installs Bazel with apt\n\n\nRecipes\n---------\n#### bazel::bazel\n\nInstalls Bazel and its minimal dependencies\n\n#### bazel::default\n\nInstalls other recommended tools in addition to `bazel::bazel`.\n\n\nResources\n----------\n#### bazel\\_installation\nAutomatically selects a right installation method and installs Bazel.\n\n##### Example\n\n```ruby\nbazel_installation('bazel') do\n  version '0.3.0'\n  action :create\nend\n```\n\n##### Properties\n\n* `version` - Bazel version to install\n\n\n#### bazel\\_installation\\_package\nAutomatcially selects a right package management system and installs Bazel with it.\n\n##### Example\n\n```ruby\nbazel_installation_package('bazel') do\n  version '0.3.0'\n  action :create\nend\n```\n\n##### Properties\n\n* `version` - Bazel version to install\n\n\n#### bazel\\_installation\\_homebrew\nInstalls bazel with homebrew\n\n\n#### bazel\\_installation\\_apt\nInstalls bazel with apt\n\n#### bazel\\_installation\\_script\nInstalls bazel with an installer scirpt.\n\n\n###### Example\n\n```ruby\nbazel_installation_script('bazel') do\n  version '0.3.0'\n  action :create\nend\n```\n\n##### Properties\n\n* `version` - Verion of Bazel to install\n* `prefix` - installation prefix\n* `installer_uri` - URI to the installer\n* `installer_checksum` - SHA256 sum of the installer\n\n\nContributing\n------------\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write chefspec for the feature (if applicable)\n4. Write your change\n4. Write serverspec for the feature (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\nCopyright 2016 Gengo Inc.\n\nBSD 3-Clause license\n",
  "requires": [
    {
      "kind": "host",
      "label": "mac_os_x",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/build-essential",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/poise-python",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/zip",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/homebrew",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}