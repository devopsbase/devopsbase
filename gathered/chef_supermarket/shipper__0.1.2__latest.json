{
  "name": "shipper Chef cookbook",
  "chef_cookbook_name": "shipper",
  "revision": "0.1.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/shipper",
    "https://supermarket.chef.io/cookbooks/shipper/download",
    "https://supermarket.chef.io/cookbooks/shipper/versions/0.1.2",
    "https://supermarket.chef.io/cookbooks/shipper/versions/0.1.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/shipper/versions/0.1.2",
    "https://supermarket.chef.io/api/v1/cookbooks/shipper",
    "https://supermarket.chef.io/api/v1/cookbooks/shipper/versions/0.1.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/shipper",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/shipper/versions/0.1.2/download",
  "deprecated": false,
  "created": "2014-12-10T01:25:57.093Z",
  "updated": "2014-12-10T01:28:54.474Z",
  "description": "Setup shipper to allow continuous deployments",
  "maintainer": {
    "name": "dlapiduz",
    "email": "diego.lapiduz@gsa.gov"
  },
  "license": "none",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 611710,
  "downloads_count_revision": 611710,
  "repository_url": "https://github.com/18F/shipper-cookbook",
  "issues_url": "https://github.com/18F/shipper-cookbook/issues",
  "chef_source_url": "https://github.com/18F/shipper-cookbook",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nInstalls and configures the latest version of (Shipper)[https://github.com/18f/shipper]. And provides a `shipper_config` LWRP.\n\nRequirements\n============\n\nPlatform\n--------\n\n* Debian, Ubuntu\n\nResource/Provider\n=================\n\nThis cookbook includes LWRPs for managing shipper config files.\n\n`shipper_config`\n-----------------\n\nCreates a Shipper configuration file at the path specified. And sets up a daemon\nwith the configuration created\n\n# Actions\n\n- :create: create a Shipper configuration file and daemon.\n- :delete: delete an existing Shipper configuration file and daemon.\n\n# Attribute Parameters\n\n- project: name attribute. Name of the project being deployed.\n- repository: github repository for the project.\n- environment: the application environment. Default: `production`\n- app_path: path to the application.\n- app_user: user that owns the application path.\n- server_id: unique id of the server. Default: Hash of the server ip.\n- github_key: github API key to read and clone private repositories.\n- shared_files: a hash of shared files. It takes the form of `{ from: 'to' }`.\n- before_symlink: array of commands to run before symlinking.\n- after_symlink: array of commands to run after symlinking.\n- shipper_path: path to the shipper install directory. Default: `/etc/shipper`\n\n\n# Example\n\n    # create a config\n    shipper_config \"myproject\" do\n      repository \"https://github.com/18f/shipper.git\"\n      environment \"production\"\n      app_path deploy_to_dir\n      app_user \"user\"\n      github_key \"foobar\"\n      shared_files {\n        \"config/database.yml\" => \"config/database.yml\"\n      }\n      after_symlink [\n        \"touch tmp/restart.txt\"\n      ]\n    end\n\nUsage\n=====\n\nSimply include the recipe where you want Shipper installed.\n"
}