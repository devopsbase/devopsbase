{
  "name": "search_helpers Chef cookbook",
  "chef_cookbook_name": "search_helpers",
  "revision": "0.1.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/search_helpers",
    "https://supermarket.chef.io/cookbooks/search_helpers/download",
    "https://supermarket.chef.io/cookbooks/search_helpers/versions/0.1.1",
    "https://supermarket.chef.io/cookbooks/search_helpers/versions/0.1.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/search_helpers/versions/0.1.1",
    "https://supermarket.chef.io/api/v1/cookbooks/search_helpers",
    "https://supermarket.chef.io/api/v1/cookbooks/search_helpers/versions/0.1.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Search"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/search_helpers",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/search_helpers/versions/0.1.1/download",
  "deprecated": false,
  "created": "2015-05-26T13:47:04.889Z",
  "updated": "2016-05-27T13:32:05.350Z",
  "description": "Installs/Configures search_helpers",
  "maintainer": {
    "name": "rackops",
    "email": "rackspace-cookbooks@rackspace.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 135745,
  "downloads_count_revision": 135745,
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "[![Circle CI](https://circleci.com/gh/rackspace-cookbooks/search_helpers.svg?style=svg)](https://circleci.com/gh/rackspace-cookbooks/search_helpers)\n\n# search_helpers\n\nsearch_helpers is a chef library cookbook designed to streamline common tasks in\nChef that require search.\n\n## [Changelog](CHANGELOG.md)\n\nSee CHANGELOG.md for additional information about changes to this stack over time.\n\n## Supported Platforms\n\n* Ubuntu 12.04\n* CentOS 6.5\n\n## Usage\n\nPlace a dependency on the search_helpers cookbook in your cookbook's metadata.rb\n\n```\ndepends 'search_helpers'\n```\n\nThen, in a recipe:\n\n```\ndiscovery 'my_cookbook_mysql_master' do\n  tags ['mysql', 'master']\n  action :search\nend\n```\n\n## Resource\n\n### discovery\n\nProvides a rudimentary discovery mechanism on top of chef search, based on a tag\nmodel. Note that while the default implementation relies on underlying Chef\ntags, future implementations might not necessarily do so.\n\nThe `discovery` resource and provider provides generic actions for applying tags\nto any Chef node, as well as enumerating other Chef nodes with a given tag or\nrunning a provided block on all nodes that have specific tags.\n\n#### Parameters\n\n* `tags` - List of tags to apply or search for.\n\n* `block` \n\nThe block attribute, by default, is nil. This means\n`node.run_state[\"discovery_#{new_resource.name}\"]` will contain an array\nof nodes returned from the search. You may also pass a block to `data` and that\nblock will be executed for each node returned from the search, in addition to\nthe `node.run_state` being set.\n\nIf you return a value from your block (instead of nil),\n`node.run_state[\"discovery_#{new_resource.name}\"]` will be populated with an\narray of objects returned from the block.\n\n#### Actions\n\n* `:search` - Default action, Find a node with a particular array of tags\n* `:add` - Apply tags to a node\n* `:remove`: Remove tags from a node\n\n### Examples\n\n#### Search and store the result in a `run_state` attribute :\n\n```\ndiscovery 'my_cookbook_mysql_master' do\n  tags ['mysql', 'master']\n  action :search\nend\nfound_master = node.run_state['discovery_my_cookbook_mysql_master'].first\nif found_master\n  Chef::Log.info(\"Found mysql master #{found_master}\")\nelse\n  Chef::Log.info('No mysql master was found')\nend\n```\n\n#### Use the search result in a block to find nodes IPs :\n\n```\ndiscovery 'find a mysql master' do\n  tags ['master', 'mysql']\n  block do |node|\n    node_ip = best_ip_for(node)\n    Chef::Log.warn(\"#{node.name} was found as a mysql master at #{node_ip}\")\n    node_ip\n  end\n  action :search\nend\n```\n\n#### Apply tags to a node\n\n```\ndiscovery 'add mysql master tag' do\n  tags ['master', 'mysql']\n  action :add\nend\n```\n\n#### Remove tags from a node\n\n```\ndiscovery 'no longer consider this node a mysql master' do\n  tags ['mysql', 'master']\n  action :remove\nend\n```\n\n\n\n## Contributing\n\n1. Fork the repository on Github\n2. Create a named feature branch (i.e. `add-new-recipe`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request\n\n## Authors\n\nAuthor:: Rackspace (devops-chef@rackspace.com)\n\n## License\n```\n# Copyright 2015, Rackspace Hosting\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n```\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/poise",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}