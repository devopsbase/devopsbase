{
  "name": "magentostack Chef cookbook",
  "chef_cookbook_name": "magentostack",
  "revision": "2.0.3",
  "uris": [
    "https://supermarket.chef.io/cookbooks/magentostack",
    "https://supermarket.chef.io/cookbooks/magentostack/download",
    "https://supermarket.chef.io/cookbooks/magentostack/versions/2.0.3",
    "https://supermarket.chef.io/cookbooks/magentostack/versions/2.0.3/download",
    "https://supermarket.chef.io/api/v1/cookbooks/magentostack/versions/2.0.3",
    "https://supermarket.chef.io/api/v1/cookbooks/magentostack",
    "https://supermarket.chef.io/api/v1/cookbooks/magentostack/versions/2.0.3/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/magentostack",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/magentostack/versions/2.0.3/download",
  "deprecated": false,
  "created": "2015-05-11T20:40:54.545Z",
  "updated": "2016-06-10T13:28:25.319Z",
  "description": "Provides a full Magento stack",
  "maintainer": {
    "name": "rackops",
    "email": "rackspace-cookbooks@rackspace.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 1109476,
  "downloads_count_revision": 117619,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# magentostack\n\n## Supported Platforms\n\n- CentOS 6.5\n- Ubuntu 12.04 (untested)\n- Ubuntu 14.04 (untested)\n\n## Supported Magento version\nCommunity Edition >= 1.9\nEnterprise Edition >= 1.14.1\n\n## Requirements\n\n- Chef 12 or greater.\n\n### Cookbooks\n\n- `stack_commons`\n- `platformstack`\n- `rackspacecloud`\n- `rackspace_iptables`\n- `varnish`\n- `modman`\n- `apache2`\n- `apt`\n- `ark`\n- `build-essential`\n- `certificate`\n- `chef-sugar`\n- `cron`\n- `database`\n- `git`\n- `logrotate`\n- `mysql-multi`\n- `nfs`\n- `openssl`\n- `parted`\n- `partial_search`\n- `php-fpm`\n- `redisio`\n- `yum`\n- `yum-ius`\n- `yum-epel`\n- `xml`\n- `xmledit`\n\n## Recipes\n\n### apache-fpm\nThis recipe sets Apache2 configuration so you can deploy your Magento code.\nConfigures Apache with PHP FPM.\nEnables magento required php modules.\nCreate a self-signed certificate if node['magentostack']['web']['ssl_autosigned'] (default to true).\nCreate a Vhost for Magento (non-SSL).\nCreate a Vhost for Magento (SSL).\n- toggles\n  - certificate generation node['magentostack']['web']['ssl_autosigned']\n\nYou may disable SSL support by setting `node.set['magentostack']['web']['ssl'] = false`. Note that you may still need to be sure Magento redirects work correctly in this case.\n\nYou may supply a custom SSL certificate by setting one or more of these values:\n```\nnode['magentostack']['web']['ssl_custom'] = true\nnode['magentostack']['web']['ssl_custom_databag'] = 'certificates'\nnode['magentostack']['web']['ssl_custom_databag_item'] = 'magento'\n```\n\nSee instructions in [the certificate cookbook](https://github.com/atomic-penguin/cookbook-certificate#requirements) for how to prepare an appropriate encrypted data bag.\n\n> Only Community Edition >= 1.9 and Enterprise Edition >= 1.14.1 are supported by Magentostack, therefore it's PHP 5.5 only\n\n<!---\n# Only for Magento CE <1.9 or EE < 1.14 (not supported yet)\napache2::mod_fastcgi doesn't allow to compile mod_Fastcgi from source, therefore it will not use the mod_fastcgi patched version. It means Ubuntu with Magento CE <1.9 or EE < 1.14 might have some bugs. [References](http://www.magentocommerce.com/boards/m/viewthread/229253/)\n--->\n\n### varnish and modman\nIn order to use Varnish, include the varnish recipe in your wrapper or ensure you're set to community edition, where Varnish is enabled by default. This installs varnish using default settings, as well as modman and installs the turpentine module for Magento.\n\nUnder `System > Configuration > Web > Secure` change the Offloader header value to `HTTP_X_FORWARDED_PROTO` (from the default SSL_OFFLOADED) and make sure the Base URL has `https` for the protocol, then save.\n\nYou should also ensure you set `node['magentostack']['varnish']['secret']` to something on each server, and then also set that value in the Administration GUI in Magento, and do an initial flush of the Varnish cache.\n\nSee the [main page about turpentine](http://www.magentocommerce.com/magento-connect/turpentine-varnish-cache.html), the [installation instructions for turpentine](https://github.com/nexcess/magento-turpentine/wiki/Installation), and the [modman Github site](https://github.com/colinmollenhour/modman), for more information and documentation.\n\n### gluster\nSets up glusterfs based on the `node['rackspace_gluster']['config']['server']['glusters']` attribute.\nThis may involve some manual setup, it is glusterfs afterall\n\n### magento_admin\nSet up a cronjob to run Magento admin tasks.\n\n### magento_install\nDownload and extract Magento, consulting `node['magentostack']['install_method']` for 'cloudfiles', 'ark', or 'git'.\n\n### magento_configure\nInstall Magento by running install.php (basic configuration, DB bootstrap, SSL url etc...).\nOr by copying a provided local.xml.template and editing it in-place from there.\n*Note*: It will always edit the local.xml after the fact with values from chef.\n\n### mysql_add_drive\nFormats /dev/xvde1 and will prepare it for the mysql datadir.\nCreates the mysql user and manages the /var/lib/mysql mountpoint.\n\n### mysql_holland\n---\nWarning\nmysql_holland package will install python-setup tools preventing to apply this fix https://github.com/rackspace-cookbooks/stack_commons/pull/86, so you must include magentostack::mysql_holland as late as possible in your run_list.\n---\nInstalls holland.\nWill set up a backup job based on if you are running as a slave or not.\n\n### mysql_master\nSets up mysql master (runs the mysql_base recipe as well).\nWill allow slaves to connect (via iptables).\n\n### mysql_slave\nSets up the mysql slave (runs the mysql_base recipe as well).\nAllows the master to connect (via iptables).\n\n### nfs_client and nfs_server\nServer recipe installs nfs server and configures an export (by default, under /exports) for magento media.\nClient recipe creates a mount point, and mounts the export from the server (uses search with a tag to find the server).\n\n### newrelic\nSets up newrelic and the php agent for newrelic.\n\n### redis recipes\n\nPlease note that the redis recipes use an accumulator pattern, just like their upstream cookbook. This means you must include all redis recipes for instances and they will build on to the data structure containing all redis instances.\n\nOnce all redis instances have been defined, call `magentostack::redis_configure` to actually install and configure all redis masters, slaves, or sentinels that were previously declared using the individual recipes below, as well as configure any iptables rules that are required (assuming platformstack has iptables turned on).\n\nFor example, this would an appropriate runlist for a single instance, a single\nslave, and the appropriate sentinel:\n```\n  magentostack::redis_single\n  magentostack::redis_single_slave\n  magentostack::redis_sentinel\n  magentostack::redis_configure\n```\n\nExample for installing just the session instance:\n```\n  magentostack::redis_session\n  magentostack::redis_configure\n```\nor only its slave:\n```\n  magentostack::redis_session_slave\n  magentostack::redis_configure\n```\n\nExample to get a sentinel only:\n```\n  magentostack::redis_sentinel\n  magentostack::redis_configure\n```\n\n#### redis_single\nConfigures a standalone redis server in `node['redisio']['servers']`.\nRedis server bound to `node['magentostack']['redis']['bind_port_single']`.\nTags node with `magentostack_redis` and `magentostack_redis_single` for discovery.\n\n#### redis_object, redis_page, redis_session\nConfigures a redis server in `node['redisio']['servers']`.\nInstance is bound to `node['magentostack']['redis']['bind_port_X']` where X is object, page, or session.\nTags node with `magentostack_redis` and `magentostack_redis_X` for later discovery.\n\n#### redis_sentinel\nSets up redis sentinel bound to `node['magentostack']['redis']['bind_port_sentinel']`.\nUses discovery in `libraries/util.rb` to find all redis servers in current chef environment.\nDiscovery is based on tags and chef environment, see `node['magentostack']['redis']['discovery_query']` to override.\nDetermines a master (using tags) in this order: redis_session.rb, redis_single.rb, `none`.\nAssumes a session store is the most important to monitor (upstream only supports configuring sentinel to monitor one master).\n\n#### redis_configure\nShortcut to run all of the redisio recipes needed to install & configure redis.\nShould be used after any calls to the redis_(single/object/page/session/sentinel) recipes build any iptables rules and call `add_iptables_rule` on them.\n\n\n## Attributes\n\n### default\n\n- `default['magentostack']['newrelic']['application_monitoring'] = ''`\n  - controls if we allow newrelic to to do application monitoring\n    - is set to `'true'` in the newrelic recipe\n- `default['magentostack']['mysql']['databases'] = {}`\n  - contains a list of databases to set up (along with users / passwords)\n- `default['magentostack']['apache']['sites'] = {}`\n  - Default attribute required by stack_commons *not used by Magentostack*\n\n### Apache-fpm\n- `default['magentostack']['web']['domain']`\n  - Vhost Servername\n- `default['magentostack']['web']['http_port']`\n  - port for non-SSL vhost\n- `default['magentostack']['web']['https_port']`\n  - port for SSL vhost\ndefault['magentostack']['web']['server_aliases'] = node['fqdn']\n- `default['magentostack']['web']['cookbook']` and `default['magentostack']['web']['template']`\n  - where to find the Vhost templates\n- `default['magentostack']['web']['fastcgi_cookbook']` and `default['magentostack']['web']['fastcgi_template']`\n  - where to find the Fast-cgi templates\n- `default['magentostack']['web']['dir']`\n  - Documenent root (where to put Magento code)\n- `default['magentostack']['web']['ssl_key']` and `default['magentostack']['web']['ssl_cert']` and `default['magentostack']['web']['ssl_chain']`\n  - where are the certificates and keys and a chain/intermediate(might be useful when disabling self-signed)\n\n### Magento\n- `default['magentostack']['config'][*]`\n  - install.php related options, see https://github.com/AutomationSupport/magentostack/blob/master/definitions/magento_initial_configuration.rb\n- `normal['magentostack']['mysql']['databases']['magento_database']`\n  - create Magento DB and Magento DB users\n- `default['magentostack']['download_url']` and `default['magentostack']['checksum']`\n  - where to get Magento and the file checksum (faster re-converge)\n- default['magentostack']['flavor'] = 'community' # could also be enterprise\n  - controls if the stack should try to configure a full page cache or not\n\n### NFS Server and client\n\n# search query for discovery of nfs server\n```\n# Used to override the permitted client IPs on the nfs_server\nnode['magentostack']['nfs_server']['override_allow'] = ['1.2.3.4', '5.6.7.8']\n\n# Used to override the NFS mount on clients, not used by default\nnode['magentostack']['nfs_server']['override_host'] = '1.2.3.4'\n\n# where the export lives on the NFS server\nnode['magentostack']['nfs_server']['export_name'] = 'magento_media'\nnode['magentostack']['nfs_server']['export_root'] = '/export'\n\n# how to search for an NFS server\nnode['magentostack']['nfs_server']['discovery_query'] = \"tags:magentostack_nfs_server AND chef_environment:#{node.chef_environment}\"\n\n# clients\nnode['magentostack']['nfs_client']['mount_point'] = '/mnt/magento_media'\nnode['magentostack']['nfs_client']['symlink_target'] = 'media' # within /var/www/html/magento\n```\n### gluster\n\ncontains attributes used in setting up gluster, node the commented out section, it helps to actually hard code these IPs\n\n### monitoring\n\ncontrols how cloud_monitoring is used within magentostack\n\n### php_fpm\n\nshouldn't really be messed with\n\n### redis\n\nYou can define a password for each redis instance(or for the single one) using the run_state attribute type.\nThis type prevents to store passwords on the node. The passwords will be used to set up the Redis instances and configure Magento.\n\nMultiple redis instances\n```\nnode.run_state['magentostack_redis_password_session'] = 'runstatepasswordsession'\nnode.run_state['magentostack_redis_password_object'] = 'runstatepasswordobject'\nnode.run_state['magentostack_redis_password_page'] = 'runstatepasswordpage'\n```\nSingle redis instance\n```\nnode.run_state['magentostack_redis_password_single'] = 'runstatepasswordsingle'\n```\n\n## Usage\n\n### Suggested datastructures\n\nMagento Admin:\n```json\n{\n    \"run_list\": [\n      \"recipe[platformstack]\",\n      \"recipe[magentostack::apache-fpm]\",\n      \"recipe[magentostack::magento_install]\",\n      \"recipe[magentostack::newrelic]\",\n      \"recipe[magentostack::_find_mysql]\",\n      \"recipe[magentostack::magento_configure]\",\n      \"recipe[magentostack::magento_admin]\",\n      \"recipe[magentostack::nfs_client]\",\n      \"recipe[java::default]\",\n      \"recipe[elkstack::agent]\"\n    ]\n}\n```\n\nMagento Worker\n```json\n{\n    \"run_list\": [\n      \"recipe[platformstack]\",\n      \"recipe[magentostack::apache-fpm]\",\n      \"recipe[magentostack::magento_install]\",\n      \"recipe[magentostack::newrelic]\",\n      \"recipe[magentostack::_find_mysql]\",\n      \"recipe[magentostack::magento_configure]\",\n      \"recipe[magentostack::nfs_client]\",\n      \"recipe[java::default]\",\n      \"recipe[elkstack::agent]\"\n    ]\n}\n```\n\nMagento MySQL Master\n```json\n{\n    \"run_list\": [\n      \"recipe[platformstack]\",\n      \"recipe[magentostack::mysql_master]\",\n      \"recipe[magentostack::mysql_holland]\",\n      \"recipe[java::default]\",\n      \"recipe[elkstack::agent]\"\n    ]\n}\n```\n\nMagento Redis\n```json\n{\n    \"run_list\": [\n      \"recipe[platformstack]\",\n      \"recipe[magentostack::redis_single]\",\n      \"recipe[magentostack::redis_configure]\",\n      \"recipe[java::default]\",\n      \"recipe[elkstack::agent]\"\n    ]\n}\n```\n\nMagento Elkstack\n```json\n{\n    \"run_list\": [\n      \"recipe[java::default]\",\n      \"recipe[elkstack::cluster]\",\n      \"recipe[elkstack::acl]\"\n    ]\n}\n```\n\nMagento NFS Server\n```json\n{\n    \"run_list\": [\n      \"recipe[apt]\",\n      \"recipe[platformstack]\",\n      \"recipe[magentostack::configure_disk]\",\n      \"recipe[magentostack::nfs_server]\",\n      \"recipe[java::default]\",\n      \"recipe[elkstack::agent]\"\n    ]\n}\n```\n\n## New Relic Monitoring\nTo configure New Relic, make sure the `node['newrelic']['license']` attribute is set and include the `platformstack` cookbook in your run_list.  You can also run the `magentostack::newrelic` recipe for some more advanced monitors.\n\n# Contributing\nhttps://github.com/rackspace-cookbooks/contributing/blob/master/CONTRIBUTING.md\n\n# Authors\nAuthors:: Rackspace <devops-chef@rackspace.com>\n\n## License\n```\n# Copyright 2015, Rackspace Hosting\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n```\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/stack_commons",
      "revision": ">= 0.0.50",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/platformstack",
      "revision": ">= 3.1.4",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/rackspacecloud",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/rackspace_iptables",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/varnish",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/modman",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apache2",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ark",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/build-essential",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/certificate",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef-sugar",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/cron",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/database",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/git",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/logrotate",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mysql-multi",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nfs",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/openssl",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/parted",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/partial_search",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/php-fpm",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/redisio",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum-ius",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum-epel",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/xml",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/xmledit",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}