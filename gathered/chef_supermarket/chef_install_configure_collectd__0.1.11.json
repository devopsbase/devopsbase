{
  "name": "chef_install_configure_collectd Chef cookbook",
  "chef_cookbook_name": "chef_install_configure_collectd",
  "revision": "0.1.11",
  "uris": [
    "https://supermarket.chef.io/cookbooks/chef_install_configure_collectd",
    "https://supermarket.chef.io/cookbooks/chef_install_configure_collectd/download",
    "https://supermarket.chef.io/cookbooks/chef_install_configure_collectd/versions/0.1.11",
    "https://supermarket.chef.io/cookbooks/chef_install_configure_collectd/versions/0.1.11/download",
    "https://supermarket.chef.io/api/v1/cookbooks/chef_install_configure_collectd/versions/0.1.11",
    "https://supermarket.chef.io/api/v1/cookbooks/chef_install_configure_collectd",
    "https://supermarket.chef.io/api/v1/cookbooks/chef_install_configure_collectd/versions/0.1.11/download"
  ],
  "labels": [
    "Chef cookbook",
    "Package Management",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/chef_install_configure_collectd",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/chef_install_configure_collectd/versions/0.1.11/download",
  "deprecated": false,
  "created": "2015-09-03T17:17:35.256Z",
  "updated": "2016-09-30T21:04:14.166Z",
  "description": "Use this cookbook to install the SignalFx collectd agent and collectd plugins.",
  "maintainer": {
    "name": "signalfx",
    "email": "support+chef@signalfx.com"
  },
  "license": "Copyright SignalFx, Inc. All rights reserved",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 1789,
  "downloads_count_revision": 19,
  "repository_url": "https://github.com/signalfx/chef_install_configure_collectd",
  "issues_url": "https://github.com/signalfx/chef_install_configure_collectd/issues",
  "chef_source_url": "https://github.com/signalfx/chef_install_configure_collectd",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# chef_install_configure_collectd #\n[![Build Status](https://travis-ci.org/signalfx/chef_install_configure_collectd.svg?branch=master)](https://travis-ci.org/signalfx/chef_install_configure_collectd)\n\n# Description #\n\nUse this cookbook to install and configure collectd to send data to SignalFx. It can perform the following tasks:\n\n- Install [SignalFx's build of collectd](https://github.com/signalfx/collectd), an open-source monitoring daemon. \n- Install and configure [SignalFx's metadata plugin for collectd](https://github.com/signalfx/signalfx-collectd-plugin)\n- Configure collectd's write_http plugin to send data to SignalFx\n- Install and configure collectd plugins for data collection from the following software:\n   - Apache webserver   \n   - Docker \n   - Cassandra \n   - ElasticSearch \n   - Kafka \n   - Memcached \n   - Mesos \n   - MySQL \n   - Nginx \n   - Varnish \n   - Zookeeper \n   - Postgres \n   -  Redis \n   - MongoDB\n\n# System Requirements #\n\nThis cookbook has been tested on the following operating systems:\n\nCentOS 6, 7;  \nAmazon Linux 1503, 1509, 1603;  \nUbuntu 1204, 1404, 1504, 1604;  \nDebian GNU/Linux 7, 8;\n\n# Cookbook dependencies #\n\nThis cookbook requires the following cookbooks: \n\n- apt (2.8.2)\n- yum-epel (0.6.3)\n- build-essential (2.2.4)\n- yum (3.8.1)\n- python (1.4.6)\n\n# Usage #\n\n* Use the default recipe to install collectd, configure plugins, and configure collectd to send metrics to SignalFx. \n* Use the individual collectd plugin recipes to install individual collectd plugins.\n\n## 1. Install all cookbook dependencies and upload to the Chef Server\n\n## 2. Install on your local machine ##\n\n```knife cookbook site install chef_install_configure_collectd --skip-dependencies```\n\nThis command installs the `chef_install_configure_collectd` cookbook to your local machine.\n\n## 3. Supply your SignalFx API token.\n\nIn order to send data to SignalFx, you must provide a value for your SignalFx API token in `attributes/default.rb` as follows, replacing `YOUR_SIGNALFX_API_TOKEN` with the API token for your SignalFx organization:\n\n```\ndefault['write_http']['API_TOKEN'] = 'YOUR_SIGNALFX_API_TOKEN'\n```\n\n## 4. (Optional) Supply configuration for collectd and plugins.\n\nThis cookbook includes default configuration for collectd in `attributes/default.rb`, and for plugins in individually-named files in the attributes directory. Before using this cookbook to install collectd plugins, supply configuration values for each plugin you will install in that plugin's attributes file. \n\nSee [Attributes](#attributes) below for a detailed list of all available attributes.\n\n## 5. Upload to Chef server ##\n```knife cookbook upload chef_install_configure_collectd```\n\nThis command uploads the `chef_install_configure_collectd` cookbook to the Chef server.\n\n## 6. Apply to Chef clients ##\n\n### Using bootstrap ###\n\nAfter supplying attributes, use `knife bootstrap` to apply the recipes to Chef clients. For example, the following command applies the `chef_install_configure_collectd` recipe and installs the Apache collectd plugin: \n\n```knife bootstrap $ip --ssh-user $username --node-name $nodename --run-list 'recipe[chef_install_configure_collectd], recipe[chef_install_configure_collectd::config-apache]'```\n\n# Attributes #\n\n## Collectd Attributes ##\n\n* attributes/SignalFx_repo.rb - Contains the names and locations of SignalFx collectd packages. \n* attributes/default.rb - Basic attributes for SignalFx configuration.\n   - default['write_http']['AWS_integration'] : 'true' if you want to sync AWS metadata to SignalFx, otherwise 'false' (default: 'true')\n   - default['write_http']['Ingest_host'] : URL of the SignalFx ingest service.\n   - default['write_http']['API_TOKEN'] : Your SignalFx API token. \n   - default['collectd_version'] : The version of SignalFx collectd to install. (default: 'latest')\n   - default['SignalFx']['collectd']['interval'] : Interval in seconds to collectd data (default: 10 seconds)\n   - default['SignalFx']['collectd']['timeout'] : Collectd Timeout (default: 2 iterations)\n   - default['SignalFx']['collectd']['FQDNLookup'] : Collectd Directive to lookup FQDN when setting hostname (default: 'true')\n   - default['SignalFx']['collectd']['logfile']['LogLevel'] : Collectd Logging Level (default: 'info')\n   - default['SignalFx']['collectd']['logfile']['File'] : Collectd Log file (default: '/var/log/collectd.log')\n   - default['SignalFx']['collectd']['logfile']['PrintSeverity'] : Collectd directive to log severity level (default: 'false')\n\n* To add a dimension to every datapoint sent to SignalFx, add an entry to default.rb as follows:\n\n```ruby\n   default[\"write_http\"][\"Ingest_host_parameters\"][\"YOUR_KEY1\"] = \"YOUR_VALUE1\"\n   default[\"write_http\"][\"Ingest_host_parameters\"][\"YOUR_KEY2\"] = \"YOUR_VALUE2\"\n```\n\n## Plugin-specific Attributes ##\n\n### Apache ###\n* attributes/apache_plugin.rb\n   - default['apache']['instanceName'] : Name of your Apache instance\n   - default['apache']['url'] : URL at which to access the output of Apache's mod_status module. (default: 'http://localhost/mod_status?auto')\n\n### Cassandra ###\n* attributes/cassandra_plugin.rb\n   - default['cassandra']['serviceurl'] : Your Cassandra service URL (default: 'service:jmx:rmi:///jndi/rmi://localhost:7199/jmxrmi')\n\n### Docker ###\n* attributes/docker_plugin.rb\n   - default['docker']['dbfile_folder'] : The location on disk to store this plugin's DB files. (default: '/usr/share/collectd/docker-collectd-plugin')\n   - default['docker']['python_folder'] : The location on disk to store this plugin's Python files. (default: '/usr/share/collectd/docker-collectd-plugin')\n   - default['docker']['base_url'] : URL at which to connect to the Docker instance to be monitored. (default : 'unix://var/run/docker.sock')\n\n### Elasticsearch ###\n* attributes/elasticsearch_plugin.rb\n   - default['elasticsearch']['clustername'] : Name of your ElasticSearch cluster. (default: 'elasticsearch')\n   - default['elasticsearch']['indexes'] : Which indexes to monitor. (default: '_all')\n   - default['elasticsearch']['python_folder'] : The location on disk of the collectd Python plugin. (default: '/usr/share/collectd/python')\n\n### Iostat ###\n* attributes/iostat_plugin.rb\n   - default['iostat']['path'] : The location of the iostat executable. (default: '/usr/bin/iostat')\n   - default['iostat']['verbose'] : True for verbose logging. (default: 'false')\n   - default['iostat']['include'] : Metrics to collect. (default: '[\"tps\", \"kB_read/s\", \"kB_wrtn/s\", \"kB_read\", \"kB_wrtn\", \"rrqm/s\", \"wrqm/s\", \"r/s\", \"w/s\", \"rsec/s\", \"rkB/s\", \"wsec/s\", \"wkB/s\", \"avgrq-sz\", \"avgqu-sz\", \"await\", \"r_await\", \"w_await\", \"svctm\", \"%util\"]')\n   - default['iostat']['python_folder'] : The location on disk of the collectd Python plugin. (default: '/usr/share/collectd/python')\n\n### Kafka ###\n* attributes/kafka_plugin.rb\n   - default['kafka']['serviceurl'] : Your Kafka service URL (default: 'service:jmx:rmi:///jndi/rmi://localhost:7099/jmxrmi')\n\n### Memcached ###\n* attributes/memcached_plugin.rb\n   - default['memcached']['hostname'] : Memcached hostname\n   - default['memcached']['port'] : Memcached port\n\n### Mesos ###\n* attributes/mesos_master_plugin.rb\n   - default['mesos']['master']['python_folder'] The location on disk to store this plugin's Python files. (default: '/usr/share/collectd/mesos-collectd-plugin')\n   - default['mesos']['master']['cluster'] = Cluster Name\n   - default['mesos']['master']['instance'] = Instance Name\n   - default['mesos']['master']['binary_path'] = Path to the directory containing mesos executables (default: '/usr/bin')\n   - default['mesos']['master']['hostname'] = Mesos Master Hostname (default: 'localhost')\n   - default['mesos']['master']['port'] = Mesos Master Port (default: 5050)\n\n* attributes/mesos_slave_plugin.rb\n   - default['mesos']['slave']['python_folder'] The location on disk to store this plugin's Python files. (default: '/usr/share/collectd/mesos-collectd-plugin')\n   - default['mesos']['slave']['cluster'] = Cluster Name\n   - default['mesos']['slave']['instance'] = Instance Name\n   - default['mesos']['slave']['binary_path'] = Path to the directory containing mesos executables (default: '/usr/bin')\n   - default['mesos']['slave']['hostname'] = Mesos Slave Hostname (default: 'localhost')\n   - default['mesos']['slave']['port'] = Mesos Slave Port (default: 5050)\n\n### MySQL ###\n* attributes/mysql_plugin.rb\n   - default['mysql']['database']... : 'database' is the database name that will be reported to SignalFx.\n   - default['mysql']['database']['Host'] : IP address of MySQL database\n   - default['mysql']['database']['Socket'] : Socket of MySQL database\n   - default['mysql']['database']['User'] : Database username\n   - default['mysql']['database']['Password'] : Database password\n   - default['mysql']['database']['Database'] : Database name\n\n### Nginx ###\n* attributes/nginx_plugin.rb\n   - default['nginx']['url'] : URL at which to access Nginx status. (default: 'http://localhost:80/nginx_status')\n\n### PostgreSQL ###\n* attributes/postgresql_plugin.rb\n   - default['postgresql']['hostname'] : Hostname or IP address of your PostgreSQL database.\n   - default['postgresql']['user'] : Database username\n   - default['postgresql']['password'] : Database password\n\n### Redis ###\n* attributes/redis_master_plugin.rb\n   - default['redis_master']['hostname'] : Hostname or IP address of your Redis master instance.\n   - default['redis_master']['port'] : Port on which your Redis master runs. \n   - default['redis_master']['python_folder'] : The location on disk of the collectd Python plugin. (default: '/usr/share/collectd/python')\n\n* attributes/redis_slave_plugin.rb\n   - default['redis_slave']['hostname'] : Hostname or IP address of your Redis slave instance.\n   - default['redis_slave']['port'] : Port on which your Redis slave runs. \n   - default['redis_slave']['python_folder'] : The location on disk of the collectd Python plugin. (default: '/usr/share/collectd/python')\n\n### Vmstat ###\n* attributes/vmstat_plugin.rb\n   - default['vmstat']['path'] : The location of the vmstat executable. (default: '/usr/bin/vmstat')\n   - default['vmstat']['verbose'] : True for verbose logging. (default: 'false')\n   - default['vmstat']['include'] : Metrics to collect. (default: '[\"r\", \"b\", \"swpd\", \"free\", \"buff\", \"cache\", \"inact\", \"active\", \"si\", \"so\", \"bi\", \"bo\", \"in\", \"cs\", \"us\", \"sy\", \"id\", \"wa\", \"st\"]')\n   - default['vmstat']['python_folder'] : The location on disk of the collectd Python plugin. (default: '/usr/share/collectd/python')\n\n### Zookeeper ###\n* attributes/zookeeper_plugin.rb \n   - default['zookeeper']['hostname'] = Hostname or IP address of your Zookeeper instance.\n   - default['zookeeper']['port'] : Port on which your Zookeeper instance runs. \n   - default['zookeeper']['python_folder'] : The location on disk of the collectd Python plugin. (default: '/usr/share/collectd/python')\n\n# License & Author #\n\nAuthor:: SignalFx Inc (<support+chef@signalfx.com>)\n\nCopyright::2015, SignalFx, Inc.\n",
  "requires": [
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": "> 2.8",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/python",
      "revision": "> 1.4",
      "self_resolve": true
    }
  ]
}