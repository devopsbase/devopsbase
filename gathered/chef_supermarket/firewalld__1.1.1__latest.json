{
  "name": "firewalld Chef cookbook",
  "chef_cookbook_name": "firewalld",
  "revision": "1.1.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/firewalld",
    "https://supermarket.chef.io/cookbooks/firewalld/download",
    "https://supermarket.chef.io/cookbooks/firewalld/versions/1.1.1",
    "https://supermarket.chef.io/cookbooks/firewalld/versions/1.1.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/firewalld/versions/1.1.1",
    "https://supermarket.chef.io/api/v1/cookbooks/firewalld",
    "https://supermarket.chef.io/api/v1/cookbooks/firewalld/versions/1.1.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Networking",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/firewalld",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/firewalld/versions/1.1.1/download",
  "deprecated": false,
  "created": "2015-01-21T00:20:03.471Z",
  "updated": "2016-06-21T02:46:27.697Z",
  "description": "Installs/Configures firewalld",
  "maintainer": {
    "name": "rigrassm",
    "email": "jeff@jeffhutchison.com"
  },
  "license": "Apache v2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": false,
  "rating": null,
  "followers_count": 11,
  "downloads_count": 1893774,
  "downloads_count_revision": 98190,
  "repository_url": "https://github.com/rigrassm/firewalld-cookbook",
  "issues_url": "https://github.com/rigrassm/firewalld-cookbook/issues",
  "chef_source_url": "https://github.com/rigrassm/firewalld-cookbook",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "firewalld LWRP\n==============\n[![Build Status](https://travis-ci.org/jhh/firewalld-cookbook.svg?branch=master)][travis]\n[![Cookbook Version](http://img.shields.io/cookbook/v/firewalld.svg)][cookbook]\n\n[travis]: https://travis-ci.org/jhh/firewalld-cookbook\n[cookbook]: https://supermarket.chef.io/cookbooks/firewalld\n\n[Firewalld](https://fedoraproject.org/wiki/FirewallD) is the userland interface to dynamically managing a Linux firewall, introduced in Fedora 15 and Centos/RHEL 7.\n\n# Resource Overview\n\nThis `firewalld` cookbook provides three resources for adding and removing  services, ports, and rules.\n\n## service\n\nThe `firewalld_service` resource will add the service for a zone to the current and permanent configurations. The service name is one of the `firewalld` provided services. To get a list of the supported services, use `firewall-cmd --get-services`. If zone is omitted, default zone will be used.\n\n### Actions\n\n* `:add` - add the service to the current and permanent configuration\n* `:remove` - remove the service from the current and permanent configuration\n\n### Attributes\n\n<table>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Example</th>\n<th>Default</th>\n</tr>\n<tr>\n<td>service</td>\n<td>(name attribute) the service to manage</td>\n<td>http</td>\n<td></td>\n</tr>\n<tr>\n<td>zone</td>\n<td><code>firewalld</code> zone to add or remove service from</td>\n<td>public</td>\n<td>(none, uses default zone)</td>\n</tr>\n</table>\n\nDefault action adds a service to the firewall:\n\n```ruby\nfirewalld_service 'http'\n```\n\nThis will allow access to the http service in the default zone.\n\n#### `:add`\nAdd the service to _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_service 'tftp' do\n\taction :add\n\tzone   'public'\nend\n```\n\n#### `:remove`\nRemoves the service from _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_service 'telnet' do\naction :remove\nzone   'public'\nend\n```\n\n## port\n\nThe `firewalld_port` resource will add the port for a zone to the current and permanent configurations. If zone is omitted, default zone will be used.\n\n### Actions\n\n* `:add` - add the port to the current and permanent configuration\n* `:remove` - remove the port from the current and permanent configuration\n\n### Attributes\n\n<table>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Example</th>\n<th>Default</th>\n</tr>\n<tr>\n<td>port</td>\n<td>(name attribute) the port to manage</td>\n<td>993/tcp</td>\n<td></td>\n</tr>\n<tr>\n<td>zone</td>\n<td><code>firewalld</code> zone to add or remove port from</td>\n<td>public</td>\n<td>(none, uses default zone)</td>\n</tr>\n</table>\n\nDefault action adds a port to the firewall:\n\n```ruby\nfirewalld_port '993/tcp'\n```\n\nThis will allow access to TCP port 993 in the default zone.\n\n#### `:add`\nAdd the port to _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_port '993/tcp' do\n  action :add\n  zone   'public'\nend\n```\n\n#### `:remove`\nRemoves the port from _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_port '993/tcp' do\n\taction :remove\n\tzone   'public'\nend\n```\n\n## rich_rule\n\nThe `firewalld_rich_rule` resource allows you to create complex rules directly onto the firewall. It will load the rule into the running config and pass it to `firewalld` with the `--permanent` flag, to persist it after a reload.\n\n### Actions\n\n* `:add` - add the rich rule to the current and permanent configuration\n* `:remove` - remove the rich rule from the current and permanent configuration\n\n### Attributes\n\nThe attributes for `rich_rule` map  directly to the `firewall-cmd (1)` command-line parameters. More can be read here: [Complex Firewall Rules with Rich Language](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html#Configuring_Complex_Firewall_Rules_with_the_Rich-Language_Syntax) and *firewalld.richlanguage (5)*.\n\n<table>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Example</th>\n<th>Default</th>\n</tr>\n\n<tr>\n<td>name</td>\n<td>(name attribute) The name of the resource. This is not passed to <code>firewall-cmd</code>.</td>\n<td>ssh_add</td>\n<td></td>\n</tr>\n\n<tr>\n<td>zone</td>\n<td><code>firewalld</code> zone to add or remove port from</td>\n<td>public</td>\n<td>(none, uses default zone)</td>\n</tr>\n\n<tr>\n<td>family</td>\n<td>IP family. Choice of 'ipv4' or 'ipv6'.</td>\n<td>ipv6</td>\n<td>ipv4</td>\n</tr>\n\n<tr>\n<td>source_address</td>\n<td>Limits the origin of a connection attempt to a specific range of IPs.</td>\n<td>192.168.100.5/32</td>\n<td>(none, not limited)</td>\n</tr>\n\n<tr>\n<td>destination_address</td>\n<td>Limits the target of a connection attempt to a specific range of IPs.</td>\n<td>192.168.100.5/32</td>\n<td>(none, not limited)</td>\n</tr>\n\n<tr>\n<td>service_name</td>\n<td>The service name is one of the <code>firewalld</code> provided services. To get a list of the supported services, use <code>firewall-cmd --get-services</code>.</td>\n<td>ssh</td>\n<td></td>\n</tr>\n\n<tr>\n<td>port_number</td>\n<td>Can be a single integer or a port range, for example '5060-5062'. The protocol can be specified. Requires that <code>port_protocol</code> attribute be specified also.</td>\n<td>5060</td>\n<td></td>\n</tr>\n\n<tr>\n<td>port_protocol</td>\n<td>The protocol for the specified port, can be 'tcp' or 'udp'. Requires that <code>port_number</code> attribute be specified also.</td>\n<td>tcp</td>\n<td></td>\n</tr>\n\n<tr>\n<td>log_prefix</td>\n<td>Logs new connection attempts with kernel logging. This will prepend the log lines with this prefix.</td>\n<td>ssh</td>\n<td></td>\n</tr>\n\n<tr>\n<td>log_level</td>\n<td>Can be one of 'emerg', 'alert', 'error', 'warning', 'notice',\n'info', or 'debug'.</td>\n<td>info</td>\n<td></td>\n</tr>\n\n<tr>\n<td>limit_value</td>\n<td>Limits the rate at which logs are written.</td>\n<td>1/m</td>\n<td>1/m - one write per minute</td>\n</tr>\n\n<tr>\n<td>firewall_action</td>\n<td>Can be one of 'accept', 'reject', or 'drop'. This is the behavior by which all traffic that matches the rule will be handled.</td>\n<td>accept</td>\n<td></td>\n</tr>\n\n</table>\n\n\n### `:add`\n\n```ruby\n# This opens the ssh service to ip `192.168.100.5` and logs at a rate of\n# 1 entry per minute with a prefix of ssh on each log entry.\n#\n\nfirewalld_rich_rule \"ssh_add\" do\n  zone 'public'\n  family 'ipv4'\n  source_address '192.168.100.5/32'\n  service_name 'ssh'\n  log_prefix 'ssh'\n  log_level 'info'\n  limit_value '1/m'\n  firewall_action 'accept'\n  action :add\nend\n```\n\n# Recipes\n\n* default - installs and enables `firewalld`.\n* disable - disable `firewalld` and use `iptables` if `node[:firewalld][:iptables_fallback]` is set.\n* enable - revert to `firewalld` if `node[:firewalld][:iptables_fallback]` is set.\n\n# Usage\n\nIf you're using [Berkshelf](http://berkshelf.com/), just add `firewalld` to your\n`Berksfile` and `metadata.rb`:\n\n```ruby\n# Berksfile\ncookbook 'firewalld'\n\n# metadata.rb\ndepends 'firewalld'\n```\n\nContributing\n------------\n1. Fork the project\n2. Create a feature branch corresponding to you change\n3. Commit and test thoroughly\n4. Create a Pull Request on github\n\n\nLicense & Authors\n-----------------\n- Author:: Jeff Hutchison <jeff@jeffhutchison.com>\n- Author:: Manuel Toledo   <mtoledo@adobe.com>\n\n```text\nCopyright 2015, Jeff Hutchison\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 15.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 7.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "rhel",
      "revision": ">= 7.0",
      "one_of_group": "os"
    }
  ]
}