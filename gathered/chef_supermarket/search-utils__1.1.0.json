{
  "name": "search-utils Chef cookbook",
  "chef_cookbook_name": "search-utils",
  "revision": "1.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/search-utils",
    "https://supermarket.chef.io/cookbooks/search-utils/download",
    "https://supermarket.chef.io/cookbooks/search-utils/versions/1.1.0",
    "https://supermarket.chef.io/cookbooks/search-utils/versions/1.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/search-utils/versions/1.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/search-utils",
    "https://supermarket.chef.io/api/v1/cookbooks/search-utils/versions/1.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Search"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/search-utils",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/search-utils/versions/1.1.0/download",
  "deprecated": true,
  "created": "2014-01-14T17:16:43.000Z",
  "updated": "2014-01-15T09:45:09.000Z",
  "description": "Wrapper around the partial_search cookbook",
  "maintainer": {
    "name": "borntyping",
    "email": "sam.clements@borntyping.co.uk"
  },
  "license": "mit",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 3780891,
  "downloads_count_revision": 1260252,
  "chef_replacement": {
    "url": "https://supermarket.chef.io/api/v1/cookbooks/alternate_search"
  },
  "repository_url": "https://github.com/borntyping/chef-search-utils",
  "issues_url": "https://github.com/borntyping/chef-search-utils",
  "chef_source_url": "https://github.com/borntyping/chef-search-utils",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "chef-search-utils\n=================\n\n`chef-search-utils` is a chef cookbook that provides several utility functions that make using Chef search easier. By default, searches are restricted to the current environment, and make use of `partial_search` so that searches use a minimum of resources.\n\nRequirements\n------------\n\nUses the [partial_search](http://community.opscode.com/cookbooks/partial_search) cookbook.\n\nUsage\n-----\n\nDepend on this cookbook in your cookbooks `metadata.rb`:\n\n```ruby\ndepends 'search-utils'\n```\n\nThe `search_*` functions will now be availible in recipes:\n\n```ruby\n# A single FQDN, raising an error if no nodes or multiple nodes are found\nchef_server_host = search_fqdn(:recipe => 'chef-server')\n\n# A list of FQDNs matching nodes with the 'postgres' recipe\ndatabase_hosts = search_fqdns(:recipe => 'postgres')\n\n# A list of nodes with the 'webserver' role\nwebservers = search_nodes(:role => 'webserver')\n```\n\nThe functions can also be used from template resources and templates:\n\n```ruby\ntemplate \"/tmp/test\" do\n\tvariables({\n\t\t:database_servers => search_fqdns(:role => 'my_database_role')\n\t})\nend\n```\n\n```erb\n<%= search_fqdn(:recipe => 'find-dev') %>\n```\n\nAll of the node search functions restrict searches to the current `chef_environment`. If you need to search across all environments, use `:chef_environment => *`.\n\nFunctions\n---------\n\n#### search_to_string\n\n\tsearch_to_string(:recipe => 'chef-client', :chef_environment => 'staging')\n\t=> \"recipe:chef-client AND chef_environment:staging\"\n\n#### search_nodes\n\nEquivalent to `partial_search`, with `:chef_environment` set to `node.chef_environment` by default.\n\n\tsearch_nodes({:recipe => 'chef-server'}, {:keys => {\"fqdn\" => ['fqdn']}})\n\n#### search_fqdns\n\nDoes a partial search, only fetching the FQDNs of matching nodes.\n\n\tsearch_fqdns(:recipe => 'webserver')\n\t=> ['one.example.com', 'two.example.com']\n\n#### search_fqdn\n\nReturns the FQDN of the single matching node, raising an error if zero or multiple nodes match:\n\n\tsearch_fqdn(:role => 'graphite')\n\t=> 'graphite.example.com'\n\nLicence\n-------\n\nCopyright (c) 2014 Sam Clements\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\nAuthors\n-------\n\n* [Sam Clements](https://github.com/borntyping)\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/partial_search",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}