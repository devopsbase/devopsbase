{
  "name": "psgi Chef cookbook",
  "chef_cookbook_name": "psgi",
  "revision": "0.0.7",
  "uris": [
    "https://supermarket.chef.io/cookbooks/psgi",
    "https://supermarket.chef.io/cookbooks/psgi/download",
    "https://supermarket.chef.io/cookbooks/psgi/versions/0.0.7",
    "https://supermarket.chef.io/cookbooks/psgi/versions/0.0.7/download",
    "https://supermarket.chef.io/api/v1/cookbooks/psgi/versions/0.0.7",
    "https://supermarket.chef.io/api/v1/cookbooks/psgi",
    "https://supermarket.chef.io/api/v1/cookbooks/psgi/versions/0.0.7/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Style/Virtualization Level/Application"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/psgi",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/psgi/versions/0.0.7/download",
  "deprecated": false,
  "created": "2013-03-21T14:27:18.000Z",
  "updated": "2014-08-04T07:20:00.845Z",
  "description": "Configures and runs psgi application",
  "maintainer": {
    "name": "melezhik",
    "email": "melezhik@gmail.com"
  },
  "license": "All rights reserved",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 16732721,
  "downloads_count_revision": 1199707,
  "repository_url": "https://github.com/melezhik/cookbooks/tree/master/psgi",
  "issues_url": "https://github.com/melezhik/cookbooks/tree/master/psgi",
  "chef_source_url": "https://github.com/melezhik/cookbooks/tree/master/psgi",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Description\n\nconfigures and runs psgi application as fastcgi server\n\n# Features\n\n## web servers supported\n- FCGI (more coming soon)\n\n## web frameworks supported\n- [Catalyst](http://search.cpan.org/perldoc?Catalyst)\n- [Jifty](http://search.cpan.org/perldoc?Jifty)\n- [Dancer](http://search.cpan.org/perldoc?Dancer)\n\n\n# Definitions\npsgi_application\n\n\n# Definitions parameters\n- `operator` (Catalyst|Dancer|Jifty), default value `Catalyst`\n- `application_user`, change to this username before starting the process\n- `application_home`, absolute path to directory holding application home\n- `enable_service`, whether to add service to run levels, default `on`\n- `script` - absolute path to psgi script\n- `daemon_name`, optional, if not set evaluted as basename from `script` \n- `daemon_path` - absolute path to daemon, optional, default value is path to system installed [plackup](http://search.cpan.org/perldoc?plackup)\n- `socket`, optional\n- `environment`, default value `{}`, hash containing environmental variables\n- `perl5lib`, default value `[]`, array containing perl5lib paths\n- `nproc`, default value `1`, number of child processes to launch\n- `proc_manager`, optional, default value is `FCGI::ProcManager`\n- `proc_title`, optional, how the processes are seen in process list\n- `mount`, default value `nil` \n- `config`, absolute path to application configuration file, optional for operator => 'Dancer'\n- `debug`, default value `1`\n- `plackup_environment`, default value `development`\n- `cookbook`, default value `psgi`, the name of cookbook where init script template coming from\n- `ignore_failure` - used in action 'test', whether to ignore test failures, if enabled, than test fail will cause chef runtime exception. Default value is 'true'\n\n# Usage examples\n\n    # run Catalyst Application (default flavour)\n    psgi_application 'my application' do\n        application_user    'user'\n        application_home    '/home/user/app/MyApplication'\n        script              '/home/user/app/MyApplication/scripts/foo.psgi'\n        config              '/home/user/app/MyApplication/app.conf'\n        action              'install'      \n    end\n\n    # run Dancer application\n    psgi_application 'my application' do\n        application_user    'user'\n        application_home    '/home/user/app/MyApplication'\n        script              '/home/user/app/MyApplication/scripts/foo.psgi'\n        operator            'Dancer'\n        action              'install'      \n    end\n\n    # run Jifty application\n    psgi_application 'my application' do\n        application_user    'user'\n        application_home    '/home/user/app/MyApplication'\n        script              '/home/user/app/MyApplication/scripts/foo.psgi'\n        config              '/home/user/app/MyApplication/app.conf'\n        operator            'Jifty'\n        action              'install'      \n    end\n    \n    # test application\n    psgi_application 'my application' do\n        application_user    'user'\n        application_group   'user'\n        application_home    '/home/user/app/MyApplication'\n        script              '/home/user/app/MyApplication/scripts/foo.psgi'\n        config              '/home/user/app/MyApplication/app.conf'\n        action              'test'\n        ignore_failure      false\n    end\n\n    # usage with non system plackup\n    psgi_application 'my application' do\n        application_user    'user'\n        application_home    '/home/user/app/MyApplication'\n        script              '/home/user/app/MyApplication/scripts/foo.psgi'\n        config              '/home/user/app/MyApplication/app.conf'\n        action              'install'\n        daemon_path         '/home/user/app/MyApplication/cpanlib/bin/plackup'      \n    end\n\n\n# tested on\n* Debian-Stable-64-bit\n\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ]
}