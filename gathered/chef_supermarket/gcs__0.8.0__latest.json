{
  "name": "gcs Chef cookbook",
  "chef_cookbook_name": "gcs",
  "revision": "0.8.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/gcs",
    "https://supermarket.chef.io/cookbooks/gcs/download",
    "https://supermarket.chef.io/cookbooks/gcs/versions/0.8.0",
    "https://supermarket.chef.io/cookbooks/gcs/versions/0.8.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/gcs/versions/0.8.0",
    "https://supermarket.chef.io/api/v1/cookbooks/gcs",
    "https://supermarket.chef.io/api/v1/cookbooks/gcs/versions/0.8.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/gcs",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/gcs/versions/0.8.0/download",
  "deprecated": false,
  "created": "2014-06-19T21:16:08.000Z",
  "updated": "2014-06-19T21:16:09.000Z",
  "description": "LWRPs for managing GCS resources",
  "maintainer": {
    "name": "paulrossman",
    "email": "paulrossman@google.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 1263765,
  "downloads_count_revision": 1263766,
  "repository_url": "https://github.com/chef-partners/google-cloud-storage",
  "issues_url": "https://github.com/chef-partners/google-cloud-storage",
  "chef_source_url": "https://github.com/chef-partners/google-cloud-storage",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Google Cloud Storage Cookbook LWRP\n\n## Description\n\nThis cookbook provides libraries, resources and providers to configure\nand manage [Google Cloud Storage](https://cloud.google.com/products/cloud-storage/)\ncomponents. The currently supported\nGCS resources are:\n\n * bucket (`bucket`)\n * object (`object`)\n\n## Requirements\n\nRequires [fog](https://github.com/fog/fog) ruby gem to interact with GCS.\n\n## Authorizing Setup\n\nIn order to use the Google Cloud Storage cookbook, you will first need to have\na [Google Cloud](https://cloud.google.com/developers/) project. Once your\nproject has been created, log in to the [Google Developers Console]\n(https://console.developers.google.com/project) and select your project. From\nthe Google Developers Console, on the left side of the page, click \"APIs\n& auth\" then the \"Credentials\" sub menu. At the bottom of the page,\nclick \"Return to original console\". This will redirect you to the \"Google APIs\nConsole\". From the new menu on the left side of the page, click on \"Google\nCloud Storage\" Unless you've already enabled \"Interoperable Access\" you'll see\na button towards the bottom of the page. Click that button to enable\n\"Interoperable Access\". Finally, click the new \"Interoperable Access\" sub menu\non the left side of the page. Your \"Interoperable Storage Access Keys\" will\nnow be listed.\n\n```ruby\n    % knife data bag show gcs credentials \n    {\n      \"access_key_id\": \"AABBCCDDEE\",\n      \"secret_access_key\": \"abcdefg23456789+0\"\n    }\n```\n\nThis can be loaded in a recipe with:\n\n```ruby\n    gcs = data_bag_item(\"gcs\", \"credentials\")\n```\n\nAnd to access the values:\n\n```ruby\n    gcs['access_key_id']\n    gcs['secret_access_key']\n```\n\n## Resources and Providers\n\nThis cookbook provides a resource and corresponding provider.\n\n### object.rb\n\nManage GCS objects with this resource.\n\nActions:\n\n* `get` - download an object.\n* `put` - upload an object.\n* `delete` - delete object.\n* `copy` - copy an object from one bucket to another.\n\n### bucket.rb\n\nManage GCS buckets with this resource.\n\nActions:\n\n* `put` - create a bucket.\n* `delete` - delete a bucket.\n\n## Usage\n\n### object create\n\nThis will copy a local file to GCS with default private permissions set.\n\n```ruby\n    gcs_object \"my_file\" do\n      access_key_id gcs['access_key_id']\n      secret_access_key gcs['secret_access_key']\n      bucket_name \"my_bucket\"\n      local_path \"/path/to/my_file\"\n      action :put\n    end\n```\n\n### object copy\n\nThis will copy an object from one bucket to another. By default,\nthe target object name will be the same as source unless specified\nwith the optional `target_bucket_name`.\n\n```ruby\n    gcs_object \"my_file\" do\n      access_key_id gcs['access_key_id']\n      secret_access_key gcs['secret_access_key']\n      source_bucket_name \"my_bucket\"\n      target_bucket_name \"my_other_bucket\"\n      action :copy\n    end\n```\n\nLicense and Authors\n===================\n\n* Author:: Paul Rossman (<paulrossman@google.com>)\n\nCopyright 2014, Google, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "chef_recipes": {
    "gcs": "Installs the fog gem and other dependencies"
  }
}