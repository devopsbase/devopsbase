{
  "name": "couchbase Chef cookbook",
  "chef_cookbook_name": "couchbase",
  "revision": "1.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/couchbase",
    "https://supermarket.chef.io/cookbooks/couchbase/download",
    "https://supermarket.chef.io/cookbooks/couchbase/versions/1.1.0",
    "https://supermarket.chef.io/cookbooks/couchbase/versions/1.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/couchbase/versions/1.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/couchbase",
    "https://supermarket.chef.io/api/v1/cookbooks/couchbase/versions/1.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Data Store/Document-oriented/Couchbase",
    "Type/Middleware/Data Store/Document-oriented/HBase"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/couchbase",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/couchbase/versions/1.1.0/download",
  "deprecated": false,
  "created": "2013-04-09T23:45:50.000Z",
  "updated": "2015-08-28T14:12:38.215Z",
  "description": "Installs and configures Couchbase Server.",
  "maintainer": {
    "name": "dunnj",
    "email": "jdunn@opscode.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": false,
  "rating": null,
  "followers_count": 20,
  "downloads_count": 4830406,
  "downloads_count_revision": 1267116,
  "repository_url": "https://github.com/urbandecoder/couchbase",
  "issues_url": "https://github.com/urbandecoder/couchbase",
  "chef_source_url": "https://github.com/urbandecoder/couchbase",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nInstalls and configures Couchbase.\n\n[![Build Status](https://travis-ci.org/juliandunn/couchbase.png)](https://travis-ci.org/juliandunn/couchbase)\n\nRequirements\n============\n\nChef 0.10.10 and Ohai 0.6.12 are required due to the use of platform_family.\n\nPlatforms\n---------\n\n* Debian family (Debian, Ubuntu etc)\n* Red Hat family (Redhat, CentOS, Oracle etc)\n* Microsoft Windows\n\nNote that Couchbase Server does not support Windows 8 or Server 2012: see http://www.couchbase.com/issues/browse/MB-6395. This is targeted to be fixed in Couchbase 2.1.\n\nAttributes\n==========\n\ncouchbase-server\n----------------\n\n* `node['couchbase']['server']['edition']`          - The edition of couchbase-server to install, \"community\" or \"enterprise\"\n* `node['couchbase']['server']['version']`          - The version of couchbase-server to install\n* `node['couchbase']['server']['package_file']`     - The couchbase-server package file to download and install\n* `node['couchbase']['server']['package_base_url']` - The url path to download the couchbase-server package file from\n* `node['couchbase']['server']['package_full_url']` - The full url to the couchbase-server package file to download and install\n* `node['couchbase']['server']['database_path']`    - The directory Couchbase should persist data to\n* `node['couchbase']['server']['log_dir']`          - The directory Couchbase should log to\n* `node['couchbase']['server']['memory_quota_mb']`  - The per server RAM quota for the entire cluster in megabytes\n                                                      defaults to Couchbase's maximum allowed value\n* `node['couchbase']['server']['username']`         - The cluster's username for the REST API and Admin UI\n* `node['couchbase']['server']['password']`         - The cluster's password for the REST API and Admin UI\n* `node['couchbase']['server']['allow_unsigned_packages'] - Whether to allow Couchbase's unsigned packages to be installed (default to 'true')\n\nclient\n------\n\n* `node['couchbase']['client']['version']`          - The version of libcouchbase to install\n\nmoxi\n----\n\n* `node['couchbase']['moxi']['version']`            - The version of moxi to install\n* `node['couchbase']['moxi']['package_file']`       - The package file to download\n* `node['couchbase']['moxi']['package_base_url']`   - The base URL where the packages are located \n* `node['couchbase']['moxi']['package_full_url']`   - The full URL to the moxi package\n* `node['couchbase']['moxi']['cluster_server']`     - The bootstrap server for moxi to contact for the node list\n* `node['couchbase']['moxi']['cluster_rest_url']`   - The bootstrap server's full REST URL for retrieving the initial node list\n\nRecipes\n=======\n\nclient\n------\n\nInstalls the libcouchbase2 and devel packages.\n\nserver\n------\n\nInstalls the couchbase-server package and starts the couchbase-server service.\n\nmoxi\n----\n\nInstalls the moxi-server package and starts the moxi-server service.\n\nResources/Providers\n===================\n\ncouchbase_node\n--------------\n\n### Actions\n\n* `:modify` - **Default** Modify the configuration of the node\n\n### Attribute Parameters\n\n* `id` - The id of the Couchbase node, typically \"self\", defaults to the resource name\n* `database_path` - The directory the Couchbase node should persist data to\n* `username` - The username to use to authenticate with Couchbase\n* `password` - The password to use to authenticate with Couchbase\n\n### Examples\n\n```ruby\ncouchbase_node \"self\" do\n  database_path \"/mnt/couchbase-server/data\"\n\n  username \"Administrator\"\n  password \"password\"\nend\n```\n\ncouchbase_cluster\n-----------------\n\n### Actions\n\n* `:create_if_missing` - **Default** Create a cluster/pool only if it doesn't exist yet\n\n### Attribute Parameters\n\n* `cluster` - The id of the Couchbase cluster, typically \"default\", defaults to the resource name\n* `memory_quota_mb` - The per server RAM quota for the entire cluster in megabytes\n* `username` - The username to use to authenticate with Couchbase\n* `password` - The password to use to authenticate with Couchbase\n\n### Examples\n\n```ruby\ncouchbase_cluster \"default\" do\n  memory_quota_mb 256\n\n  username \"Administrator\"\n  password \"password\"\nend\n```\n\ncouchbase_settings\n------------------\n\n### Actions\n\n* `:modify` - **Default** Modify the collection of settings\n\n### Attribute Parameters\n\n* `group` - Which group of settings to modify, defaults to the resource name\n* `settings` - The hash of settings to modify\n* `username` - The username to use to authenticate with Couchbase\n* `password` - The password to use to authenticate with Couchbase\n\n### Examples\n\n```ruby\ncouchbase_settings \"autoFailover\" do\n  settings({\n    \"enabled\" => true,\n    \"timeout\" => 30,\n  })\n\n  username \"Administrator\"\n  password \"password\"\nend\n```\n\ncouchbase_bucket\n----------------\n\n### Actions\n\n* `:create` - **Default** Create a Couchbase bucket\n\n### Attribute Parameters\n\n* `bucket` - The name to use for the Couchbase bucket, defaults to the resource name\n* `cluster` - The name of the cluster the bucket belongs to, defaults to \"default\"\n* `type` - The type of the bucket, defaults to \"couchbase\"\n* `saslpassword` - The password of the bucket, defaults to \"\"\n* `memory_quota_mb` - The bucket's per server RAM quota for the entire cluster in megabytes\n* `memory_quota_percent` The bucket's RAM quota as a percent (0.0-1.0) of the cluster's quota\n* `replicas` - Number of replica (backup) copies, defaults to 1. Set to false to disable\n* `username` - The username to use to authenticate with Couchbase\n* `password` - The password to use to authenticate with Couchbase\n\n### Examples\n\n```ruby\ncouchbase_bucket \"default\" do\n  memory_quota_mb 128\n  replicas 2\n\n  username \"Administrator\"\n  password \"password\"\nend\n\ncouchbase_bucket \"pillowfight\" do\n  memory_quota_percent 0.5\n  replicas false\n  saslPassword \"bucketPassword\"\n\n  username \"Administrator\"\n  password \"password\"\nend\n\ncouchbase_bucket \"memcached\" do\n  memory_quota_mb 128\n  replicas false\n  type \"memcached\"\n\n  username \"Administrator\"\n  password \"password\"\nend\n\n```\n\nChef Solo Note\n==============\n\nThese node attributes are stored on the Chef\nserver when using `chef-client`. Because `chef-solo` does not\nconnect to a server or save the node object at all, to have the same\npasswords persist across `chef-solo` runs, you must specify them in\nthe `json_attribs` file used. For example:\n\n    {\n      \"couchbase\": {\n        \"server\": {\n          \"password\": \"somepassword\"\n        }\n      }\n      \"run_list\":[\"recipe[couchbase::server]\"]\n    }\n\nCouchbase Server expects the password to be longer than six characters.\n\nRoadmap\n=======\n\n* Many of the heavyweight resources/providers need to be moved to LWRPs.\n\nIf you have time to work on these things or to improve the cookbook in other ways, please submit a pull request.\n\nLicense and Author\n==================\n\n* Author:: Chris Griego (<cgriego@getaroom.com>)\n* Author:: Morgan Nelson (<mnelson@getaroom.com>)\n* Author:: Julian Dunn (<jdunn@aquezada.com>)\n\n* Copyright:: 2012, getaroom\n* Copyright:: 2012, SecondMarket Labs, LLC.\n* Copyright:: 2013, Opscode, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "oracle",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/openssl",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/windows",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "couchbase::server": "Installs couchbase-server",
    "couchbase::client": "Installs libcouchbase",
    "couchbase::moxi": "Installs moxi-server"
  }
}