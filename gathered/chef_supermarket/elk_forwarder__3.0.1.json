{
  "name": "elk_forwarder Chef cookbook",
  "chef_cookbook_name": "elk_forwarder",
  "revision": "3.0.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/elk_forwarder",
    "https://supermarket.chef.io/cookbooks/elk_forwarder/download",
    "https://supermarket.chef.io/cookbooks/elk_forwarder/versions/3.0.1",
    "https://supermarket.chef.io/cookbooks/elk_forwarder/versions/3.0.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/elk_forwarder/versions/3.0.1",
    "https://supermarket.chef.io/api/v1/cookbooks/elk_forwarder",
    "https://supermarket.chef.io/api/v1/cookbooks/elk_forwarder/versions/3.0.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Orchestration/Cluster-based",
    "Type/Devopsware/Logging/Logstash"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/elk_forwarder",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/elk_forwarder/versions/3.0.1/download",
  "deprecated": false,
  "created": "2015-08-10T17:07:12.653Z",
  "updated": "2016-01-19T21:18:18.404Z",
  "description": "Installs logstash-forwarder for use in an ELK Cluster",
  "maintainer": {
    "name": "evertrue",
    "email": "devops@evertrue.com"
  },
  "license": "apache2",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 5925,
  "downloads_count_revision": 4956,
  "repository_url": "https://github.com/evertrue/elk_forwarder-cookbook",
  "issues_url": "https://github.com/evertrue/elk_forwarder-cookbook/issues",
  "chef_source_url": "https://github.com/evertrue/elk_forwarder-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# elk_forwarder [![Build Status](https://travis-ci.org/evertrue/elk_forwarder-cookbook.svg)](https://travis-ci.org/evertrue/elk_forwarder-cookbook) [![Dependency Status](https://gemnasium.com/evertrue/elk_forwarder-cookbook.svg)](https://gemnasium.com/evertrue/elk_forwarder-cookbook)\n\nInstalls and configures the [logstash-forwarder](https://github.com/elastic/logstash-forwarder) to forward specified logs to specified servers\n\n# Requirements\n\n* `golang` cookbook\n\n# Attributes\n\nYou can also find comments in [attributes/default.rb](https://github.com/evertrue/elk_forwarder-cookbook/blob/master/attributes/default.rb)\n\n## General Attributes\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['elk_forwarder']['install_type']</tt></td>\n    <td>String</td>\n    <td>source or package</td>\n    <td><tt>package</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['elk_forwarder']['config_dir']</tt></td>\n    <td>String</td>\n    <td>Where to put config</td>\n    <td><tt>/etc/logstash-forwarder</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['elk_forwarder']['service_name']</tt></td>\n    <td>String</td>\n    <td>The Service Name</td>\n    <td><tt>logstash-forwarder</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['elk_forwarder']['log_dir']</tt></td>\n    <td>String</td>\n    <td>Directory to log to</td>\n    <td><tt>/var/log/logstash-forwarder</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['elk_forwarder']['install_dir']</tt></td>\n    <td>String</td>\n    <td>Directory to install to</td>\n    <td><tt>/opt/logstash-forwarder</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['elk_forwarder']['daemon_args']</tt></td>\n    <td>String</td>\n    <td>Extra args for the forwarder</td>\n    <td><tt>-spool-size 5</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['elk_forwarder']['syslog']['facility']</tt></td>\n    <td>String</td>\n    <td>The Syslog facility.</td>\n    <td><tt>local0</tt></td>\n  </tr>\n</table>\n\n## Config File Attributes\n\nThe `node['elk_forwarder']['config']` hash closely mimics the logstash forwarder config file format, with the only difference of the `files` key contains a hash instead of an array\n\nThe following table is namespaced under `node['elk_forwarder']['config']` so prepend `node['elk_forwarder']['config']` to the key column\n<table>\n  <tr>\n    <td><tt>['network']['servers']</tt></td>\n    <td>Array</td>\n    <td>An array of logstash agent address:port values</td>\n    <td><tt>[]</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['network']['ssl certificate']</tt></td>\n    <td>String</td>\n    <td>The path to find the SSL Certificate</td>\n    <td>/etc/pki/tls/certs/logstash-forwarder/cert.pem</td>\n  </tr>\n  <tr>\n    <td><tt>['network']['ssl certificate']</tt></td>\n    <td>String</td>\n    <td>The path to find the SSL Certificate</td>\n    <td>/etc/pki/tls/certs/logstash-forwarder/cert.pem</td>\n  </tr>\n  <tr>\n    <td><tt>['network']['ssl key']</tt></td>\n    <td>String</td>\n    <td>The path to find the SSL Private Key</td>\n    <td>/etc/pki/tls/certs/logstash-forwarder/key.pem</td>\n  </tr>\n  <tr>\n    <td><tt>['network']['ssl ca']</tt></td>\n    <td>String</td>\n    <td>The path to find the SSL CA Certificate</td>\n    <td>/etc/pki/tls/certs/logstash-forwarder/ca.pem</td>\n  </tr>\n  <tr>\n    <td><tt>['network']['timeout']</tt></td>\n    <td>String</td>\n    <td>Seconds to wait before connecting to next server</td>\n    <td>15</td>\n  </tr>\n  <tr>\n    <td><tt>['haproxy']['defaults']['maxconn']</tt></td>\n    <td>String (well, a number in quotes, really)</td>\n    <td>The DEFAULT maximum number of concurrent connections the frontend will accept to serve. Excess connections will be queued by the system in the socket's listen queue and will be served once a connection closes.  (See: http://code.google.com/p/haproxy-docs/wiki/maxconn)</td>\n    <td><tt>60000</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['files']</tt></td>\n    <td>Hash</td>\n    <td>The List of files to track and associated fields to add</td>\n    <td>{}</td>\n  </tr>\n</table>\n\n# Usage\n\nThats great but how do I use it.\n\n## Point to your servers\n\nPut this in a recipe, probably in your base cookbook\n\n```ruby\nservers = search(\n  :node,\n  \"role:elk_server AND chef_environment:#{node.chef_environment}\"\n).map do |node|\n  \"#{node['fqdn']}:5043\"\nend\n\nnode.set['elk_forwarder']['config']['network']['servers'] = servers\n```\n\n## Grab your Lumberjack Certificate\n\nThis one is pretty much up to you, but there is a built in recipe for this\nthat pulls a certificate from a data bag item.  I will use that as an example\nassuming that you stored your CA certificate in the `ca certificate` key in the\n`logstash` data bag item in the `certificates` data bag\n\nIn your Attributes file\n\n```ruby\nset['elk_forwarder']['certs']['ca_data_bag'] = 'certificates'\nset['elk_forwarder']['certs']['ca_data_bag_item'] = 'logstash'\nset['elk_forwarder']['certs']['ca_data_bag_item_key'] = 'ca certificate'\n```\n\nIn your Recipe\n\n```ruby\ninclude_recipe 'elk_forwarder::certs'\n```\n\n## Configure files to forward\n\nFrom your Attributes\n\n```ruby\nset['elk_forwarder']['config']['files']['myapp']['paths'] = ['/var/log/myapp.log']\nset['elk_forwarder']['config']['files']['myapp']['fields']['type'] = 'myapp'\nset['elk_forwarder']['config']['files']['myapp']['fields']['foo'] = 'bar'\n```\n\nOr from your recipe. This one loops through a list of apps\n\n```ruby\napps.each do |app|\n  node.set['elk_forwarder']['config']['files']['myapp']['paths'] = [\"/var/log/#{app}.log\"]\n  node.set['elk_forwarder']['config']['files']['myapp']['fields']['type'] = 'rails_app'\n  node.set['elk_forwarder']['config']['files']['myapp']['fields']['app'] = app\nend\n```\n\n*As a side note all attribute modifications need to happen at compile time*\n\n# Recipes\n\n## default\n\nInstalls and configures the logstash-forwarder\n\n1. Install logstash-forwarder using the `_source` or `_package` recipes\n2. Include various recipes for this cookbook:\n    * `elk_forwarder::configure`\n\n## configure\n\nConfigures the forwarder with the `['elk_forwarder']['config']` hash\n\n1. Creates the config file: `#{node['elk_forwarder']['config_dir']}/logstash-forwarder.conf`\n\n## certs\n\nInstalls SSL Certs and Keys from data bags to the paths specified in the configuration\nfrom:\n\n* `node['elk_forwarder']['network']['ssl ca']`\n* `node['elk_forwarder']['network']['ssl certificate']`\n* `node['elk_forwarder']['network']['ssl key']`\n\nThe following attributes are used to determine the location of the certs/keys\n\n```ruby\n# The Server's CA Certificate. This cert is required\nset['elk_forwarder']['certs']['ca_data_bag'] = 'certificates'\nset['elk_forwarder']['certs']['ca_data_bag_item'] = 'logstash'\nset['elk_forwarder']['certs']['ca_data_bag_item_key'] = 'ca certificate'\n\n# The Client Certificate (optional)\nset['elk_forwarder']['certs']['certificate_data_bag'] = 'certificates'\nset['elk_forwarder']['certs']['certificate_data_bag_item'] = 'logstash'\nset['elk_forwarder']['certs']['certificate_data_bag_item_key'] = 'ca certificate'\n\n# The Client key (optional)\nset['elk_forwarder']['certs']['key_data_bag'] = 'certificates'\nset['elk_forwarder']['certs']['key_data_bag_item'] = 'logstash'\nset['elk_forwarder']['certs']['key_data_bag_item_key'] = 'ca certificate'\n```\n\n# Usage\n\nInclude this recipe in a wrapper cookbook:\n\nmetadata.rb\n\n```ruby\ndepends 'elk_forwarder', '~> 1.0'\n```\n\nrecipes/your_recipe.rb\n\n```ruby\ninclude_recipe 'elk_forwarder::default'\n```\n\n### Certificates\n\nGenerating and distributing SSL Certificates is out of scope for this cookbook. Your wrapper cookbook will\nneed to configure the SSL Certificates and Keys.  See the\n[Certificate Notes](https://github.com/elastic/logstash-forwarder#important-tlsssl-certificate-notes)\non the logstash forwarder repo for help.\n\nHowever, with that said there is a `certs` recipe that you can use at your own risk to pull certs from a data bag.\n\nYou can tweak the Certificate locations in the `[elk_forwarder]['config']['network']['ssl *']` attributes\n\n## Contributing\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests with `kitchen test`, ensuring they all pass\n6. Submit a Pull Request using Github\n\n## License and Authors\n\nAuthor:: EverTrue, inc. (devops@evertrue.com)\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 14.04",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/golang",
      "revision": "~> 1.5",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/logrotate",
      "revision": "~> 1.9",
      "self_resolve": true
    }
  ]
}