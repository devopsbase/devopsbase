{
  "name": "btm-test Chef cookbook",
  "chef_cookbook_name": "btm-test",
  "revision": "0.1.6",
  "uris": [
    "https://supermarket.chef.io/cookbooks/btm-test",
    "https://supermarket.chef.io/cookbooks/btm-test/download",
    "https://supermarket.chef.io/cookbooks/btm-test/versions/0.1.6",
    "https://supermarket.chef.io/cookbooks/btm-test/versions/0.1.6/download",
    "https://supermarket.chef.io/api/v1/cookbooks/btm-test/versions/0.1.6",
    "https://supermarket.chef.io/api/v1/cookbooks/btm-test",
    "https://supermarket.chef.io/api/v1/cookbooks/btm-test/versions/0.1.6/download"
  ],
  "labels": [
    "Chef cookbook",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Test"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/btm-test",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/btm-test/versions/0.1.6/download",
  "deprecated": false,
  "created": "2013-02-20T19:09:35.000Z",
  "updated": "2015-11-02T18:48:59.411Z",
  "description": "Installs/Configures anaconda",
  "maintainer": {
    "name": "btm",
    "email": "matt.chu@gmail.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 2546026,
  "downloads_count_revision": 290,
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# anaconda cookbook\n\nChef cookbook for installing [Continuum Analytic](http://continuum.io/)'s\n[Anaconda](https://store.continuum.io/cshop/anaconda/): \"completely free Python\ndistribution for large-scale data processing, predictive analytics, and\nscientific computing\". Specifically:\n\n- Anaconda 2.2 or 2.3\n  - python2 or python3\n  - x86 or x86_64\n- Miniconda\n  - python2 or python3\n  - x86 or x86_64\n- Usage tested on Ubuntu, unittested on Debian, CentOS, and RedHat. See [rspec\n  tests](spec/default_spec.rb#L100) and [kitchen tests](.kitchen.yml#L16) for\n  the full list.\n\nThis also serves as an example for developing and testing Chef cookbooks. It\nuses:\n\n- [ChefDK](https://downloads.chef.io/chef-dk/); 0.8.1\n  - chef-client 12.4.4\n  - [Berkshelf](http://berkshelf.com) for dependency resolution; 3.3.0\n  - [Test Kitchen](https://github.com/test-kitchen/test-kitchen) for\n    comprehensive testing across multiple platforms, with tests written in\n    [serverspec](http://serverspec.org); 1.4.2\n    - Docker, with\n      [kitchen-docker](https://github.com/portertech/kitchen-docker)\n      integration\n  - [Foodcritic](http://acrmp.github.io/foodcritic/) for style checking; 5.0.0\n- RSpec/[Chefspec](https://github.com/sethvargo/chefspec) for rapid testing;\n  3.3.2\n\n**Note that the release process uses Chef 11 because of <https://github.com/chef/chef/issues/3888>**\n\nIn addition:\n\n- [Vagrant](https://www.vagrantup.com) to provide an out-of-the-box working\n  example; 1.7.4\n\n## Requirements\n\nIf you want to just have a working Anaconda VM, install:\n\n- Vagrant\n\nFor the full experience (e.g. running the test suite), also install:\n\n- ChefDK\n  - [vagrant-omnibus](https://github.com/schisamo/vagrant-omnibus)\n  - [vagrant-berkshelf](https://github.com/berkshelf/vagrant-berkshelf)\n- Docker\n  - Don't forget [Docker Machine](https://docs.docker.com/machine/) if you're\n    on OSX; installing this via homebrew is highly recommended.\n\n## Quickstart\n\nThe sample [Vagrantfile](Vagrantfile) will build you an Anaconda VM with no\nchanges necessary; note it might take a few minutes to download the Anaconda\ninstaller itself.\n\n  ```bash\n  $> vagrant up --provision\n  ...\n\n  # the sample image includes `recipe[anaconda::shell_conveniences]`, which\n  # means conda is already in PATH via /etc/profile.d\n  $> vagrant ssh\n  $vagrant> conda --version\n  conda 3.14.1\n\n  # or you add it to PATH manually\n  $> vagrant ssh\n  $vagrant> export PATH=/opt/anaconda/2.3.0/bin:${PATH}\n  $vagrant> conda --version\n  conda 3.14.1\n  ```\n\nIt includes a Jupyter (IPython) notebook server accessible at <http://33.33.33.123:8888>\n\nLastly, to use it in a cookbook:\n\n  ```ruby\n  include_recipe 'anaconda::default'\n  ```\n\n## Warning! If you're also using the [python](https://github.com/poise/python) cookbook...\n\nYou MUST include `recipe[anaconda::python_workaround]`, otherwise subsequent\nchef runs will fail. See [the\nissue](https://github.com/thmttch/chef-continuum-anaconda/issues/12) for\ndetails.\n\n## Usage, recipes, attributes, and resources\n\nThe main recipe is `anaconda::default`. Include it in your runlist, and it will\ninstall the package as well as any necessary dependencies.\n\nThe following are user-configurable attributes. Check\n[attributes/default.rb](attributes/default.rb) for more details.\n\n- `anaconda`\n  - `version`: the Anaconda version to install. Valid values are:\n    - 2.2.0\n    - 2.3.0\n    - latest (for miniconda only)\n  - `python`: which version of Python to install for. Valid values are:\n    - python2\n    - python3\n  - `flavor`: what architecture the instance is. Valid values are:\n    - nil (will autodetect)\n    - x86 (32-bit)\n    - x86_64 (64-bit)\n  - `install_type`: which Anaconda distribution to install. Valid values are:\n    - anaconda\n    - miniconda\n  - `install_root`: the parent directory of all anaconda installs. note that\n    individual installs go into `#{install_root}/#{version}`\n  - `accept_license`: **must be explicitly set to the string `yes` (there are\n    no defaults)**; any other value will reject the license.\n  - `owner`: the user who owns the install\n  - `group`: the group who owns the install\n\n### `recipe[anaconda::shell_conveniences]`\n\nInclude this to have the environment set for all users (login shells) via\n`/etc/profile.d`. Useful for development.\n\n### resource `anaconda_package`\n\nYou can use the `anaconda_package` resource to install new packages into the\nAnaconda environment:\n\n  ```ruby\n  # I don't know what 'astroid' is, just using it as a sample package\n  anaconda_package 'astroid' do\n    # the other supported action is `:remove`\n    action :install\n  end\n  ```\n\nSee the [resource definition](resources/package.rb) for additional options; in\ngeneral, all it does is present the same options as `conda install`/`conda\nremove`.\n\n### resource `anaconda_nbservice`\n\n**This only works with a full Anaconda installation! I.e. the notebook service\nwill not work out-of-the-box if installed with miniconda.**\n\nThe `anaconda_nbservice` will run a Jupyter notebook server as a runit service:\n\n  ```ruby\n  anaconda_nbservice 'notebook-server' do\n    # listen on all interfaces; there will be a warning since security is\n    # disabled\n    ip '*'\n    port '8888'\n\n    install_dir '/opt/ipython/server'\n\n    service_action [ :enable, :start ]\n  end\n  ```\n\nThe standard configuration should be good enough, but you might need to write\nyour own run service template:\n\n  ```ruby\n  anaconda_nbservice 'server-with-custom-template' do\n    user ipython_user\n    group ipython_group\n\n    install_dir install_dir\n\n    template_cookbook 'your_cookbook'\n    # note that if your template name is TEMPLATE, then this value should be\n    # 'TEMPLATE\", but the file should be 'sv-TEMPLATE-run.erb'\n    run_template_name 'your_template_name'\n    run_template_opts({\n      ...\n    })\n\n    service_action [ :enable, :start ]\n  end\n  ```\n\n## Tests\n\nTo run the full test suite:\n\n  ```bash\n  # this will take a while, especially the first time\n  $> script/cibuild\n  ...\n\n  # check the final result; bash return codes: 0 is good, anything else is not\n  $> echo $?\n  ```\n\n- to run just the [chefspecs](spec/default_spec.rb):\n\n  ```bash\n  $> rspec\n  ```\n\n- to run just the test kitchen serverspec [integration\n  tests](test/integration/default/serverspec/default_spec.rb):\n\n  ```bash\n  # this is done via docker/kitchen-docker\n  # the list of OSes is defined in .kitchen.yml\n  $> kitchen verify\n\n  # test a specific OS; `kitchen list`\n  $> kitchen verify default-ubuntu-1204\n  ```\n\n- check for style issues with Foodcritic\n\n  ```bash\n  $> foodcritic\n  ```\n\n## Releases and issues\n\nStandard stuff:\n\n- master is the active version in development\n- releases are [made with\n  Github](https://github.com/thmttch/chef-continuum-anaconda/releases), and\n  `git tag`'ed\n- issues should be [opened in the Github issue\n  tracker](https://github.com/thmttch/chef-continuum-anaconda/issues)\n\n## TODO\n\n- add a pre-provision for kitchen tests to avoid redownloading the installer on\n  every test (really slows down the tests)\n- https://github.com/poise/python is now deprecated, in favor of\n  https://github.com/poise/poise-python; see if the python workaround is still\n  necessary\n  - the supermarket version (https://supermarket.chef.io/cookbooks/python)\n    looks like it also points to the deprecated one\n\n## Author\n\nAuthor:: Matt Chu (matt.chu@gmail.com)\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": "= 15.04",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": "= 8.1",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": "= 7.1.1503",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/runit",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/bzip2",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/tar",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}