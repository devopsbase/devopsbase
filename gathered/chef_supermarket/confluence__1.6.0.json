{
  "name": "confluence Chef cookbook",
  "chef_cookbook_name": "confluence",
  "revision": "1.6.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/confluence",
    "https://supermarket.chef.io/cookbooks/confluence/download",
    "https://supermarket.chef.io/cookbooks/confluence/versions/1.6.0",
    "https://supermarket.chef.io/cookbooks/confluence/versions/1.6.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/confluence/versions/1.6.0",
    "https://supermarket.chef.io/api/v1/cookbooks/confluence",
    "https://supermarket.chef.io/api/v1/cookbooks/confluence/versions/1.6.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/confluence",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/confluence/versions/1.6.0/download",
  "deprecated": false,
  "created": "2011-02-18T23:46:40.000Z",
  "updated": "2016-08-05T19:01:22.631Z",
  "description": "Installs/Configures Atlassian Confluence",
  "maintainer": {
    "name": "legal90",
    "email": "bflad@wharton.upenn.edu"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 10,
  "downloads_count": 2425322,
  "downloads_count_revision": 261,
  "repository_url": "https://github.com/parallels-cookbooks/confluence",
  "issues_url": "https://github.com/parallels-cookbooks/confluence/issues",
  "chef_source_url": "https://github.com/parallels-cookbooks/confluence",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# chef-confluence [![Build Status](https://secure.travis-ci.org/bflad/chef-confluence.png?branch=master)](http://travis-ci.org/bflad/chef-confluence)\n\n## Description\n\nInstalls/Configures Atlassian Confluence server. Please see [COMPATIBILITY.md](COMPATIBILITY.md) for more information about Confluence releases that are tested and supported by this cookbook and its versions.\n\n## Requirements\n\n### Platforms\n\n* CentOS 6\n* RedHat 6\n* Ubuntu 12.04\n\n### Databases\n\n* MySQL\n* Postgres\n\n### Cookbooks\n\nRequired [Opscode Cookbooks](https://github.com/opscode-cookbooks/)\n\n* [apache2](https://github.com/opscode-cookbooks/apache2) (if using Apache 2 proxy)\n* [database](https://github.com/opscode-cookbooks/database)\n* [mysql](https://github.com/opscode-cookbooks/mysql) (if using MySQL database)\n* [postgresql](https://github.com/opscode-cookbooks/postgresql) (if using Postgres database)\n\nRequired Third-Party Cookbooks\n\n* [mysql_connector](https://github.com/bflad/chef-mysql_connector) (if using MySQL database)\n\nSuggested [Opscode Cookbooks](https://github.com/opscode-cookbooks/)\n\n* [java](https://github.com/opscode-cookbooks/java)\n\n### JDK/JRE\n\nThe Atlassian Confluence Linux installer will automatically configure a bundled JRE. If you wish to use your own JDK/JRE, with say the `java` cookbook, then as of this writing it must be Oracle JDK 7 ([Supported Platforms](https://confluence.atlassian.com/display/DOC/Supported+Platforms))\n\nNecessary configuration with `java` cookbook:\n* `node['java']['install_flavor'] = \"oracle\"`\n* `node['java']['jdk_version'] = \"7\"`\n* `node['java']['oracle']['accept_oracle_download_terms'] = true`\n* `recipe[java]`\n\n## Attributes\n\nThese attributes are under the `node['confluence']` namespace.\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\narch | architecture for Confluence installer - \"x64\" or \"x32\" | String | auto-detected (see attributes/default.rb)\nchecksum | SHA256 checksum for Confluence install | String | auto-detected (see attributes/default.rb)\nhome_path | home directory for Confluence user | String | /var/atlassian/application-data/confluence\ninstall_path | location to install Confluence | String | /opt/atlassian/confluence\ninstall_type | Confluence install type - \"cluster-standalone\", \"cluster-war\", \"installer\", \"standalone\", \"war\" | String | installer\nurl_base | URL base for Confluence install | String | http://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence\nurl | URL for Confluence install | String | auto-detected (see attributes/default.rb)\nuser | user running Confluence | String | confluence\nversion | Confluence version to install | String | 5.2.3\n\n### Confluence Database Attributes\n\nAll of these `node['confluence']['database']` attributes are overridden by `confluence/confluence` encrypted data bag (Hosted Chef) or data bag (Chef Solo), if it exists\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\nhost | FQDN or \"localhost\" (localhost automatically installs `['database']['type']` server) | String | localhost\nname | Confluence database name | String | confluence\npassword | Confluence database user password | String | changeit\nport | Confluence database port | Fixnum | 3306\ntype | Confluence database type - \"mysql\" or \"postgresql\" | String | mysql\nuser | Confluence database user | String | confluence\n\n### Confluence JVM Attributes\n\nThese attributes are under the `node['confluence']['jvm']` namespace.\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\nminimum_memory | JVM minimum memory | String | 512m\nmaximum_memory | JVM maximum memory | String | 768m\nmaximum_permgen | JVM maximum PermGen memory | String | 256m\njava_opts | additional JAVA_OPTS to be passed to Confluence JVM during startup | String | \"\"\n\n### Confluence Tomcat Attributes\n\nThese attributes are under the `node['confluence']['tomcat']` namespace.\n\nAny `node['confluence']['tomcat']['key*']` attributes are overridden by `confluence/confluence` encrypted data bag (Hosted Chef) or data bag (Chef Solo), if it exists\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\nkeyAlias | Tomcat SSL keystore alias | String | tomcat\nkeystoreFile | Tomcat SSL keystore file - will automatically generate self-signed keystore file if left as default | String | `#{node['confluence']['home_path']}/.keystore`\nkeystorePass | Tomcat SSL keystore passphrase | String | changeit\nport | Tomcat HTTP port | Fixnum | 8090\nssl_port | Tomcat HTTPS port | Fixnum | 8443\n\n## Recipes\n\n* `recipe[confluence]` Installs/configures Atlassian Confluence\n* `recipe[confluence::apache2]` Installs/configures Apache 2 as proxy (ports 80/443)\n* `recipe[confluence::database]` Installs/configures MySQL/Postgres server, database, and user for Confluence\n* `recipe[confluence::linux_cluster-standalone]` Installs/configures Confluence Cluster via Linux standalone archive\"\n* `recipe[confluence::linux_cluster-war]` Deploys Confluence Cluster WAR on Linux\"\n* `recipe[confluence::linux_installer]` Installs/configures Confluence via Linux installer\"\n* `recipe[confluence::linux_standalone]` Installs/configures Confluence via Linux standalone archive\"\n* `recipe[confluence::linux_war]` Deploys Confluence WAR on Linux\"\n* `recipe[confluence::tomcat_configuration]` Configures Confluence's built-in Tomcat\n* `recipe[confluence::windows_cluster-standalone]` Installs/configures Confluence Cluster via Windows standalone archive\"\n* `recipe[confluence::windows_cluster-war]` Deploys Confluence Cluster WAR on Windows\"\n* `recipe[confluence::windows_installer]` Installs/configures Confluence via Windows installer\"\n* `recipe[confluence::windows_standalone]` Installs/configures Confluence via Windows standalone archive\"\n* `recipe[confluence::windows_war]` Deploys Confluence WAR on Windows\"\n\n## Usage\n\n### Confluence Server Data Bag\n\nFor securely overriding attributes on Hosted Chef, create a `confluence/confluence` encrypted data bag with the model below. Chef Solo can override the same attributes with a `confluence/confluence` unencrypted data bag of the same information.\n\n_required:_\n* `['database']['type']` \"mysql\" or \"postgresql\"\n* `['database']['host']` FQDN or \"localhost\" (localhost automatically\n  installs `['database']['type']` server)\n* `['database']['name']` Name of Confluence database\n* `['database']['user']` Confluence database username\n* `['database']['password']` Confluence database username password\n\n_optional:_\n* `['database']['port']` Database port, standard database port for\n  `['database']['type']`\n* `['tomcat']['keyAlias']` Tomcat HTTPS Java Keystore keyAlias, defaults to self-signed certifcate\n* `['tomcat']['keystoreFile']` Tomcat HTTPS Java Keystore keystoreFile, self-signed certificate\n* `['tomcat']['keystorePass']` Tomcat HTTPS Java Keystore keystorePass, self-signed certificate\n\nRepeat for other Chef environments as necessary. Example:\n\n    {\n      \"id\": \"confluence\"\n      \"development\": {\n        \"database\": {\n          \"type\": \"postgresql\",\n          \"host\": \"localhost\",\n          \"name\": \"confluence\",\n          \"user\": \"confluence\",\n          \"password\": \"confluence_db_password\",\n        },\n        \"tomcat\": {\n          \"keyAlias\": \"not_tomcat\",\n          \"keystoreFile\": \"/etc/pki/java/wildcard_cert.jks\",\n          \"keystorePass\": \"not_changeit\"\n        }\n      }\n    }\n\n### Confluence Server Installation\n\nThe simplest method is via the default recipe, which uses `node['confluence']['install_type']` to determine best method.\n\n* Optionally (un)encrypted data bag or set attributes\n  * `knife data bag create confluence`\n  * `knife data bag edit confluence confluence --secret-file=path/to/secret`\n* Add `recipe[confluence]` to your node's run list.\n\n### Custom Confluence Configurations\n\nUsing individual recipes, you can use this cookbook to configure Confluence to fit your environment.\n\n* Optionally (un)encrypted data bag or set attributes\n  * `knife data bag create confluence`\n  * `knife data bag edit confluence confluence --secret-file=path/to/secret`\n* Add individual recipes to your node's run list.\n\n## Testing and Development\n\nHere's how you can quickly get testing or developing against the cookbook thanks to [Vagrant](http://vagrantup.com/) and [Berkshelf](http://berkshelf.com/).\n\n    vagrant plugin install vagrant-berkshelf\n    vagrant plugin install vagrant-omnibus\n    git clone git://github.com/bflad/chef-confluence.git\n    cd chef-confluence\n    vagrant up BOX # BOX being centos6 or ubuntu1204\n\nYou may need to add the following hosts entries:\n\n* 192.168.50.10 confluence-centos-6\n* 192.168.50.11 confluence-ubuntu-1204\n\nThe running Confluence server is accessible from the host machine:\n\nCentOS 6 Box:\n* Web UI: https://192.168.50.10/\n\nUbuntu 12.04 Box:\n* Web UI: https://192.168.50.11/\n\nYou can then SSH into the running VM using the `vagrant ssh BOX` # BOX being centos6 or ubuntu1204 command.\nThe VM can easily be stopped and deleted with the `vagrant destroy`\ncommand. Please see the official [Vagrant documentation](http://docs.vagrantup.com/v2/cli/index.html)\nfor a more in depth explanation of available commands.\n\n## Contributing\n\nPlease use standard Github issues/pull requests and if possible, in combination with testing on the Vagrant boxes.\n\n## License and Author\n\n* Author:: Brian Flad (<bflad417@gmail.com>, @bflad)\n* Author:: Denny Schäfer (<trash4you@online.de>, @tuxinaut)\n* Copyright:: 2013, Brian Flad\n* Copyright:: 2013, University of Pennsylvania\n* Copyright:: 2013, Denny Schäfer\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apache2",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/database",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mysql",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mysql_connector",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/postgresql",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "recommends": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": ">= 0.0.0"
    }
  ],
  "chef_recipes": {
    "confluence": "Installs/configures Atlassian Confluence",
    "confluence::apache2": "Installs/configures Apache 2 as proxy (ports 80/443)",
    "confluence::database": "Installs/configures MySQL/Postgres server, database, and user for Confluence",
    "confluence::linux_cluster-standalone": "Installs/configures Confluence Cluster via Linux standalone archive",
    "confluence::linux_cluster-war": "Deploys Confluence Cluster WAR on Linux",
    "confluence::linux_installer": "Installs/configures Confluence via Linux installer",
    "confluence::linux_standalone": "Installs/configures Confluence via Linux standalone archive",
    "confluence::linux_war": "Deploys Confluence WAR on Linux",
    "confluence::tomcat_configuration": "Configures Confluence's built-in Tomcat",
    "confluence::windows_cluster-standalone": "Installs/configures Confluence Cluster via Windows standalone archive",
    "confluence::windows_cluster-war": "Deploys Confluence Cluster WAR on Windows",
    "confluence::windows_installer": "Installs/configures Confluence via Windows installer",
    "confluence::windows_standalone": "Installs/configures Confluence via Windows standalone archive",
    "confluence::windows_war": "Deploys Confluence WAR on Windows"
  }
}