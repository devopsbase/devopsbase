{
  "name": "kvexpress Chef cookbook",
  "chef_cookbook_name": "kvexpress",
  "revision": "1.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/kvexpress",
    "https://supermarket.chef.io/cookbooks/kvexpress/download",
    "https://supermarket.chef.io/cookbooks/kvexpress/versions/1.1.0",
    "https://supermarket.chef.io/cookbooks/kvexpress/versions/1.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/kvexpress/versions/1.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/kvexpress",
    "https://supermarket.chef.io/api/v1/cookbooks/kvexpress/versions/1.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/kvexpress",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/kvexpress/versions/1.1.0/download",
  "deprecated": false,
  "created": "2016-01-26T17:20:04.030Z",
  "updated": "2016-04-20T21:42:58.357Z",
  "description": "Installs/Configures kvexpress",
  "maintainer": {
    "name": "darron",
    "email": "darron@froese.org"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 2650,
  "downloads_count_revision": 101,
  "repository_url": "https://github.com/DataDog/kvexpress-cookbook",
  "issues_url": "https://github.com/DataDog/kvexpress-cookbook/issues",
  "chef_source_url": "https://github.com/DataDog/kvexpress-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "kvexpress Cookbook\n=============\nInstalls [kvexpress](https://github.com/DataDog/kvexpress) and provides an LWRP to use it from within Chef.\n\nRequirements\n------------\n* Consul\n* Ubuntu\n\nIf you're not using Ubuntu - you can download [binary releases from Github](https://github.com/DataDog/kvexpress/releases).\n\nAttributes\n----------\n```ruby\ndefault['kvexpress']['version'] = '1.9-1'\ndefault['datadog']['url'] = 'https://app.datadoghq.com'\n\n# Where to place the JSON watches.\ndefault['consul']['config_dir'] = '/etc/consul.d'\n\n# If you're using Consul ACLs to protect the 'kvexpress/' KV space and kvexpress::server_config:\n# default['consul']['acl']['kvexpress'] = 'acl-goes-here'\n\n# If you're using the Datadog API to send events and kvexpress::server_config:\n# default['datadog']['api_key'] = 'api_key_goes_here'\n# default['datadog']['application_key'] = 'app_key_goes_here'\n\n# If you're using the Datadog agent:\ndefault['kvexpress']['dogstatsd'] = false\n```\n\nDefault Usage with a Consul watch\n-----\nUse `kvexpress::default` to install the binary.\n\nUse the LWRP to get configuration from Consul during a Chef run - here's an example kvexpress resource:\n\n```ruby\nkvexpress 'consul_dns_hosts' do\n  location '/etc/hosts.consul'\n  compress true\n  key 'hosts'\n  mode '00644'\n  command 'sudo pkill -HUP dnsmasq'\n  notifies :reload, 'service[consul]', :delayed\nend\n```\n\nDuring the Chef run, that resource will do the following:\n\n1. If there's no file at `/etc/hosts.consul`, it will try to download the key `kvexpress/hosts/data` and save it. It will fail silently if there's no key there - that's by design.\n2. It will create a Consul watch inside of `/etc/consul.d` and reload Consul so any updates are automatically replicated.\n3. If it saves a new file, it will send a SIGHUP to dnsmasq to reload it.\n\nThe Consul watch will look something like this:\n\n```json\n{\n  \"watches\": [\n    {\n      \"type\": \"key\",\n      \"key\": \"/kvexpress/hosts/checksum\",\n      \"handler\": \"kvexpress out -k hosts -f /etc/hosts.consul -l 10 -c 00644 -e 'sudo pkill -HUP dnsmasq' -z true\"\n    }\n  ]\n}\n```\n\nIf you don't use Chef - you can manually create the JSON needed for the Consul watch - use the above as a template.\n\nAd-Hoc Usage with Consul exec\n-----\n\nDetailed [here](https://github.com/DataDog/kvexpress#ad-hoc-usage-with-consul-exec).\n\n## Contributing\n\nWe love pull requests from anyone. [Details are available here](https://github.com/DataDog/kvexpress-cookbook/blob/master/CONTRIBUTING.md).\n\n## Code of Conduct\n\nThis project adheres to the [Open Code of Conduct][code-of-conduct]. By participating, you are expected to honor this code.\n[code-of-conduct]: http://todogroup.org/opencodeofconduct/#kvexpress/darron@froese.org\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "kvexpress::default": "Installs/configures kvexpress"
  }
}