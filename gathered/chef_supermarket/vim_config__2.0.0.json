{
  "name": "vim_config Chef cookbook",
  "chef_cookbook_name": "vim_config",
  "revision": "2.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/vim_config",
    "https://supermarket.chef.io/cookbooks/vim_config/download",
    "https://supermarket.chef.io/cookbooks/vim_config/versions/2.0.0",
    "https://supermarket.chef.io/cookbooks/vim_config/versions/2.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/vim_config/versions/2.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/vim_config",
    "https://supermarket.chef.io/api/v1/cookbooks/vim_config/versions/2.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/vim_config",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/vim_config/versions/2.0.0/download",
  "deprecated": false,
  "created": "2014-06-17T18:45:09.072Z",
  "updated": "2015-04-28T15:12:54.880Z",
  "description": "Configures vim and installs vim plugins",
  "maintainer": {
    "name": "promisedlandt",
    "email": "cookbooks@promisedlandt.de"
  },
  "license": "MIT",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 1456316,
  "downloads_count_revision": 1263036,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Description\n\nThis cookbook helps you manage your vim plugins and configuration.\n\n# Update notes from previous versions\n\n  * Downloading plugins from the official site has been deprecated. It still works (unless you let this cookbook manage your plugin folder), but is no longer documented. Use [vim-scripts](https://github.com/vim-scripts) instead.\n  * Config file modes \"concatenate\" and \"delegate\" deprecated. Still works, but undocumented.\n\n# Examples\n\n```ruby\n# Install the nerdcommenter and endwise plugins via git\nnode.set[:vim_config][:bundles][:git] = [ \"git://github.com/scrooloose/nerdcommenter.git\",\n                                          \"git://github.com/tpope/vim-endwise.git\" ] \n\n# Install the vim-ack plugin via mercurial\nnode.set[:vim_config][:bundles][:hg] = [ \"https://bitbucket.org/delroth/vim-ack\" ]\n\n# Download our vimrc from github\nnode.set[:vim_config][:config_file_mode] = :remote_file\nnode.set[:vim_config][:remote_config_url] = \"https://raw.github.com/promisedlandt/dotfiles/.vimrc\"\n\n# Execute\ninclude_recipe \"vim_config\"\n```\n\n# Platforms\n\nTested on Ubuntu and Debian. Check [.kitchen.yml](https://github.com/promisedlandt/cookbook-vim_config/.kitchen.yml) for the exact versions tested.\n\n# Prerequisites\n\nVim configuration and vim plugins would be silly without vim, but you will have to handle that installation yourself.\n\nGit will be installed via the default git cookbook. If you do not wish this, set `node[:vim_config][:skip_git_installation] = true`.  \nIn case you have queued up any plugins in mercurial repositories, mercurial will be installed. You can prevent this by setting `node[:vim_config][:skip_mercurial_installation] = true`.\n\n# Recipes\n\n## vim_config::default\n\nInstalls git, the plugin manager of your choice, optionally mercurial, all specified plugins and, optionally, your vimrc.\n\n# Attributes\n\nAll attributes are under the `:vim_config` namespace.\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\nbundle_dir | Path where your plugins will be installed to | String | /etc/vim/bundle\nforce_update | Delete installation_dir and bundle_dir before running anything else | Boolean | false\nowner | Owner of all files / directories created by this cookbook | String | root\nowner_group | Group of all files / directories created by this cookbook | String | root\nplugin_manager | Plugin manager to use. Currently supported are \"pathogen\", \"unbundle\" and \"vundle\" | String | pathogen\nmanage_plugin_folder | Delete all plugin folders of plugins not installed by this cookbook | Boolean | false\nconfig_file_mode | Where to get config file from. See [here](https://github.com/promisedlandt/cookbook-vim_config#configuration) | String | template\nconfig_file_path | Full path to the config file as it will end up on the file system | String | [platform dependent](https://github.com/promisedlandt/cookbook-vim_config/blob/master/attributes/default.rb#L16)\nconfig_file_cookbook | Used when config_file_mode is \"cookbook\". Name of the wrapper cookbook to get the config file from | String | nil\n\nPlugin bundle attributes are under the `[:vim_config][:bundles]` namespace.\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\ngit | Array of URLs of plugins to install via git | Array | []\nhg | Array of URLs of plugins to install via mercurial | Array | []\n\n# Configuration\n\nThere are three ways to get your configuration file installed.\n\n## Via wrapper cookbook\n\nSet `node[:vim_config][:config_file_mode] = :cookbook`, `node[:vim_config][:config_file_template]` to the name of the template file to use and `node[:vim_config][:config_file_cookbook]` to the name of your wrapper cookbook.\n\n**This is my preferred way of including your vimrc**\n\nAn example wrapper cookbook can be found [here](https://github.com/promisedlandt/cookbook-role_vim)\n\n## Via template\n\nSet `node[:vim_config][:config_file_mode]` to `:template` (or don't set it at all, since `:template` is the default).\n\nThen fork this cookbook and copy your vimrc into `templates/default/vimrc.local.erb`.\n\n## Via remote file\n\nSet `node[:vim_config][:config_file_mode]` to `:remote_file`, then set `node[:vim_config][:remote_config_url]` to the URL of your vimrc.\n\n# Plugins\n\nPlugins will be installed into a \"bundle\" directory under your installation directory by default. Feel free to change this by setting `node[:vim_config][:bundle_dir]`.\n\n## Plugin Manager\n\nSet the plugin manager in `node[:vim_config][:plugin_manager]`. One of `:pathogen`, `:unbundle` or `:vundle`.\n\nThe selected plugin manager will be installed automatically, but you will have to manually edit your vimrc according to your plugin manager's instructions.\n\n# Git\n\nFill the `node[:vim_config][:bundles][:git]` array with URLs to git repositories of plugins you want to use, e.g.\n\n    default_attributes  vim_config: { bundles: { \n                                               git: [ \"git://github.com/scrooloose/nerdcommenter.git\",\n                                                      \"git://github.com/tpope/vim-endwise.git\" ] \n    }}\n\n# Mercurial\n\nFill the `node[:vim_config][:bundles][:hg]` array with URLs to mercurial repositories of plugins you want to use, e.g.\n\n```ruby\ndefault_attributes  vim_config: { bundles: { \n  hg: [ \"https://bitbucket.org/delroth/vim-ack\" ] \n}}\n```\n\nThis needs the mercurial LWRP, so make sure to include the [mercurial cookbook](http://community.opscode.com/cookbooks/mercurial).\n\n\n# Resources / Providers\n\nIf you prefer this cookbook to not manage your stuff, you can just use the LWRPs to manage your plugins.\n\n## vim_config_git\n\nInstalls a vim plugin from a git source.\n\n### Actions\n\nName | Description | default?\n-----|-------------|---------\ncreate | Downloads and installs the plugin | default\ndelete | Deletes the plugin folder | \n\n### Attributes\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\nrepository | URL to the repository | String | name\nreference | branch | String  | master\n\n### Examples\n\n```ruby\n# Let's install syntastic\nvim_config_git \"https://github.com/scrooloose/syntastic\"\n\n# Let's install the \"shellslash_fix\" branch of syntastic\nvim_config_git \"https://github.com/scrooloose/syntastic\" do\n  reference \"shellslash_fix\"\nend\n```\n\n## vim_config_mercurial\n\nInstalls a vim plugin from a mercurial source\n\n### Actions\n\nName | Description | default?\n-----|-------------|---------\ncreate | Downloads and installs the plugin | default\ndelete | Deletes the plugin folder | \n\n### Attributes\n\nAttribute | Description | Type | Default\n----------|-------------|------|--------\nrepository | URL to the repository | String | name\nreference | branch | String, Integer  | tip\n\n### Examples\n\n```ruby\n# Let's install gundo\nvim_config_mercurial \"http://bitbucket.org/sjl/gundo.vim\"\n\n# Let's install the \"nonexistentexample\" branch of gundo\nvim_config_mercurial \"http://bitbucket.org/sjl/gundo.vim\" do\n  reference \"nonexistentexample\"\nend\n```\n\nAcknowledgments\n===============\n\nIt all clicked for me when I read Tammer Saleh's [\"The Modern Vim Config with Pathogen\"](http://tammersaleh.com/posts/the-modern-vim-config-with-pathogen).  \nThe article got me started with [pathogen](https://github.com/tpope/vim-pathogen), using [this script](https://gist.github.com/593551) to manage my plugins.\n\nAll handling of the plugins from vim.org is copied and only slightly modified from that script, which was created by [Daniel C](https://github.com/theosp).\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/git",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mercurial",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}