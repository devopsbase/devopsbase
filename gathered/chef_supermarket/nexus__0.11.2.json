{
  "name": "nexus Chef cookbook",
  "chef_cookbook_name": "nexus",
  "revision": "0.11.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/nexus",
    "https://supermarket.chef.io/cookbooks/nexus/download",
    "https://supermarket.chef.io/cookbooks/nexus/versions/0.11.2",
    "https://supermarket.chef.io/cookbooks/nexus/versions/0.11.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/nexus/versions/0.11.2",
    "https://supermarket.chef.io/api/v1/cookbooks/nexus",
    "https://supermarket.chef.io/api/v1/cookbooks/nexus/versions/0.11.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/nexus",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/nexus/versions/0.11.2/download",
  "deprecated": false,
  "created": "2012-08-29T01:32:29.000Z",
  "updated": "2014-06-05T16:55:29.000Z",
  "description": "Installs/Configures nexus",
  "maintainer": {
    "name": "reset",
    "email": "kallan@riotgames.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 17,
  "downloads_count": 31417101,
  "downloads_count_revision": 1253657,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nInstalls and configures Sonatype Nexus and Nginx. Nginx is installed from source with the http\\_ssl\\_module.\nNginx is configured to run as a proxy for Nexus using HTTPS/SSL.\n\nRequirements\n============\n\nPlatform: \n\n* Ubuntu\n* CentOS\n\nThe following cookbooks are dependencies:\n\n* java\n* ark\n* nginx\n\nResources/Providers\n===================\n\n## nexus\\_plugin\n\nInstalls a Nexus plugin by creating a symlink of a named plugin from the Nexus' `optional-plugins` directory into the\nNexus' `plugin-repositroy` directory.\n\n### Actions\nAction  | Description         | Default\n------- |-------------        |---------\ninstall | Installs the plugin | Yes\n\n### Attributes\nAttribute  | Description                   | Type    | Default\n---------  |-------------                  |-----    |--------\nname       | Name of the plugin to install | String  | name\n\n## nexus\\_repository\n\nResource provider for creating and deleting Neuxs repositories.\n\n### Actions\nAction  | Description              | Default\n------- |-------------             |---------\ncreate  | Creates a new repository | Yes\ndelete  | Deletes a repository     |\nupdate  | Updates a repository     | \n\n### Attributes\nAttribute  | Description                   \t\t\t               | Type                  | Default\n---------  |-------------                  \t\t\t               |-----                  |--------\nname       | Name of the repository to create/delete               | String                | name\ntype       | The type of repository - either \"hosted\" or \"proxy\".  | String                |\nurl        | The url used for a proxy repository.                  | String                |\npublisher  | Whether this repository is a publisher of artifacts.  | TrueClass, FalseClass |\nsubscriber | Whether this repository is a subscriber to artifacts. | TrueClass, FalseClass |\n\n## nexus\\_settings\n\nResource provider for modifying the global Nexus settings.\n\n### Actions\nAction  | Description              \t\t\t\t\t\t | Default\n------- |-------------             \t\t\t\t\t\t |---------\nupdate  | Updates a global Nexus setting to a new value. | Yes\n\n### Attributes\nAttribute  | Description                   \t\t\t \t\t\t\t  | Type                          | Default\n---------  |-------------                  \t\t\t \t\t\t\t  |-----                          |--------\npath       | The element of the settings that is going to be changed. | String                        | name\nvalue      | The new value to update the path to.                     | String, TrueClass, FalseClass |\n\n## nexus\\_user\n\nResource provider for creating, deleting, and modifying Nexus user accounts.\n\n### Actions\nAction  \t\t| Description              \t\t\t\t\t\t | Default\n------- \t\t|-------------             \t\t\t\t\t\t |---------\ncreate  \t\t| Creates a new Nexus user.                      | Yes\ndelete          | Deletes a Nexus user.                          | \nupdate          | Updates a Nexus user with updated information  |\nchange_password | Changes a Nexus user's password                |\n\n### Attributes\nAttribute    | Description                   \t\t\t \t\t\t\t| Type                  | Default\n---------    |-------------                  \t\t\t \t\t\t\t|-----                  |--------\nusername     | The element of the settings that is going to be changed. | String                | name\nfirst_name   | The first name of the user.                              | String                |\nlast_name    | The last name of the user.                               | String                |\nemail        | The email address of the user.                           | String                |\nenabled      | Whether or not this user is enabled or disabled.         | TrueClass, FalseClass |\npassword     | The current (or new) password of the user.               | String                |\nold_password | The old password of the user, used in change_password.   | String                |\nroles        | A list of roles (permissions) to apply to the user.      | Array                 |\n\n## nexus\\_license\n\nResource provider for installing a license file into Nexus. This LWRP uses an encrypted data bag namespaced\nunder nexus license.\n\n\tknife data bag create nexus license -c <your chef config> --secret-file<your secret file>\n\nYour data bag should look like the following:\n\n\t{\n\t  \"id\": \"license\"\n\t  \"file\": \"<base64 encoded string of your .lic file>\"\n\t}\n\nIt is *very important* that you base64 encode your Nexus license before storage inside the data bag.\n\t\n\topenssl base64 -in /path/to/your/license.lic\n\n### Actions\nAction   | Description              \t\t\t\t\t\t | Default\n-------  |-------------             \t\t\t\t\t\t |---------\ninstall  | Installs a license file into the server.          | Yes\n\n### Attributes\nAttribute  | Description                   \t\t\t \t\t\t\t           | Type                          | Default\n---------  |-------------                  \t\t\t \t\t\t\t           |-----                          |--------\nname       | Some useful information about the license. Similar to ruby_block. | String                        | name\n\n## nexus\\_proxy\n\nResource provider for manipulating the Nexus' settings for Smart Proxy.\n\n### Actions\nAction  \t\t        | Description              \t\t\t\t\t\t | Default\n------- \t\t        |-------------             \t\t\t\t\t\t |---------\nenable  \t\t        | Enables the Smart Proxy functionality.         | Yes\ndisable  \t\t        | Disables the Smart Proxy functionality.        | \nadd_trusted_key  \t\t| Adds a trusted key to the server.              | \ndelete_trusted_key  \t| Removes a trusted key from the server.         | \n\n\n### Attributes\nAttribute    | Description                   \t\t\t \t\t\t\t                      | Type                  | Default\n---------    |-------------                  \t\t\t \t\t\t\t                      |-----                  |--------\nname         | Some useful information about the proxy. Similar to ruby_block.                | String                | name\nid           | Used for delete_trusted_key. The id of the key to delete.                      | String                |\nhost         | The host to use for Smart Proxy. Used for enable.                              | String                |\nport         | The port to use for Smart Proxy. Used for enable.                              | Fixnum                |\ncertificate  | The certificate of another Nexus to add. Used for add_trusted_key.             | String                |\ndescription  | The description of the other Nexus. Used for add_trusted_key.                  | String                |\n\n\nAttributes\n==========\n\nThe following attributes are set under the `nexus` namespace:\n\n* version - sets the version to install\n* user - sets the user to install nexus under\n* group - sets the group to install nexus under\n* url - sets the URL where the nexus package is located\n* port - the port to run nexus on\n* host - the hostname to use for nexus\n* path - the `user` home directory\n* name - the name of the Nexus\n* home - the installation directory for nexus. Uses name.\n* conf_dir - the above home/conf\n* bin_dir - the above home/bin\n* work_dir - the above path/sonatype-work/nexus\n* plugins - an Array of Nexus plugins that will be installed by the default recipe.\n* create_repositories - an Array of repositories that will be created by the default recipe.\n\nThe following attributes are set under `nexus::nginx` namespace:\n\n* listen\\_port - the port to listen on for nginx\n* server\\_name - the name of the nginx server\n* options - used to generate options in the nginx conf file\n\nThe following attributes are set under the `nexus::cli` namespace:\n\n* url - The url that the nexus_cli gem will connect to. The default recipe uses this to configure itself, so localhost.\n* repository - The repository that nexus_cli gem will use for push / pull operations. A requirement of nexus_cli, not used by this cookbook.\n* packages - required packages to install for using the `chef_gem \"nexus_cli\"`\n\nThe following attributes are set under the `nexus::repository` namespace:\n\n* create_hosted - An Array of repository names that will be used to create Hosted Repositories.\n* create_proxy - A Hash of repository names to urls that will be used to create Proxy Repositories.\n* publishers - An Array of repository names that will be set to publish artifacts (Smart Proxy).\n* subscribers - An Array of repository names that will be set to subscribe to artifacts (Smart Proxy).\n\nThe following attributes are set under the `nexus::smart_proxy` namespace:\n\n* enable - true if we want to enable Smart Proxy, false if not.\n* trusted_servers - An Array of IP addresses of other Nexus servers that have a key we should trust. Used in conjunction with the `certificates` data bag.\n* host - The host to use for Smart Proxy configuration.\n* port - The port to use for Smart Proxy configuration.\n\nSSL\n===\n\nThe files directory contains a self-signed certificate that is installed to `nginx::dir/shared/certificates/nexus-proxy.pem`\nReplace this file with your own certificates for a production environment.\n\nNexus Usage\n===========\n\nMany of the LWRPs utilize the Nexus CLI gem to interact with the Nexus server. In order to use them, you must first\ncreate an [encrypted data bag](http://wiki.opscode.com/display/chef/Encrypted+Data+Bags) that contains the credentials\nfor your Nexus server.\n\n\tknife data bag create nexus credentials -c <your chef config> --secret-file=<your secret file>\n\nYour data bag should look like the following:\n\n\t{\n\t  \"id\": \"credentials\",\n\t  \"default_admin\": {\n\t    \"username\": \"admin\",\n\t    \"password\": \"admin123\"\n\t  },\n\t  \"updated_admin\": {\n\t    \"username\": \"admin\",\n\t    \"password\": \"customize_me\"\n\t  }\n\t}\n\nOut-of-the-box, Nexus comes configured with a specific administrative username/password combo. The default recipe\nchange the password for that account to the password configured in the `updated_admin` element.\n\nSmart Proxy Usage\n=================\n\nWhen Smart Proxy is enabled (`nexus::pro` recipe), repositories need to be set to become publishers or subscribers. In\naddition, we need to store the certificates of other Nexus servers on the server that Smart Proxy is being enabled on.\n\n\tknife data bag create nexus certificates -c <your chef config> --secret-file=<your secret file>\n\nYour data bag will store a certificate and description based on the IP address of other Nexus servers and should look like the following:\n\n\t{\n\t  \"id\": \"certificates\",\n\t  \"192.168.0.1\": {\n\t    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\\n-----END CERTIFICATE-----\\n\",\n\t    \"description\": \"192.168.0.1 Trusted Key\"\n\t  },\n      \"192.168.0.2\": {\n        \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\\n-----END CERTIFICATE-----\\n\",\n        \"description\": \"192.168.0.2 Trusted Key\"\n      }\n\t}\n\nOverride the `nexus::repository` attributes to set these appropriately for your Nexus.\n\nUsage\n=====\n\nSimply add the \"nexus::default\" recipe to the node where you want Sonatype Nexus installed.\n\nTo install Nexus Pro and perform some extra steps, use the \"nexus::pro\" recipe. Most likely, all you'll need is\nto override the following attributes like so:\n\n    :nexus => {\n      :version => '2.1.2',\n      :checksum => 'new checksum',\n      :url => 'some/url/to/nexus-professional-2.1.2-bundle.tar.gz',\n    }\n\nLicense and Author\n==================\n\nAuthor:: Kyle Allan (<kallan@riotgames.com>)\nAuthor:: Charles Scott (<connaryscott@gmail.com>)\nAuthor:: Greg Schueler (<greg.schueler@gmail.com>)\nAuthor:: Seth Chisamore (<schisamo@opscode.com>)\n\nCopyright 2011, DTO, Inc.\nCopyright 2010, Opscode, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ark",
      "revision": "~> 0.0.11",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": "~> 1.5.2",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nginx",
      "revision": "~> 0.101.6",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/bluepill",
      "revision": "~> 1.0.6",
      "self_resolve": true
    }
  ]
}