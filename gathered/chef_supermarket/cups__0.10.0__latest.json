{
  "name": "cups Chef cookbook",
  "chef_cookbook_name": "cups",
  "revision": "0.10.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/cups",
    "https://supermarket.chef.io/cookbooks/cups/download",
    "https://supermarket.chef.io/cookbooks/cups/versions/0.10.0",
    "https://supermarket.chef.io/cookbooks/cups/versions/0.10.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/cups/versions/0.10.0",
    "https://supermarket.chef.io/api/v1/cookbooks/cups",
    "https://supermarket.chef.io/api/v1/cookbooks/cups/versions/0.10.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/cups",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/cups/versions/0.10.0/download",
  "deprecated": false,
  "created": "2014-12-05T00:57:34.126Z",
  "updated": "2016-04-14T18:18:29.991Z",
  "description": "Installs/Configures cups",
  "maintainer": {
    "name": "biolauniversity",
    "email": "jim.reeves@biola.edu"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 1399466,
  "downloads_count_revision": 185,
  "repository_url": "https://github.com/biola/chef-cups",
  "issues_url": "https://github.com/biola/chef-cups/issues",
  "chef_source_url": "https://github.com/biola/chef-cups",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "cups Cookbook\n=============\nInstalls the cups package, if needed, starts the cups service, and configures printers on target systems.\n\nAttributes\n----------\n\n#### cups::default\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['cups']['printers']</tt></td>\n    <td>array</td>\n    <td>List of printers to configure on the system. See example in the usage section below.</td>\n    <td><tt>[]</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['cups']['systemgroups']</tt></td>\n    <td>string</td>\n    <td>Defines authorized system-group users in /etc/cups/cupsd.conf file.</td>\n    <td><tt>sys root</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['cups']['share_printers']</tt></td>\n    <td>boolean</td>\n    <td>Should cups share printers?</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['cups']['require_encryption']</tt></td>\n    <td>boolean</td>\n    <td>Should cups require SSL/TLS for client communication?  This requires both <tt>['cups']['cert_file']</tt> and <tt>['cups']['key_file']</tt> to be set.</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['cups']['cert_file']</tt></td>\n    <td>string</td>\n    <td>The full path to the SSL certificate file to be used by cups. **Note:** if an intermediate certificate is required by the issuing certificate authority, the intermediate certificate must be appended to the server certificate file as cups does not support separate intermediate and certificate files.</td>\n    <td><tt>nil</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['cups']['key_file']</tt></td>\n    <td>string</td>\n    <td>The full path to the SSL key file to be used by cups.</td>\n    <td><tt>nil</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['cups']['server_aliases']</tt></td>\n    <td>array</td>\n    <td>List of allowed domains for remote administration</td>\n    <td><tt>[]</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['cups']['require_authentication']</tt></td>\n    <td>boolean</td>\n    <td>Specifies whether authentication is required to access the CUPS website and printers.</td>\n    <td><tt>false</tt></td>\n  </tr>\n</table>\n\n#### cups::airprint\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['cups']['airprint_generate']['git_url']</tt></td>\n    <td>string</td>\n    <td>URL to the airprint file generator repo.</td>\n    <td><tt>https://github.com/tjfontaine/airprint-generate.git</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['cups']['airprint_generate']['git_revision']</tt></td>\n    <td>string</td>\n    <td>Git repo tag/version to pull.</td>\n    <td><tt>master</tt></td>\n  </tr>\n</table>\n\n#### cups::default_printer\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['cups']['default_printer']</tt></td>\n    <td>string</td>\n    <td>Sets the system-wide default printer.</td>\n    <td><tt>nil</tt></td>\n  </tr>\n</table>\n\nUsage\n-----\n#### cups::default\n\nInclude `cups` in your node's `run_list`:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[cups]\"\n  ]\n}\n```\n\nSAMPLE format for printer entries:\n```json\n\"cups\": {\n  \"printers\": [\n    {\n      \"printer1\": {\n        \"uri\": \"lpd://FQDN\",\n        \"desc\": \"HP LaserJet xx\",\n        \"model\": \"textonly.ppd\",    #textonly.ppd is set as the default by the recipe.\n        \"location\": \"Front Office\"\n      }\n    },\n    {\n      \"printer2\": {\n        \"uri\": \"lpd://xxx.xxx.xxx.xxx\"\n      }\n    },\n    {\n      \"printer3\": {\n        \"uri\": \"lpd://myprinter.mydomain\"\n      }\n    }\n  ]\n}\n```\n\n##### Data bags\n\nSet the attribute `node['cups']['printer_bag']` to the name of your data bag.\n\nData bag entries use this format:\n```\n{\n  \"id\": \"printer1\",\n  \"model\": \"textonly.ppd\",\n  \"uri\": \"lpd://FQDN\",\n  \"location\": \"Front Office\",\n  \"desc\": \"HP LaserJet xx\"\n}\n```\n\n#### cups::airprint\nConfigures CUPS to advertise printers via AirPrint.\n\n#### cups::default_printer\nSets the system-wide default printer (via the `node['cups']['default_printer']` attribute).\n\n**CAUTION** -- in its current form, this will completely overwrite the /etc/cups/lpoptions file.\n\n\nContributing\n------------\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write you change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\n Copyright 2015, Biola University\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "smartos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/git",
      "revision": "~> 4.0",
      "self_resolve": true
    }
  ]
}