{
  "name": "windows_ad Chef cookbook",
  "chef_cookbook_name": "windows_ad",
  "revision": "0.5.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/windows_ad",
    "https://supermarket.chef.io/cookbooks/windows_ad/download",
    "https://supermarket.chef.io/cookbooks/windows_ad/versions/0.5.1",
    "https://supermarket.chef.io/cookbooks/windows_ad/versions/0.5.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/windows_ad/versions/0.5.1",
    "https://supermarket.chef.io/api/v1/cookbooks/windows_ad",
    "https://supermarket.chef.io/api/v1/cookbooks/windows_ad/versions/0.5.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System/Windows"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/windows_ad",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/windows_ad/versions/0.5.1/download",
  "deprecated": false,
  "created": "2015-10-17T20:49:37.938Z",
  "updated": "2016-04-26T22:18:13.642Z",
  "description": "Installs/Configures windows active directory",
  "maintainer": {
    "name": "lolindirfalasion",
    "email": "dgroh@arch.tamu.edu"
  },
  "license": "MIT",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 16,
  "downloads_count": 22951,
  "downloads_count_revision": 1220,
  "repository_url": "https://github.com/TAMUArch/cookbook.windows_ad",
  "issues_url": "https://github.com/TAMUArch/cookbook.windows_ad/issues",
  "chef_source_url": "https://github.com/TAMUArch/cookbook.windows_ad",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "windows_ad Cookbook\n=================\n\n[![Join the chat at https://gitter.im/TAMUArch/cookbook.windows_ad](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/TAMUArch/cookbook.windows_ad?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\nThis cookbook installs Active Directory Domain Services on Windows Server including all necessary roles and features.\n\nRequirements\n============\n\nPlatform\n--------\n\n* Windows workstations (join and unjoin)\n* Windows Server 2008 R2 Family\n* Windows Server 2012 Family\n\nCookbooks\n---------\n\n- Windows - Official windows cookbook from opscode https://github.com/opscode-cookbooks/windows.git\n\nUsage\n==========\n#### windows_ad::default\nThe windows_ad::default recipe installs the required roles and features to support a domain controller.\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[windows_ad]\"\n  ]\n}\n```\n\nResource/Provider\n=================\n\n`computer`\n--------\n\n### Actions\n- :create: Adds a computer object to Active Directory\n- :delete: Remove a computer object from Active Directory.\n- :join: Joins computer to domain.\n- :modify: Modifies an existing computer object.\n- :move: Rename a computer object without moving it in the directory tree, or move an object from its current location in the directory to a new location within a single domain controller.\n- :unjoin: Removes computer from domain.\n\n### Attribute Parameters\n\n- name: name attribute.  Name of the computer object.\n- domain_name: FQDN\n- domain_pass: domain password\n- domain_user: domain user\n- ou: Organization Unit path where object is to be located.\n- options: ability to pass additional options http://technet.microsoft.com/en-us/library/cc754539.aspx\n- cmd_user: user under which the interaction with AD should happen\n- cmd_pass: password for user specified in cmd_user (only needed if user requires password)\n- cmd_domain: domain of the user specified in cmd_user (only needed if user is a domain account)\n- restart: allows preventing reboot after join or unjoin action. Default true to reboot.\n\n### Examples\n\n    # Create computer \"workstation1\" in the Computers OU\n    windows_ad_computer \"workstation1\" do\n      action :create\n      domain_name \"contoso.com\"\n      ou \"computers\"\n    end\n\n    # Create computer \"workstation1\" in the Computers OU with description of \"Computer\"\n    windows_ad_computer \"workstation1\" do\n      action :create\n      domain_name \"contoso.com\"\n      ou \"computers\"\n      options ({ \"desc\" => \"computer\" })\n    end\n\n    # Create computer \"workstation1\" in the Computers OU using domain admin account\n    windows_ad_computer \"workstation1\" do\n      action :create\n      domain_name \"contoso.com\"\n      ou \"computers\"\n      cmd_user \"Administrator\"\n      cmd_pass \"password\"\n      cmd_domain \"contoso.com\"\n    end\n    \n    # Join Contoso.com domain\n    windows_ad_computer 'Workstation' do\n      action :join\n      domain_pass 'Passw0rd'\n      domain_user 'Administrator'\n      domain_name 'contoso.com'\n    end\n\n    # Join Contoso.com domain without restart\n    windows_ad_computer \"contoso.com\" do\n      action :join\n      domain_pass 'Passw0rd'\n      domain_user 'Administrator'\n      domain_name 'contoso.com'\n      restart false\n    end\n\n    # Join Contoso.com domain with OU\n    windows_ad_computer \"contoso.com\" do\n      action :join\n      domain_pass 'Passw0rd'\n      domain_user 'Administrator'\n      domain_name 'contoso.com'\n      ou \"Servers/Web\"\n    end\n\n    # Unjoin Contoso.com domain\n    windows_ad_computer \"contoso.com\" do\n      action :unjoin\n      domain_pass 'Passw0rd'\n      domain_user 'Administrator'\n      domain_name 'contoso.com'\n    end\n\n    # Unjoin Contoso.com domain without restart\n    windows_ad_computer \"contoso.com\" do\n      action :unjoin\n      domain_pass 'Passw0rd'\n      domain_user 'Administrator'\n      domain_name 'contoso.com'\n      restart false\n    end\n\n`contact`\n---------\n\n### Actions\n- :create: Adds a contact object to Active Directory\n- :delete:  Remove a contact object from Active Directory.\n- :modify: Modifies an existing contact object.\n- :move:  Rename a contact object without moving it in the directory tree, or move an object from its current location in the directory to a new location within a single domain controller.\n\n### Attribute Parameters\n\n- name: name attribute.  Name of the contact object.\n- domain_name: FQDN\n- ou: Organization Unit path where object is to be located.\n- options: ability to pass additional options http://technet.microsoft.com/en-us/library/cc771883.aspx\n- cmd_user: user under which the interaction with AD should happen\n- cmd_pass: password for user specified in cmd_user (only needed if user requires password)\n- cmd_domain: domain of the user specified in cmd_user (only needed if user is a domain account)\n\n\n### Examples\n\n    # Create contact \"Bob Smith\" in the Users OU with firstname \"Bob\" and lastname \"Smith\"\n    windows_ad_contact \"Bob Smith\" do\n      action :create\n      domain_name \"contoso.com\"\n      ou \"users\"\n      options ({ \"fn\" => \"Bob\",\n                 \"ln\" => \"Smith\"\n               })\n    end\n\n    # Create contact \"Bob Smith\" in the Users OU with firstname \"Bob\" and lastname \"Smith\"\n    # using domain admin account\n    windows_ad_contact \"Bob Smith\" do\n      action :create\n      domain_name \"contoso.com\"\n      ou \"users\"\n      options ({ \"fn\" => \"Bob\",\n                 \"ln\" => \"Smith\"\n               })\n      cmd_user \"Administrator\"\n      cmd_pass \"password\"\n      cmd_domain \"contoso.com\"\n    end\n\n\n`domain`\n--------\n\n### Actions\n- :create: Installs a forest, domain, or domain controller\n- :delete: Removes a domain controller from domain\n\n### Attribute Parameters\n\n- name: name attribute.  Name of the forest/domain to operate against.\n- type: type of install. Valid values: forest, domain, read-only.\n- safe_mode_pass: safe mode administrative password.\n- domain_user: User account to join the domain or to create a domain controller. **Required**: for `:create` except on `type` `forest` on windows 2012 and above.\n- domain_pass: User password to join the domain or to create a domain controller. **Required**: for `:create` except on `type` `forest` on windows 2012 and above.\n- local_pass: Local Administrator Password for removing domain controller.\n- replica_type: For Windows Server 2008, specifies installing new or additional domain controller.  Valid values: domain, replica.\n- options: additional options as needed by AD DS Deployment http://technet.microsoft.com/en-us/library/cc732887.aspx for Windows Server 2008 and http://technet.microsoft.com/en-us/library/hh974719.aspx for Windows Server 2012.  Single parameters use nil for key value, see example below.\n\n### Examples\n\n    # Create Contoso.com forest\n    windows_ad_domain \"contoso.com\" do\n      action :create\n      type \"forest\"\n      safe_mode_pass \"Passw0rd\"\n    end\n\n    # Create Contoso.com replica\n    windows_ad_domain \"contoso.com\" do\n      action :create\n      type \"replica\"\n      safe_mode_pass \"Passw0rd\"\n      domain_pass \"Passw0rd\"\n      domain_user \"Administrator\"\n    end\n\n    # Create Contoso.com forest with DNS, Win2008 R2 Operational Mode Windows Server 2008 R2\n    windows_ad_domain \"contoso.com\" do\n      action :create\n      type \"forest\"\n      safe_mode_pass \"Passw0rd\"\n      options ({ \"domainlevel\" => \"4\",\n                 \"forestlevel\" => \"4\",\n                 \"InstallDNS\" => \"yes\"\n               })\n    end\n\n    # Create Contoso.com forest with DNS, Win2008 Operational Mode Windows Server 2012\n    windows_ad_domain \"contoso.com\" do\n      action :create\n      type \"forest\"\n      safe_mode_pass \"Passw0rd\"\n      options ({ \"ForestMode\" => \"Win2008\",\n                 \"InstallDNS\" => nil\n               })\n    end\n\n    # Remove Domain Controller\n    windows_ad_domain \"contoso.com\" do\n      action :delete\n      local_pass \"Passw0rd\"\n    end\n\n`group`\n-------\n\n### Actions\n- :create: Adds a group object to Active Directory\n- :modify: Modifies a group object.\n- :move:  Rename a group object without moving it in the directory tree, or move an object from its current location in the directory to a new location within a single domain controller.\n- :delete:  Remove a group object from Active Directory.\n\n### Attribute Parameters\n\n- name: name attribute.  Name of the group object.\n- domain_name: FQDN\n- ou: Organization Unit path where object is to be located.\n- options: ability to pass additional options http://technet.microsoft.com/en-us/library/cc754037.aspx\n- cmd_user: user under which the interaction with AD should happen\n- cmd_pass: password for user specified in cmd_user (only needed if user requires password)\n- cmd_domain: domain of the user specified in cmd_user (only needed if user is a domain account)\n\n\n### Examples\n\n    # Create group \"IT\" in the Users OU\n    windows_ad_group \"IT\" do\n      action :create\n      domain_name \"contoso.com\"\n      ou \"users\"\n    end\n\n    # Create group \"IT\" in the Users OU with Description \"Information Technology Security Group\"\n    windows_ad_group \"IT\" do\n      action :create\n      domain_name \"contoso.com\"\n      ou \"users\"\n      options ({ \"desc\" => \"Information Technology Security Group\"\n               })\n    end\n\n    # Create group \"IT\" in the Users OU using domain admin account\n    windows_ad_group \"IT\" do\n      action :create\n      domain_name \"contoso.com\"\n      ou \"users\"\n      cmd_user \"Administrator\"\n      cmd_pass \"password\"\n      cmd_domain \"contoso.com\"\n    end\n\n`ou`\n----\n\n### Actions\n- :create: Adds organizational units to Active Directory.\n- :modify: Modifies an organizational unit.\n- :move:  Rename an organizational unit object without moving it in the directory tree, or move an object from its current location in the directory to a new location within a single domain controller.\n- :delete:  Remove an organizational unit object from Active Directory.\n\n### Attribute Parameters\n\n- name: name attribute.  Name of the Organization Unit object.\n- domain_name: FQDN\n- ou: Organization Unit path where object is to be located.\n- options: ability to pass additional options http://technet.microsoft.com/en-us/library/cc770883.aspx\n- cmd_user: user under which the interaction with AD should happen\n- cmd_pass: password for user specified in cmd_user (only needed if user requires password)\n- cmd_domain: domain of the user specified in cmd_user (only needed if user is a domain account)\n\n\n### Examples\n\n    # Create Organizational Unit \"Departments\" in the root\n    windows_ad_ou \"Departments\" do\n      action :create\n      domain_name \"contoso.com\"\n    end\n\n    # Create Organizational Unit \"IT\" in the \"Department\" OUroot\n    windows_ad_ou \"IT\" do\n      action :create\n      domain_name \"contoso.com\"\n      ou \"Departments\"\n    end\n\n    # Create Organizational Unit \"Departments\" in the root using domain admin account\n    windows_ad_ou \"Departments\" do\n      action :create\n      domain_name \"contoso.com\"\n      cmd_user \"Administrator\"\n      cmd_pass \"password\"\n      cmd_domain \"contoso.com\"\n    end\n\n`users`\n-------\n\n### Actions\n- :create: Adds a user object to Active Directory.\n- :modify: Modifies an user object.\n- :move:  Rename an user object without moving it in the directory tree, or move an object from its current location in the directory to a new location within a single domain controller.\n- :delete:  Remove an user object from Active Directory.\n\n### Attribute Parameters\n\n- name: name attribute.  Name of the user object.\n- domain_name: FQDN\n- ou: Organization Unit path where object is located.\n- options: ability to pass additional options http://technet.microsoft.com/en-us/library/cc731279.aspx\n- reverse: allows the reversing of \"First Name Last Name\" to \"Last Name, First Name\"\n- cmd_user: user under which the interaction with AD should happen\n- cmd_pass: password for user specified in cmd_user (only needed if user requires password)\n- cmd_domain: domain of the user specified in cmd_user (only needed if user is a domain account)\n\n### Examples\n\n    # Create user \"Joe Smith\" in the Users OU\n    windows_ad_user \"Joe Smith\" do\n      action :create\n      domain_name \"contoso.com\"\n      ou \"users\"\n      options ({ \"samid\" => \"JSmith\",\n             \"upn\" => \"JSmith@contoso.com\",\n             \"fn\" => \"Joe\",\n             \"ln\" => \"Smith\",\n             \"display\" => \"Smith, Joe\",\n             \"disabled\" => \"no\",\n             \"pwd\" => \"Passw0rd\"\n           })\n    end\n\n    # Create user \"Joe Smith\" in the Users OU using domain admin account\n    windows_ad_user \"Joe Smith\" do\n      action :create\n      domain_name \"contoso.com\"\n      ou \"users\"\n      options ({ \"samid\" => \"JSmith\",\n             \"upn\" => \"JSmith@contoso.com\",\n             \"fn\" => \"Joe\",\n             \"ln\" => \"Smith\",\n             \"display\" => \"Smith, Joe\",\n             \"disabled\" => \"no\",\n             \"pwd\" => \"Passw0rd\"\n           })\n      cmd_user \"Administrator\"\n      cmd_pass \"password\"\n      cmd_domain \"contoso.com\"\n    end\n\n`group_member`\n-------\n\n### Actions\n- :add: Adds a user to a group.\n- :remove: Removes a user from a group.\n\n### Attribute Parameters\n\n- user_name: user name attribute. Name of the user object.\n- group_name: group name attribute. Name of the group object.\n- domain_name: FQDN.\n- user_ou: Organization Unit path where user object is located.\n- group_ou: Organization Unit path where group object is located.\n- cmd_user: user under which the interaction with AD should happen\n- cmd_pass: password for user specified in cmd_user (only needed if user requires password)\n- cmd_domain: domain of the user specified in cmd_user (only needed if user is a domain account)\n\n### Examples\n\n    # Add user \"Joe Smith\" in the Users OU to group \"Admins\" in OU \"AD/Groups\"\n    windows_ad_group_member 'Joe Smith' do\n      action :add\n      group_name  'Admins'\n      domain_name 'contoso.com'\n      user_ou 'users'\n      group_ou 'AD/Groups'\n    end\n\n    # Add user \"Joe Smith\" in the Users OU to group \"Admins\" in OU \"AD/Groups\" using domain admin account\n    windows_ad_group_member 'Joe Smith' do\n      action :add\n      group_name  'Admins'\n      domain_name 'contoso.com'\n      user_ou 'users'\n      group_ou 'AD/Groups'\n      cmd_user \"Administrator\"\n      cmd_pass \"password\"\n      cmd_domain \"contoso.com\"\n    end\n\n\nTesting\n=======\n\n## RSpec\n\nThe libraries provided with the cookbook can be tested using RSpec and the tests in `spec/`.\n```bash\nrspec spec/\n```\n\n## Vagrant\n\nThe cookbook contains a Vagrantfile that can be used to spin up two VMs: (1) a domain controller; (2) a domain member.\nThere is also a test cookbook with two recipes that map to the two VMs. This cookbook is called `test_windows_ad` and can be found under `test/fixtures/test_cookbooks`\n\nEach recipe will make use of a few of the providers that the cookbook exposes to converge the VMs into the desired state.\nAs of now there is no additional testing being done, i.e., if both machines converge successfully, then the current test has passed.\n\n### Requirements\n* Vagrant\n* A windows vagrant box (that is prepared to regenerate SUID on first boot)\n* Vagrant plugins\n  * vagrant-chef-zero\n  * vagrant-omnibus\n  * vagrant-winrm\n* Berkshelf\n\n### Usage\n\nThe vagrant box mentioned in the commands bellow is just meant as an example. It was obtained from https://vagrantcloud.com\nThe virtualbox vagrant provider is also meant as an example, although changing that will require adaptations to the Vagrantfile as well. That is because the Vagrantfile contains configuration specific for that provider.\n\n#### Linux & MacOS X\n\n```bash\n# Install a vagrant box (only need to do that once)\nvagrant box add kensykora/windows_2012_r2_standard\n\n# export variable that will be used in Vagrantfile\nexport VAGRANT_TEST_BOX='kensykora/windows_2012_r2_standard'\n\n# Bundle required cookbooks (this step needs to be repeated eveytime the cookbooks or a dependency changes)\nberks install\nberks vendor test/fixtures/cookbooks \n\n# Spin up domain controller\nvagrant up test-dc           # this will trigger a VM reboot\nvagrant provision test-dc    # this will run chef-client one more time to converge the VM\n\n# Spin up domain member\nvagrant up test-dm\n```\n\n#### Windows\n\nTBD\n\n### Other vagrant actions\n\nList available VMs\n```bash\nvagrant status\n```\n\nConverge an already up (and possible converged VM)\n```bash\nvagrant provision <vm-name>\n```\n\nDestroy a VM\n```bash\nvagrant destroy <vm-name>\n```\n\nContributing\n============\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write you change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n===================\n\nAuthors:: Derek Groh (<dgroh@arch.tamu.edu>)\n          Richard Guin\n          Miroslav Kyurchev (<mkyurchev@gmail.com>)\n          Matt Wrock (<matt@mattwrock.com>)\n          Miguel Ferreira (<miguelferreira@me.com>)\n",
  "requires": [
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 6.1",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/windows",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}