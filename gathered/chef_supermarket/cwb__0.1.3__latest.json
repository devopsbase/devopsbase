{
  "name": "cwb Chef cookbook",
  "chef_cookbook_name": "cwb",
  "revision": "0.1.3",
  "uris": [
    "https://supermarket.chef.io/cookbooks/cwb",
    "https://supermarket.chef.io/cookbooks/cwb/download",
    "https://supermarket.chef.io/cookbooks/cwb/versions/0.1.3",
    "https://supermarket.chef.io/cookbooks/cwb/versions/0.1.3/download",
    "https://supermarket.chef.io/api/v1/cookbooks/cwb/versions/0.1.3",
    "https://supermarket.chef.io/api/v1/cookbooks/cwb",
    "https://supermarket.chef.io/api/v1/cookbooks/cwb/versions/0.1.3/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/cwb",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/cwb/versions/0.1.3/download",
  "deprecated": false,
  "created": "2015-04-25T18:07:40.411Z",
  "updated": "2016-07-25T14:43:33.218Z",
  "description": "Installs/Configures cwb",
  "maintainer": {
    "name": "joe4dev",
    "email": "joel.scheuner.dev@gmail.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 587961,
  "downloads_count_revision": 32,
  "repository_url": "https://github.com/sealuzh/cwb-benchmarks/tree/master/cwb",
  "issues_url": "https://github.com/sealuzh/cwb-benchmarks/issues",
  "chef_source_url": "https://github.com/sealuzh/cwb-benchmarks/tree/master/cwb",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Cloud WorkBench Cookbook (CWB Cookbook) \n\nThis cookbook prepares a machine for CWB benchmarks.\n\n## Attributes\n\n### Logging\n```ruby\ndefault['benchmark']['logging_enabled'] = false\n```\n\n### System Specific\n```ruby\n# This attribute will overwrite owner and group if present\ndefault['benchmark']['ssh_username'] = nil\ndefault['benchmark']['owner'] = 'ubuntu'\ndefault['benchmark']['group'] = 'ubuntu'\n```\n\n## Resource\n\nUse the `cwb_benchmark` resource to define a benchmark. Make sure you place the Ruby implementation of the benchmark within `files/default/benchmark_name.rb`.\nTake care of correct naming! Example:\n* Cookbook and benchmark name: `http-benchmark` (hyphen)\n* Ruby benchmark implementation: `http_benchmark` (underscore)\n* Ruby benchmark class name: `HttpBenchmark` (CamelCase => ~~HTTPBenchmark~~ is wrong!)\n\n```ruby\ncwb_benchmark 'benchmark-name'\n```\n\n## Libraries\n\n### cwb_defaults(self)\n\nInstead of hardcoding `owner` and `group` you should use the `cwb_defaults(self)` utility method:\n\n```ruby\nfile '/tmp/something' do\n  cwb_defaults(self)\n  action :create\nend\n```\n\n### Cwb::BenchmarkUtil\n\nProvides path utilities for your benchmark.\n\nExample usage within your recipe:\n\n```ruby\nmy_bench = Cwb::BenchmarkUtil.new('benchmark-name', node)\ncwb_benchmark my_bench.name\n\n# Create a config file from a template that should reside\n# at the same directory as the Ruby benchmark file.\ntemplate my_bench.path_for('config.ini') do\n  cwb_defaults(self)\n  source 'config.ini.erb'\nend\n```\n\n### Cwb::Util\n\n```ruby\nCwb::Util.root_dir(node)\n\ncwb_util = Cwb::Util.new(node)\ncwb_util.root_dir\n```\n\n## Usage\n\n### cwb::default\n\nYou should not explicitly include the `cwb::default` recipe within your cookbooks. Instead the CWB Server will take care of adding cwb to the Chef run list.\n\n## Internal Structure\n\nThe `cwb::core` recipe prepares the following structure for benchmarks that are subsequently added by custom benchmark cookbooks.\nDo NOT rely in this internal structure as it might change in the future.\n\n```\n.\n├── benchmark_suite.txt [single benchmark suite to be executed]\n├── benchmarks.txt [ordered list of benchmarks to be executed]\n├── node.yml [hash of Chef node attributes]\n├── app-bench\n│   └── app_bench.rb\n├── micro-bench\n│   └── micro_bench.rb\n├── my-bench\n│   └── my_bench.rb\n│   └── config.ini\n```\n\n### cwb CLI\n\nThe command line utility is able to execute single benchmarks in isolation or an entire benchmark suite. The default benchmark suite will execute all benchmarks according to the order in `benchmarks.txt` which reflects the recipe order in the Chef run list.\n\n```bash\ncwb execute micro-bench/micro_bench.rb\ncwb execute .\n```\n\n## Notes\n\n* This cookbook monkypatches the String class by adding the utility methods `camelize` and `underscore`. These methods are for internal use, do NOT depend on them.\n\n## Development\n\n### Integration Tests\n\n*Requirements:* [VirtualBox](https://www.virtualbox.org/wiki/Downloads) , [Vagrant](https://www.vagrantup.com/downloads.html), and `vagrant plugin install vagrant-omnibus`\n\n```bash\nkitchen list\nkitchen converge\nkitchen verify\n```\n\nAll together with `kitchen test`\n\n### Publish Cookbook\nPublish Chef Cookbook to [Chef Supermarket](https://supermarket.chef.io/) (only for owners)\n\nBump version in `metadata.rb`\n\n```bash\nknife cookbook site share \"cwb\" \"Other\"\ngit tag -a cwb/v0.1.X -m 'COMMENT'\ngit push origin --tags\n```\n\n\n## License and Authors\n\nAuthor:: Joel Scheuner (joel.scheuner.dev@gmail.com)\n"
}