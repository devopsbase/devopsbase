{
  "name": "railsbox Chef cookbook",
  "chef_cookbook_name": "railsbox",
  "revision": "0.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/railsbox",
    "https://supermarket.chef.io/cookbooks/railsbox/download",
    "https://supermarket.chef.io/cookbooks/railsbox/versions/0.1.0",
    "https://supermarket.chef.io/cookbooks/railsbox/versions/0.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/railsbox/versions/0.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/railsbox",
    "https://supermarket.chef.io/api/v1/cookbooks/railsbox/versions/0.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Web Servers",
    "Executable/Script/Chef Cookbook",
    "Type/Middleware/Runtime/Ruby",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Web Server/Nginx",
    "Type/Middleware/Data Store/Relational/PostgreSQL"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/railsbox",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/railsbox/versions/0.1.0/download",
  "deprecated": false,
  "created": "2013-07-22T07:29:18.000Z",
  "updated": "2013-07-22T07:29:19.000Z",
  "description": "auto deploy railsapp with rbenv+nginx+unicorn+postgresql",
  "maintainer": {
    "name": "zhiping",
    "email": "im@yangzhiping.com"
  },
  "license": "Apache License 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 6,
  "downloads_count": 1338171,
  "downloads_count_revision": 1338171,
  "repository_url": "https://github.com/ouyangzhiping/railsbox",
  "issues_url": "https://github.com/ouyangzhiping/railsbox",
  "chef_source_url": "https://github.com/ouyangzhiping/railsbox",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Railsbox: auto deploy rails app\n\n## railsbox cookbook (v0.1.0)\n\nSetup a **Rails application server** to run Nginx+Unicorn+Psql+Cap+Github apps.\n\nedit from: \n\n* [teohm/rackbox-cookbook](https://github.com/teohm/rackbox-cookbook)\n* [teohm/databox-cookbook](https://github.com/teohm/databox-cookbook)\n* [riceo/github-deploys](https://github.com/riceo/github-deploys)\n\nIt performs the following tasks when setup the server:\n\n * Install and setup Ruby environment  using `rbenv`.\n * Install Nginx from source as front-end server.\n * Setup Unicorn apps as backend server (if any).\n * Setup `runit` service.\n * Install nodejs from package to complie assest.\n * Using the Github API to authorise the new public key (if any).\n\n## Requirements\n\n### Supported Platforms\n\n* `ubuntu` - tested on Ubuntu 12.04\n\n### Cookbook Dependencies\n\n* \"appbox\"   # apt\\sudo\\user\\curl\\htop\\git\\tmux\n* 'rbenv'\n* 'nginx'\n* 'unicorn', \">= 1.2.2\"\n* 'runit', '>= 1.1.2'\n* \"postgresql\"\n* \"database\"\n* \"nodejs\"\n\n## Install\n\nTo install with **Berkshelf**, add this into `Berksfile`:\n\n```\ncookbook 'railsbox', git: 'git://github.com/ouyangzhiping/railsbox.git'\n```\n\nand run:\n\n```\nbundle exec berks install -p cookbooks/\n```\n\nAnd overwrite attributes to customize the cookbook. then add the default recipe to your runlist.\n\nexample:\n\n```json\n{\n  \"run_list\":[\n    \"railsbox\"\n  ],\n  \"appbox\": {\n    \"deploy_keys\": [\"ssh-rsa, 1. run cat ~/.ssh/id_rsa.pub on your mac 2. copy it\"],\n    \"admin_keys\": [\"ssh-rsa, 1. run cat ~/.ssh/id_rsa.pub on your mac 2. copy it\"]\n  },\n  \"railsbox\": {\n    \"db_root_password\": \"welcome!\",\n    \"databases\": {\n      \"postgresql\": [\n        { \"username\": \"psyapp\",\n          \"password\": \"psqlpassword\",\n          \"database_name\": \"appname_production\" }\n      ]\n    },\n    \"ruby\": {\n      \"versions\": [\"2.0.0-p247\", \"2.0.0-p247\"],\n      \"global_version\": \"2.0.0-p247\"\n    },\n    \"apps\": {\n      \"unicorn\": [\n        { \"appname\": \"railsbox-example-app1\",\n          \"hostname\": \"33.33.33.10\"\n        }\n      ]\n    }\n  },\n    \"github_deploys\": {\n    \"deploy_user\": \"deploy\",\n    \"github_api\": {\n      \"username\": \"set your github username\",\n      \"email\": \"set your github user email\",\n      \"password\": \"set your github password\"\n    }\n  },\n  \"nginx\":\n{\n  \"version\": \"1.5.2\"\n}\n}\n```\n\nSee also [ouyangzhiping/railsbox-example](https://github.com/ouyangzhiping/railsbox-example) for `railsbox` usage example with chef-solo.\n\n## Attributes\n\nYou may change the **default config** settings:\n\n\n * **nginx**:\n   * `node[\"railsbox\"][\"default_config\"][\"nginx\"][\"template_name\"]` (default: `\"nginx_vhost.conf.erb\"`) - nginx vhost/site config template.\n   * `node[\"railsbox\"][\"default_config\"][\"nginx\"][\"template_cookbook\"]` (default: `\"railsbox\"`) - cookbook containing the nginx vhost/site config template.\n   * `node[\"railsbox\"][\"default_config\"][\"nginx\"][\"listen_port\"]` (default: `\"80\"`) - nginx vhost/site listen port.\n   * `node[\"railsbox\"][\"upstream_start_port\"][\"unicorn\"]` (default: `10001`) - start number for unicorn app listen port.\n   * `node[\"railsbox\"][\"upstream_start_port\"][\"passenger\"]` (default: `20001`) - start number for passenger app listen port.\n * **unicorn**:\n   * `node[\"railsbox\"][\"default_config\"][\"unicorn\"][\"listen_port_options\"]` (default: `{ :tcp_nodelay => true, :backlog => 100 }`) - unicorn listen port options.\n   * `node[\"railsbox\"][\"default_config\"][\"unicorn\"][\"worker_timeout\"]` (default: `60`) - unicorn worker timeout.\n   * `node[\"railsbox\"][\"default_config\"][\"unicorn\"][\"preload_app\"]` (default: `false`) - unicorn preload app flag.\n   * `node[\"railsbox\"][\"default_config\"][\"unicorn\"][\"worker_processes\"]` (default: `[node[:cpu][:total].to_i * 4, 8].min`) - total unicorn worker.\n   * `node[\"railsbox\"][\"default_config\"][\"unicorn\"][\"before_fork\"]` (default: `'sleep 1'`) - unicorn before_fork handler.\n * **unicorn_runit**:\n   * `node[\"railsbox\"][\"default_config\"][\"unicorn_runit\"][\"template_name\"]` (default: `\"unicorn\"`) - name to lookup unicorn runit templates (templates: `\"sv-#{template_name}-run.erb\"`, `\"sv-#{template_name}-log-run.erb`).\n   * `node[\"railsbox\"][\"default_config\"][\"unicorn_runit\"][\"template_cookbook\"]` (default: `\"railsbox\"`) - cookbook containing the templates.\n   * `node[\"railsbox\"][\"default_config\"][\"unicorn_runit\"][\"rack_env\"]` (default: `\"production\"`) - default RACK_ENV to run a unicorn app.\n* **postgresql**:\n\t* `node[\"railsbox\"][\"db_root_password\"]` (default: `nil`) - postgresql root password string.\n\t* `node[\"railsbox\"][\"databases\"][\"postgresql\"][\"username\"]`- Rails app database username\n\t* `node[\"railsbox\"][\"databases\"][\"postgresql\"][\"password\"]`- Rails app database password\n\t* `node[\"railsbox\"][\"databases\"][\"postgresql\"][\"database_name\"]`- Rails app database name\n * **github-deploys**:\n   * `node[\"railsbox\"][\"github_deploys\"][\"deploy_user\"]` (default: `\"deploy\"`) - don't edit !\n    * `node[\"railsbox\"][\"github_deploys\"][\"github_api\"][\"endpoint_path\"]` (default: `\"/user/keys\"`) - [User Public Keys | GitHub API](http://developer.github.com/v3/users/keys/#update-a-public-key) !\n    * `node[\"railsbox\"][\"github_deploys\"][\"username\"]` - set your github username\n    * `node[\"railsbox\"][\"github_deploys\"][\"email\"]` - set your github email\n    * `node[\"railsbox\"][\"github_deploys\"][\"password\"]` - set your github password\n\n\n## Recipes\n\n* recipe   \"railsbox\", \"Includes all recipes.\"\n* recipe   \"railsbox::ruby\", \"Install and setup Ruby environment  using `rbenv`\"\n* recipe   \"railsbox::nginx\", \"Install Nginx from source as front-end server.\"\n* recipe   \"railsbox::unicorn\", \"Setup Unicorn apps as backend server (if any).\"\n* recipe   \"railsbox::postgresql\", \"Install PostgreSQL and create PostgreSQL databases.\"\n* recipe   \"railsbox::nodejs\", \"Install nodejs from package to complie assest.\"\n* recipe   \"railsbox:github-deploys\", \"Using the Github API to authorise the new public key (if any)\"\n\n## Change History\n\nSee [CHANGELOG](CHANGELOG.md).\n\n## Author\n\nAuthor:: zhiping (<http://yangzhiping.com>)\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/appbox",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/rbenv",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nginx",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/unicorn",
      "revision": ">= 1.2.2",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/runit",
      "revision": ">= 1.1.2",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/postgresql",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/database",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nodejs",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "railsbox": "Includes all recipes.",
    "railsbox::ruby": "setup a ruby version manager `rbenv`.",
    "railsbox::nginx": "setup `nginx` as front-end server.",
    "railsbox::unicorn": "setup `unicorn` apps, if any.",
    "railsbox::postgresql": "Install PostgreSQL and create PostgreSQL databases.",
    "railsbox::nodejs": "Install Nodejs based on the default installation method",
    "railsbox:github-deploys": "install github-deploys"
  }
}