{
  "name": "etherpad-lite Chef cookbook",
  "chef_cookbook_name": "etherpad-lite",
  "revision": "0.1.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/etherpad-lite",
    "https://supermarket.chef.io/cookbooks/etherpad-lite/download",
    "https://supermarket.chef.io/cookbooks/etherpad-lite/versions/0.1.2",
    "https://supermarket.chef.io/cookbooks/etherpad-lite/versions/0.1.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/etherpad-lite/versions/0.1.2",
    "https://supermarket.chef.io/api/v1/cookbooks/etherpad-lite",
    "https://supermarket.chef.io/api/v1/cookbooks/etherpad-lite/versions/0.1.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/etherpad-lite",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/etherpad-lite/versions/0.1.2/download",
  "deprecated": false,
  "created": "2013-03-15T00:46:41.000Z",
  "updated": "2013-11-22T18:41:33.000Z",
  "description": "Installs etherpad-lite",
  "maintainer": {
    "name": "chrisballinger",
    "email": "chris@openwatch.net"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 2529156,
  "downloads_count_revision": 1264626,
  "repository_url": "https://github.com/OpenWatch/etherpad-lite-cookbook",
  "issues_url": "https://github.com/OpenWatch/etherpad-lite-cookbook",
  "chef_source_url": "https://github.com/OpenWatch/etherpad-lite-cookbook",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "etherpad-lite Cookbook\n======================\n\n#### etherpad-lite::default\ninstalls etherpad-lite\n\nRequirements\n------------\n#### cookbooks\n- `nodejs` - etherpad-lite runs on javascript\n- `postgresql` - we use postgres\n- `npm` - pg gem needs to be installed\n- `nginx` - Might not be the optimal way to run it\n\nAttributes\n----------\n\nThe following attributes should be set based on your specific deployment, see the\n`attributes/default.rb` file for default values. All values should be strings unless otherwise specified.\n\n* `node['etherpad-lite']['title']` - Name your instance!\n* `node['etherpad-lite']['favicon_url']` - favicon_url favicon default name, alternatively, set up a fully specified Url to your own favicon\n* `node['etherpad-lite']['ip_address']` - IP address to bind\n* `node['etherpad-lite']['port_number']` - (number) port number to bind\n* `node['etherpad-lite']['ssl_enabled']` - (boolean) make sure to have the minimum and correct file access permissions set so that the Etherpad server can access them\n* `node['etherpad-lite']['ssl_key_path']` - ssl key path\n* `node['etherpad-lite']['ssl_cert_path']` - ssl cert path\n* `node['etherpad-lite']['db_type']` - postgres, sqlite or mysql\n* `node['etherpad-lite']['db_user']` - db user\n* `node['etherpad-lite']['db_host']` - db host\n* `node['etherpad-lite']['db_password']` - db password\n* `node['etherpad-lite']['db_name']` - db name\n* `node['etherpad-lite']['default_text']` - the default text of a pad\n* `node['etherpad-lite']['require_session']` - (boolean) Users must have a session to access pads. This effectively allows only group pads to be accessed.\n* `node['etherpad-lite']['edit_only']` -  (boolean) Users may edit pads but not create new ones. Pad creation is only via the API. This applies both to group pads and regular pads. \n* `node['etherpad-lite']['minify']` - if true, all css & js will be minified before sending to the client. This will improve the loading performance massivly, but makes it impossible to debug the javascript/css\n* `node['etherpad-lite']['max_age']` - How long may clients use served javascript code (in seconds)? Without versioning this may cause problems during deployment. Set to 0 to disable caching\n* `node['etherpad-lite']['abiword_path']` - This is the path to the Abiword executable. Setting it to null, disables abiword. Abiword is needed to advanced import/export features of pads\n* `node['etherpad-lite']['require_authentication']` - This setting is used if you require authentication of all users. Note: /admin always requires authentication.\n* `node['etherpad-lite']['require_authorization']` - Require authorization by a module, or a user with is_admin set, see below.\n* `node['etherpad-lite']['admin_enabled']` - Enable the admin interface\n* `node['etherpad-lite']['admin_password']` - Password for \"admin\" user.\n* `node['etherpad-lite']['log_level']` - The log level we are using, can be: DEBUG, INFO, WARN, ERROR\n* `node['etherpad-lite']['service_user']` - user to run etherpad\n* `node['etherpad-lite']['service_user_gid']` - group to run etherpad\n* `node['etherpad-lite']['service_user_home']`- home dir\n* `node['etherpad-lite']['etherpad_git_repo_url']` = set this to the git repo of your fork of etherpad-lite, or leave as default\n* `node['etherpad-lite']['etherpad_api_key']` = sets the API key for the HTTP API (APIKEY.txt), if you leave it blank it will be generated for you by the app on first launch\n* `node['etherpad-lite']['service_name']` = Name of service\n* `node['etherpad-lite']['logs_dir']` = Path to logs directory\n* `node['etherpad-lite']['domain']` = Domain where it is running\n* `node['etherpad-lite']['plugins']` = An array of plugins to install. These should be strings of the plugin name, without the ep_ prefix (as seen in the etherpad-lite admin's plugin manager).\n\nUsage\n-----\n#### etherpad-lite::default\n\nOverride any defaults and then include the recipe in your run list or cookbook.\n\ne.g.\nJust include `etherpad-lite` in your node's `run_list`:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[etherpad-lite]\"\n  ]\n}\n```\n\nContributing\n------------\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\n\nLicense: Apache 2.0\n\nAuthors: \n\n* OpenWatch FPC\n* @computerlyrik original version (https://github.com/computerlyrik/chef-etherpad)\n* @reidab",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nodejs",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/postgresql",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/npm",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nginx",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}