{
  "name": "cleanup Chef cookbook",
  "chef_cookbook_name": "cleanup",
  "revision": "0.0.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/cleanup",
    "https://supermarket.chef.io/cookbooks/cleanup/download",
    "https://supermarket.chef.io/cookbooks/cleanup/versions/0.0.2",
    "https://supermarket.chef.io/cookbooks/cleanup/versions/0.0.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/cleanup/versions/0.0.2",
    "https://supermarket.chef.io/api/v1/cookbooks/cleanup",
    "https://supermarket.chef.io/api/v1/cookbooks/cleanup/versions/0.0.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/cleanup",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/cleanup/versions/0.0.2/download",
  "deprecated": false,
  "created": "2015-04-16T09:34:32.442Z",
  "updated": "2015-10-14T07:10:25.036Z",
  "description": "Installs/Configures cleanup",
  "maintainer": {
    "name": "burnsie",
    "email": "michael.burns@rackspace.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 340661,
  "downloads_count_revision": 121615,
  "repository_url": "https://github.com/racker/cookbook-cleanup",
  "issues_url": "https://github.com/racker/cookbook-cleanup/issues",
  "chef_source_url": "https://github.com/racker/cookbook-cleanup",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nThis cookbook creates a `cleanup` resource to handle the cleanup of arbitrary paths based on number of files or last modified dates.\n\nAttributes\n==========\n\n- `name` - String representing a path glob so wildcards are totally fine.\n- `dry_run` - `true`/`false` Defaults to `false`. If `true` will disable actual file operations.`\n- `files` - `true`/`false` Defaults to `true`. If false will ignore files during cleanup.\n- `directories` - `true`/`false` Defaults to `true`. If false will ignore directories during cleanup.\n- `sort_by` - `:atime`/`:ctime`/`:mtime` Defaults to `:mtime`. Sort the files to be deleted by their (a)ccess, (c)reate or (m)odified time.\n\n`keep_last` and `older_than` are mutally exclusive since I can't think of any way combining them makes sense.\n\n- `keep_last` - Takes an integer. Will keep that many files starting from the most recent.\n- `older_than` - Takes a hash that looks like `{:time_increment => time_quantity}`. Increments can be one of [:minutes, :hours, :days, :weeks] (months are hard).\n\nUsage\n=====\n\nInclude the cookbook then just call the `cleanup` resource from your recipe like this:\n\n### Keep the most recent 5 files\n```ruby\ncleanup \"/your/path/here/*\" do\n  keep_last 5\nend\n```\n### Delete files older than 1 week\n```ruby\ncleanup \"/your/path/here/*\" do\n  older_than :weeks => 1\nend\n```\n"
}