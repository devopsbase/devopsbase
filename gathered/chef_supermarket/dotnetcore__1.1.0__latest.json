{
  "name": "dotnetcore Chef cookbook",
  "chef_cookbook_name": "dotnetcore",
  "revision": "1.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/dotnetcore",
    "https://supermarket.chef.io/cookbooks/dotnetcore/download",
    "https://supermarket.chef.io/cookbooks/dotnetcore/versions/1.1.0",
    "https://supermarket.chef.io/cookbooks/dotnetcore/versions/1.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/dotnetcore/versions/1.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/dotnetcore",
    "https://supermarket.chef.io/api/v1/cookbooks/dotnetcore/versions/1.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Web Servers",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/dotnetcore",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/dotnetcore/versions/1.1.0/download",
  "deprecated": false,
  "created": "2016-03-16T17:48:00.864Z",
  "updated": "2016-05-30T18:38:05.610Z",
  "description": "Installs/Configures dotnetcore",
  "maintainer": {
    "name": "acornies",
    "email": "acornies@gmail.com"
  },
  "license": "All rights reserved",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 440,
  "downloads_count_revision": 219,
  "repository_url": "https://github.com/acornies/dotnetcore-cookbook",
  "issues_url": "https://github.com/acornies/dotnetcore-cookbook/issues",
  "chef_source_url": "https://github.com/acornies/dotnetcore-cookbook",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "<a href=\"https://codeclimate.com/github/acornies/dotnetcore-cookbook\"><img src=\"https://codeclimate.com/github/acornies/dotnetcore-cookbook/badges/gpa.svg\" /></a>\n# dotnetcore-cookbook\n\nA Chef cookbook for managing .NET Core (http://dotnet.github.io/) installation and applications on all supported platforms. Simply include `recipe[dotnetcore]` in your runlist to utilize the `dotnet` resource provider. This cookbook is in it's early stages and will try to keep up with the pace of .NET Core development.\n\n## Supported Platforms\n\n- Ubuntu 14.04 (trusty)\n- Windows Server 2012 R2\n\n## Attributes\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['dotnetcore']['package']['name']</tt></td>\n    <td>String</td>\n    <td>The apt-get package name for Debian/Ubuntu.</td>\n    <td><tt>See <a href=\"attributes/default.rb\" target=\"_blank\">default.rb</a></tt></td>\n  </tr>\n  <tr>\n    <td><tt>['dotnetcore']['package']['version']</tt></td>\n    <td>String</td>\n    <td>The apt-get package version for Debian/Ubuntu.</td>\n    <td><tt>See <a href=\"attributes/default.rb\" target=\"_blank\">default.rb</a></tt></td>\n  </tr>\n  <tr>\n    <td><tt>['dotnetcore']['package']['source_url']</tt></td>\n    <td>String</td>\n    <td>An absolute URL for the .NET Core Windows MSI installer</td>\n    <td><tt>See <a href=\"attributes/default.rb\" target=\"_blank\">default.rb</a></tt></td>\n  </tr>\n  <tr>\n    <td><tt>['dotnetcore']['apt_package_source']</tt></td>\n    <td>String</td>\n    <td>The apt-get package source repository server</td>\n    <td><tt>See <a href=\"attributes/default.rb\" target=\"_blank\">default.rb</a></tt></td>\n  </tr>\n  <tr>\n    <td><tt>['dotnetcore']['apt_package_source_key']</tt></td>\n    <td>String</td>\n    <td>The source URL for the apt keyserver gpg key.</td>\n    <td><tt>See <a href=\"attributes/default.rb\" target=\"_blank\">default.rb</a></tt></td>\n  </tr>\n</table>\n\n## Usage\n\n### dotnetcore::default\n\nInclude `dotnetcore` in your node's `run_list`:\n\n```json\n{\n  \"run_list\": [\n    \"recipe[dotnetcore::default]\"\n  ]\n}\n```\n\n## Resource/Provider\n\n###dotnet\nUsed for restoring package dependencies, compilation, and running your application.\n```ruby\ndotnet 'test' do\n  action :run\n  nuget_config_file \"#{app_dir}/NuGet.Config\"\n  path app_dir\n  user 'root'\n  cwd app_dir\nend\n```\nBy default, the dotnet resource will restore nuget packages from the `nuget_config_file` parameter. If no parameter is given, the current directory is used from `cwd`. This can be overidden by adding `restore false` as an additional parameter.\n\nAdditionaly, `dotnet restore` can be run on it's own by using `action :restore` as a parameter with the dotnet resource.\n```ruby\ndotnet 'test' do\n  action :restore\n  nuget_config_file \"#{app_dir}/NuGet.Config\"\n  user 'root'\n  cwd app_dir\nend\n```\n\n## Development\n\nThis cookbook uses <a href=\"https://github.com/opscode/test-kitchen\" target=\"_blank\">test-kitchen</a> and <a href=\"http://serverspec.org/\" target=\"_blank\">Serverspec/RSpec</a> with the Vagrant driver. For local Windows testing, please follow <a href=\"http://kitchen.ci/blog/test-kitchen-windows-test-flight-with-vagrant/\" target=\"_blank\">this blog post</a> to create and add a local Vagrant Windows (Server 2012 R2) box.\n\n## License and Authors\n\nAuthor:: Andrew Cornies (acornies@gmail.com)\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": "= 14.04",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": "~> 2.9.2",
      "self_resolve": true
    }
  ]
}