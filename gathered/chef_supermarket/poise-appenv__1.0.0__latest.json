{
  "name": "poise-appenv Chef cookbook",
  "chef_cookbook_name": "poise-appenv",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/poise-appenv",
    "https://supermarket.chef.io/cookbooks/poise-appenv/download",
    "https://supermarket.chef.io/cookbooks/poise-appenv/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/poise-appenv/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/poise-appenv/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/poise-appenv",
    "https://supermarket.chef.io/api/v1/cookbooks/poise-appenv/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Mode/API/Toolkit",
    "Style/Virtualization Level/Application",
    "Type/Middleware/Runtime/Perl"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/poise-appenv",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/poise-appenv/versions/1.0.0/download",
  "deprecated": false,
  "created": "2014-03-20T23:17:53.000Z",
  "updated": "2014-03-20T23:17:56.000Z",
  "description": "Helper library to configure application-specific environment settings",
  "maintainer": {
    "name": "coderanger",
    "email": "noah@coderanger.net"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 1256009,
  "downloads_count_revision": 1256009,
  "repository_url": "https://github.com/poise/poise-appenv",
  "issues_url": "https://github.com/poise/poise-appenv",
  "chef_source_url": "https://github.com/poise/poise-appenv",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "poise-appenv\n=============\n\n[![Build Status](https://travis-ci.org/poise/poise-appenv.png?branch=master)](https://travis-ci.org/poise/poise-appenv)\n\nQuick Start\n-----------\n\n### Attributes\n\nIn your [default attributes file](test/cookbooks/poise-appenv_test/attributes/default.rb#L19)\nconfigure the name of the cookbook that determines your application environment:\n\n```ruby\ndefault['poise-appenv']['cookbook'] = 'role-myapp'\n```\n\nThen create one attribute file for each [app_environment](test/cookbooks/poise-appenv_test/attributes/prod.rb#L19-L20)\nwith a header like:\n\n```ruby\ninclude_attribute 'role-myapp'\nreturn unless node.app_environment?('prod')\n```\n\nThis header will prevent executing the file unless the app_environment\nmatches the given name(s). Put any shared attributes on the `default.rb` file\nand per-app_environment attribute in the relevant file.\n\n### Recipes\n\nThe cookbook specified in `node['poise-appenv']['cookbook']` is used to determine\nwhich app_environment we are in. Each recipe within the cookbook maps to an\napp_environment of that name, so adding `role-myapp::prod` to the run list\nwill mark the node as being in the `prod` app_environment. If you add plain\n`role-myapp` to the run list, it will use the name of the chef_environment.\n\nTo accomplish this you need to create stub recipes like [recipes/prod.rb](test/cookbooks/poise-appenv_test/recipes/prod.rb)\nwhich just include the default recipe:\n\n```ruby\ninclude_recipe 'role-myapp'\n```\n\nThe default recipe should contain the normal code for installing your application,\ngenerally this will be one more `include_recipe` to other cookbooks.\n\nApplication Environments\n------------------------\n\nApplication environments offer a way to have different node attributes applied\nvia a cookbook. Combined with [role or environment cookbooks](http://vialstudios.logdown.com/posts/166848-the-environment-cookbook-pattern)\nthis lets you separate the varying configuration of an application in different\ndeployment scenarios from the code to install the application.\n\nAs a concrete example, imagine you have two Chef environments; prod and test.\nYou run a cluster of servers in each environment with your application installed.\nNow you want to launch a new cluster in your test environment running an\nexperimental build and divert some portion of traffic to it. You could create\na new Chef environment by copying the existing test one, but almost all the\nsettings will be the same, only the version to deploy and similar attributes\nneed to be overridden for the new servers. Application environments give you\na way to apply those customizations.\n\nReference\n---------\n\n### `node.app_environment(cookbook=nil)`\n\n`node.app_environment` returns the name of the detected application environment\nbased on the given or configured cookbook. Note that this is a method, not a\nnode attribute.\n\n### `node.app_environment?(*names)`\n\n`node.app_environment?` returns true if the current application environment\nis any of the given names.\n\n### `node['poise-appenv']['cookbook']`\n\n`node['poise-appenv']['cookbook']` is a node attribute used to configure which\ncookbook is searched for to determine the current application environment.\n\nWhy?\n----\n\nWhy not just use Chef environments? Sometimes you want to deploy slightly\ndifferent applications in the same Chef environment. An example would be\nlaunching a new branch of your code in the test environment. You could copy the\nChef environment and tweak the settings you want, but this results in a lot of\nduplicated configuration which is error prone and difficult to update.\nAdditionally, even though it is slightly different, this hypothetical new\napplication cluster is still semantically in the \"test\" environment, and\ncurrently Chef environments don't have any kind of heirarchical relationship.\n"
}