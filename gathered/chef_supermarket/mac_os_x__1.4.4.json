{
  "name": "mac_os_x Chef cookbook",
  "chef_cookbook_name": "mac_os_x",
  "revision": "1.4.4",
  "uris": [
    "https://supermarket.chef.io/cookbooks/mac_os_x",
    "https://supermarket.chef.io/cookbooks/mac_os_x/download",
    "https://supermarket.chef.io/cookbooks/mac_os_x/versions/1.4.4",
    "https://supermarket.chef.io/cookbooks/mac_os_x/versions/1.4.4/download",
    "https://supermarket.chef.io/api/v1/cookbooks/mac_os_x/versions/1.4.4",
    "https://supermarket.chef.io/api/v1/cookbooks/mac_os_x",
    "https://supermarket.chef.io/api/v1/cookbooks/mac_os_x/versions/1.4.4/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System/macOS",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/mac_os_x",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/mac_os_x/versions/1.4.4/download",
  "deprecated": false,
  "created": "2011-07-23T22:05:04.000Z",
  "updated": "2014-05-01T04:31:47.000Z",
  "description": "Manage OS X user defaults settings",
  "maintainer": {
    "name": "jtimberman",
    "email": "cookbooks@housepub.org"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 21,
  "downloads_count": 13847585,
  "downloads_count_revision": 1258737,
  "repository_url": "http://github.com/jtimberman/mac_os_x-cookbook",
  "issues_url": "http://github.com/jtimberman/mac_os_x-cookbook",
  "chef_source_url": "http://github.com/jtimberman/mac_os_x-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nThis cookbook has two resources for managing local user settings on OS\nX:\n\n* `mac_os_x_plist_file` - manages \"`plist`\" settings files for OS X applications.\n* `mac_os_x_userdefaults` - manages settings in OS X's `defaults(1)` system.\n\nThis cookbook also includes a number of helper recipes.\n\nRequirements\n============\n\n## Platform\n\nTested on Mac OS X 10.6.8, 10.7.2 and 10.8.3.\n\nAttributes\n==========\n\n* `node['mac_os_x']['settings_user']` - Used in the\n  `mac_os_x::settings` recipe, this specifies the user to apply settings\n  using `mac_os_x_userdefaults` LWRP. Defaults to the user currently\n  running Chef (`node['current_user']`).\n* `node['mac_os_x']['settings']` - A hash of settings to apply with\n  the `mac_os_x_userdefaults` LWRP (see below), used in the\n  `mac_os_x::settings` recipe. Set up sub-attributes for each domain's\n  settings to apply. The attribute must be a hash, and must have a\n  \"domain\" key with the domain of the defaults setting. Each key is a\n  \"key\" used in the LWRP, and its value is the corresponding \"value\"\n\nFor example, some 'dock' settings (for com.apple.dock):\n\n```ruby\nnode.default['mac_os_x']['settings']['dock'] = {\n  \"domain\" => \"com.apple.dock\",\n  \"no-glass\" => true,\n  \"autohide\" => true,\n  \"showhidden\" => true\n}\n```\n\nResource/Provider\n=================\n\n## mac\\_os\\_x\\_userdefaults\n\nManage the Mac OS X user defaults(1) system. The parameters to the\nresource are passed to the defaults command and the parameters follow\nconvention of the OS X command. See the defaults(1) man page for\ndetail on how the tool works.\n\n### Actions\n\n- :write: write the setting to the specified domain. Default.\n\n### Attribute Parameters\n\n- domain: The domain the defaults belong to. Required. Name attribute.\n- global: Whether the domain is global. Can be true or false. Default false.\n- key: The preference key. Required.\n- value: The value of the key. Required.\n- type: Value type of the preference key.\n- user: User for which to set the default.\n- sudo: Set to true if the setting requires privileged access to modify. Default false.\n\n`value` settings of `1`, `TRUE`, `true`, `YES` or `yes` are treated as\ntrue by defaults(1), and are handled in the provider.\n\n`value` settings of `0`, `FALSE`, `false`, `NO` or `no` are treated as\nfalse by defaults (1) and are also handled by the provider.\n\n### Limitations\n\nThe current version cannot handle plists or dictionaries.\n\n### Examples\n\nSimple example that uses the `com.apple.systempreferences` domain,\nwith a single key and value.\n\n    mac_os_x_userdefaults \"enable time machine on unsupported volumes\" do\n      domain \"com.apple.systempreferences\"\n      key \"TMShowUnsupportedNetworkVolumes\"\n      value \"1\"\n    end\n\nSpecify a global domain. Note that the key is not required for global domains.\n\n    mac_os_x_userdefaults \"full keyboard access to all controls\" do\n      domain \"AppleKeyboardUIMode\"\n      global true\n      value \"2\"\n    end\n\nA boolean type that uses truthiness (TRUE).\n\n    mac_os_x_userdefaults \"finder expanded save dialogs\" do\n      domain \"NSNavPanelExpandedStateForSaveMode\"\n      global true\n      value \"TRUE\"\n      type \"bool\"\n    end\n\nA setting that uses an int (integer) type.\n\n    mac_os_x_userdefaults \"enable OS X firewall\" do\n      domain \"/Library/Preferences/com.apple.alf\"\n      key \"globalstate\"\n      value \"1\"\n      type \"int\"\n    end\n\nLWRP's can send notifications, so we can change the Dock, and then\nrefresh it to take effect.\n\n    execute \"killall Dock\" do\n      action :nothing\n    end\n\n    mac_os_x_userdefaults \"set dock size\" do\n      domain \"com.apple.dock\"\n      type \"integer\"\n      key \"tilesize\"\n      value \"20\"\n      notifies :run, \"execute[killall Dock]\"\n    end\n\nThis setting requires privileged access to modify, so tell it to use\nsudo. Note that this will prompt for the user password if sudo hasn't\nbeen modified for NOPASSWD.\n\n    mac_os_x_userdefaults \"disable time machine normal schedule\" do\n      domain \"/System/Library/LaunchDaemons/com.apple.backupd-auto\"\n      key \"Disabled\"\n      value \"1\"\n      sudo true\n    end\n\n## mac\\_os\\_x\\_plist\\_file\n\nManages the property list (plist) preferences file with the\n`cookbook_file` Chef resource. Files will be dropped in\n`Library/Preferences` under the home directory of the user running\nChef.\n\n### Actions\n\n- :create: create the file. Default.\n\n### Attribute Parameters\n\n- source: file name to use in the files directory of the cookbook.\n  Name attribute.\n- cookbook: cookbook where the plist file is located.\n\n### Examples\n\nWrite the iTerm 2 preferences to\n`~/Library/Preferences/com.googlecode.iterm2.plist`.\n\n    mac_os_x_plist_file \"com.googlecode.iterm2.plist\"\n\nRecipes\n=======\n\nThe recipes in this cookbook provide example usage of the defaults(1)\nLWRP, and have some useful system preference settings. They were\noriginally based on work done in Pivotal Labs workstation management\nrepository, though are new code given the LWRP rewrite.\n\n* https://github.com/pivotalexperimental/wschef\n\n### dock\\_preferences\n\nTurns on:\n\n* auto hide\n* magnification\n\nTurns off:\n\n* animation switching workspaces\n\nSets the tile size to really small.\n\n### finder\n\nSets Finder save dialogs to expanded by default.\n\n### firewall\n\nEnables the OS X firewall.\n\n### kbaccess\n\nEnables keyboard access to all window controls. In other words, \"Tab\"\nwill cycle focus to buttons instead of just text entry fields.\n\n### key\\_repeat\n\nSet the default key repeat rate to fast and the delay to short.\n\n### screensaver\n\nEnables password protection for screensaver and sets the delay to ask for password.\n\n### time\\_machine\n\nEnable time machine to backup to unsupported devices like NAS drives or AFP shares.\n\n### settings\n\nIterates over the `node['mac_os_x']['settings']` attribute (see\n_Attributes_ above) for domain settings to apply. The attributes file\nhas commented-out settings to use for examples; this attribute is by\ndefault an empty hash. You are encouraged to set the attributes for\nyour own nodes through a role, rather than modifying the cookbook's\nattributes file directly.\n\nTo set user defaults for a user other than the one running Chef,\nchange the `node['mac_os_x']['settings_user']` attribute.\n\nRecipes above which implement specific settings through\n`mac_os_x_userdefaults` can be replaced entirely through the use of\nattributes, and may be removed in favor of this in a future release.\n\n*Assumptions*\n\nThere are a couple glaring assumptions made by this recipe.\n\n* If the domain starts with `/Library/Preferences`, then sudo is set\n  to true, as that is not user writable.\n* If the domain is `NSGlobalDomain`, then global is set to true.\n\nLicense and Author\n==================\n\n* Author: Joshua Timberman (<cookbooks@housepub.org>)\n* Author: Ben Bleything (<ben@bleything.net>)\n\n* Copyright 2011-2013, Joshua Timberman\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "mac_os_x",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ]
}