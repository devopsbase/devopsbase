{
  "name": "snapraid Chef cookbook",
  "chef_cookbook_name": "snapraid",
  "revision": "0.3.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/snapraid",
    "https://supermarket.chef.io/cookbooks/snapraid/download",
    "https://supermarket.chef.io/cookbooks/snapraid/versions/0.3.1",
    "https://supermarket.chef.io/cookbooks/snapraid/versions/0.3.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/snapraid/versions/0.3.1",
    "https://supermarket.chef.io/api/v1/cookbooks/snapraid",
    "https://supermarket.chef.io/api/v1/cookbooks/snapraid/versions/0.3.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/snapraid",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/snapraid/versions/0.3.1/download",
  "deprecated": false,
  "created": "2014-02-27T15:55:30.000Z",
  "updated": "2015-12-16T18:29:40.900Z",
  "description": "Installs/Configures snapraid",
  "maintainer": {
    "name": "x0nic",
    "email": "nathan@globalphobia.com"
  },
  "license": "Apache v2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 2701355,
  "downloads_count_revision": 229,
  "repository_url": "https://github.com/X0nic/chef-snapraid",
  "issues_url": "https://github.com/X0nic/chef-snapraid",
  "chef_source_url": "https://github.com/X0nic/chef-snapraid",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# SnapRAID cookbook [![GitHub license](https://img.shields.io/github/license/X0nic/chef-snapraid.svg)](https://github.com/X0nic/chef-snapraid/blob/master/LICENSE.md) [![Cookbook Version](http://img.shields.io/cookbook/v/snapraid.svg)](https://supermarket.chef.io/cookbooks/snapraid) [![Build Status](https://travis-ci.org/X0nic/chef-snapraid.svg)](https://travis-ci.org/X0nic/chef-snapraid)  \nThis cookbook provides a default recipe to install and configure SnapRAID.  \nUses [Chronial's snapraid-runner](https://github.com/Chronial/snapraid-runner) as an optional cronjob.\n\n# Requirements\n## Operating Systems\n**Ubuntu:** 12.04, 14.04  \n**CentOS:** 6.6, 7.0\n\n## Misc\n * Network access to SourceForge\n * Network access to GitHub\n\n## Packages\n * python\n\n# Usage\nAdd the SnapRAID cookbook to your runlist, and set the `data_disks`, `parity_disks`, and `content_files` attributes in accordance with the desired SnapRAID configuration.   \nSee the [SnapRAID FAQ](http://snapraid.sourceforge.net/faq.html) for more details.\n\n## Example\n\n```\ndefault_attributes(  \n  'snapraid' => {  \n    'data_disks'=> ['/media/disk1/','/media/disk2/'],  \n    'parity_disks' => ['/media/disk3/'],  \n    'content_files' => ['/media/disk1/', '/media/disk1/']  \n  }  \n)\n```\n\n# Attributes\n#### snapraid::default\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Mandatory</th>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['data_disks']</tt></td>\n    <td>array</td>\n    <td>list of disks mount paths on which protected data will be stored</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['parity_disks']</tt></td>\n    <td>array</td>\n    <td>list of disks mount paths on which SnapRAID parity data will be stored</td>\n    <td><tt>true</tt></td>\n  </tr>\n   <tr>\n    <td><tt>['snapraid']['content_files']</tt></td>\n    <td>array</td>\n    <td>list of file paths which will be specified as SnapRaid content files</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['block_size']</tt></td>\n    <td>int</td>\n    <td>kibibyte block size of SnapRAID parity</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['exclude_list']</tt></td>\n    <td>array</td>\n    <td>list of filepath patterns to exclude from SnapRAID parity generation</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['version']['number']</tt></td>\n    <td>double</td>\n    <td>SnapRAID version number</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['version']['url']</tt></td>\n    <td>string</td>\n    <td>url to SnapRAID tar.gz</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['version']['url']</tt></td>\n    <td>string</td>\n    <td>SHA-256 hash of SnapRAID tar.gz</td>\n    <td><tt>false</tt></td>\n  </tr>\n</table>\n#### snapraid::scheduler\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Mandatory</th>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['script_url']</tt></td>\n    <td>string</td>\n    <td>url to snapraid_runner</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['script_directory']</tt></td>\n    <td>string</td>\n    <td>directory in which to place snapraid_runner.py</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['config_file']</tt></td>\n    <td>string</td>\n    <td>filepath to snapraid_runner.conf</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['execution_hour']</tt></td>\n    <td>string</td>\n    <td>hour of the day to execute snapraid_runner (cron)</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['execution_minute']</tt></td>\n    <td>string</td>\n    <td>minute of the day to execute snapraid_runner (cron)</td>\n    <td><tt>true</tt></td>\n  </tr>\n    <tr>\n    <td><tt>['snapraid']['scheduler']['scrub_after_sync']</tt></td>\n    <td>boolean</td>\n    <td>whether snapraid_runner will run scrub after each sync (recommended)</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['scrub_percentage']</tt></td>\n    <td>int</td>\n    <td>percentage of the protected data for snapraid_runner to scrub</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['scrub_older_than']</tt></td>\n    <td>int</td>\n    <td>files older than *x* days will be scrubbed</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['deletion_abort_threshold']</tt></td>\n    <td>int</td>\n    <td>abort scheduled operation if there are more deletes than this, set to -1 to disable</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['email_from']</tt></td>\n    <td>string</td>\n    <td>email address snapraid_runner will impersonate when sending status emails</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['email_to']</tt></td>\n    <td>string</td>\n    <td>email address snapraid_runner will notify when sending status emails</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['smtp_host']</tt></td>\n    <td>string</td>\n    <td>smtp host snapraid_runner will use</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['smtp_port']</tt></td>\n    <td>string</td>\n    <td>smtp port snapraid_runner will use</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['smtp_ssl']</tt></td>\n    <td>boolean</td>\n    <td>whether snapraid_runner will use ssl for emails</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['smtp_user']</tt></td>\n    <td>string</td>\n    <td>optional username for snapraid_runner to login to smtp server</td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['snapraid']['scheduler']['smtp_password']</tt></td>\n    <td>string</td>\n    <td>optional password for snapraid_runner to login to smtp server</td>\n    <td><tt>false</tt></td>\n  </tr>\n</table>\n\n# Recipes\n## default \nUsed to install and configure SnapRAID.\n## scheduler\nUsed to install and configure [Chronial's snapraid-runner](https://github.com/Chronial/snapraid-runner) as a cronjob.\n\n# Authors\n\nAuthor:: Nathan Lee (<nathan@globalphobia.com>)  \nAuthor:: Sam Martin (<samjackmartin@gmail.com>)",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ark",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}