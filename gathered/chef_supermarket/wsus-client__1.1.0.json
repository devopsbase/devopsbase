{
  "name": "wsus-client Chef cookbook",
  "chef_cookbook_name": "wsus-client",
  "revision": "1.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/wsus-client",
    "https://supermarket.chef.io/cookbooks/wsus-client/download",
    "https://supermarket.chef.io/cookbooks/wsus-client/versions/1.1.0",
    "https://supermarket.chef.io/cookbooks/wsus-client/versions/1.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/wsus-client/versions/1.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/wsus-client",
    "https://supermarket.chef.io/api/v1/cookbooks/wsus-client/versions/1.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Package Management",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook",
    "Mode/CLI"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/wsus-client",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/wsus-client/versions/1.1.0/download",
  "deprecated": false,
  "created": "2014-09-15T15:17:42.685Z",
  "updated": "2016-07-22T13:51:20.801Z",
  "description": "Configures wsus client",
  "maintainer": {
    "name": "criteo",
    "email": "b.courtois@criteo.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 10,
  "downloads_count": 3104244,
  "downloads_count_revision": 91629,
  "repository_url": "https://github.com/criteo-cookbooks/wsus-client",
  "issues_url": "https://github.com/criteo-cookbooks/wsus-client/issues",
  "chef_source_url": "https://github.com/criteo-cookbooks/wsus-client",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Wsus-client Cookbook\n====================\n[![Cookbook Version][cookbook_version]][cookbook]\n[![Build Status][build_status]][build_status]\n\nConfigures WSUS clients to retrieve approved updates.\n\nTesting\n-------\nThe PowerShell script will always fail if run via the winrm vagrant provider\nas the IUpdateSession::CreateUpdateDownloader is not available remotely.\n\nLogs\n---------------\nThe Microsoft.Update.Session object keeps a log in: C:\\Windows\\WindowsUpdate.log\n\nRequirements\n------------\nThis cookbook recommends Chef 11+.\n\n### Platforms\n* Windows XP\n* Windows Vista\n* Windows Server 2003 R2\n* Windows 7\n* Windows Server 2008 (R1, R2)\n* Windows 8 and 8.1\n* Windows Server 2012 (R1, R2)\n\nUsage\n-----\nUsing this cookbook is quite easy; add the desired recipes to the run list of a node, or role.\nAdjust any attributes as desired. For example, to configure a windows server role that connects to your WSUS server:\n\n```ruby\n$ cat roles/updated_windows_server.rb\nname 'updated_windows_server'\ndescription 'Setup a windows server to keep up-to-date'\n\nrun_list(\n  'wsus-client::default'\n)\n\ndefault_attributes(\n  wsus_client: {\n    wsus_server: 'http://wsus-server.my-corporation.com:8530',\n    update_group: 'updated_server2015',\n  },\n)\n```\n\nProviders & Resources\n---------------------\n\n## update\nThis provider allows to synchronously download and/or install available windows updates.\n\n### Actions\nAction   | Description\n---------|---------------------------\ndownload | Download available updates\ninstall  | Install downloaded updates\n\n> NOTE: The default behavior is `[:download, :install]`\n\n### Attributes\nAttribute     | Description                                         | Type         | Default\n--------------|-----------------------------------------------------|--------------|------------------------\nactions       | An array of actions to perform (see. actions above) | Symbol array | `[:download, :install]`\nname          | Name of the resource                                | String       |\n\nRecipes\n-------\n\n## wsus-client::default\nConvenience recipe that configures WSUS client and performs a synchronous update.\nIt basically includes `wsus-client::configure` and `wsus-client::update`\n\n## wsus-client::configure\nThis recipe modifies the Windows registry to configure [WSUS update settings][wsus_registry].\n\n### Attributes\nThe following attributes are used to configure the `wsus-client::configure` recipe, accessible via `node['wsus_client'][attribute]`.\n\nAttribute                    | Description                                                                                            | Type                | Default\n-----------------------------|--------------------------------------------------------------------------------------------------------|---------------------|--------\nwsus_server                  |Defines a custom WSUS server to use instead of Microsoft Windows Update server                          |String, URI          |`nil`\nupdate_group                 |Defines the current computer update group. (see [client-side targeting][client_targeting])              |String               |`nil`\ndisable_windows_update_access|Disables access to Windows Update (or your WSUS server)                                                 |TrueClass, FalseClass|`false`\nenable_non_microsoft_updates |Allows signed non-Microsoft updates.                                                                    |TrueClass, FalseClass|`true`\nallow_user_to_install_updates|Authorizes Users to approve or disapprove updates.                                                      |TrueClass, FalseClass|`false`\nauto_install_minor_updates   |Defines whether minor update should be automatically installed.                                         |TrueClass, FalseClass|`false`\nno_reboot_with_logged_users  |Disables automatic reboot with logged-on users.                                                         |TrueClass, FalseClass|`true`\nautomatic_update_behavior    |Defines auto update behavior.                                                                           |Symbol`*`            |`:disabled`\ndetection_frequency          |Defines times in hours between detection cycles.                                                        |FixNum               |`22`\nschedule_install_day         |Defines the day of the week to schedule update install.                                                 |Symbol`**`           |`:every_day`\nschedule_install_time        |Defines the time of day in 24-hour format to schedule update install.                                   |FixNum (1-23)        |`0`\nschedule_retry_wait          |Defines the time in minutes to wait at startup before applying update from a missed scheduled time      |FixNum (0-60)        |`0`\nreboot_warning               |Defines time in minutes of the restart warning countdown after reboot-required updates automatic install|FixNum (1-30)        |`5`\nreboot_prompt_timeout        |Defines time in minutes between prompts for a scheduled restart                                         |FixNum (1-1440)      |`10`\n\n`*` automatic_update_behavior values are:\n\n```ruby\n# :disabled  = Disables automatic updates\n# :detect    = Only notify users of new updates\n# :download  = Download updates, but let users install them\n# :install   = Download and install updates\n# :manual    = Lets the users configure the behavior\n```\n\n`**` schedule_install_day possible values are: `:every_day`, `:sunday`, `:monday`, `:tuesday`, `:wednesday`, `:thursday`, `:friday`, `:saturday`\n\n## wsus-client::update\nThis recipe performs a synchronous detection and install of available Windows updates.\n\n### Attributes\nThe following attributes are used to configure the `wsus-client::update` recipe, accessible via `node['wsus_client'][attribute]`.\n\nAttribute     | Description                                                              | Type                  | Default\n--------------|--------------------------------------------------------------------------|-----------------------|--------\ndownload_only | Determines whether available update should be installed once downloaded. | TrueClass, FalseClass | `false`\n\nContributing\n------------\n1. Fork the [repository on Github][repository]\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\nAuthors: [Baptiste Courtois][author] (<b.courtois@criteo.com>)\n\n```text\nCopyright 2014-2015, Criteo.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n[author]:                   https://github.com/Annih\n[repository]:               https://github.com/criteo-cookbooks/wsus-client\n[client_targeting]:         https://technet.microsoft.com/library/cc720450\n[wsus_registry]:            https://technet.microsoft.com/library/dd939844\n[build_status]:             https://api.travis-ci.org/criteo-cookbooks/wsus-client.svg?branch=master\n[cookbook_version]:         https://img.shields.io/cookbook/v/wsus-client.svg\n[cookbook]:                 https://supermarket.chef.io/cookbooks/wsus-client\n",
  "requires": [
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ]
}