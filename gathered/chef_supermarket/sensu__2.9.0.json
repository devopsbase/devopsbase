{
  "name": "sensu Chef cookbook",
  "chef_cookbook_name": "sensu",
  "revision": "2.9.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/sensu",
    "https://supermarket.chef.io/cookbooks/sensu/download",
    "https://supermarket.chef.io/cookbooks/sensu/versions/2.9.0",
    "https://supermarket.chef.io/cookbooks/sensu/versions/2.9.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/sensu/versions/2.9.0",
    "https://supermarket.chef.io/api/v1/cookbooks/sensu",
    "https://supermarket.chef.io/api/v1/cookbooks/sensu/versions/2.9.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Monitoring & Trending",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Monitoring/Sensu"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/sensu",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/sensu/versions/2.9.0/download",
  "deprecated": false,
  "created": "2011-11-03T07:06:25.000Z",
  "updated": "2016-09-29T20:17:11.329Z",
  "description": "Installs/Configures Sensu",
  "maintainer": {
    "name": "heavywater",
    "email": "chefs@sonian.net"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 68,
  "downloads_count": 42636038,
  "downloads_count_revision": 281042,
  "repository_url": "https://github.com/sensu/sensu-chef",
  "issues_url": "https://github.com/sensu/sensu-chef/issues",
  "chef_source_url": "https://github.com/sensu/sensu-chef",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "## DESCRIPTION\n\nProvides LWRP's and service recipes to install and configure\n[Sensu](https://github.com/sensu/sensu/wiki), a monitoring framework.\n\nThis cookbook provides the building blocks for creating a monitoring\ncookbook specific to your environment (wrapper). Without such a\nwrapper, no Sensu configuration files will be created for your nodes.\n\nAn example wrapper cookbook can be found\n[HERE](https://github.com/portertech/chef-monitor).\n\n[How to Write Reusable Chef Cookbooks](http://bit.ly/10r993N)\n\n## TESTING\n\nThis cookbook comes with a Gemfile, Cheffile, and a Vagrantfile for\ntesting and evaluating Sensu.\n\n```\ncd examples\ngem install bundler\nbundle install\nlibrarian-chef install\nvagrant up\nvagrant ssh\n```\n\n## COOKBOOK DEPENDENCIES\n\n* [APT](http://community.opscode.com/cookbooks/apt)\n* [YUM](http://community.opscode.com/cookbooks/yum)\n* [Windows](http://community.opscode.com/cookbooks/windows)\n* [RabbitMQ](http://community.opscode.com/cookbooks/rabbitmq)\n* [RedisIO](http://community.opscode.com/cookbooks/redisio)\n\n## REQUIREMENTS\n\n### SSL configuration\n\nRunning Sensu with SSL is recommended; this cookbook uses a data bag\n`sensu`, with an item `ssl`, containing the SSL certificates required.\nSensu data bag items may be encrypted. This cookbook comes with a tool\nto generate the certificates and data bag item. If the integrity of\nthe certificates is ever compromised, you must regenerate and redeploy\nthem.\n\n```\ncd examples/ssl\n./ssl_certs.sh generate\nknife data bag create sensu\n```\n\nUse the plain-text data bag item:\n\n``` shell\nknife data bag from file sensu ssl.json\n```\n\nOr, encrypt it with your data bag secret. See [Encrypt a Data\nBag](https://docs.getchef.com/essentials_data_bags.html#encrypt-a-data-bag-item) for\nmore information.\n\n```\nknife data bag --secret-file /path/to/your/secret from file sensu ssl.json\n```\n\n``` shell\n./ssl_certs.sh clean\n```\n\n## RECIPES\n\n### sensu::default\n\nInstalls Sensu and creates a base configuration file, intended to be\nextended. This recipe must be included before any of the Sensu LWRP's\ncan be used. This recipe does not enable or start any services.\n\n### sensu::rabbitmq\n\nInstalls and configures RabbitMQ for Sensu, from configuring SSL to\ncreating a vhost and credentials. This recipe relies heavily on the\ncommunity RabbitMQ cookbook LWRP's.\n\n### sensu::redis\n\nInstalls and configures Redis for Sensu. This recipe uses the\nRedisIO cookbook and installs Redis from source.\n\n### sensu::enterprise\n\nInstalls and configures Sensu Enterprise.\n\n### sensu::server_service\n\nEnables and starts the Sensu server.\n\n### sensu::client_service\n\nEnables and starts the Sensu client.\n\n### sensu::api_service\n\nEnables and starts the Sensu API.\n\n### sensu::enterprise_service\n\nEnables and starts Sensu Enterprise.\n\n## ATTRIBUTES\n\n### Installation\n\n`node.sensu.version` - Sensu build to install.\n\n`node.sensu.use_unstable_repo` - If the build resides on the\n\"unstable\" repository.\n\n`node.sensu.directory` - Sensu configuration directory.\n\n`node.sensu.log_directory` - Sensu log directory.\n\n`node.sensu.log_level` - Sensu log level (eg. \"warn\").\n\n`node.sensu.use_ssl` - If Sensu and RabbitMQ are to use SSL.\n\n`node.sensu.user` - The user who owns all sensu files and directories. Default\n\"sensu\".\n\n`node.sensu.group` - The group that owns all sensu files and directories.\nDefault \"sensu\".\n\n`node.sensu.use_embedded_ruby` - If Sensu Ruby handlers and plugins\nuse the embedded Ruby in the Sensu package (default: false).\n\n`node.sensu.init_style` - Style of init to be used when configuring\nSensu services, \"sysv\" and \"runit\" are currently supported.\n\n`node.sensu.service_max_wait` - How long service scripts should wait\nfor Sensu to start/stop.\n\n### RabbitMQ\n\n`node.sensu.rabbitmq.host` - RabbitMQ host.\n\n`node.sensu.rabbitmq.port` - RabbitMQ port, usually for SSL.\n\n`node.sensu.rabbitmq.ssl` - RabbitMQ SSL configuration, DO NOT EDIT THIS.\n\n`node.sensu.rabbitmq.vhost` - RabbitMQ vhost for Sensu.\n\n`node.sensu.rabbitmq.user` - RabbitMQ user for Sensu.\n\n`node.sensu.rabbitmq.password` - RabbitMQ password for Sensu.\n\n### Redis\n\n`node.sensu.redis.host` - Redis host.\n\n`node.sensu.redis.port` - Redis port.\n\n### Sensu API\n\n`node.sensu.api.host` - Sensu API host, for other services to reach it.\n\n`node.sensu.api.bind` - Sensu API bind address.\n\n`node.sensu.api.port` - Sensu API port.\n\n## LWRP'S\n\n### Define a client\n\n```ruby\nsensu_client node.name do\n  address node.ipaddress\n  subscriptions node.roles + [\"all\"]\n  additional(:cluster => node.cluster)\nend\n```\n\n### Define a handler\n\n```ruby\nsensu_handler \"pagerduty\" do\n  type \"pipe\"\n  command \"pagerduty.rb\"\n  severities [\"ok\", \"critical\"]\nend\n```\n\n### Define a check\n\n```ruby\nsensu_check \"redis_process\" do\n  command \"check-procs.rb -p redis-server -C 1\"\n  handlers [\"default\"]\n  subscribers [\"redis\"]\n  interval 30\n  additional(:notification => \"Redis is not running\", :occurrences => 5)\nend\n```\n\n### Define a filter\n\n```ruby\nsensu_filter \"environment\" do\n  attributes(:client => {:environment => \"development\"})\n  negate true\nend\n```\n\n### Define a mutator\n\n```ruby\nsensu_mutator \"opentsdb\" do\n  command \"opentsdb.rb\"\nend\n```\n\n### Define a custom configuration snippet\n\n```ruby\nsensu_snippet \"irc\" do\n  content(:uri => \"irc://sensu:password@irc.freenode.net:6667#channel\")\nend\n```\n\n## SUPPORT\n\nPlease visit [sensuapp.org/support](http://sensuapp.org/support) for details on community and commercial\nsupport resources, including the official IRC channel.\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/windows",
      "revision": ">= 1.8.8",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/rabbitmq",
      "revision": ">= 2.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/redisio",
      "revision": ">= 1.7.0",
      "self_resolve": true
    }
  ],
  "recommends": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef-vault",
      "revision": ">= 1.2.0"
    }
  ]
}