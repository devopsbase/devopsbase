{
  "name": "drone_app Chef cookbook",
  "chef_cookbook_name": "drone_app",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/drone_app",
    "https://supermarket.chef.io/cookbooks/drone_app/download",
    "https://supermarket.chef.io/cookbooks/drone_app/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/drone_app/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/drone_app/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/drone_app",
    "https://supermarket.chef.io/api/v1/cookbooks/drone_app/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Web Server/Nginx",
    "Type/Middleware/Proxy"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/drone_app",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/drone_app/versions/1.0.0/download",
  "deprecated": false,
  "created": "2016-09-26T02:07:32.785Z",
  "updated": "2016-09-28T03:35:20.605Z",
  "description": "Installs drone.io behind an nginx ssl proxy with letsencrypt certs",
  "maintainer": {
    "name": "coderjoe",
    "email": "coderjoe@coderjoe.net"
  },
  "license": "mit",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 26,
  "downloads_count_revision": 13,
  "repository_url": "https://github.com/coderjoe/chef-drone-app",
  "issues_url": "https://github.com/coderjoe/chef-drone-app/issues",
  "chef_source_url": "https://github.com/coderjoe/chef-drone-app",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\n[![Cookbook Version](https://img.shields.io/cookbook/v/drone_app.svg)](https://community.opscode.com/cookbooks/drone-app)\n[![Build Status](https://travis-ci.org/coderjoe/chef-drone-app.svg?branch=master)](https://travis-ci.org/coderjoe/chef-drone-app)\n[![Code Climate](https://codeclimate.com/github/coderjoe/chef-drone-app/badges/gpa.svg)](https://codeclimate.com/github/coderjoe/chef-drone-app)\n[![Dependency Status](https://gemnasium.com/badges/github.com/coderjoe/chef-drone-app.svg)](https://gemnasium.com/github.com/coderjoe/chef-drone-app)\n\nInstalls the drone.io docker image with an nginx ssl proxy passthrough with\ncertificiate registration and renewal managed by letsencrypt.\n\nFor more information about drone.io:\n\n* http://readme.drone.io/usage/overview/\n* http://docs.drone.io/\n* http://drone.io\n\nChanges\n=======\n\n## v1.0.0\n\n* Install an nginx ssl proxy in front of a drone.io server both configured via docker.\n\nRequirements\n============\n\n## Platform:\n\n* Ubuntu 16.04\n\nWarning! Due to differences in letsencrypt implementations it's highly unlikely\nthis cookbook will function on other platforms. I don't need anything other than\nUbuntu 16.04, but pull requests are very welcome to resolve this issue.\n\nAttributes\n==========\n\nSee `attributes/default.rb` for defaults.\n\n* `node['drone']['version']` - The version of drone to install.\n* `node['drone']['port']` - The drone.io web port.\n* `node['drone']['remote']['driver']` - The drone.io remote driver\n* `node['drone']['remote']['config']` - The drone.io remote config\n* `node['drone']['database']['driver']` - The drone.io database driver\n* `node['drone']['database']['config']` - The drone.io database config\n\nRecipes\n=======\n\ndefault\n-------\n\nInstalls and configures drone.io with nginx an ssl proxy using letsencrypt\ncertificates.\n\nUses:\n\n1. `recipe[drone_app::drone]`\n2. `recipe[drone_app::nginx]`\n3. `recipe[drone_app::letsencrypt]`\n4. `recipe[drone_app::firewall]`\n\ndrone\n-----\n\nInstalls, configures, and runs the drone.io docker container.\n\nnginx\n-----\n\nInstalls, configures, and runs the nginx docker container as an ssl proxy\nfor drone.io. Configures itself with self-signed certificates.\n\nThe certificates referenced by nginx are controlled via symlinks located at\n`/etc/nginx/ssl/<machine fqdn>/`.\n\n`cert.pem` - should link to the site public certificate chain.\n`cert.key` - should link to the site's private key.\n\nIf the symlinks already exist, this recipe will not create or update them.\n\nletsencrypt\n-----------\n\nInstalls the letsencrypt executable, configures it for webroot verification,\nrequests a certificate for the node's FQDN, and updates the site's `cert.pem`\nand `cert.key` to point to the newly requested letsencrypt certificates.\n\nfirewall\n--------\n\nConfigure the machine firewall to allow SSH, HTTP, and HTTPS on ports 22, 80,\nand 443 repectively.\n\nUsage\n=====\n\nTo get drone running on a machine, use `recipe[drone_app]`. Once it is installed\nand configured nginx will be listening on both port 80 and 443. Nginx will be\nconfigured to proxy to drone as well as provide a web frontend for letsencrypt\nrenewal requests.\n\nAuthor\n======\n\nAuthor:: Joe Bauser <coderjoe@coderjoe.net>\n\nLicense\n=======\n\nSee the file LICENSE for license information.\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 16.04",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/hostname",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/firewall",
      "revision": "~> 2.5.2",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/openssl",
      "revision": "~> 5.0.1",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/docker",
      "revision": "~> 2.9.6",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/drone",
      "revision": "~> 3.1.2",
      "self_resolve": true
    }
  ]
}