{
  "name": "application_python Chef cookbook",
  "chef_cookbook_name": "application_python",
  "revision": "4.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/application_python",
    "https://supermarket.chef.io/cookbooks/application_python/download",
    "https://supermarket.chef.io/cookbooks/application_python/versions/4.0.0",
    "https://supermarket.chef.io/cookbooks/application_python/versions/4.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/application_python/versions/4.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/application_python",
    "https://supermarket.chef.io/api/v1/cookbooks/application_python/versions/4.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Type/Middleware/Runtime/Python",
    "Mode/Executable/Script/Chef Cookbook",
    "Style/Virtualization Level/Application"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/application_python",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/application_python/versions/4.0.0/download",
  "deprecated": false,
  "created": "2012-05-24T21:58:13.000Z",
  "updated": "2015-10-05T19:31:44.346Z",
  "description": "A Chef cookbook for deploying Python application code.",
  "maintainer": {
    "name": "coderanger",
    "email": "YOUR_EMAIL"
  },
  "license": "none",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 47,
  "downloads_count": 16666117,
  "downloads_count_revision": 4127,
  "repository_url": "https://github.com/poise/application_python",
  "issues_url": "https://github.com/poise/application_python",
  "chef_source_url": "https://github.com/poise/application_python",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Application_Python Cookbook\n\n[![Build Status](https://img.shields.io/travis/poise/application_python.svg)](https://travis-ci.org/poise/application_python)\n[![Gem Version](https://img.shields.io/gem/v/poise-application-python.svg)](https://rubygems.org/gems/poise-application-python)\n[![Cookbook Version](https://img.shields.io/cookbook/v/application_python.svg)](https://supermarket.chef.io/cookbooks/application_python)\n[![Coverage](https://img.shields.io/codecov/c/github/poise/application_python.svg)](https://codecov.io/github/poise/application_python)\n[![Gemnasium](https://img.shields.io/gemnasium/poise/application_python.svg)](https://gemnasium.com/poise/application_python)\n[![License](https://img.shields.io/badge/license-Apache_2-blue.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n\nA [Chef](https://www.chef.io/) cookbook to deploy Python applications.\n\n## Quick Start\n\nTo deploy a Django application from git:\n\n```ruby\napplication '/srv/myapp' do\n  git 'https://github.com/example/myapp.git'\n  virtualenv\n  pip_requirements\n  django do\n    database 'sqlite:///test_django.db'\n    secret_key 'd78fe08df56c9'\n    migrate true\n  end\n  gunicorn do\n    port 8000\n  end\nend\n```\n\n## Requirements\n\nChef 12 or newer is required.\n\n## Resources\n\n### `application_celery_beat`\n\nThe `application_celery_beat` resource creates a service for the `celery beat`\nprocess.\n\n```ruby\napplication '/srv/myapp' do\n  celery_beat do\n    app_module 'myapp.tasks'\n  end\nend\n```\n\n#### Actions\n\n* `:enable` – Create, enable and start the service. *(default)*\n* `:disable` – Stop, disable, and destroy the service.\n* `:start` – Start the service.\n* `:stop` – Stop the service.\n* `:restart` – Stop and then start the service.\n* `:reload` – Send the configured reload signal to the service.\n\n#### Properties\n\n* `path` – Base path for the application. *(name attribute)*\n* `app_module` – Celery application module. *(default: auto-detect)*\n* `service_name` – Name of the service to create. *(default: auto-detect)*\n# `user` – User to run the service as. *(default: application owner)*\n\n### `application_celery_config`\n\nThe `application_celery_config` creates a `celeryconfig.py` configuration file.\n\n```ruby\napplication '/srv/myapp' do\n  celery_config do\n    options do\n      broker_url 'amqp://'\n    end\n  end\nend\n```\n\n#### Actions\n\n* `:deploy` – Create the configuration file. *(default)*\n\n#### Properties\n\n* `path` – Path to write the configuration file to. If given as a directory,\n  create `path/celeryconfig.py`. *(name attribute)*\n* `options` – Hash or block of options to set in the configuration file.\n\n### `application_celery_worker`\n\nThe `application_celery_worker` resource creates a service for the\n`celery worker` process.\n\n```ruby\napplication '/srv/myapp' do\n  celery_worker do\n    app_module 'myapp.tasks'\n  end\nend\n```\n\n#### Actions\n\n* `:enable` – Create, enable and start the service. *(default)*\n* `:disable` – Stop, disable, and destroy the service.\n* `:start` – Start the service.\n* `:stop` – Stop the service.\n* `:restart` – Stop and then start the service.\n* `:reload` – Send the configured reload signal to the service.\n\n#### Properties\n\n* `path` – Base path for the application. *(name attribute)*\n* `app_module` – Celery application module. *(default: auto-detect)*\n* `service_name` – Name of the service to create. *(default: auto-detect)*\n# `user` – User to run the service as. *(default: application owner)*\n\n### `application_django`\n\nThe `application_django` resource creates configuration files and runs commands\nfor a Django application deployment.\n\n```ruby\napplication '/srv/myapp' do\n  django do\n    database 'sqlite:///test_django.db'\n    migrate true\n  end\nend\n```\n\n#### Actions\n\n* `:deploy` – Create config files and run required deployments steps. *(default)*\n\n#### Properties\n\n* `path` – Base path for the application. *(name attribute)*\n* `allowed_hosts` – Value for `ALLOWED_HOSTS` in the Django settings.\n  *(default: [])*\n* `collectstatic` – Run `manage.py collectstatic` during deployment.\n  *(default: true)*\n* `database` – Database settings for the default connection. See [the database\n  section below](#database-parameters) for more information. *(option collector)*\n* `debug` – Enable debug mode for Django. *(default: false)*\n* `local_settings` – A [Poise template property](https://github.com/poise/poise#template-content)\n  for the content of the local settings configuration file.\n* `local_settings_path` – Path to write local settings to. If given as a\n  relative path, will be expanded against path. Set to false to disable writing\n  local settings. *(default: local_settings.py next to settings_module)*\n* `migrate` – Run `manage.py migrate` during deployment. *(default: false)*\n* `manage_path` – Path to `manage.py`. *(default: auto-detect)*\n* `secret_key` – Value for `SECRET_KEY` in the Django settings. If unset, no\n  key is added to the local settings.\n* `settings_module` – Django settings module in dotted notation.\n  *(default: auto-detect)*\n* `syncdb` – Run `manage.py syncdb` during deployment. *(default: false)*\n* `wsgi_module` – WSGI application module in dotted notation.\n  *(default: auto-detect)*\n\n#### Database Parameters\n\nThe database parameters can be set in three ways: URL, hash, and block.\n\nIf you have a single URL for the parameters, you can pass it directly to\n`database`:\n\n```ruby\ndjango do\n  database 'postgres://myuser@dbhost/myapp'\nend\n```\n\nPassing a single URL will also set the `$DATABASE_URL` environment variable\nautomatically for compatibility with Heroku-based applications.\n\nAs with other option collector resources, you can pass individual settings as\neither a hash or block:\n\n```ruby\ndjango do\n  database do\n    engine 'postgres'\n    user 'myuser'\n    host 'dbhost'\n    name 'myapp'\n  end\nend\n\ndjango do\n  database({\n    engine: 'postgres',\n    user: 'myuser',\n    host: 'dbhost',\n    name: 'myapp',\n  })\nend\n```\n\n### `application_gunicorn`\n\nThe `application_gunicorn` resource creates a service for the\n[Gunicorn](http://gunicorn.org/) application server.\n\n```ruby\napplication '/srv/myapp' do\n  gunicorn do\n    port 8000\n    preload_app true\n  end\nend\n```\n\n#### Actions\n\n* `:enable` – Create, enable and start the service. *(default)*\n* `:disable` – Stop, disable, and destroy the service.\n* `:start` – Start the service.\n* `:stop` – Stop the service.\n* `:restart` – Stop and then start the service.\n* `:reload` – Send the configured reload signal to the service.\n\n#### Properties\n\n* `path` – Base path for the application. *(name attribute)*\n* `app_module` – WSGI module to run as an application. *(default: auto-detect)*\n* `bind` – One or more addresses/ports to bind to.\n* `config` – Path to a Guncorn configuration file.\n* `preload_app` – Enable code preloading. *(default: false)*\n* `port` – Port to listen on. Alias for `bind(\"0.0.0.0:#{port}\")`.\n* `service_name` – Name of the service to create. *(default: auto-detect)*\n# `user` – User to run the service as. *(default: application owner)*\n* `version` – Version of Gunicorn to install. If set to true, use the latest\n  version. If set to false, do not install Gunicorn. *(default: true)*\n\n### `application_pip_requirements`\n\nThe `application_pip_requirements` resource installs Python packages based on a\n`requirements.txt` file.\n\n```ruby\napplication '/srv/myapp' do\n  pip_requirements\nend\n```\n\nAll actions and properties are the same as the [`pip_requirements` resource](https://github.com/poise/poise-python#pip_requirements).\n\n### `application_python`\n\nThe `application_python` resource installs a Python runtime for the deployment.\n\n```ruby\napplication '/srv/myapp' do\n  python '2.7'\nend\n```\n\nAll actions and properties are the same as the [`python_runtime` resource](https://github.com/poise/poise-python#python_runtime).\n\n### `application_python_execute`\n\nThe `application_python_execute` resource runs Python commands for the deployment.\n\n```ruby\napplication '/srv/myapp' do\n  python_execute 'setup.py install'\nend\n```\n\nAll actions and properties are the same as the [`python_execute` resource](https://github.com/poise/poise-python#python_execute),\nexcept that the `cwd`, `environment`, `group`, and `user` properties default to\nthe application-level data if not specified.\n\n### `application_python_package`\n\nThe `application_python_package` resource installs Python packages for the deployment.\n\n```ruby\napplication '/srv/myapp' do\n  python_package 'requests'\nend\n```\n\nAll actions and properties are the same as the [`python_package` resource](https://github.com/poise/poise-python#python_package),\nexcept that the `group` and `user` properties default to the application-level\ndata if not specified.\n\n### `application_virtualenv`\n\nThe `application_virtualenv` resource creates a Python virtualenv for the\ndeployment.\n\n```ruby\napplication '/srv/myapp' do\n  virtualenv\nend\n```\n\nIf no path property is given, the default is to create a `.env/` inside the\napplication deployment path.\n\nAll actions and properties are the same as the [`python_virtualenv` resource](https://github.com/poise/poise-python#python_virtualenv).\n\n## Examples\n\nSome test recipes are available as examples for common application frameworks:\n\n* [Flask](https://github.com/poise/application_python/blob/master/test/cookbooks/application_python_test/recipes/flask.rb)\n* [Django](https://github.com/poise/application_python/blob/master/test/cookbooks/application_python_test/recipes/django.rb)\n\n## Sponsors\n\nDevelopment sponsored by [Chef Software](https://www.chef.io/), [Symonds & Son](http://symondsandson.com/), and [Orion](https://www.orionlabs.co/).\n\nThe Poise test server infrastructure is sponsored by [Rackspace](https://rackspace.com/).\n\n## License\n\nCopyright 2015, Noah Kantrowitz\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/poise",
      "revision": "~> 2.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/application",
      "revision": "~> 5.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/poise-python",
      "revision": "~> 1.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/poise-service",
      "revision": "~> 1.0",
      "self_resolve": true
    }
  ]
}