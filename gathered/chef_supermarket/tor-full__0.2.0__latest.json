{
  "name": "tor-full Chef cookbook",
  "chef_cookbook_name": "tor-full",
  "revision": "0.2.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/tor-full",
    "https://supermarket.chef.io/cookbooks/tor-full/download",
    "https://supermarket.chef.io/cookbooks/tor-full/versions/0.2.0",
    "https://supermarket.chef.io/cookbooks/tor-full/versions/0.2.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/tor-full/versions/0.2.0",
    "https://supermarket.chef.io/api/v1/cookbooks/tor-full",
    "https://supermarket.chef.io/api/v1/cookbooks/tor-full/versions/0.2.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/tor-full",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/tor-full/versions/0.2.0/download",
  "deprecated": false,
  "created": "2014-11-09T13:35:53.141Z",
  "updated": "2015-02-07T20:24:41.313Z",
  "description": "Installs/Configures tor",
  "maintainer": {
    "name": "freethenation",
    "email": "rpklafter@yahoo.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 1829178,
  "downloads_count_revision": 404104,
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nInstalls Tor and optionally sets up a hidden service or configures as a relay\n\nRequirements\n============\n## Ohai and Chef:\n\n* Ohai: 6.14.0+\n\nThis cookbook makes use of `node['platform_family']` to simplify platform\nselection logic. This attribute was introduced in Ohai v0.6.12.\n\n## Platform:\n\nThe following platform families are supported:\n\n* Debian\n* RHEL\n* Fedora\n\n## Cookbooks:\n\n* apt (for Debian installation)\n* yum (for RHEL 5 installation)\n\n## Attributes\n\n### General config section\n* `node['tor']['DataDirectory']` - The directory for keeping all the keys/etc\n* `node['tor']['MinLogLevel']` - The minimum log level to log. Possible values include debug, info, notice, warn, and err.\n* `node['tor']['LogDestination']` - Where logs should be written. Valid values include a path to a file or \"syslog\"\n* `node['tor']['SocksPorts']` - List of 'address:port' to open tor socks proxy on. Defaults to disabled\n\n### Hidden Services config section\n\n* `node['tor']['HiddenServices']` - hidden services Tor should expose\n```ruby\n# Example\ndefault['tor']['hiddenServices'] = {\n  'HIDDEN_SERVICE_NAME':{\n  'HiddenServiceDir' => '/var/lib/tor/some_service/', #default is /var/lib/tor/HIDDEN_SERVICE_NAME/\n  'HiddenServicePorts' => ['80 127.0.0.1:80'] #x y:z says to redirect requests on port x to the address y:z\n}\n```\n\n### Relay config section\n\n* `node['tor']['relay']['enabled']` - if true tor will act as a relay\n* `node['tor']['relay']['ORPort']` - What port to advertise for incoming Tor connections\n* `node['tor']['relay']['Address']` - The IP address or full DNS name for incoming connections to your relay\n* `node['tor']['relay']['OutboundBindAddress']` - If you have multiple network interfaces, you can specify one for outgoing traffic to use\n* `node['tor']['relay']['Nickname']` - A handle for your relay, so people don't have to refer to it by key\n* `node['tor']['relay']['RelayBandwidthRate']` - Limit how much relayed traffic you will allow in kilobytes (not bits)\n* `node['tor']['relay']['RelayBandwidthBurst']` - Limit how much relayed traffic you will allow for bursts in kilobytes (not bits)\n* `node['tor']['relay']['ContactInfo']` - ContactInfo you can be reached at\n  * Example: `\"0xFFFFFFFF Random Person nobody AT example dot com\"`\n* `node['tor']['relay']['ExitPolicy']` - Sets the exit node policy for tor defaults to no exit\n  * Exampe: `['accept *:6660-6667','reject *:*'] # allow irc ports but no more`\n* `node['tor']['relay']['BridgeRelay']` - Set to 1 to run a bridge relay\n* `node['tor']['relay']['PublishServerDescriptor']` - Set to 0 to run a private bridge relay\n* `node['tor']['relay']['Directory']` - If true tor relay will server as a directory mirror\n* `node['tor']['relay']['DirPort']` - \"address:port\" from which to mirror directory information\n* `node['tor']['relay']['DirPortFrontPage']` - If true a blob of html will be returned on your DirPort explaining Tor.\n  * To send a custom HTML blob specify its full path, example `\"/etc/tor/tor-exit-notice.html\"`\n* `node['tor']['relay']['MyFamily']` - If you run more than one tor node add keyids for other tor nodes\n\nRecipes\n=======\n\n## tor-full::default\n\nInstalls Tor and enables Tor service. By default it will not open a socks proxy, offer a hidden service,\nor act as a relay.\n\n## tor-full::relay\n\nInstalls Tor and configs Tor to be a relay. By default the relay will not be an exit or directory.\nMake sure to read through the attributes section for relays above.\n\nUsage\n=====\n\nThis cookbook primarily installs Tor core packages. It can also be\nused to run a Tor relay or a hidden service.\n\nTo install tor client (all supported platforms):\n\n    include_recipe 'tor'\n\nTo install tor relay:\n\n    include_recipe \"tor::relay\"\n\nExamples\n-----\n### Open local socks port\nThe example role below opens a Tor socks proxy on port 9050 available to localhost only\n\n```ruby\nname \"torproxy\"\nrun_list(\"recipe[tor-full]\")\noverride_attributes(\n  \"tor\" => {\n    \"SocksPorts\" => [\"127.0.0.1:9050\"]\n  }\n)\n```\n\n### Hidden service on port 80\nThe example role below serves a website on port 80 as a hidden service. \n\n```ruby\nname \"torservice\"\nrun_list(\"recipe[tor-full]\")\noverride_attributes(\n  \"tor\" => {\n    \"hiddenServices\" => {\n      \"hidden_web_service\" => {\n       \"HiddenServicePorts\" => [\"80 127.0.0.1:8080\"]\n       #requests on port 80 are redirected to localhost port 8080\n      }\n    }\n  }\n)\n```\n\nNote: The `tor-full` recipe will write the hidden service's hostname to the attribute `node.tor.hiddenServices.HIDDEN_SERVICE_NAME.hostname` after node convergence.\n\n### Tor Relay\nThe node config below sets up a Tor relay. The relay is a directory and an exit\nfor IRC (ports 6660 & 6667).\n\n```json\n{\n  \"run_list\": [\n    \"recipe[tor-full::relay]\"\n  ],\n  \"tor\": { \n    \"relay\": {\n      \"Address\":\"tor.icyego.com\",\n      \"Nickname\":\"IcyEgo\",\n      \"RelayBandwidthRate\":\"1000\",\n      \"RelayBandwidthBurst\":\"1100\",\n      \"ContactInfo\":\"ContactInfo 0x04FAC2E9CC21424A Richard Klafter <rpklafter@yahoo.com>\",\n      \"Directory\":true,\n      \"ExitPolicy\":[\"accept *:6660-6667\",\"reject *:*\"]\n    }\n  }\n}\n\n```\n\nNote: you can make `recipe[tor-full]` behave like `recipe[tor-full::relay]` by \nsetting the attribute `tor.relay.enabled = true`.\n\nLicense and Author\n==================\n\n- Author:: Richard Klafter (<rpklafter@yahoo.com>)\n- License:: MIT\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "rhel",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}