{
  "name": "cacert Chef cookbook",
  "chef_cookbook_name": "cacert",
  "revision": "0.3.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/cacert",
    "https://supermarket.chef.io/cookbooks/cacert/download",
    "https://supermarket.chef.io/cookbooks/cacert/versions/0.3.1",
    "https://supermarket.chef.io/cookbooks/cacert/versions/0.3.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/cacert/versions/0.3.1",
    "https://supermarket.chef.io/api/v1/cookbooks/cacert",
    "https://supermarket.chef.io/api/v1/cookbooks/cacert/versions/0.3.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Networking",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/cacert",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/cacert/versions/0.3.1/download",
  "deprecated": false,
  "created": "2013-06-18T13:56:21.000Z",
  "updated": "2016-04-27T13:33:11.500Z",
  "description": "Installs/Configures cacert",
  "maintainer": {
    "name": "chr4",
    "email": "me@chr4.org"
  },
  "license": "GNU Public License 3.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 2429639,
  "downloads_count_revision": 109,
  "repository_url": "https://github.com/chr4-cookbooks/cacert",
  "issues_url": "https://github.com/chr4-cookbooks/cacert",
  "chef_source_url": "https://github.com/chr4-cookbooks/cacert",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# cacert Cookbook\n\nThis cookbook provides LWRP to install certificate authorities and set the needed hash-symlinks.\n\n## Attributes\n\nYou can specify the default path were the ssl certificates and symlinks are stored using an attribute\n\n```ruby\nnode['cacert']['cert_dir'] # defaults to '/etc/ssl/certs'\n```\n\n## Recipes\n\n### default\n\nThe default recipe will install CA certificates defined in the `certs` attributes of the node.\n\nEg.\n\n```json\n{\n  \"cacert\": {\n    \"certs\": {\n      \"my.ca.cert.org\": {\n        \"source\": \"https://my.ca.cert.org/certs/root.crt\",\n        \"cert_dir\": \"/etc/ssl/certs\",\n        \"hash\": \"492ffc07\"\n      }\n    }\n  }\n}\n```\n\n### cacert.org\n\nThis recipe installs the cacert.org root certificate\n\nIt automatically sets the correct symlinks on broken systems (like Debian Squeeze), see this gist: https://gist.github.com/chr4/5805334\n\n\n## Providers\n\nTo use the providers, add the following to your metadata.rb\n\n    depends 'cacert'\n\n### cacert\n\nInstalls a certificate from a given URL, and calls cacert_hash to create the necessary symlinks.\nThe following example installs the cacert.org root certificate to /etc/ssl/certs/cacert.org.pem\n\n*NOTE* On Debian Squeeze (and potentially on other systems), openssl generates the wrong hash. As a workaround, you can specify the hash manually, see the \"hash\" attribute below.\n\n    cacert 'cacert.org.pem' do\n      cert     'cacert.org.pem'                        # name attribute\n      source   'https://www.cacert.org/certs/root.crt' # required\n      cert_dir '/etc/ssl/certs'                        # defaults to node['cacert']['cert_dir']\n      action   :create                                 # default :create\n\n      # You can specify the hash for the symlink manually.\n      # Ff not given, this will be generated using openssl x509 -hash\n      hash     '99d0fa06' # correct hash for cacerts root certificate\n\n      # Also, a sha256 checksum is supported.\n      # If the checksum doesn't match, the certificate won't be installed.\n      checksum 'c0e0773a79dceb622ef6410577c19c1e177fb2eb9c623a49340de3c9f1de2560'\n    end\n\n### cacert_hash\n\nYou can use the cacert_hash provider by its own, too\n\n    cacert_hash 'cacert.org.pem' do\n      cert     'cacert.org.pem'                        # name attribute\n      cert_dir '/etc/ssl/certs'                        # defaults to node['cacert']['cert_dir']\n\n      # You can specify the hash for the symlink manually.\n      # Ff not given, this will be generated using openssl x509 -hash\n      hash     '99d0fa06' # correct hash for cacerts root certificate\n    end\n\n\n# Contributing\n\ne.g.\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write you change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\n# License and Authors\n\nAuthor: Chris Aumann <me@chr4.org>\nContributors: Fran√ßois Lamboley <fload@me.com>\n\nLicense: GPLv3\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "suse",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ],
  "chef_recipes": {
    "cacert::default": "Installs certificates according to attributes",
    "cacert::cacert.org": "Installs cacert.org root certificates (Class 1 and 3 PKI)"
  },
  "parameters": {
    "cacert/cert_dir": {
      "description": "Installation directory for SSL certificates",
      "default": "/etc/ssl/certs",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "cacert/certs": {
      "description": "A hash containing information of certificates to deploy",
      "default": "{}",
      "choice": [],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    }
  }
}