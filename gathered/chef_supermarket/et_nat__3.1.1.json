{
  "name": "et_nat Chef cookbook",
  "chef_cookbook_name": "et_nat",
  "revision": "3.1.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/et_nat",
    "https://supermarket.chef.io/cookbooks/et_nat/download",
    "https://supermarket.chef.io/cookbooks/et_nat/versions/3.1.1",
    "https://supermarket.chef.io/cookbooks/et_nat/versions/3.1.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/et_nat/versions/3.1.1",
    "https://supermarket.chef.io/api/v1/cookbooks/et_nat",
    "https://supermarket.chef.io/api/v1/cookbooks/et_nat/versions/3.1.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Web Server/Apache HTTP Server"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/et_nat",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/et_nat/versions/3.1.1/download",
  "deprecated": false,
  "created": "2015-03-24T00:10:09.906Z",
  "updated": "2015-10-16T16:59:36.294Z",
  "description": "Apache v2.0",
  "maintainer": {
    "name": "evertrue",
    "email": "devops@evertrue.com"
  },
  "license": "All rights reserved",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 280224,
  "downloads_count_revision": 250,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# et_nat cookbook\n\n[![Build Status](https://img.shields.io/travis/chef-cookbooks/apt.svg)](https://travis-ci.org/evertrue/et_nat-cookbook)\n[![Cookbook Version](https://img.shields.io/cookbook/v/et_nat.svg)](https://community.chef.io/cookbooks/apt)\n\nA cookbook to provide a NAT for an EC2 VPC (with HA if desired)\n\n# Requirements\n\n* An EC2 VPC\n* 1 VPC node for a simple NAT or 3 VPC nodes for HA\n\n# Usage\n\n* Include `et_nat::default` in your node’s run list.\n* Refer to @eherot’s [“The Right Way to set up NAT in EC2” blog post](http://evertrue.github.io/blog/2015/07/06/the-right-way-to-set-up-nat-in-ec2/) for more details.\n\nWhen creating instances using this cookbook, in order to assign a public IP address in your VPC, you’ll want to use a command like this:\n\n```bash\nknife ec2 server create \\\n    -E prod \\\n    -N prod-nat \\\n    -s subnet-xxxxxxxx \\\n    -f c3.large \\\n    -g sg-xxxxxxxx \\\n    -r \"recipe[xyz]\" \\\n    --iam-profile nat-ha \\\n    --associate-public-ip\n```\n\nThe `--associate-public-ip` is especially crucial, as otherwise, the instance will be unable to connect out, nor will it function as a NAT.\n\n### Network Configuration\n\n# Attributes\n\n* `['nat']['yaml']['mocking']`: Default value is `true`\n* `['nat']['yaml']['monitor_enabled']`: Default value is `false`\n* `['nat']['search_string']` = Default value is `'run_list:recipe\\[et_nat\\]'`\n\n# Recipes\n\n## default\n\n* Installs Fog for making AWS API calls\n* Uses the other two recipes in this cookbook to set up the NAT mechanisms\n\n## ha\n\n* Provides mechanisms for maintaining high availability of a cluster of NAT instances using Chef Search & a NAT monitor script\n* Can set up snitch-style monitoring using [Cronitor](https://cronitor.io)\n    - Specify `monitor_token` and `monitor_opts` in your YAML config to create a new Cronitor monitor\n    - Specify `monitor_code` to use an existing Cronitor monitor\n    - See the [`cronitor` gem](https://github.com/evertrue/cronitor) docs for details on what these fields expect\n\n## iptables\n\n* Does the bulk of the work to set up the NAT\n\n# Author\n\nAuthor:: EverTrue (<devops@evertrue.com>)\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/et_fog",
      "revision": "~> 1.2",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/magic",
      "revision": "~> 1.1",
      "self_resolve": true
    }
  ]
}