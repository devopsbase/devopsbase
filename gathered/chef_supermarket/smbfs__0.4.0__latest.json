{
  "name": "smbfs Chef cookbook",
  "chef_cookbook_name": "smbfs",
  "revision": "0.4.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/smbfs",
    "https://supermarket.chef.io/cookbooks/smbfs/download",
    "https://supermarket.chef.io/cookbooks/smbfs/versions/0.4.0",
    "https://supermarket.chef.io/cookbooks/smbfs/versions/0.4.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/smbfs/versions/0.4.0",
    "https://supermarket.chef.io/api/v1/cookbooks/smbfs",
    "https://supermarket.chef.io/api/v1/cookbooks/smbfs/versions/0.4.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Guide/Text/Pattern",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/smbfs",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/smbfs/versions/0.4.0/download",
  "deprecated": false,
  "created": "2012-06-15T00:09:12.000Z",
  "updated": "2014-08-05T00:00:38.048Z",
  "description": "Installs/Configures smbfs and adds mount points according to data driven pattern",
  "maintainer": {
    "name": "peter_donald",
    "email": "peter@realityforge.org"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 2,
  "downloads_count": 2391777,
  "downloads_count_revision": 1131735,
  "repository_url": "https://github.com/realityforge/chef-smbfs",
  "issues_url": "https://github.com/realityforge/chef-smbfs",
  "chef_source_url": "https://github.com/realityforge/chef-smbfs",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\n[![Build Status](https://secure.travis-ci.org/realityforge/chef-smbfs.png?branch=master)](http://travis-ci.org/realityforge/chef-smbfs)\n\nA recipe that installs smbfs on linux hosts. It also includes a resource for mounting cifs shares and an attribute driven recipe managing smbfs mounts.\n\nRequirements\n============\n\nTested on Ubuntu 11.\n\nAttributes\n==========\n\n* `node['smbfs']['mounts']` - A map that describes zero or more cifs mounts. Used to drive the `attribtue_driven` recipe.\n\nUsage\n=====\n\nThere are two recipes provided:\n\n* `smbfs::default` - Install the smbfs package.\n* `smbfs::attribute_driven` - Invokes the `smbfs::default` recipe and then interprets the `node['smbfs']['mounts']`\n  attribtue and defines the resources for the mouts.\n\nResources\n=========\n\n`smbfs_mount`\n-------------\n\nThe `smbfs_mount` resource helps define a mount for a cifs share.\n\n- path: the path on which to mout the share. This is the name of the resource.\n- cifs_path: The url for cifs mount.\n- username: The username if authenticated access required to cifs share. Defaults to nil.\n- password: The password. Must be present iff username is present. Defaults to nil.\n- option: Arbitrary key value pairs passed to mount.\n\nThe simplest example for mounting a share;\n\n    smbfs_mount '/mnt' do\n      cifs_path '//san01.example.org/myshare$/Some/Path'\n      username 'MyUser',\n      password 'MyPass',\n      options {'rw' => nil}\n    end\n\nAttribute Driven Recipe\n=======================\n\nThe simplest example for mounting a share;\n\n    node['smbfs']['mounts']['/mnt'] =\n      {\n        'cifs_path' => '//san01.example.org/myshare$/Some/Path',\n        'username' => 'MyUser',\n        'password' => 'MyPass',\n        'options' =>\n          {\n            'rw' => nil,\n            'dir_mode' => '0700',\n            'file_mode' => '0600',\n            'noserverino' => nil,\n            'uid' => 'myuser',\n            'gid' => 'mygroup'\n          }\n      }\n\n    include_recipe 'smbfs::attribute_driven'\n"
}