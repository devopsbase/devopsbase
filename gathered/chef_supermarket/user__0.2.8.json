{
  "name": "user Chef cookbook",
  "chef_cookbook_name": "user",
  "revision": "0.2.8",
  "uris": [
    "https://supermarket.chef.io/cookbooks/user",
    "https://supermarket.chef.io/cookbooks/user/download",
    "https://supermarket.chef.io/cookbooks/user/versions/0.2.8",
    "https://supermarket.chef.io/cookbooks/user/versions/0.2.8/download",
    "https://supermarket.chef.io/api/v1/cookbooks/user/versions/0.2.8",
    "https://supermarket.chef.io/api/v1/cookbooks/user",
    "https://supermarket.chef.io/api/v1/cookbooks/user/versions/0.2.8/download"
  ],
  "labels": [
    "Chef cookbook",
    "Utilities",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/Europe/EU",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/user",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/user/versions/0.2.8/download",
  "deprecated": false,
  "created": "2011-08-13T04:23:57.000Z",
  "updated": "2015-03-22T23:26:02.767Z",
  "description": "A convenient Chef LWRP to manage user accounts and SSH keys (this is not the opscode users cookbook)",
  "maintainer": {
    "name": "fnichol",
    "email": "fnichol@nichol.ca"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 51,
  "downloads_count": 15767335,
  "downloads_count_revision": 1258487,
  "repository_url": "http://fnichol.github.io/chef-user/",
  "issues_url": "http://fnichol.github.io/chef-user/",
  "chef_source_url": "http://fnichol.github.io/chef-user/",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Description\n\nA convenient Chef LWRP to manage user accounts and SSH keys. This is **not**\nthe Opscode *users* cookbook.\n\n# Requirements\n\n## Chef\n\nTested on 0.10.2 but newer and older version should work just fine. File an\n[issue][issues] if this isn't the case.\n\n## Platform\n\nThe following platforms have been tested with this cookbook, meaning that the\nrecipes run on these platforms without error:\n\n* ubuntu\n* debian\n* mac_os_x\n\n## Cookbooks\n\nThere are **no** external cookbook dependencies.\n\n# Installation\n\nDepending on the situation and use case there are several ways to install\nthis cookbook. All the methods listed below assume a tagged version release\nis the target, but omit the tags to get the head of development. A valid\nChef repository structure like the [Opscode repo][chef_repo] is also assumed.\n\n## From the Opscode Community Platform\n\nTo install this cookbook from the Opscode platform, use the *knife* command:\n\n    knife cookbook site install user\n\n## Using Librarian\n\nThe [Librarian][librarian] gem aims to be Bundler for your Chef cookbooks.\nInclude a reference to the cookbook in a **Cheffile** and run\n`librarian-chef install`. To install with Librarian:\n\n    gem install librarian\n    cd chef-repo\n    librarian-chef init\n    cat >> Cheffile <<END_OF_CHEFFILE\n    cookbook 'user',\n      :git => 'git://github.com/fnichol/chef-user.git', :ref => 'v0.2.8'\n    END_OF_CHEFFILE\n    librarian-chef install\n\n## Using knife-github-cookbooks\n\nThe [knife-github-cookbooks][kgc] gem is a plugin for *knife* that supports\ninstalling cookbooks directly from a GitHub repository. To install with the\nplugin:\n\n    gem install knife-github-cookbooks\n    cd chef-repo\n    knife cookbook github install fnichol/chef-user/v0.2.8\n\n## As a Git Submodule\n\nA common practice (which is getting dated) is to add cookbooks as Git\nsubmodules. This is accomplishes like so:\n\n    cd chef-repo\n    git submodule add git://github.com/fnichol/chef-user.git cookbooks/user\n    git submodule init && git submodule update\n\n**Note:** the head of development will be linked here, not a tagged release.\n\n## As a Tarball\n\nIf the cookbook needs to downloaded temporarily just to be uploaded to a Chef\nServer or Opscode Hosted Chef, then a tarball installation might fit the bill:\n\n    cd chef-repo/cookbooks\n    curl -Ls https://github.com/fnichol/chef-user/tarball/v0.2.8 | tar xfz - && \\\n      mv fnichol-chef-user-* user\n\n# Usage\n\nSimply include `recipe[user]` in your run_list and the `user_account`\nresource will be available.\n\nTo use `recipe[user::data_bag]`, include it in your run_list and have a\ndata bag called `\"users\"` with an item like the following:\n\n    {\n      \"id\"        : \"hsolo\",\n      \"comment\"   : \"Han Solo\",\n      \"home\"      : \"/opt/hoth/hsolo\",\n      \"ssh_keys\"  : [\"123...\", \"456...\"]\n    }\n\nor a user to be removed:\n\n    {\n      \"id\"      : \"lando\",\n      \"action\"  : \"remove\"\n    }\n\nThe data bag recipe will iterate through a list of usernames defined in\n`node['users']` and attempt to pull in the user's information from the data\nbag item. In other words, having:\n\n    node['users'] = ['hsolo']\n\nwill set up the `hsolo` user information and not use the `lando` user\ninformation.\n\n# Recipes\n\n## default\n\nThis recipe is a no-op and does nothing.\n\n## data_bag\n\nProcesses a list of users with data drawn from a data bag. The default data bag\nis `users` and the list of user account to create on this node is set on\n`node['users']`.\n\n# Attributes\n\n## `home_root`\n\nThe default parent path of a user's home directory. Each resource can override\nthis value which varies by platform. Generally speaking, the default value is\n`\"/home\"`.\n\n## `default_shell`\n\nThe default user shell given to a user. Each resource can override this value\nwhich varies by platform. Generally speaking, the default value is\n`\"/bin/bash\"`.\n\n## `manage_home`\n\nWhether of not to manage the home directory of a user by default. Each resource\ncan override this value. The are 2 valid states:\n\n* `\"true\"`, `true`, or `\"yes\"`: will manage the user's home directory.\n* `\"false\"`, `false`, or `\"no\"`: will not manage the user's home directory.\n\nThe default is `true`.\n\n## `create_user_group`\n\nWhether or not to to create a group with the same name as the user by default.\nEach resource can override this value. The are 2 valid states:\n\n* `\"true\"`, `true`, or `\"yes\"`: will create a group for the user by default.\n* `\"false\"`, `false`, or `\"no\"`: will create a group for the user by default.\n\nThe default is `true`.\n\n## `ssh_keygen`\n\nWhether or not to generate an SSH keypair for the user by default. Each\nresource can override this value. There are 2 valid states:\n\n* `\"true\"`, `true`, or `\"yes\"`: will generate an SSH keypair when the account\n  is created.\n* `\"false\"`, `false`, or `\"no\"`: will generate an SSH keypair when the account\n  is created.\n\nThe default is `true`.\n\n## `data_bag`\n\nThe data bag name containing a group of user account information. This is used\nby the `data_bag` recipe to use as a database of user accounts. The default is\n`\"users\"`.\n\n# Resource and Providers\n\n## user_account\n\n## Actions\n\nAction    |Description                   |Default\n----------|------------------------------|-------\ncreate    |Create the user, its home directory, `.ssh/authorized_keys`, and `.ssh/{id_dsa,id_dsa.pub}`. |Yes\nremove    |Remove the user account. |\nmodify    |Modiy the user account. |\nmanage    |Manage the user account. |\nlock      |Lock the user's password. |\nunlock    |Unlock the user's password. |\n\n## Attributes\n\nAttribute   |Description |Default value\n------------|------------|-------------\nusername    |**Name attribute:** The name of the user. |`nil`\ncomment     |Gecos/Comment field. |`nil`\nuid         |The numeric user id. |`nil`\ngid         |The primary group id. |`nil`\nhome        |Home directory location. |`\"#{node['user']['home_root']}/#{username}`\nshell       |The login shell. |`node['user']['default_shell']`\npassword    |Shadow hash of password. |`nil`\nsystem_user |Whether or not to create a system user. |`false`\nmanage_home |Whether or not to manage the home directory. |`true`\ncreate_group |Whether or not to to create a group with the same name as the user. |`node['user']['create_group']`\nssh_keys    |A **String** or **Array** of SSH public keys to populate the user's `.ssh/authorized_keys` file. |`[]`\nssh_keygen  |Whether or not to generate an SSH keypair for the user. |`node['user']['ssh_keygen']`\n\n## Examples\n\n### Creating a User Account\n\n    user_account 'hsolo' do\n      comment   'Han Solo'\n      ssh_keys  ['3dc348d9af8027df7b9c...', '2154d3734d609eb5c452...']\n      home      '/opt/hoth/hsolo'\n    end\n\n### Locking a User Account\n\n    user_account 'lando' do\n      action  :lock\n    end\n\n### Removing a User account\n\n    user_account 'obiwan' do\n      action  :remove\n    end\n\n# Development\n\n* Source hosted at [GitHub][repo]\n* Report issues/Questions/Feature requests on [GitHub Issues][issues]\n\nPull requests are very welcome! Make sure your patches are well tested.\nIdeally create a topic branch for every separate change you make.\n\n# License and Author\n\nAuthor:: Fletcher Nichol (<fnichol@nichol.ca>)\n\nCopyright 2011, Fletcher Nichol\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n[chef_repo]:    https://github.com/opscode/chef-repo\n[kgc]:          https://github.com/websterclay/knife-github-cookbooks#readme\n[librarian]:    https://github.com/applicationsonline/librarian#readme\n\n[repo]:         https://github.com/fnichol/chef-user\n[issues]:       https://github.com/fnichol/chef-user/issues\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "mac_os_x",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "suse",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ],
  "chef_recipes": {
    "user": "This recipe is a no-op and does nothing.",
    "user::data_bag": "Processes a list of users with data drawn from a data bag."
  }
}