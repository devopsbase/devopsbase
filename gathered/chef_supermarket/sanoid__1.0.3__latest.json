{
  "name": "sanoid Chef cookbook",
  "chef_cookbook_name": "sanoid",
  "revision": "1.0.3",
  "uris": [
    "https://supermarket.chef.io/cookbooks/sanoid",
    "https://supermarket.chef.io/cookbooks/sanoid/download",
    "https://supermarket.chef.io/cookbooks/sanoid/versions/1.0.3",
    "https://supermarket.chef.io/cookbooks/sanoid/versions/1.0.3/download",
    "https://supermarket.chef.io/api/v1/cookbooks/sanoid/versions/1.0.3",
    "https://supermarket.chef.io/api/v1/cookbooks/sanoid",
    "https://supermarket.chef.io/api/v1/cookbooks/sanoid/versions/1.0.3/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/sanoid",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/sanoid/versions/1.0.3/download",
  "deprecated": false,
  "created": "2015-02-28T00:19:32.872Z",
  "updated": "2015-02-28T01:07:24.753Z",
  "description": "Installs/Configures sanoid",
  "maintainer": {
    "name": "stevenolen",
    "email": "technolengy@gmail.com"
  },
  "license": "GPL v3",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 1354932,
  "downloads_count_revision": 338708,
  "repository_url": "https://github.com/stevenolen/chef-sanoid",
  "issues_url": "https://github.com/stevenolen/chef-sanoid/issues",
  "chef_source_url": "https://github.com/stevenolen/chef-sanoid",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# sanoid-cookbook\n\n## Description\n\nA chef cookbook which provides an LWRP interface for the [sanoid](https://github.com/jimsalterjrs/sanoid) tool (for making snapshots with ZFS).  Additionally the `sanoid::default` recipe installs the latest sanoid and syncoid to the system. Thanks to [chef-accumulator](https://github.com/kisoku/chef-accumulator) and [opscode-backup](https://github.com/opscode-cookbooks/opscode-backup) (for some cookbook design patterns) cookbooks as well as github user [jimsalterjrs](https://github.com/jimsalterjrs) for the snapshot tool!\n\n## Supports\n\n  * FreeBSD\n  * Debian-alike, Red Hat-alike (zfs_on_linux or some other way to get `zfs` command is required)\n\n## Attributes\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['sanoid']['bin_path']</tt></td>\n    <td>String</td>\n    <td>Location where the sanoid binary will be stored</td>\n    <td><tt>`/usr/local/bin`</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['sanoid']['conf_path']</tt></td>\n    <td>String</td>\n    <td>Location where the sanoid conf file will be stored</td>\n    <td><tt>`/etc/sanoid/`</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['sanoid']['user']</tt></td>\n    <td>String</td>\n    <td>Value of user to run sanoid as.</td>\n    <td><tt>`root`</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['sanoid']['group']</tt></td>\n    <td>String</td>\n    <td>Value of group to own sanoid files.</td>\n    <td><tt>Debian,RedHat: root, FreeBSD: wheel</tt></td>\n  </tr>\n</table>\n\n## Resources Overview\n\n### sanoid_dataset\n\nThe `sanoid_dataset` resource manages a snapshot model. It requires only a name and template to use (as `use_template`), but you may override any template settings for only this model as needed\n\n#### Example\n```\nsanoid_dataset 'zpool/test' do\n  use_template \"default\"\nend\n```\nPlease note that the zfs dataset must already exist, or sanoid will fail to make a snapshot for it!\n\n### sanoid_template\n\nThe `sanoid_template` resource manages a sanoid template. You can use any existing setting for snapshot timings/count here (TODO: monitoring support). Note that you should not use a template named `default` as it is already provided from the sanoid.conf file with some sane defaults.  \n\n#### Example\n```\nsanoid_template 'backup' do\n  hourly 30\n  daily 1\n  monthly 1\n  yearly 1\n  autosnap \"yes\"\n  autoprune \"yes\"\nend\n```\n\n### sanoid_syncoid\n\nThe `sanoid_syncoid` resource manages a syncoid cron job. It currently only supports a local source, remote target, because in a chef environment, you can easily just apply the opposite resource to the remote server if you'd like the reverse to occur. The user defaults to `node['sanoid']['user']` which may be quite different for you, so feel free to override it. The cron attribute follows the `min hour day month weekday` format, and the default results in one sync daily at midnight (eg. `0 0 * * *`). Also supports deletion of a job with `action :delete`.\n\n#### Example\n```\nsanoid_syncoid 'backup' do\n  user\n  server \"backup.server.com\"\n  dataset \"zroot/tmp\"\n  target \"backup/zroot/tmp\"\n  cron \"0 0 * * *\"\nend\n```\n\n\n## License and Authors\n\nAuthor:: Steve Nolen (technolengy@gmail.com)\n\n```\nCopright:: 2015 Steve Nolen\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.",
  "requires": [
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "freebsd",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/accumulator",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/perl",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "default": "Installs sanoid from github"
  }
}