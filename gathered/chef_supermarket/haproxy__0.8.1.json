{
  "name": "haproxy Chef cookbook",
  "chef_cookbook_name": "haproxy",
  "revision": "0.8.1",
  "uris": [
    "https://supermarket.chef.io/cookbooks/haproxy",
    "https://supermarket.chef.io/cookbooks/haproxy/download",
    "https://supermarket.chef.io/cookbooks/haproxy/versions/0.8.1",
    "https://supermarket.chef.io/cookbooks/haproxy/versions/0.8.1/download",
    "https://supermarket.chef.io/api/v1/cookbooks/haproxy/versions/0.8.1",
    "https://supermarket.chef.io/api/v1/cookbooks/haproxy",
    "https://supermarket.chef.io/api/v1/cookbooks/haproxy/versions/0.8.1/download"
  ],
  "labels": [
    "Chef cookbook",
    "Networking",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Proxy/HAProxy"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/haproxy",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/haproxy/versions/0.8.1/download",
  "deprecated": false,
  "created": "2009-10-25T23:51:07.000Z",
  "updated": "2015-10-23T01:08:51.233Z",
  "description": "Installs and configures haproxy",
  "maintainer": {
    "name": "heavywater",
    "email": "cookbooks@opscode.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 100,
  "downloads_count": 25105266,
  "downloads_count_revision": 1258632,
  "repository_url": "http://github.com/hw-cookbooks/haproxy",
  "issues_url": "http://github.com/hw-cookbooks/haproxy",
  "chef_source_url": "http://github.com/hw-cookbooks/haproxy",
  "gatherbase_origin": "chef-supermarket",
  "readme": "= DESCRIPTION:\n\nInstalls haproxy and prepares the configuration location.\n\n= REQUIREMENTS:\n\n== Platform:\n\nTested on Ubuntu 8.10 and higher.\n\n== Cookbooks:\n\n= ATTRIBUTES:\n\n* `node['haproxy']['member_port']` - the port that member systems will be listening on, default 80\n* `node['haproxy']['enable_admin']` - whether to enable the admin interface. default true. Listens on port 22002.\n* `node['haproxy']['app_server_role']` - used by the `app_lb` recipe to search for a specific role of member systems. Default `webserver`.\n\n= USAGE:\n\nUse either the default recipe or the app_lb recipe.\n\nWhen using the default recipe, modify the haproxy.cfg.erb file with listener(s) for your sites/servers.\n\nThe app_lb recipe is designed to be used with the application cookbook, and provides search mechanism to find the appropriate application servers. Set this in a role that includes the haproxy::app_lb recipe. For example,\n\n    name \"load_balancer\"\n    description \"haproxy load balancer\"\n    run_list(\"recipe[haproxy::app_lb]\")\n    override_attributes(\n      \"haproxy\" => {\n        \"app_server_role\" => \"webserver\"\n      }\n    )\n\nThe search also relies on an attribute \"app_environment\" being set on the node and a role named with the same value. For example, production:\n\n\n    name \"production\"\n    description \"Nodes in the production environment.\"\n    default_attributes(\n      \"app_environment\" => \"production\"\n    )\n\n= LICENSE and AUTHOR:\n\nAuthor:: Joshua Timberman (<joshua@opscode.com>)\n\nCopyright:: 2009-2010, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": [],
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": [],
      "one_of_group": "os"
    }
  ],
  "chef_recipes": {
    "haproxy": "Installs and configures haproxy",
    "haproxy::app_lb": "Installs and configures haproxy by searching for nodes of a particular role"
  }
}