{
  "name": "monit-ng Chef cookbook",
  "chef_cookbook_name": "monit-ng",
  "revision": "1.6.4",
  "uris": [
    "https://supermarket.chef.io/cookbooks/monit-ng",
    "https://supermarket.chef.io/cookbooks/monit-ng/download",
    "https://supermarket.chef.io/cookbooks/monit-ng/versions/1.6.4",
    "https://supermarket.chef.io/cookbooks/monit-ng/versions/1.6.4/download",
    "https://supermarket.chef.io/api/v1/cookbooks/monit-ng/versions/1.6.4",
    "https://supermarket.chef.io/api/v1/cookbooks/monit-ng",
    "https://supermarket.chef.io/api/v1/cookbooks/monit-ng/versions/1.6.4/download"
  ],
  "labels": [
    "Chef cookbook",
    "Monitoring & Trending",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/monit-ng",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/monit-ng/versions/1.6.4/download",
  "deprecated": false,
  "created": "2014-09-06T17:18:10.716Z",
  "updated": "2016-03-10T03:14:42.971Z",
  "description": "Installs and configures monit",
  "maintainer": {
    "name": "nathwill",
    "email": "nath.e.will@gmail.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 10,
  "downloads_count": 9969078,
  "downloads_count_revision": 339012,
  "repository_url": "https://github.com/bbg-cookbooks/monit-ng",
  "issues_url": "https://github.com/bbg-cookbooks/monit-ng/issues",
  "chef_source_url": "https://github.com/bbg-cookbooks/monit-ng",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Chef monit cookbook  [![Build Status](https://travis-ci.org/bbg-cookbooks/monit-ng.svg?branch=master)](https://travis-ci.org/bbg-cookbooks/monit-ng)\n===================\nInstalls and configures [Monit], with a resource\nprovider for managing additional monit checks.\n\n## Recipes\n\n- `monit::default`: installs and optionally configures monit\n- `monit::repo`: installs monit from a package repository\n- `monit::source`: installs monit from source\n- `monit::config`: configures monit\n- `monit::{crond,ntpd,postfix,rsyslog,sshd}`: install common service checks\n\n\n## Dependencies\n\n- yum-epel\n- ubuntu\n- apt\n- build-essential\n\n\n## Attributes\n\n* `default['monit']['install_method']` (default: `repo`): whether to install using repository or source, options: repo, source\n\n* `default['monit']['configure']` (default: `true`): should we setup the global config\n\n* `default['monit']['conf_file']` (default: `calculated`): monit configuration file\n\n* `default['monit']['conf_dir']` (default: `calculated`): .monitrc configuration files directory\n\n* `default['monit']['init_style']` (default: `calculated`): monit service init style\n\n* `default['monit']['config']['mmonit_url']` (default: `nil`): mmonit url\n\n* `default['monit']['config']['poll_freq']` (default: `60`): how often should monit poll\n\n* `default['monit']['config']['start_delay']` (default: `5`): configure a delay before beginning polling after service start\n\n* `default['monit']['config']['eventqueue_dir']` (default: `/var/tmp`): where to queue events if mail server unavailable\n\n* `default['monit']['config']['eventqueue_slots']` (default: `100`): events backlog queue size\n\n* `default['monit']['config']['log_file']` (default: `/var/log/monit.log`): monit log file location\n\n* `default['monit']['config']['id_file']` (default: `/var/lib/monit.id`): mmonit system id file location\n\n* `default['monit']['config']['state_file']` (default: `/var/run/monit.state`): where to save state between startups\n\n* `default['monit']['config']['port']` (default: `2812`): monit web interface listener port\n\n* `default['monit']['config']['listen']` (default: `127.0.0.1`): monit web interface listener address\n\n* `default['monit']['config']['allow']` (default: `localhost`): list of permitted control port accessors (host, basic-auth, pam, htpasswd)\n\n* `default['monit']['config']['mail_from']` (default: `node fqdn | localhost`): email notification from address\n\n* `default['monit']['config']['mail_subject']` (default: `$SERVICE $EVENT at $DATE`): notification email subject\n\n* `default['monit']['config']['mail_message']` (default: `text`): email notification body\n\n* `default['monit']['config']['subscribers']` (default: `[]`): this attributes configures `set alert` config option for each `Hash` element (subscriber) with attribute `name` and `subscriptions`, e.g. chef role\n\n\t  \"default_attributes\": {\n\t    \"monit\": {\n\t\t  \"config\": {\n\t\t\t\"subscribers\": [\n\t\t\t  {\n\t\t\t    \"name\": \"root@localhost\",\n\t\t\t    \"subscriptions\": [ \"nonexist\", \"timeout\", \"resource\", \"icmp\", \"connection\"]\n\t\t\t  }\n\t\t\t]\n\t\t  }\n\t\t}\n\t  }\n\n\n* `default['monit']['config']['mail_servers']` (default: `[]`): this attributes configures `set mailserver` config option for each `Hash` element (mail server) with below attributes, e.g. chef role\n\n\t  \"default_attributes\": {\n\t    \"monit\": {\n\t\t  \"config\": {\n\t\t\t\"mail_servers\": [\n\t\t\t  {\n\t\t\t  \t\"hostname\": \"localhost\",\n\t\t\t  \t\"port\": 25,\n\t\t\t  \t\"username\": null,\n\t\t\t  \t\"password\": null,\n\t\t\t  \t\"security\": null,\n\t\t\t  \t\"timeout\": \"30 seconds\"\n\t\t\t  }\n\t\t\t]\n\t\t  }\n\t\t}\n\t  }\n\n\n\n## monit_check resource examples\n\n\n##### External Service Check\n\n```ruby\nmonit_check 'facebook_api' do\n  check_type  'host'\n  check_id    'api.facebook.com'\n  group       'external'\n  tests [\n    {\n      'condition' => 'failed port 80 proto http',\n      'action'    => 'alert'\n    },\n    {\n      'condition' => 'failed port 443 type tcpSSL proto http',\n      'action'    => 'alert'\n    },\n  ]\nend\n```\n\n##### SSHD\n\n```ruby\nmonit_check 'sshd' do\n  check_id  '/var/run/sshd.pid'\n  group     'system'\n  start     '/etc/init.d/ssh start'\n  stop      '/etc/init.d/ssh stop'\n  tests [\n    {\n      'condition' => \"failed port #{node.openssh.server.port} proto ssh for 3 cycles\",\n      'action'    => 'restart'\n    },\n    {\n      'condition' => '3 restarts within 5 cycles',\n      'action'    => 'alert'\n    },\n  ]\nend\n```\n\n##### Postfix\n\n```ruby\nmonit_check 'postfix' do\n  check_id  '/var/spool/postfix/pid/master.pid'\n  group     'system'\n  start     '/etc/init.d/postfix start'\n  stop      '/etc/init.d/postfix stop'\n  tests [\n    {\n      'condition' => 'failed port 25 proto smtp',\n      'action'    => 'restart'\n    },\n    {\n      'condition' => '3 restarts within 5 cycles',\n      'action'    => 'alert'\n    },\n  ]\nend\n```\n\n##### Nginx\n\n```ruby\nmonit_check 'nginx' do\n  check_id  '/var/run/nginx.pid'\n  group     'app'\n  start     '/etc/init.d/nginx start'\n  stop      '/etc/init.d/nginx stop'\n  tests [\n    {\n      'condition' => 'failed port 80',\n      'action'    => 'restart'\n    },\n    {\n      'condition' => '3 restarts within 5 cycles',\n      'action'    => 'alert'\n    }\n  ]\nend\n```\n\n##### Memcache\n\n```ruby\nmonit_check 'memcache' do\n  check_id  '/var/run/memcached.pid'\n  group     'app'\n  start     '/etc/init.d/memcached start'\n  stop      '/etc/init.d/memcached stop'\n  tests [\n    {\n      'condition' => 'failed port 11211 proto memcache',\n      'action'    => 'restart'\n    },\n    {\n      'condition' => '3 restarts within 15 cycles',\n      'action'    => 'alert'\n    },\n  ]\nend\n```\n\n##### Redis\n\n```ruby\nmonit_check 'redis' do\n  check_id  '/var/run/redis/redis-server.pid'\n  group     'database'\n  start     '/etc/init.d/redis-server start'\n  stop      '/etc/init.d/redis-server stop'\n  tests [\n    {\n      'condition' => 'failed host 127.0.0.1 port 6379\n                     send \"SET MONIT-TEST value\\r\\n\" expect \"OK\"\n                     send \"EXISTS MONIT-TEST\\r\\n\" expect \":1\"',\n      'action'    => 'restart'\n    },\n    {\n      'condition' => '3 restarts within 5 cycles',\n      'action'    => 'alert'\n    },\n  ]\nend\n```\n##### Solr\n\n```ruby\nmonit_check 'solr' do\n  check_id  '/var/run/tomcat6.pid'\n  group     'app'\n  start     '/etc/init.d/tomcat6 start'\n  stop      '/etc/init.d/tomcat6 stop'\n  tests [\n    {\n      'condition' => 'failed port 8080 proto http and request \"/solr/admin/ping\" for 2 cycles',\n      'action'    => 'restart'\n    },\n    {\n      'condition' => '3 restarts within 5 cycles',\n      'action'    => 'timeout'\n    },\n  ]\nend\n```\n\n##### MongoDB\n\n```ruby\nmonit_check 'mongo' do\n  check_id  \"#{node.mongodb.dbpath}/mongod.lock\"\n  group     'database'\n  start     '/etc/init.d/mongodb start'\n  stop      '/etc/init.d/mongodb stop'\n  tests [\n    {\n      'condition' => \"failed port #{node.mongodb.port} proto http for 2 cycles\",\n      'action'    => 'restart with timeout 60 seconds'\n    },\n    {\n      'condition' => '3 restarts within 10 cycles',\n      'action'    => 'timeout'\n    },\n  ]\nend\n```\n\n\n## Contributing\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests (`rake`), ensuring they all pass\n6. Write new resource/attribute description to `README.md`\n7. Write description about changes to PR\n8. Submit a Pull Request using Github\n\n\n## Copyright & License\n\nAuthors:: Nathan Williams and [Contributors]\n\n<pre>\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</pre>\n\n\n[Monit]: http://mmonit.com/monit/\n[Contributors]: https://github.com/bbg-cookbooks/monit-ng/graphs/contributors\n",
  "requires": [
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum-epel",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ubuntu",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/build-essential",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}