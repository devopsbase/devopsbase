{
  "name": "signalfx Chef cookbook",
  "chef_cookbook_name": "signalfx",
  "revision": "0.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/signalfx",
    "https://supermarket.chef.io/cookbooks/signalfx/download",
    "https://supermarket.chef.io/cookbooks/signalfx/versions/0.1.0",
    "https://supermarket.chef.io/cookbooks/signalfx/versions/0.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/signalfx/versions/0.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/signalfx",
    "https://supermarket.chef.io/api/v1/cookbooks/signalfx/versions/0.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Monitoring & Trending",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Middleware/Proxy"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/signalfx",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/signalfx/versions/0.1.0/download",
  "deprecated": false,
  "created": "2015-03-25T17:39:32.150Z",
  "updated": "2015-03-25T17:46:20.945Z",
  "description": "Installs/Configures signalfx metricproxy",
  "maintainer": {
    "name": "hexedpackets",
    "email": "william@trywildcard.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 536000,
  "downloads_count_revision": 267970,
  "repository_url": "https://github.com/hexedpackets/chef-signalfx",
  "issues_url": "https://github.com/hexedpackets/chef-signalfx/issues",
  "chef_source_url": "https://github.com/hexedpackets/chef-signalfx",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# chef-signalfx\nChef cookbook for mangaging the SignalFX metricproxy.\n\n\n## Requirements\n#### cookbooks\n- `golang ~> 1.4`\n- `git`\n\n## Attributes\n\n#### signalfx::default\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>[:signalfx][:directory]</tt></td>\n    <td>String</td>\n    <td>Home directory for the proxy. The metricproxy binary will be linked here.</td>\n    <td><tt>/opt/signalfx</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:signalfx][:user]</tt></td>\n    <td>String</td>\n    <td>User to run as. Will be created if it does not exist.</td>\n    <td><tt>signalfx</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:signalfx][:repo]</tt></td>\n    <td>String</td>\n    <td>Location of the metricproxy repo.</td>\n    <td><tt>github.com/signalfx/metricproxy</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:signalfx][:config_file]</tt></td>\n    <td>String</td>\n    <td>Path to the configuration file.</td>\n    <td><tt>/etc/sfdbconfig.conf</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:signalfx][:log_dir]</tt></td>\n    <td>String</td>\n    <td>Directory to log to.</td>\n    <td><tt>/var/log/sfproxy</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:signalfx][:pid_file]</tt></td>\n    <td>String</td>\n    <td>File to write the PID to.</td>\n    <td><tt>/var/run/metricproxy.pid</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:signalfx][:config][:stats_delay]</tt></td>\n    <td>String</td>\n    <td>/td>\n    <td><tt>1s</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:signalfx][:config][:forward]</tt></td>\n    <td>Array</td>\n    <td>Each item is an object containing a configuration to forward incoming metrics.</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><tt>[:signalfx][:config][:listen]</tt></td>\n    <td>Array</td>\n    <td>Each item is an object containing a configuration to listen for incoming metrics.</td>\n    <td></td>\n  </tr>\n</table>\n\n## Usage\n#### signalfx::default\n\nJust include `signalfx` in your node's `run_list`:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[signalfx]\"\n  ]\n}\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/golang",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/git",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}