{
  "name": "abiquo Chef cookbook",
  "chef_cookbook_name": "abiquo",
  "revision": "0.8.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/abiquo",
    "https://supermarket.chef.io/cookbooks/abiquo/download",
    "https://supermarket.chef.io/cookbooks/abiquo/versions/0.8.0",
    "https://supermarket.chef.io/cookbooks/abiquo/versions/0.8.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/abiquo/versions/0.8.0",
    "https://supermarket.chef.io/api/v1/cookbooks/abiquo",
    "https://supermarket.chef.io/api/v1/cookbooks/abiquo/versions/0.8.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Operating Systems & Virtualization",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/abiquo",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/abiquo/versions/0.8.0/download",
  "deprecated": false,
  "created": "2014-12-19T09:44:13.138Z",
  "updated": "2016-09-05T10:06:39.157Z",
  "description": "Installs and configures an Abiquo platform",
  "maintainer": {
    "name": "nacx",
    "email": "ignasi.barrera@abiquo.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 1494241,
  "downloads_count_revision": 41,
  "repository_url": "https://github.com/abiquo/abiquo-cookbook",
  "issues_url": "https://github.com/abiquo/abiquo-cookbook/issues",
  "chef_source_url": "https://github.com/abiquo/abiquo-cookbook",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Abiquo Cookbook\n===============\n\n[![Build Status](https://travis-ci.org/abiquo/abiquo-cookbook.svg?branch=master)](https://travis-ci.org/abiquo/abiquo-cookbook)\n[![Abiquo Cookbook](http://img.shields.io/badge/cookbook-v0.8.0-blue.svg?style=flat)](https://supermarket.chef.io/cookbooks/abiquo)\n[![Chef Version](http://img.shields.io/badge/chef-v12.5.1-orange.svg?style=flat)](https://www.chef.io)\n\nThis cookbook provides several recipes to install an upgrade an Abiquo platform.\nIt allows to provision an Abiquo Server, the Remote Services server, standalone V2V\nserver, monitoring server and a KVM hypervisor from scratch, as long as upgrading \nan existing Abiquo installation.\n\n# Requirements\n\n* CentOS >= 6.7\n* RHEL >= 6.7\n\nThis cookbook depends on the following cookbooks:\n\n* apache2\n* cassandra-dse\n* iptables\n* java\n* java-management\n* selinux\n* ssl_certificate\n* yum\n* yum-epel\n\n# Recipes\n\nThe cookbook contains the following recipes:\n\n* `recipe[abiquo]` - Installs an Abiquo Platform\n* `recipe[abiquo::repository]` - Configures the Abiquo yum repositories\n* `recipe[abiquo::install_ext_services]` - Installs supporting Abiquo databases (MariaDB, Redis) and RabbitMQ\n* `recipe[abiquo::install_monolithic]` - Installs an Abiquo Monolithic\n* `recipe[abiquo::install_server]` - Installs an Abiquo Server\n* `recipe[abiquo::install_remoteservices]` - Installs the Abiquo Remote Services\n* `recipe[abiquo::install_ui]` - Installs an Abiquo UI server\n* `recipe[abiquo::install_websockify]` - Installs a Websockify server\n* `recipe[abiquo::install_frontend]` - Installs Abiquo frontend components (UI + Websockify)\n* `recipe[abiquo::install_v2v]` - Installs an standalone V2V Server\n* `recipe[abiquo::install_kvm]` - Installs the KVM hypervisor\n* `recipe[abiquo::install_monitoring]` - Installs an Abiquo Monitoring node with Cassandra and kairosDB\n* `recipe[abiquo::setup_ext_services]` - Dummy recipe to allow the profile 'ext_services' to be used\n* `recipe[abiquo::setup_monolithic]` - Configures the Abiquo Monolithic Server\n* `recipe[abiquo::setup_server]` - Configures the Abiquo Server\n* `recipe[abiquo::setup_remoteservices]` - Configures the Abiquo Remote Services\n* `recipe[abiquo::setup_ui]` - Configures the Abiquo UI server\n* `recipe[abiquo::setup_websockify]` - Configures the Websockify server\n* `recipe[abiquo::setup_frontend]` - Configures Abiquo frontend components (UI + Websockify)\n* `recipe[abiquo::setup_v2v]` - Configures an standalone V2V Server\n* `recipe[abiquo::setup_kvm]` - Configures the KVM hypervisor\n* `recipe[abiquo::setup_monitoring]` - Configures the Abiquo Monitoring node\n* `recipe[abiquo::upgrade]` - Upgrades an Abiquo Platform\n* `recipe[abiquo::install_database]` - Installs the Abiquo database\n* `recipe[abiquo::certificate]` - Configures the SSL certificates\n* `recipe[abiquo::service]` - Manages Abiquo tomcat service\n\n# Attributes\n\nThe following attributes are under the `node['abiquo']` namespace.\n\nAttribute | Description |Â Type | Default\n----------|-------------|------|--------\n`['profile']` | The profile to install: \"monolithic\", \"server\", \"remoteservices\", \"v2v\", \"kvm\" or \"monitoring\" | String | \"monolithic\"\n`['install_ext_services']` | Whether or not to install supporting services like MariaDB, Redis, RabbitMQ, etc. | Boolean | true\n`['ui_config']` | Additional parameters to configure on the Abiquo UI | Hash | { }\n`['ui_proxies']` | A collection of reverse proxy directives to configure in Apache | Array | [ ]\n`['ui_apache_opts']` | Additional Apache directives to include in the Abiquo vHost | Hash | { }\n`['nfs']['mountpoint']` | The path where the image repository is mounted | String | \"/opt/vm\\_repository\"\n`['nfs']['location']` | If set, the NFS repository to mount | String | nil\n`['license']` | The Abiquo license to install | String | nil\n`['properties']` | Hash with additional Abiquo properties to add to the Abiquo configuration file | Hash | {}\n`['yum']['base-repo']` | The main Abiquo yum repository | String | \"http://mirror.abiquo.com/abiquo/3.8/os/x86_64\"\n`['yum']['update-repo']` | The Abiquo updates yum repository | String | \"http://mirror.abiquo.com/abiquo/3.8/updates/x86_64\"\n`['yum']['gpg-check']` | Whether or not to validate the package signatures when installing | Boolean | true\n`['db']['host']` | The database host used when running the database upgrade | String | \"localhost\"\"\n`['db']['port']` | The database port used when running the database upgrade | Integer | 3306\n`['db']['user']` | The database user used when running the database upgrade | String | \"root\"\n`['db']['password']` | The database password used when running the database upgrade | String | nil\n`['db']['upgrade']` | Run the database upgrade when upgrading the monolithic profile | Boolean | true\n`['aim']['port']` | In a KVM, the port where the Abiquo AIM agent will listen | Integer | 8889\n`['tomcat']['http-port']` | The port where the Tomcat listens to HTTP traffic | Integer | 8009\n`['tomcat']['ajp-port']` | The port where the Tomcat listens to AJP traffic | Integer | 8010\n`['tomcat']['wait-for-webapps']` | If Chef will wait for the webapps to be running after restarting Tomcat | Boolean | false\n`['monitoring']['kairosdb']['host']` | The host where KairosDB is listening | Integer | \"localhost\"\n`['monitoring']['kairosdb']['port']` | The port where KairosDB is listening | Integer | 8080\n`['monitoring']['kairosdb']['version']` | The version of KairosDB to install in the monitoring node | String | \"0.9.4\"\n`['monitoring']['kairosdb']['release']` | The release of the configured KairosDB version to install in the monitoring node | String | \"6\"\n`['monitoring']['db']['host']` | The monitoring database host | String | \"localhost\"\n`['monitoring']['db']['port']` | The monitoring database port | Integer | 3306\n`['monitoring']['db']['user']` | The monitoring database user | String | \"root\"\n`['monitoring']['db']['password']` | The monitoring database password | String | \"\"\n`['monitoring']['db']['install']` | Install the monitoring database when installing the monitoring node | Boolean | true\n`['monitoring']['rabbitmq']['host']` | The RabbitMQ host where the monitoring system will notify alerts | String | \"localhost\"\n`['monitoring']['rabbitmq']['port']` | The RabbitMQ listening port for the monitoring system notifications | Integer | 5672 \n`['monitoring']['rabbitmq']['user']` | The RabbitMQ user for the monitoring system notifications | String | \"guest\"\n`['monitoring']['rabbitmq']['password']` | The RabbitMQ password for the monitoring system notifications | String | \"guest\"\n`['monitoring']['emmett']['port']` | The port where the Emmett service is listening | Integer | 36638\n`['monitoring']['cassandra']['cluster_name']` | The name for the Cassandra cluster in the monitoring node | String | \"abiquo\"\n`['certificate']['common_name']` | Common name for the generated certificate | String | node['fqdn']\n`['certificate']['organization']` | Organization for the generated certificate | String | \"Abiquo\"\n`['certificate']['department']` | Department for the generated certificate | String | \"Engineering\"\n`['certificate']['country']` | Country for the generated certificate | String | \"ES\"\n`['certificate']['source']` | Source for the generated certificate | String | \"self-signed\"\n`['certificate']['file']` | If `['certificate']['file']` is false, use this file as certificate | String | '/etc/pki/tls/certs/localhost.crt'\n`['certificate']['key_file']` | If `['certificate']['file']` is false, use this file as the certificate private key | String | '/etc/pki/tls/private/localhost.key'\n`['certificate']['ca_file']` | If `['certificate']['file']` is false, use this file as tha CA certificate | String | nil\n`['websockify']['port']` | The port where the Websockify proxy will listen | Integer | 41337\n`['websockify']['api_url']` | The URL for the noVNC tokens script to connect to | String | 'https://localhost/api'\n`['websockify']['user']` | The user to use to connect to the Abiquo API by the noVNC tokens script | String | 'admin'\n`['websockify']['pass']` | The password for the user used by the noVNC tokens script | String | 'xabiquo'\n`['websockify']['crt']` | The certificate to be used by the Websockify proxy | String | node['abiquo']['certificate']['file']\n`['websockify']['key']` | The key for the certificate to be used by the Websockify proxy | String | node['abiquo']['certificate']['key_file']\n\n# Resources and providers\n\nThe Abiquo cookbook provides the following LWRPs:\n\n## abiquo\\_wait\\_for\\_webapp\n\nThis LWRP will make the Chef run wait until the configured webapp is started.\n\n### Parameters\n\n* `host` - The address where the webapp is running\n* `port` - The port where the webapp is listening\n* `webapp` - The name of the webapp\n* `open_timeout` - The timeout to open a connection to the webapp\n* `read_timeout` - The timeout to read from a connection to the webapp\n\n### Example\n\n    abiquo_wait_for_webapp \"api\" do\n        host \"localhost\"\n        port 8009\n        retries 3   # Retry if Tomcat is still not started\n        retry_delay 5\n        action :wait\n    end\n\n## abiquo\\_wait\\_for\\_port\n\nThis LWRP will make the Chef run wait until the configured port is open.\n\n### Parameters\n\n* `host` - The address where the service is running\n* `port` - The port where the service is listening\n* `service` - The name of the service\n* `delay` - The delay in seconds between retries\n* `timeout` - The timeout for a connection to be considered failed\n\n### Example\n\n    abiquo_wait_for_port \"cassandra\" do\n        host \"localhost\"\n        port 9160\n        delay 10\n        timeout 5\n        action :wait\n    end\n\n# Usage\n\nThe cookbook is pretty straightforwatd to use. Just set the `node['abiquo']['profile']` attribute\naccording to the profile you want to install or upgrade and and include one of the following recipes\nin the run list:\n\n* `recipe[abiquo]` - To perform an installation from scratch\n* `recipe[abiquo::upgrade]` - To upgrade an existing installation\n\nThe available profiles are: \n\n- `monolithic` sets up all Abiquo components in one host.\n- `remoteservices` sets up the Abiquo remote services (except V2V)\n- `server` sets up the Abiquo management components (API, M) plus the frontend components (UI, websockify).\n- `ui` sets up the Abiquo UI\n- `websockify` sets up the Websockify proxy for noVNC connections\n- `frontend` sets up the frontend components, UI and Websockify\n- `v2v` sets up the Abiquo V2V conversion manager\n- `kvm` sets up an Abiquo KVM cloud node\n- `monitoring` sets up the monitoring components of the Abiquo platform\n- `ext_services` sets up the management components' supporting databases (MariaDB, Redis) and the RabbitMQ message bus\n\nWhen installing the Abiquo Monolithic profile, you may also want to set the `node['abiquo']['certificate']`\nproperties so the right certificate is used or a self-signed one is generated. You can also use it together\nwith the [hostname](http://community.opscode.com/cookbooks/hostname) cookbook to make sure the node will have it properly configured.\n\n# Testing\n\nIn order to test the cookbook you will need to install [Vagrant](https://www.vagrantup.com/) and [VirtualBox](https://www.virtualbox.org/).\nOnce installed you can run the unit and integration tests as follows:\n\n    bundle install\n    bundle exec berks         # Install the cookbook dependencies\n    bundle exec rake          # Run the unit and style tests\n    bundle exec rake kitchen  # Run the integration tests\n\nThe tests and Gemfile have been developed using Ruby 2.1.5, and that is the recommended Ruby version to use to run the tests.\nOther versions may cause conflicts with the versions of the gems Bundler will install.\n\n# License and Authors\n\n* Author:: Ignasi Barrera (ignasi.barrera@abiquo.com)\n* Author:: Marc Cirauqui (marc.cirauqui@abiquo.com)\n\nCopyright:: 2014, Abiquo\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 6.7",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 6.7",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apache2",
      "revision": "~> 3.1.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/cassandra-dse",
      "revision": "~> 4.1.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/iptables",
      "revision": "~> 2.0.1",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": "~> 1.39.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java-management",
      "revision": "~> 1.0.3",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/selinux",
      "revision": "~> 0.9.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ssl_certificate",
      "revision": "~> 1.11.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": "~> 3.8.2",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum-epel",
      "revision": "~> 0.6.5",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "abiquo": "Installs and configures an Abiquo platform",
    "abiquo::repository": "Configures the Abiquo yum repositories",
    "abiquo::install_monolithic": "Installs the Abiquo Monolithic packages",
    "abiquo::install_remoteservices": "Installs the Abiquo Remote Services",
    "abiquo::install_server": "Installs the Abiquo Management Server",
    "abiquo::install_v2v": "Installs an standalone V2V server",
    "abiquo::install_kvm": "Installs a KVM hypervisor",
    "abiquo::install_monitoring": "Installs an Abiquo monitoring node with a Cassandra backed KairosDB",
    "abiquo::setup_monolithic": "Configures and starts the Abiquo Platform",
    "abiquo::setup_remoteservices": "Configures and starts the Abiquo Remote Services",
    "abiquo::setup_server": "Configures the Abiquo Management Server",
    "abiquo::setup_v2v": "Configures an standalone V2V server",
    "abiquo::setup_kvm": "Configures a KVM hypervisor",
    "abiquo::setup_monitoring": "Configures and starts the Abiquo monitoring services",
    "abiquo::upgrade": "Upgrades an Abiquo platform",
    "abiquo::install_database": "Creates the Abiquo database",
    "abiquo::install_ext_services": "Installs Abiquo supporting services (MariaDB, RabbitMQ, Redis)",
    "abiquo::certificate": "Installs a custom SSL certificate in the Apache",
    "abiquo::service": "Manages Abiquo tomcat service"
  }
}