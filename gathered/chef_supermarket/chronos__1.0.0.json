{
  "name": "chronos Chef cookbook",
  "chef_cookbook_name": "chronos",
  "revision": "1.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/chronos",
    "https://supermarket.chef.io/cookbooks/chronos/download",
    "https://supermarket.chef.io/cookbooks/chronos/versions/1.0.0",
    "https://supermarket.chef.io/cookbooks/chronos/versions/1.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/chronos/versions/1.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/chronos",
    "https://supermarket.chef.io/api/v1/cookbooks/chronos/versions/1.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Operating Systems & Virtualization",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/chronos",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/chronos/versions/1.0.0/download",
  "deprecated": false,
  "created": "2014-01-31T20:53:33.000Z",
  "updated": "2015-03-05T19:28:34.688Z",
  "description": "Installs/Configures Chronos",
  "maintainer": {
    "name": "rayray2030",
    "email": "rarodriguez@mdsol.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 2469745,
  "downloads_count_revision": 1211999,
  "repository_url": "https://github.com/mdsol/chronos_cookbook",
  "issues_url": "https://github.com/mdsol/chronos_cookbook",
  "chef_source_url": "https://github.com/mdsol/chronos_cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\n\nApplication cookbook for installing [Chronos][] the fault tolerant job scheduler \nthat handles dependencies and iso8601 based schedules.  Chronos was created at \n[Airbnb][] as a replacement for `cron` and runs on the [Apache Mesos][] \nframework.\n\n\nRequirements\n============\n\nChef 11.4.0+\n\nThis cookbook requires attributes be set based on the instructions for \n[configuring Chronos][]\n\nThis cookbook also assumes you will be running a zookeeper cluster in for\nproduction use of Mesos and Chronos.  If you omit zookeeper attributes the \ncookbook does default to the chronos internal zookeeper for test scenarios.\n\nThe following cookbooks are dependencies:\n\n* apt\n* java\n* runit (process management)\n* mesos (used for installing the Mesos libraries)\n* zookeeper (used for discovering zookeeper ensembles via [Netflix Exhibitor][])\n\n## Platform:\n\nTested on \n\n* Ubuntu 12.04\n\nThis cookbook includes cross-platform testing support via `test-kitchen`, see \n`TESTING.md`.\n\n\nAttributes\n==========\n\n* `node['chronos']['home_dir']` - Home installation directory. Default: \n'/opt/chronos'.\n* `node['chronos']['config_dir']` - Configuration file directory. Default: \n'/etc/chronos/'.\n* `node['chronos']['log_dir']` - Log directory. Default: '/var/log/chronos/'.\n* `node['chronos']['jar_source']` - Jar source location url.\n* `node['chronos']['user']` - The mesos user to run the processes under. \nDefault: 'root'.\n* `node['chronos']['group']` - The group to run tasks as on mesos slaves. \nDefault: 'root'.\n\n* `node['chronos']['options']['default_job_owner']` - Default email for Chronos \njobs.  Default: 'flo@mesosphe.re'.\n* `node['chronos']['options']['disable_after_failures']` - Disables a job after \nthis many failures have occurred. Default: 0.\n* `node['chronos']['options']['failover_timeout']` - The failover timeout in \nseconds for Mesos. Default: 1200.\n* `node['chronos']['options']['failure_retry]` - Number of ms between retries. \nDefault: 60000.\n* `node['chronos']['options']['ganglia_group_prefix']` - Group prefix to use \nfor all reported metrics.\n* `node['chronos']['options']['ganglia_host_port']` - If configured, will \nreport metrics to Ganglia at the configured interval.\n* `node['chronos']['options']['ganglia_reporting_interval']` - Ganglia \nreporting interval (seconds). Default: 60.\n* `node['chronos']['options']['hostname']` - The advertised hostname stored in \nZooKeeper so another standby host can redirect to this elected leader.(default \n= ipv4 for non-EC2 instance.  Public DNS for EC2 instance).\n* `node['chronos']['options']['http_credentials']` - Credentials for accessing \nthe http service.  If empty, anyone can access the HTTP endpoint. A \nusername:password is expected where the username must not contain ':'.\n* `node['chronos']['options']['http_endpoints']` - The URLs of the event \nendpoints master.\n* `node['chronos']['options']['http_port']` - The port to listen on for HTTP \nrequests (default = 8080).\n* `node['chronos']['options']['https_port']` - The port to listen on for HTTPS \nrequests (default = 8081).\n* `node['chronos']['options']['leader_max_idle_time']` - The look-ahead time \nfor scheduling tasks in milliseconds.  Default: 5000.\n* `node['chronos']['options']['log_config']` - The path to the log config.\n* `node['chronos']['options']['mail_from']` - Mail from field.\n* `node['chronos']['options']['mail_password']` - Mail password (for auth).\n* `node['chronos']['options']['mail_server']` - Address of the mail server.\n* `node['chronos']['options']['mail_ssl']` - Mail SSL. Default: false\n* `node['chronos']['options']['mail_user']` - Mail user (for auth).\n* `node['chronos']['options']['master']` - The URL of the Mesos master.  \nCookbook will default this to 'local' if no zookeeper configuration is defined \nand this attribute is not set.\n* `node['chronos']['options']['checkpoint']` - Enable checkpointing of tasks. \nRequest checkpointing enabled on slaves.  Allows tasks to continue running \nduring mesos-slave restarts and upgrades. Default: false.\n* `node['chronos']['options']['mesos_framework_name']` - The framework name. \nDefault: 'chronos-{version}'\n* `node['chronos']['options']['mesos_role']` - The Mesos role to run tasks \nunder. Default: '*'.\n* `node['chronos']['options']['ssl_keystore_password']` - The password for the\nkeystore.\n* `node['chronos']['options']['ssl_keystore_path']` - Provides the keystore, if\nsupplied, SSL is enabled.\n* `node['chronos']['options']['mesos_task_cpu']` - Number of CPUs to request \nfrom Mesos for each task. Default: 0.1.\n* `node['chronos']['options']['mesos_task_disk']` - Amount of disk capacity to \nrequest from Mesos for each task (MB). Default: 256.\n* `node['chronos']['options']['mesos_task_mem']` - Amount of memory to request \nfrom Mesos for each task (MB).  Default: 128.\n* `node['chronos']['options']['schedule_horizon']` - The look-ahead time for \nscheduling tasks in seconds.  Default: 60.\n* `node['chronos]['options']['zk_path']` - The root znode in which Chronos \npersists its state. Default: 'chronos'.\n* `node['chronos']['options']['zk_timeout']` - Timeout for the ZookeeperState \nabstraction in milliseconds. Default: 10000.\n\n* `node['chronos']['zookeeper_server_list']` - List of zookeeper hostnames or \nIP addresses. Default: [].\n* `node['chronos']['zookeeper_port']` - Mesos master zookeeper port. \nDefault: 2181.\n* `node['chronos']['zookeeper_path']` - Mesos master zookeeper path. \nDefault: [].\n* `node['chronos']['zookeeper_exhibitor_discovery']` - Flag to enable zookeeper \nensemble discovery via Netflix Exhibitor. Default: false.\n* `node['chronos']['zookeeper_exhibitor_url']` - Netflix Exhibitor zookeeper \nensemble url.\n\n\n## Usage\n\nHere are some sample roles for configuring running Chronos in internal test \nmode and in zookeeper backed production mode.\n\nHere is a sample role for creating a Chronos node with an internal zookeeper:\nWARNING: Do not use this configuration for production deployments!\n\n```YAML\nchef_type:           role\ndefault_attributes:\ndescription:\nenv_run_lists:\njson_class:          Chef::Role\nname:                chronos\noverride_attributes:\n  chronos:\n    jar_source: 'JAR_SOURCE_URL_HERE'\n  mesos:\n    version: 0.15.0\nrun_list:\n  recipe[chronos]\n```\n\nHere is a sample role for creating a Chronos node with a seperate zookeeper \nensemble:\nNOTE: This is a recommended way to deploy Chronos in production.\n```YAML\nchef_type:           role\ndefault_attributes:\ndescription:\nenv_run_lists:\njson_class:          Chef::Role\nname:                chronos\noverride_attributes:\n  chronos:\n    jar_source: 'JAR_SOURCE_URL_HERE'\n    zookeeper_server_list: [ '203.0.113.2', '203.0.113.3', '203.0.113.4' ]\n    zookeeper_port: 2181\n    zookeeper_path: 'mesos'\n  mesos:\n    version: 0.15.0\nrun_list:\n  recipe[chronos]\n```\n\nHere is a sample role for creating a Chronos node with a seperate zookeeper \nensemble dynamically discovered via Netflix Exhibitor:\nNOTE: This is a recommended way to deploy Chronos in production.\n```YAML\nchef_type:           role\ndefault_attributes:\ndescription:\nenv_run_lists:\njson_class:          Chef::Role\nname:                chronos\noverride_attributes:\n  chronos:\n    jar_source: 'JAR_SOURCE_URL_HERE'\n    zookeeper_path: 'mesos'\n    zookeeper_exhibitor_discovery: true\n    zookeeper_exhibitor_url: 'http://zk-exhibitor-endpoint.example.com:8080'\n  mesos:\n    version: 0.15.0\nrun_list:\n  recipe[chronos]\n```\n\n[Chronos]: http://nerds.airbnb.com/introducing-chronos\n[Airbnb]: http://www.airbnb.com\n[Apache Mesos]: http://http://mesos.apache.org\n[configuring Chronos]: https://github.com/airbnb/chronos/blob/master/config/README.md\n[Netflix Exhibitor]: https://github.com/Netflix/exhibitor\n\n## Contributing\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\n## License and Author\n\n* Author: [Ray Rodriguez](https://github.com/rayrod2030)\n\nCopyright 2013 Medidata Solutions Worldwide\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use \nthis file except in compliance with the License. You may obtain a copy of the \nLicense at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed \nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR \nCONDITIONS OF ANY KIND, either express or implied. See the License for the \nspecific language governing permissions and limitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/zookeeper",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/runit",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mesos",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}