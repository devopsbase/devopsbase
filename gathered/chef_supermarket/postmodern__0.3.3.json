{
  "name": "postmodern Chef cookbook",
  "chef_cookbook_name": "postmodern",
  "revision": "0.3.3",
  "uris": [
    "https://supermarket.chef.io/cookbooks/postmodern",
    "https://supermarket.chef.io/cookbooks/postmodern/download",
    "https://supermarket.chef.io/cookbooks/postmodern/versions/0.3.3",
    "https://supermarket.chef.io/cookbooks/postmodern/versions/0.3.3/download",
    "https://supermarket.chef.io/api/v1/cookbooks/postmodern/versions/0.3.3",
    "https://supermarket.chef.io/api/v1/cookbooks/postmodern",
    "https://supermarket.chef.io/api/v1/cookbooks/postmodern/versions/0.3.3/download"
  ],
  "labels": [
    "Chef cookbook",
    "Databases",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Infrastructure/Operating System",
    "Type/Middleware/Data Store/Relational/PostgreSQL"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/postmodern",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/postmodern/versions/0.3.3/download",
  "deprecated": false,
  "created": "2014-06-20T23:15:11.000Z",
  "updated": "2015-12-21T22:37:30.120Z",
  "description": "Installs the postmodern gem into the system for PostgreSQL maintenance",
  "maintainer": {
    "name": "sax",
    "email": "ops@wanelo.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 1431289,
  "downloads_count_revision": 175854,
  "repository_url": "https://github.com/wanelo-chef/postmodern",
  "issues_url": "https://github.com/wanelo-chef/postmodern",
  "chef_source_url": "https://github.com/wanelo-chef/postmodern",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "postmodern Cookbook\n===================\n\nInstalls the Postmodern gem for assisting with PostgreSQL\nmaintenance tasks.\n\nSee [Postmodern](https://github.com/wanelo/postmodern)'s documentation for more info.\n\n## Usage\n\nThis cookbook is intended as a very minimal dependency to wrap up\ninstalling Postmodern. Configuration of various Postmodern utilities\nand tasks should be done in a wrapper cookbook local to your\ninfrastructure.\n\nAdd this cookbook as a dependency of your cookbook, and then:\n\n```ruby\ninclude_recipe 'postmodern'\n```\n\nThen your cookbook can drop a `postmodern_archive.local` or\n`postmodern_restore.local` somewhere in the PATH of a system\nto do WAL archiving.\n\nAdd a crontab for `postmodern vacuum` or `postmodern freeze` to\nregularly clean up your Postgres database.\n\n\n## Releasing new versions\n\nNew versions can be publicly released using the `emeril` gem, which\nis included in the development Gemfile.\n\n```bash\nrake release\n```\n\n## Contributing\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\n",
  "requires": [
    {
      "kind": "host",
      "label": "omnios",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "smartos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/build-essential",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}