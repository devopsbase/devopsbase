{
  "name": "ssh-hardening Chef cookbook",
  "chef_cookbook_name": "ssh-hardening",
  "revision": "1.0.3",
  "uris": [
    "https://supermarket.chef.io/cookbooks/ssh-hardening",
    "https://supermarket.chef.io/cookbooks/ssh-hardening/download",
    "https://supermarket.chef.io/cookbooks/ssh-hardening/versions/1.0.3",
    "https://supermarket.chef.io/cookbooks/ssh-hardening/versions/1.0.3/download",
    "https://supermarket.chef.io/api/v1/cookbooks/ssh-hardening/versions/1.0.3",
    "https://supermarket.chef.io/api/v1/cookbooks/ssh-hardening",
    "https://supermarket.chef.io/api/v1/cookbooks/ssh-hardening/versions/1.0.3/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/ssh-hardening",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/ssh-hardening/versions/1.0.3/download",
  "deprecated": false,
  "created": "2014-04-28T13:28:20.000Z",
  "updated": "2016-09-25T10:36:00.949Z",
  "description": "This cookbook installs and provides secure ssh and sshd configurations.",
  "maintainer": {
    "name": "arlimus",
    "email": "dominik.richter@googlemail.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 17,
  "downloads_count": 3749834,
  "downloads_count_revision": 488864,
  "repository_url": "https://github.com/TelekomLabs/chef-ssh-hardening",
  "issues_url": "https://github.com/TelekomLabs/chef-ssh-hardening",
  "chef_source_url": "https://github.com/TelekomLabs/chef-ssh-hardening",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# ssh-hardening (Chef cookbook)\n\n[![Supermarket](http://img.shields.io/cookbook/v/ssh-hardening.svg)][1]\n[![Build Status](http://img.shields.io/travis/TelekomLabs/chef-ssh-hardening.svg)][2]\n[![Code Coverage](http://img.shields.io/coveralls/TelekomLabs/chef-ssh-hardening.svg)][3]\n[![Dependencies](http://img.shields.io/gemnasium/TelekomLabs/chef-ssh-hardening.svg)][4]\n\n## Description\n\nThis cookbook provides secure ssh-client and ssh-server configurations.\n\n## Requirements\n\n* Opscode chef\n\n## Attributes\n\n* `['network']['ipv6']['enable']` - true if IPv6 is needed\n* `['ssh'][{'client', 'server'}]['cbc_required']` - true if CBC for ciphers is required. This is usually only necessary, if older M2M mechanism need to communicate with SSH, that don't have any of the configured secure ciphers enabled. CBC is a weak alternative. Anything weaker should be avoided and is thus not available.\n* `['ssh'][{'client', 'server'}]['weak_hmac']` - true if weaker HMAC mechanisms are required. This is usually only necessary, if older M2M mechanism need to communicate with SSH, that don't have any of the configured secure HMACs enabled. \n* `['ssh'][{'client', 'server'}]['weak_kex']` - true if weaker Key-Exchange (KEX) mechanisms are required. This is usually only necessary, if older M2M mechanism need to communicate with SSH, that don't have any of the configured secure KEXs enabled.\n* `['ssh']['allow_root_with_key']` - `false` to disable root login altogether. Set to `true` to allow root to login via key-based mechanism.\n* `['ssh']['ports']` - ports to which ssh-server should listen to and ssh-client should connect to\n* `['ssh']['listen_to']` - one or more ip addresses, to which ssh-server should listen to. Default is empty, but should be configured for security reasons!\n* `['ssh']['remote_hosts']` - one or more hosts, to which ssh-client can connect to. Default is empty, but should be configured for security reasons!\n* `['ssh']['allow_tcp_forwarding']` - `false` to disable TCP Forwarding. Set to `true` to allow TCP Forwarding\n* `['ssh']['allow_agent_forwarding']` - `false` to disable Agent Forwarding. Set to `true` to allow Agent Forwarding\n* `['ssh']['use_pam']` - `false` to disable pam authentication\n\n## Data Bags\n\n**DEPRECATION WARNING**: Support for managing authorized_keys for the root account will be removed from this cookbook in the next major release. Please use alternative cookbooks for that.\n\nThis cookbook used to handle authorized keys for the root user, but that support will be removed in the next major release. Use other cookbooks to set up your users.\n\n### Old behaviour:\n\nHave users in your `data_bag/users/` directory. This cookbook looks for users inside this folder with a `ssh_rootkey`.\n\nExample: \n\nFirst you have to find out the ssh-key of the user you want to allow. A typical example for this is\n\n    cat ~/.ssh/id_rsa.pub\n\nIf that folder doesn't exist or you don't know what this is all about, please read a SSH tutorial for your blend of operating system first.\n\nYou can now add this key to the data bag. Example for dada:\n\nExample for `data_bags/users/dada.json`\n\n    {\n      \"id\" : \"dada\",\n      // ... other stuff ...\n      \"ssh_rootkey\" : \"ssh-rsa AAAA....mail.com\"\n    }\n\nYou can then access\n\n    ssh dada@yourmachines\n\n\n## Usage\n\nAdd the recipes to the run_list:\n    \n    \"recipe[ssh]\"\n\nThis will install ssh-server and ssh-client. You can alternatively choose only one via:\n\n    \"recipe[ssh::server]\"\n    \"recipe[ssh::client]\"\n\nConfigure attributes:\n\n    \"ssh\" : {\n      \"listen_to\" : \"10.2.3.4\"\n    }\n\n**The default value for `listen_to` is `0.0.0.0`. It is highly recommended to change the value.**\n\n## Local Testing\n\nFor local testing you can use vagrant and Virtualbox of VMWare to run tests locally. You will have to install Virtualbox and Vagrant on your system. See [Vagrant Downloads](http://downloads.vagrantup.com/) for a vagrant package suitable for your system. For all our tests we use `test-kitchen`. If you are not familiar with `test-kitchen` please have a look at [their guide](http://kitchen.ci/docs/getting-started).\n\nNext install test-kitchen:\n\n```bash\n# Install dependencies\ngem install bundler\nbundle install\n\n# Do lint checks\nbundle exec rake lint\n\n# Fetch tests\nbundle exec thor kitchen:fetch-remote-tests\n\n# fast test on one machine\nbundle exec kitchen test default-ubuntu-1204\n\n# test on all machines\nbundle exec kitchen test\n\n# for development\nbundle exec kitchen create default-ubuntu-1204\nbundle exec kitchen converge default-ubuntu-1204\n```\n\nFor more information see [test-kitchen](http://kitchen.ci/docs/getting-started)\n\n## FAQ / Pitfalls\n\n**I can't log into my account. I have registered the client key, but it still doesn't let me it.**\n\nIf you have exhausted all typical issues (firewall, network, key missing, wrong key, account disabled etc.), it may be that your account is locked. The quickest way to find out is to look at the password hash for your user:\n\n    sudo grep myuser /etc/shadow\n\nIf the hash includes an `!`, your account is locked:\n\n    myuser:!:16280:7:60:7:::\n\nThe proper way to solve this is to unlock the account (`passwd -u myuser`). If the user doesn't have a password, you should can unlock it via:\n\n    usermod -p \"*\" myuser\n\nAlternatively, if you intend to use PAM, you enabled it via `['ssh']['use_pam'] = true`. PAM will allow locked users to get in with keys.\n\n\n**Why doesn't my application connect via SSH anymore?**\n\nAlways look into log files first and if possible look at the negotation between client and server that is completed when connecting.\n\nWe have seen some issues in applications (based on python and ruby) that are due to their use of an outdated crypto set. This collides with this hardening module, which reduced the list of ciphers, message authentication codes (MACs) and key exchange (KEX) algorithms to a more secure selection.\n\nIf you find this isn't enough, feel free to activate the attributes `cbc_requires` for ciphers, `weak_hmac` for MACs and `weak_kex`for KEX in the namespaces `['ssh']['client']` or `['ssh']['server']` based on where you want to support them.\n\n## Deprecation Notices\n\n* `node['ssh']['cbc_required']` has been deprecated in favour of `node['ssh']['client']['cbc_required']` and `node['ssh']['server']['cbc_required']`.\n\n* `node['ssh']['weak_hmac']` has been deprecated in favour of `node['ssh']['client']['weak_hmac']` and `node['ssh']['server']['weak_hmac']`.\n\n* `node['ssh']['weak_kex']` has been deprecated in favour of `node['ssh']['client']['weak_kex']` and `node['ssh']['server']['weak_kex']`.\n\n* The old attributes are still supported but will be removed in the future. In case one of the legacy attributes is set, it still precedes the newly added attributes to allow for backward compatibility.\n\n## Contributors + Kudos\n\n* Dominik Richter\n* Christoph Hartmann\n* Patrick Meier\n* Bernhard K. Weisshuhn\n\nThis cookbook is mostly based on guides by:\n\n* [NSA: Guide to the Secure Configuration of Red Hat Enterprise Linux 5](http://www.nsa.gov/ia/_files/os/redhat/rhel5-pamphlet-i731.pdf)\n* [Deutsche Telekom, Group IT Security, Security Requirements (German)](http://www.telekom.com/static/-/155996/7/technische-sicherheitsanforderungen-si)\n\nThanks to all of you!!\n\n## Contributing\n\nSee [contributor guideline](CONTRIBUTING.md).\n\n## License and Author\n\n* Author:: Dominik Richter <dominik.richter@googlemail.com>\n* Author:: Deutsche Telekom AG\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n[1]: https://supermarket.getchef.com/cookbooks/ssh-hardening\n[2]: http://travis-ci.org/TelekomLabs/chef-ssh-hardening\n[3]: https://coveralls.io/r/TelekomLabs/chef-ssh-hardening\n[4]: https://gemnasium.com/TelekomLabs/chef-ssh-hardening\n",
  "chef_recipes": {
    "ssh-hardening::default": "installs and configures ssh client and server",
    "ssh-hardening::client": "install and apply security hardening for ssh client",
    "ssh-hardening::server": "install and apply security hardening for ssh server"
  }
}