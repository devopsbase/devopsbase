{
  "name": "taskwarrior Chef cookbook",
  "chef_cookbook_name": "taskwarrior",
  "revision": "1.1.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/taskwarrior",
    "https://supermarket.chef.io/cookbooks/taskwarrior/download",
    "https://supermarket.chef.io/cookbooks/taskwarrior/versions/1.1.2",
    "https://supermarket.chef.io/cookbooks/taskwarrior/versions/1.1.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/taskwarrior/versions/1.1.2",
    "https://supermarket.chef.io/api/v1/cookbooks/taskwarrior",
    "https://supermarket.chef.io/api/v1/cookbooks/taskwarrior/versions/1.1.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/taskwarrior",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/taskwarrior/versions/1.1.2/download",
  "deprecated": false,
  "created": "2014-01-22T02:01:46.000Z",
  "updated": "2014-02-04T16:23:54.000Z",
  "description": "Installs/Configures taskwarrior",
  "maintainer": {
    "name": "masterkorp",
    "email": "masterkorp@masterkorp.net"
  },
  "license": "MIT",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 0,
  "downloads_count": 3775913,
  "downloads_count_revision": 1258484,
  "repository_url": "https://github.com/masterkorp/cookbook-taskwarrior",
  "issues_url": "https://github.com/masterkorp/cookbook-taskwarrior",
  "chef_source_url": "https://github.com/masterkorp/cookbook-taskwarrior",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "taskwarrior Cookbook\n====================\n\nInstalls and configures taskwarrior client and server software.\n\nRequirements\n------------\nAll the requirements are installed for you if you use [Berkshelf](http://berkshelf.com/). Altough it is\ngood practice to add the following to the role run list.\n\n#### cookbooks\n- `apt` - To install the lastest packages.\n- `git` - To clone the code both for client and server source installs.\n- `cmake` - Build dependency for task and taskserver.\n- `build-essential` - Build dependency for task and taskserver.\n- `perl` - Build dependency for taskserver.\n- `python` - Build dependency for taskserver.\n- `runit` - To manage the taskserver daemon.\n\n#### Plaforms\n- Ubuntu\n- Debian\n\nAttributes\n----------\n\n#### taskwarrior::default\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['taskwarrior']['method']</tt></td>\n    <td>String</td>\n    <td>Choose to install from the repository of from the lastest on the git repository</td>\n    <td><tt>package</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"source\"][\"git_repository\"]</tt></td>\n    <td>String</td>\n    <td>The git repository to clone taskwarrior from.</td>\n    <td><tt>git://tasktools.org/task.git</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"source\"][\"git_revision\"]</tt></td>\n    <td>String</td>\n    <td>The git revision to build from, HEAD is lastest</td>\n    <td><tt>HEAD</tt></td>\n  </tr>\n</table>\n\n#### taskwarrior::server\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"git_repository\"]</tt></td>\n    <td>String</td>\n    <td>The git repository to clone taskserver from.</td>\n    <td><tt>git://tasktools.org/taskd.git</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"git_revision\"]</tt></td>\n    <td>String</td>\n    <td>The git revision to build from, HEAD is lastest</td>\n    <td><tt>HEAD</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"home\"]</tt></td>\n    <td>String</td>\n    <td>The main directory for taskd</td>\n    <td><tt>/var/lib/taskd</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"data_dir\"]</tt></td>\n    <td>String</td>\n    <td>Taskd data directory</td>\n    <td><tt>default[\"taskwarrior\"][\"server\"][\"home\"]}/data</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"keys_dir\"]</tt></td>\n    <td>String</td>\n    <td>Fully qualified path for the keys</td>\n    <td><tt>default[\"taskwarrior\"][\"server\"][\"home\"]}/keys</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"confirmation\"]</tt></td>\n    <td>String</td>\n    <td>Determines whether certain commands are confirmed</td>\n    <td><tt>on</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"extensions\"]</tt></td>\n    <td>String</td>\n    <td>Fully qualified path of the taskd extension scripts. Currently there are none.</td>\n    <td><tt></tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"ip_log\"]</tt></td>\n    <td>String</td>\n    <td>Logs the IP addresses of incoming requests.</td>\n    <td><tt>on</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"log_dir\"]</tt></td>\n    <td>String</td>\n    <td>Log directory for taskd.</td>\n    <td><tt>/var/log/taskd</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"log_file\"]</tt></td>\n    <td>String</td>\n    <td>Main log file.</td>\n    <td><tt>default[\"taskwarrior\"][\"server\"][\"log_dir\"]}/keys</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"queue_size\"]</tt></td>\n    <td>Integer</td>\n    <td>Size of the connection backlog.</td>\n    <td><tt>10</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"request_limit\"]</tt></td>\n    <td>Integer</td>\n    <td>Size limit of incoming requests, in bytes.</td>\n    <td><tt>1048576</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"link\"]</tt></td>\n    <td>String</td>\n    <td>The address of the taskd server followed by a colon and the por number.</td>\n    <td><tt>localhost:6544</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[\"taskwarrior\"][\"server\"][\"organization\"]</tt></td>\n    <td>String</td>\n    <td>The name of your organization to generate the certificates.</td>\n    <td><tt>Empty</tt></td>\n  </tr>\n</table>\n\nUsage\n-----\n\n#### taskwarrior::default\n\nInstalls the taskwarrior client that can work standalone, just add it to your run_list. You can choose to install from the repositories,\nor to build from source. Just set the [\"taskwarrior\"][\"install_method\"] to \"source\", like so.\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[taskwarrior]\"\n  ]\n  \"override_attrubutes\": {\n    \"taskwarrior\": {\n      \"install_method\": \"source\"\n    }\n  }\n}\n```\n\n#### taskwarrior::server\n\nBuilds and installs the taskwarrior service daemon (taskd) and sets up supervising with runit.\nCheck the taskwarrior wiki pages for [operation](http://taskwarrior.org/projects/taskwarrior/wiki/Taskserver_Operation), [setup](http://taskwarrior.org/projects/taskwarrior/wiki/Server_setup) amd [ciphers](http://taskwarrior.org/projects/taskwarrior/wiki/Ciphers)\n\nAdd the following to you users data bag.\n```json\n{\n  \"id\": \"bob\",\n  \"taskwarrior\": {\n    \"organization\": \"Public\",\n    \"groups\": [\"groupA\", \"groupB\"]\n  }\n}\n```\n\nThis will generate client keys and the taskd user and its Uuid for bob. The key distrubution at the moment is done by hand so you\nneed to get them from the key directory.\n\nContributing\n------------\n\nThe testing is done mostly with [test-kitchen](http://kitchen.ci/) before everything, set it up. Also [foodcritic](http://www.foodcritic.io/) is used for linting.\n\n- Fork the repository on Github\n- Create a named feature branch (like `add_component_x`)\n- Write your change\n- Make it pass foodcritic.\n- Write tests for your change (if applicable)\n- Run the tests, ensuring they all pass\n- Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\nAuthors:\n - Alfredo Palhares (masterkorp@masterkorp.net) and masterkorp on irc.freenode.org\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/git",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/cmake",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/build-essential",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/perl",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/python",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/runit",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}