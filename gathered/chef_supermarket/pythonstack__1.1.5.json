{
  "name": "pythonstack Chef cookbook",
  "chef_cookbook_name": "pythonstack",
  "revision": "1.1.5",
  "uris": [
    "https://supermarket.chef.io/cookbooks/pythonstack",
    "https://supermarket.chef.io/cookbooks/pythonstack/download",
    "https://supermarket.chef.io/cookbooks/pythonstack/versions/1.1.5",
    "https://supermarket.chef.io/cookbooks/pythonstack/versions/1.1.5/download",
    "https://supermarket.chef.io/api/v1/cookbooks/pythonstack/versions/1.1.5",
    "https://supermarket.chef.io/api/v1/cookbooks/pythonstack",
    "https://supermarket.chef.io/api/v1/cookbooks/pythonstack/versions/1.1.5/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Type/Middleware/Runtime/Python",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/pythonstack",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/pythonstack/versions/1.1.5/download",
  "deprecated": false,
  "created": "2014-10-02T22:16:39.677Z",
  "updated": "2015-01-22T19:20:17.723Z",
  "description": "Installs/Configures pythonstack",
  "maintainer": {
    "name": "rackops",
    "email": "rackspace-cookbooks@rackspace.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 4433840,
  "downloads_count_revision": 538527,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# pythonstack Cookbook\n-------------------------------\n\nSupported Platforms\n-------------------\n* Ubuntu 12.04\n* Centos 6.5\n\nRequirements\n------------\n#### Cookbooks\n\n* `apache2`\n* `application`\n* `application_python`\n* `apt`\n* `chef-sugar`\n* `database`\n* `git`\n* `memcached`\n* `mongodb`\n* `mysql-multi`\n* `mysql`\n* `newrelic`\n* `openssl`\n* `pg-multi`\n* `platformstack`\n* `python`\n* `rackspace_gluster`\n* `redis-multi`\n* `stack_commons`\n* `uwsgi`\n* `yum`\n* `yum-epel`\n* `yum-ius`\n\n\nRecipes\n----------\n\n#### apache\nCreates sites coming from node['apache']['sites'] array\nCreates monitoring check for each site if node[platformstack][cloud_monitoring] = enabled  \n\n#### nginx\nCreates sites coming from node['nginx']['sites'] array\nCreates monitoring check for each site if node[platformstack][cloud_monitoring] = enabled  \n\n#### application_python_nginx\nCreates a configuration file for applications using variables for mysql_master node and rabbitmq node and placing this file in /etc/pythonstack.ini\n\n#### format_disk\nIncludes stack_commons::format_disk which will format /dev/xvde1 (datadisk on Rackspace performance cloud nodes) this should not be called directly, if you want to format a disk for mysql usage use the recipe pythonstack::mysql_add_drive.\n\n#### gluster\nIncludes stack_commons::gluster which sets up gluster nodes and replicas  \n\n#### memcache\nIncludes stack_commons::memcached which installs and sets up cloud monitoring of memcached  \n\n#### mongodb_standalone\nIncludes stack_commons::mongodb_standalone which sets up a standalone mongo db instance  \n\n#### mysql_add_drive\nRecipe will format /dev/xvde1 (datadisk on Rackspace performance cloud nodes) and will prepare it for the mysql datadir  \n\n#### mysql_base\nIncludes recipe stack_commons::mysql_base to build a default standalone MySQL server.\nCreates mysql-monitor template if node[platformstack][cloud_monitoring] = enabled\nCreates an iptables rule for application_python nodes in order to connect to this one.\n\n#### mysql_master\nIncludes stack_commons::mysql_master to build out a MySQL master server.\ncreates databases and associated database user per vhost\n\n#### mysql_slave\nIncludes stack_commons::mysql_master to build out a MySQL slave server.\n\n#### mysql_holland\nIncludes stack_commons::mysql_holland which doe the following:\nInstalls needed packages (holland and holland-mysqldump)\nVerifies if this server is a slave or standalone\nSetup a cronjob based on holland attributes\n\n#### postgresql_base\nIncludes stack_commons::postgresql_base to setup a standalone postgresql server.\nSets up default IP tables rule to allow access on ['postgresql']['port']\n\n#### postgresql_master\nIncludes stack_commons::postgresql_master to setup postgresql master server.\n\n#### postgresql_slave\nIncludes stack_commons::postgresql_slave to setup postgresql slave server.\n\n#### redis_base\nIncludes stack_commons::redis_base to setup a standalone redis service.\n\n#### redis_master\nIncludes stack_commons::redis_master to setup a master redis node\n\n#### redis_sentinel\nIncludes stack_commons::redis_sentinel to deploy redis-multi::sentinel\n\n#### redis_single\nIncludes stack_commons::redis_single to deploy stack_commons::redis_base and redis-multi::single recipes\n\n#### redis_slave\nIncludes stack_commons::redis_slave to deploy stack_commons::redis_base and redis-multi::slave\n\n#### newrelic\nIncludes stack_commons::newrelic to install Newrelic if ```node['newrelic']['license'] ``` set with license key  \n\n#### rabbitmq\nIncludes stack_commons::rabbitmq to installs Rabbitmq service\n\n#### varnish\nIncludes stack_commons::varnish to installs and sets up Varnish.\nCloud monitoring enabled by default for thsi service.\n\n\n####\n\n\nData_Bag\n----------\n\nNo Data_Bag configured for this cookbook\n\n\nAttributes\n----------\n\n### defaults\n\n- `default['pythonstack']['newrelic']['application_monitoring'] = ''`\n  - controls if we allow newrelic to to do application monitoring\n    - is set to `'true'` in the newrelic recipe\n- `default['pythonstack']['webserver'] = 'apache'`\n  - sets the webserver want to use\n    - you can set this to anything, but for actually running a webserver we only support nginx and apache\n    - you can set this to something like `'not_a_webserver'` and then use that namespace if you still want to deploy your application\n- `default['pythonstack']['ini']['cookbook'] = 'pythonstack'`\n  - sets where the `/etc/phpstack.ini` template is sourced from\n- `default['pythonstack']['mysql']['databases'] = {}`\n  - contains a list of databases to set up (along with users / passwords)\n- `default['pythonstack']['apache']['sites'] = {}`\n  - contains a list of ports and vhosts to set up for apache\n- `default['pythonstack']['nginx']['sites'] = {}`\n  - contains a list of ports and vhosts to set up for nginx\n- `default['pythonstack']['varish']['backend_nodes'] = {}`\n  - contains a list of varnish nodes\n- `default['pythonstack']['webserver_deployment']['enabled'] = true`\n  - allows apache and/or nginx recipes to run\n- `default['pythonstack']['code-deployment']['enabled'] = true`\n  - allows code deployment to run\n- `default['pythonstack']['db-autocreate']['enabled'] = true`\n  - controls database autocreation for each site / port combination globally\n- `default['pythonstack']['varnish']['multi'] = true`\n  - controls deployment of varnish multi-node setup\n\n### demo\n\ncontains attributes that used in a demo site, useful as an example of what to set to deploy a site\n\n### monitoring\n\ncontrols how cloud_monitoring is used within pythonstack\n\n### nginx\n\ncontrols setting within nginx configuration (ports, init scripts, etc)\n\n### backups\n\ncontrols the use of rackspace_cloudbackups on pythonstack\n\nUsage\n-----\n\nhttps://github.com/rackspace-cookbooks/pythonstack/blob/master/USAGE.md\n\n\nContributing\n------------\n\nhttps://github.com/rackspace-cookbooks/contributing/blob/master/CONTRIBUTING.md\n\n\nAuthors\n-------\nAuthors:: Rackspace DevOps (devops@rackspace.com)\n",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apache2",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/application",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/application_python",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/build-essential",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef-sugar",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/database",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/git",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/memcached",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mongodb",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mysql",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/newrelic",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/newrelic_meetme_plugin",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/nginx",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/openssl",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/pg-multi",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/platformstack",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/python",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/rackspace_gluster",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/redis-multi",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/stack_commons",
      "revision": ">=0.0.37",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/uwsgi",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum-epel",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum-ius",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}