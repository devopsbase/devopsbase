{
  "name": "pentester Chef cookbook",
  "chef_cookbook_name": "pentester",
  "revision": "1.2.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/pentester",
    "https://supermarket.chef.io/cookbooks/pentester/download",
    "https://supermarket.chef.io/cookbooks/pentester/versions/1.2.2",
    "https://supermarket.chef.io/cookbooks/pentester/versions/1.2.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/pentester/versions/1.2.2",
    "https://supermarket.chef.io/api/v1/cookbooks/pentester",
    "https://supermarket.chef.io/api/v1/cookbooks/pentester/versions/1.2.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Test"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/pentester",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/pentester/versions/1.2.2/download",
  "deprecated": false,
  "created": "2015-09-18T13:01:19.443Z",
  "updated": "2016-10-01T14:44:02.542Z",
  "description": "Installs/Configures cool stuff for pentesting.",
  "maintainer": {
    "name": "sliim",
    "email": "sliim@mailoo.org"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 1148,
  "downloads_count_revision": 23,
  "repository_url": "https://github.com/sliim-cookbooks/pentester",
  "issues_url": "https://github.com/sliim-cookbooks/pentester/issues",
  "chef_source_url": "https://github.com/sliim-cookbooks/pentester",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# pentester Cookbook | [![Cookbook Version](https://img.shields.io/cookbook/v/pentester.svg)](https://community.opscode.com/cookbooks/pentester) [![Build Status](https://travis-ci.org/sliim-cookbooks/pentester.svg?branch=master)](https://travis-ci.org/sliim-cookbooks/pentester) \n\nPentester Chef cookbook - Install & configures some cool stuff for pentesting\n\n## Requirements\n\n#### cookbooks\n- `git` - https://supermarket.chef.io/cookbooks/git\n- `python` - https://supermarket.chef.io/cookbooks/python\n- `database` - https://supermarket.chef.io/cookbooks/database\n- `postgresql` - https://supermarket.chef.io/cookbooks/postgresql\n- `poise-python` - https://supermarket.chef.io/cookbooks/poise-python\n\n#### services\n- `postgresql`\n\n#### platforms\n- `Debian 7`\n- `Debian 8`\n\n## Usage\n\nFollowing recipes are available for your `run_list`:\n\n- `pentester::autopwn` - Checkout [autowpn](https://github.com/nccgroup/autopwn), install dependencies and configures targets.\n- `pentester::sn1per` - Checkout [Sn1per](https://github.com/1N3/Sn1per)\n- `pentester::fuzzdb` - Checkout [fuzzdb](https://github.com/fuzzdb-project/fuzzdb)\n- `pentester::gitrob_install` - Installs [gitrob](https://github.com/michenriksen/gitrob)\n- `pentester::gitrob_config` - Configures [gitrob](https://github.com/michenriksen/gitrob)\n- `pentester::gitrob_db` - Configures the Gitrob database\n- `pentester::webshell` - Checkouts [webshell](https://github.com/tennc/webshell)\n- `pentester::itib` - Checkouts [isthisipbad](https://github.com/jgamblin/isthisipbad)\n- `pentester::nullsec` - Checkouts [null-security tools](https://github.com/nullsecuritynet/tools)\n- `pentester::veil` - Checkouts [Veil Framework](https://github.com/Veil-Framework/)\n- `pentester::spf` - Checkouts [Smartphone Pentest Framework](https://github.com/georgiaw/Smartphone-Pentest-Framework)\n- `pentester::ptf` - Checkouts and configures The [PenTesters Framework](https://github.com/trustedsec/ptf)\n- `pentester::mitmproxy` - Installs [mitmproxy](https://mitmproxy.org/) and its dependencies\n- `pentester::msf_pkg` - Installs The [Metasploit Framework](https://github.com/rapid7/metasploit-framework) from package\n- `pentester::msf_src` - Installs The [Metasploit Framework](https://github.com/rapid7/metasploit-framework) from sources\n- `pentester::msf_db` - Setup metasploit database.\n- `pentester::msf_config` - Configures metasploit\n- `pentester::msf_user_config` - Metasploit user's configuration\n- `pentester::w3af_pkg` - Installs [W3AF](http://w3af.org/) from package\n- `pentester::w3af_src` - Installs [W3AF](http://w3af.org/) from sources\n- `pentester::w3af_profiles` - Deploy W3AF profiles from attributes\n\nSome recipes installs packages that are only available in Kali linux APT repositories.\nI recommend to use the [kali](https://supermarket.chef.io/cookbooks/kali) cookbook to setup your debian as a kali linux.\n\n## Attributes\n#### pentester::default\n| Key                                  | Type   | Description                                        |\n| ------------------------------------ | ------ | -------------------------------------------------- |\n| `[pentester][user]`                  | String | Pentester user (default: `root`)                   |\n| `[pentester][group]`                 | String | Pentester group (default: `root`)                  |\n| `[pentester][home]`                  | String | Pentester home directory (default: `/root`)        |\n| `[pentester][databag_name]`          | String | Pentester databag name (default: `pentester`)      |\n| `[pentester][databag_items][gitrob]` | String | Databag item for gitrob config (default: `gitrob`) |\n| `[pentester][databag_items][msf]`    | String | Databag item for msf config (default: `msf`)       |\n\n#### pentester::db\n| Key                         | Type    | Description                                                     |\n| --------------------------- | ------- | --------------------------------------------------------------- |\n| `[pentester][db][host]`     | String  | Postgresql server host (default: `localhost`)                   |\n| `[pentester][db][port]`     | Integer | Postgresql server port (default: `5432`)                        |\n| `[pentester][db][username]` | String  | Postgresql server username (default: `postgres`)                |\n| `[pentester][db][password]` | String  | Postgresql server password (default from postgresql attributes) |\n\n#### pentester::autopwn\n| Key                                    | Type   | Description                                                     |\n| -------------------------------------- | ------ | --------------------------------------------------------------- |\n| `[pentester][autopwn][git_repository]` | String | Git repository (default: `https://github.com/nccgroup/autopwn`) |\n| `[pentester][autopwn][git_reference]`  | String | Git reference (default: `master`)                               |\n| `[pentester][autopwn][install_dir]`    | String | Install directory (default: `/opt/autopwn`)                     |\n| `[pentester][autopwn][targets]`        | Hash   | Targets to configure. See  `attributes/autopwn.rb`              |\n\n#### pentester::sn1per\n| Key                                     | Type   | Description                                                   |\n| --------------------------------------- | ------ | ------------------------------------------------------------- |\n| `[pentester][sn1per][git_repository]`   | String | Git repository (default: `https://github.com/1N3/Sn1per`)     |\n| `[pentester][sn1per][git_reference]`    | String | Git reference (default: `master`)                             |\n| `[pentester][sn1per][install_dir]`      | String | Install directory (default: `/opt/sn1per`)                    |\n| `[pentester][sn1per][additional_repos]` | Hash   | Additional repositories. See  `attributes/sn1per.rb`          |\n| `[pentester][sn1per][packages]`         | Array  | Packages to install. See  `attributes/sn1per.rb` for defaults |\n\n#### pentester::fuzzdb\n| Key                                   | Type   | Description                                                          |\n| ------------------------------------- | ------ | -------------------------------------------------------------------- |\n| `[pentester][fuzzdb][git_repository]` | String | Git repository (default: `https://github.com/fuzzdb-project/fuzzdb`) |\n| `[pentester][fuzzdb][git_reference]`  | String | Git reference (default: `master`)                                    |\n| `[pentester][fuzzdb][install_dir]`    | String | Install directory (default: `/opt/fuzzdb`)                           |\n\n#### pentester::gitrob\n| Key                                  | Type    | Description                                                     |\n| ------------------------------------ | ------- | --------------------------------------------------------------- |\n| `[pentester][gitrob][use_db]`        | Boolean | Use gitrob databag for configuration (default: `false`)         |\n| `[pentester][gitrob][signatures]`    | Array   | Gitrob custom signatures (default: `[]`)                        |\n| `[pentester][gitrob][gh_auth_token]` | String  | Github auth token (default: `aabbccddeeff00112233445566778899`) |\n| `[pentester][gitrob][packages]`      | Array   | List of packages to install. See `attributes/gitrob.rb`         |\n| `[pentester][gitrob][gem_binary]`    | String  | Binary use to install gem package                               |\n\n#### pentester::gitrob_db\n| Key                             | Type    | Description                                  |\n| ------------------------------- | ------- | -------------------------------------------- |\n| `[pentester][gitrob][db][db]`   | String  | Postgresql database name (default: `gitrob`) |\n| `[pentester][gitrob][db][user]` | String  | Postgresql user name (default: `gitrob`)     |\n| `[pentester][gitrob][db][pass]` | String  | postgresql user password (default: `gitrob`) |\n\n#### pentester::webshell\n| Key                                     | Type   | Description                                                   |\n| --------------------------------------- | ------ | --------------------------------------------------------------|\n| `[pentester][webshell][git_repository]` | String | Git repository (default: `https://github.com/tennc/webshell`) |\n| `[pentester][webshell][git_reference]`  | String | Git reference (default: `master`)                             |\n| `[pentester][webshell][install_dir]`    | String | Install directory (default: `/opt/webshell`)                  |\n\n#### pentester::itib\n| Key                                 | Type   | Description                                                         |\n| ----------------------------------- | ------ | ------------------------------------------------------------------- |\n| `[pentester][itib][git_repository]` | String | Git repository (default: `https://github.com/jgamblin/isthisipbad`) |\n| `[pentester][itib][git_reference]`  | String | Git reference (default: `master`)                                   |\n| `[pentester][itib][install_dir]`    | String | Install directory (default: `/opt/isthisipbad`)                     |\n\n#### pentester::nullsec\n| Key                                    | Type   | Description                                                          |\n| -------------------------------------- | ------ | -------------------------------------------------------------------- |\n| `[pentester][nullsec][git_repository]` | String | Git repository (default: `https://github.com/nullsecuritynet/tools`) |\n| `[pentester][nullsec][git_reference]`  | String | Git reference (default: `master`)                                    |\n| `[pentester][nullsec][install_path]`   | String | Install directory (default: `/opt/nullsecurity`)                     |\n\n#### pentester::veil\n| Key                                      | Type   | Description                                                                            |\n| ---------------------------------------- | ------ | -------------------------------------------------------------------------------------- |\n| `[pentester][veil][install_path]`        | String | Install directory (default: `/opt/veil`)                                               |\n| `[pentester][veil][evasion_repository]`  | String | Veil-Evasion repository (default: `'https://github.com/Veil-Framework/Veil-Evasion`)   |\n| `[pentester][veil][catapult_repository]` | String | Veil-Catapult repository (default: `'https://github.com/Veil-Framework/Veil-Catapult`) |\n| `[pentester][veil][pillage_repository]`  | String | Veil-Pillage repository (default: `'https://github.com/Veil-Framework/Veil-Pillage`)   |\n| `[pentester][veil][ordnance_repository]` | String | Veil-Ordnance repository (default: `'https://github.com/Veil-Framework/Veil-Ordnance`) |\n\n#### pentester::spf\n| Key                                    | Type   | Description                                                                      |\n| -------------------------------------- | ------ | --------------------------------------------------------------------             |\n| `[pentester][spf][git_repository]` | String | Git repository (default: `https://github.com/georgiaw/Smartphone-Pentest-Framework`) |\n| `[pentester][spf][git_reference]`  | String | Git reference (default: `master`)                                                    |\n| `[pentester][spf][install_path]`   | String | Install directory (default: `/opt/spf`)                                              |\n\n\n#### pentester::ptf\n| Key                                | Type   | Description                                                   |\n| ---------------------------------- | ------ | ------------------------------------------------------------- |\n| `[pentester][ptf][git_repository]` | String | Git repository (default: `https://github.com/trustedsec/ptf`) |\n| `[pentester][ptf][git_reference]`  | String | Git reference (default: `master`)                             |\n| `[pentester][ptf][install_path]`   | String | Install directory (default: `/opt/ptf`)                       |\n| `[pentester][ptf][config]`         | Hash   | Hash of PTF configuration. See `attributes/ptf.rb`            |\n\n#### pentester::msf\n| Key                                     | Type    | Description                                                                                      |\n| --------------------------------------- | ------- | ------------------------------------------------------------------------------------------------ |\n| `[pentester][msf][use_db]`              | Boolean | Use gitrob msf for configuration (default: `false`)                                              |\n| `[pentester][msf][git_repository]`      | String  | Git repository (source install only) (default: `https://github.com/rapid7/metasploit-framework`) |\n| `[pentester][msf][git_reference]`       | String  | Git reference (source install only) (default: `master`)                                          |\n| `[pentester][msf][install_dir]`         | String  | Install directory (source install only) (default: `/opt/metasploit-framework`)                   |\n| `[pentester][msf][package]`             | String  | Package name (package install only) (default: `metasploit-framework`)                            |\n| `[pentester][msf][additional_packages]` | String  | Install additional packages when installing from source (default: `[libpcap-dev]`)               |\n| `[pentester][msf][user_dirname]`        | String  | Metasploit user's directory name (default: `.msf4`)                                              |\n| `[pentester][msf][config]`              | Hash    | Metasploit configuration Hash (default: `{}`)                                                    |\n| `[pentester][msf][msfconsole.rc]`       | Array   | Array of lines for the msfconsole.rc file (default: `[]`)                                        |\n\n#### pentester::msf_db\n| Key                          | Type    | Description                               |\n| ---------------------------- | ------- | ----------------------------------------- |\n| `[pentester][msf][db][db]`   | String  | Postgresql database name (default: `msf`) |\n| `[pentester][msf][db][user]` | String  | Postgresql user name (default: `msf`)     |\n| `[pentester][msf][db][pass]` | String  | postgresql user password (default: `msf`) |\n\n#### pentester::w3af\n| Key                                 | Type    | Description                                                                                 |\n| ----------------------------------- | ------- | ------------------------------------------------------------------------------------------- |\n| `[pentester][w3af][git_repository]` | String  | Git repository (source install only) (default: `https://github.com/andresriancho/w3af.git`) |\n| `[pentester][w3af][git_reference]`  | String  | Git reference (source install only) (default: `master`)                                     |\n| `[pentester][w3af][install_dir]`    | String  | Install directory (source install only) (default: `/opt/w3af`)                              |\n| `[pentester][w3af][package]`        | String  | Package name (package install only) (default: `w3af`)                                       |\n| `[pentester][w3af][python_runtime`  | Integer | Python runtime to use (source install only) (default: `2`)                                  |\n| `[pentester][w3af][profiles]`       | Hash    | W3AF Profiles (default: `{}`)                                                               |\n| `[pentester][w3af][profiles_path]`  | String  | W3AF Profiles path (default: `/opt/w3af/profiles`)                                          |\n| `[pentester][w3af][apt_deps]`       | Array   | Apt dependencies (default: `[libxml2-dev libxslt1-dev python-dev]`)                         |\n| `[pentester][w3af][pip_deps]`       | Hash    | Pip dependencies with version. See (attributes)[attributes/w3af.rb] file for complete list  |\n\n#### pentester::mitmproxy\n| Key                                | Type    | Description                                   |\n| ---------------------------------- | ------- | --------------------------------------------- |\n| `[pentester][mitmproxy][packages]` | Array   | Array of dependencies for mitmproxy           |\n| `[pentester][mitmproxy][package] ` | String  | mitmproxy package name (default: `mitmproxy`) |\n\n## Data bags\nYou can use data bags to configure some tools, here are some data bag examples:\n\n#### `pentester/gitrob.json`\n```\n{\n  \"id\": \"gitrob\",\n  \"gh_auth_token\": \"your-token\",\n  \"db\": {\n    \"user\": \"gitrob_user\",\n    \"pass\": \"gitrob_pass\",\n    \"db\": \"gitrob_db\"\n  }\n}\n```\n\n#### `pentester/msf.json`\n```\n{\n  \"id\": \"msf\",\n  \"db\": {\n    \"user\": \"msf_user\",\n    \"pass\": \"msf_pass\",\n    \"db\": \"msf_db\"\n  }\n}\n```\n\n## Contributing\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\n## License and Authors\n\nAuthors: Sliim <sliim@mailoo.org>\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 7.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/git",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/python",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/database",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/postgresql",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/poise-python",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "default": "Includes all recipes",
    "autopwn": "Checkouts autopwn repository and configures targets",
    "fuzzdb": "Checkouts fuzzdb repository",
    "gitrob_install": "Installs Gitrob",
    "gitrob_config": "Configures Gitrob",
    "gitrob_db": "Configures Gitrob database",
    "itib": "Checkouts isthisipbad repository",
    "sn1per": "Checkouts Sn1per repository and its dependencies",
    "webshell": "Checkouts webshell repository",
    "nullsec": "Checkouts null-security tools",
    "veil": "Checkouts Veil-Framework repositories",
    "spf": "Checkouts Smartphone-Pentest-Framework",
    "ptf": "Checkouts and configure The PenTesters Framework (PTF)",
    "mitmproxy": "Installs mitmproxy and its dependencies",
    "msf_pkg": "Installs metasploit-framework from package",
    "msf_src": "Installs metasploit-framework from source",
    "msf_db": "Setup metasploit database (postgre)",
    "msf_config": "Configures metasploit",
    "msf_user_config": "Metasploit user configuration",
    "w3af_pkg": "Installs W3AF from package",
    "w3af_src": "Installs W3AF from source",
    "w3af_config": "Configures W3AF"
  }
}