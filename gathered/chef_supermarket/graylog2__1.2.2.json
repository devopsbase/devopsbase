{
  "name": "graylog2 Chef cookbook",
  "chef_cookbook_name": "graylog2",
  "revision": "1.2.2",
  "uris": [
    "https://supermarket.chef.io/cookbooks/graylog2",
    "https://supermarket.chef.io/cookbooks/graylog2/download",
    "https://supermarket.chef.io/cookbooks/graylog2/versions/1.2.2",
    "https://supermarket.chef.io/cookbooks/graylog2/versions/1.2.2/download",
    "https://supermarket.chef.io/api/v1/cookbooks/graylog2/versions/1.2.2",
    "https://supermarket.chef.io/api/v1/cookbooks/graylog2",
    "https://supermarket.chef.io/api/v1/cookbooks/graylog2/versions/1.2.2/download"
  ],
  "labels": [
    "Chef cookbook",
    "Monitoring & Trending",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Logging"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/graylog2",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/graylog2/versions/1.2.2/download",
  "deprecated": false,
  "created": "2011-02-03T22:08:21.000Z",
  "updated": "2016-09-19T15:22:52.651Z",
  "description": "Installs and configures Graylog - maintained by Graylog, Inc.",
  "maintainer": {
    "name": "graylog2",
    "email": "marius@graylog.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 76,
  "downloads_count": 17046097,
  "downloads_count_revision": 627,
  "repository_url": "https://github.com/Graylog2/graylog2-cookbook",
  "issues_url": "https://github.com/Graylog2/graylog2-cookbook/issues",
  "chef_source_url": "https://github.com/Graylog2/graylog2-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n-----------\n\nThis _Chef_ cookbook installs and configures the [Graylog](http://www.graylog.org) log management system.\n\nIt is using the official installation packages provided by [_Graylog, Inc._](http://www.graylog.com). It needs as requirement an installation of Java, [Elasticsearch](http://www.elasticsearch.org) and [MongoDB](https://www.mongodb.org).\n\nUsage\n-----\n\n### Quickstart\nTo give this cookbook a try simply use the Kitchen test suite.\n\n```\nkitchen setup default-ubuntu-1404\nopen http://localhost:9000\nLogin with admin/admin\n```\n\n### Recipes\nThe cookbook contains several recipes for different installation setups. Pick only the recipes\nyou need for your environment.\n\n|Recipe     | Description |\n|:----------|:------------|\n|default    |Setup the Graylog package repository|\n|server     |Install Graylog server|\n|web        |Install Graylog web interface|\n|radio      |Install a Graylog radio node|\n|authbind   |Give the Graylog user access to privileged ports like 514 (only on Ubuntu/Debian)|\n|api_access |Use Graylog API to setup inputs like 'Syslog UDP'|\n|collector  |Install Graylog's collector (Experimental)|\n\nIn a minimal setup you need at least the _default_, _server_ and _web_ recipes. Combined with\nMongoDB and Elasticsearch, a run list might look like this:\n\n```\nrun_list \"recipe[java]\",\n         \"recipe[elasticsearch]\",\n         \"recipe[mongodb]\",\n         \"recipe[graylog2]\",\n         \"recipe[graylog2::server]\",\n         \"recipe[graylog2::web]\"\n```\n\n### Attributes\nGraylog runs currently with Java 8. To install the correct version set this attribute:\n\n```json\n  \"java\": {\n    \"jdk_version\": \"8\",\n    \"install_flavor\": \"oracle\",\n    \"oracle\": {\n      \"accept_oracle_download_terms\": true\n    }\n  }\n```\n\nOpenJDK and Oracle JDK are both fine for Graylog, but the [Java cookbook](https://supermarket.chef.io/cookbooks/java) only supports Oracle's Java 8. Note that you must accept Oracle's download terms.\n\nYou _have_ to use a  certain version of Elasticsearch for every Graylog Version, currently\nthis is 1.7.1. The cluster name should be 'graylog2':\n\n```json\n  \"elasticsearch\": {\n    \"version\": \"1.7.1\",\n    \"cluster\": {\n      \"name\": \"graylog2\"\n    }\n  }\n```\n\nGraylog itself needs a secret for encryption and a hashed password for the root user. By default this user is called _admin_.\n\nYou can create the secret with this shell command `pwgen -s 96 1`.\n\nThe password can be generated with `echo -n yourpassword | shasum -a 256 | awk '{print $1}'`\n\n```json\n  \"graylog2\": {\n    \"password_secret\": \"ZxUahiN48EFVJgzRTzGO2olFRmjmsvzybSf4YwBvn5x1asLUBPe8GHbOQTZ0jzuAB7dzrNPk3wCEH57PCZm23MHAET0G653G\",\n    \"root_password_sha2\": \"e3c652f0ba0b4801205814f8b6bc49672c4c74e25b497770bb89b22cdeb4e951\",\n    \"server\": {\n      \"java_opts\": \"-Djava.net.preferIPv4Stack=true\"\n    },\n    \"web\": {\n      \"secret\": \"ZxUahiN48EFVJgzRTzGO2olFRmjmsvzybSf4YwBvn5x1asLUBPe8GHbOQTZ0jzuAB7dzrNPk3wCEH57PCZm23MHAET0G653G\"\n    }\n  }\n```\n\nAlternatively you can create an encrypted data bag and store the secrets there. The data should be called\n'secrets' with an item 'graylog'.\n\n```shell\nknife data bag create --secret-file ~/.chef/encrypted_data_bag_secret secrets graylog\n\n{\n  \"id\": \"graylog\",\n  \"server\": {\n    \"root_password_sha2\": \"<root password as sha256>\",\n    \"password_secret\": \"<random string as encryption salt>\"\n  },\n  \"web\": {\n    \"secret\": \"<random string as encryption salt>\"\n  }\n}\n```\n\nYou can take a look into the attributes file under `attributes/default.rb` to get an idea\nwhat can be configured for Graylog.\n\n### Node discovery\nThe cookbook is able to use Chef's search to find Elasticsearch and other Graylog nodes. To configure\na dynamic cluster set the following attributes:\n\n#### Elasticsearch discovery\n```ruby\n'graylog2'=> {\n  'elasticsearch' => {\n    'unicast_search_query' => 'role:elasticsearch',\n    'search_node_attribute' => 'ipaddress'\n  }\n}\n```\n\n#### Graylog server discovery\n```ruby\n'graylog2'=> {\n  'web' => {\n    'server_search_query' => 'role:graylog-server',\n    'search_node_attribute' => 'ipaddress'\n  }\n}\n```\n\nOne server needs to be set as a master, use this attribute to do so\n\n```\ndefault.graylog2[:ip_of_master] = node.ipaddress\n```\n\n### Authbind\n\nUbuntu/Debian systems allow a user to bind a proccess to a certain privileged port below 1024.\nThis is called authbind and is supported by this cookbook. So it is possible to let Graylog listen on port 514 and act like a normal syslog server.\nTo enable this feature include the [authbind](https://supermarket.chef.io/cookbooks/authbind) cookbook to your run list and also the recipe\n`recipe[graylog2::authbind]` from this cookbook.\nBy default the recipe will give the Graylog user permission to bind to port 514 if you need more than that you can\nset the attribute `default.graylog2[:authorized_ports]` to an array of allowed ports.\n\n### API access\n\nIn order to access the API of Graylog we provide a LWRP to do so. At the moment we only support\nthe creation of inputs but the LWRP is easy to extend. You can use the provider in your own\nrecipe like this:\n\nInclude `recipe[graylog2::api_access]` to your run list.\n\n```ruby\ngraylog2_inputs \"syslog udp\" do\n  input '{ \"title\": \"syslog\", \"type\":\"org.graylog2.inputs.syslog.udp.SyslogUDPInput\", \"global\": true, \"configuration\": { \"port\": 1514, \"allow_override_date\": true, \"bind_address\": \"0.0.0.0\", \"store_full_message\": true, \"recv_buffer_size\": 1048576 } }'\nend\n```\n\nor you can put the same JSON into an array and set it as an attribute:\n\n```json\n\"graylog2\": {\n  \"inputs\": [\"{ \\\"title\\\": \\\"syslog\\\", \\\"type\\\":\\\"org.graylog2.inputs.syslog.udp.SyslogUDPInput\\\", \\\"global\\\": true, \\\"configuration\\\": { \\\"port\\\": 1514, \\\"allow_override_date\\\": true, \\\"bind_address\\\": \\\"0.0.0.0\\\", \\\"store_full_message\\\": true, \\\"recv_buffer_size\\\": 1048576 } }\"]\n}\n```\n\nLicense\n-------\n\nAuthor: Marius Sturm (<marius@graylog.com>) and [contributors](http://github.com/graylog2/graylog2-cookbook/graphs/contributors)\n\nLicense: Apache 2.0\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/authbind",
      "revision": ">= 0.1.8",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/java",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ark",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "recommends": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/mongodb",
      "revision": ">= 0.0.0"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/elasticsearch",
      "revision": ">= 0.0.0"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/authbind",
      "revision": ">= 0.0.0"
    }
  ]
}