{
  "name": "nscp Chef cookbook",
  "chef_cookbook_name": "nscp",
  "revision": "0.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/nscp",
    "https://supermarket.chef.io/cookbooks/nscp/download",
    "https://supermarket.chef.io/cookbooks/nscp/versions/0.1.0",
    "https://supermarket.chef.io/cookbooks/nscp/versions/0.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/nscp/versions/0.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/nscp",
    "https://supermarket.chef.io/api/v1/cookbooks/nscp/versions/0.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Mode/CLI",
    "Style/Virtualization Level/Operating System",
    "Type/Infrastructure/Operating System/Windows"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/nscp",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/nscp/versions/0.1.0/download",
  "deprecated": false,
  "created": "2016-07-15T10:28:26.304Z",
  "updated": "2016-07-15T10:28:26.290Z",
  "description": "Installs/Configures NSClient++ for Windows operating system",
  "maintainer": {
    "name": "anuriq",
    "email": "anuriq@gmail.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 43,
  "downloads_count_revision": 43,
  "repository_url": "https://github.com/anuriq/chef-nscp",
  "issues_url": "https://github.com/anuriq/chef-nscp/issues",
  "chef_source_url": "https://github.com/anuriq/chef-nscp",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# Nscp Chef Cookbook\n\n### Description\nNSClient++ is used as a monitoring agent on Windows. This cookbook installs it in NRPE (legacy) mode. Also it provides LWRP to create additional script checks.\n\n### Requirements\n\n#### Platforms\nTested only on Windows Server 2012 R2.\n\n### Attributes\nRoot for all attributes is `node['nscp']`.\n\n|Attribute|Description|Type|Default|\n|---------|-----------|----|-------|\n|`['config']`|Configuration values for `nsclient.ini` are stored here.|Hash|Check `attributes/default.rb`|\n|`['template_cookbook']`|Name of the cookbook where configuration templates are stored.|String|'nscp'|\n|`['template_name']`|Name of template file for `nsclient.ini` config.|String|'nsclient.ini.erb'|\n|`['template_scripts_name']`|Name of template file for `nsclient_scripts.ini` config.|String|'nsclient_scripts.ini.erb'|\n|`['service_name']`|Name of the NSClient++ service.|String|'nscp'|\n\n\n### Recipes\n\n* `default.rb` - Install and configure NSClient++.\n\n\n### Resources\n\n#### nscp_check\n\nUsed to create additional script checks. Every check is saved in node attributes.\n\n|Property|Description|Type|Default|\n|--------|-----------|----|-------|\n|`command_name`|Unique command name. This command then called from check_nrpe.|String||\n|`command`|Script name to execute. Currently only scripts in `<nsclient_folder>/scripts` are supported. Put custom scripts there using `template` or `cookbook_file` resources. Arguments are supported.|String||\n|`arguments`|Arguments array to be used with check. ATTENTION: These values are not for NSClient++ configuration, but for Nagios, Icinga, etc. to run with check_nrpe.|Array|[]|\n\n\n### Kitchen\n```bash\n# check style\nchef exec rake style\n# converge and run tests\nchef exec rake integration:vagrant\n```\n\n### Examples\nFor examples see `test/fixtures/cookbooks/test` cookbook.\n\n### Authors\n* Author:: Azat Khadiev (anuriq@gmail.com)\n",
  "requires": [
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chocolatey",
      "revision": "~> 1.0",
      "self_resolve": true
    }
  ]
}