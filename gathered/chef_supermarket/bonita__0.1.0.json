{
  "name": "bonita Chef cookbook",
  "chef_cookbook_name": "bonita",
  "revision": "0.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/bonita",
    "https://supermarket.chef.io/cookbooks/bonita/download",
    "https://supermarket.chef.io/cookbooks/bonita/versions/0.1.0",
    "https://supermarket.chef.io/cookbooks/bonita/versions/0.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/bonita/versions/0.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/bonita",
    "https://supermarket.chef.io/api/v1/cookbooks/bonita/versions/0.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/bonita",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/bonita/versions/0.1.0/download",
  "deprecated": false,
  "created": "2012-04-26T06:13:00.000Z",
  "updated": "2012-11-13T04:47:59.000Z",
  "description": "Installs/Configures the bonita BPM server",
  "maintainer": {
    "name": "peter_donald",
    "email": "peter@realityforge.org"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 4863887,
  "downloads_count_revision": 1215962,
  "repository_url": "https://github.com/realityforge/chef-bonita",
  "issues_url": "https://github.com/realityforge/chef-bonita",
  "chef_source_url": "https://github.com/realityforge/chef-bonita",
  "gatherbase_origin": "chef-supermarket",
  "readme": "= DESCRIPTION:\n\nDownload BonitaSoft from a remote location and install it into the tomcat directories according to the directions. The\ncookbook has been tested with the \"Subscription Pack\" 5.6.1 version of the Bonita product. First you need to download the\n\"Bonita Open Solution Deployment\" package from the downloads page (http://www.bonitasoft.com/products/BPM_downloads/all)\nand upload it to a local location. We install it in a local Maven repository with coordinates\n\"com.bonitasoft:bonitasoft-server-sp:5.6.1:tomcat:zip\".\n\nUnfortunately the install can not be completely automated as BonitaSoft requires that you generate a license for the\nspecific host that the product is deployed upon. So after the initial install you need to generate a license key as per\nthe directions given by BonitaSoft (i.e. Run either /usr/local/bonita-5.6/licenses/generateRequestForAnyEnvironment.sh\nor /usr/local/bonita-5.6/licenses/generateRequestForDevelopmentEnvironment.sh and send of request to bonita and wait\nfor a response). The license needs to be made available over http. We make this license also available in a local Maven\n repository.\n\nThe cookbook has only been tested when deploying to MS SQL server but it is expected that modifying the configuration\nsettings will make the cookbook work with other database vendors.\n\n= REQUIREMENTS:\n\n* Ubuntu (?)\n\n= ATTRIBUTES:\n\n* `node[\"bonita\"][\"package_url\"]` - The url to package containing the bonita software.\n* `node[\"bonita\"][\"package_checksum\"]` - The package checksum.\n* `node[\"bonita\"][\"license_url\"]` - The url to the license file for the bonita software.\n* `node[\"bonita\"][\"license_checksum\"]` - The license file checksum.\n* `node[\"bonita\"][\"database\"][\"hibernate\"][\"dialect\"]` - = \"org.hibernate.dialect.SQLServerDialect\".\n* `node[\"bonita\"][\"database\"][\"exo_jcr\"][\"dialect\"]` - The xCMIS jcr dialect. Defaults to \"mssql\".\n* `node[\"bonita\"][\"database\"][\"hibernate\"][\"interceptor\"]` - The Bonita hibernate interceptor. Defaults to \"org.ow2.bonita.env.interceptor.MSSQLServerDescNullsFirstInterceptor\".\n* `node[\"bonita\"][\"database\"][\"jdbc\"][\"driver\"]` - The class name of the database driver. Defaults to \"net.sourceforge.jtds.jdbc.Driver\".\n* `node[\"bonita\"][\"database\"][\"jdbc\"][\"bonita_url\"]` - The database jdbc url for bonita. Defaults to nil.\n* `node[\"bonita\"][\"database\"][\"jdbc\"][\"xcmis_url\"]` - The database jdbc url for xcmis. Defaults to nil.\n* `node[\"bonita\"][\"database\"][\"jdbc\"][\"username\"]` - The database username. Defaults to \"bonita\".\n* `node[\"bonita\"][\"database\"][\"jdbc\"][\"password\"]` - The database username. Defaults to \"bonita\".\n* `node[\"bonita\"][\"database\"][\"driver_package_url\"]` - The url to package containing database driver.\n* `node[\"bonita\"][\"database\"][\"driver_package_checksum\"]` - The checksum of the package containing database driver.\n* `node[\"bonita\"][\"xcmis\"][\"username\"]` - The xCMIS username. Defaults to \"xcmis\".\n* `node[\"bonita\"][\"xcmis\"][\"password\"]` - The xCMIS password. Defaults to \"xcmis\".\n\n= USAGE:\n\nHere is some example properties defined on a role that includes bonita.\n\n  :bonita =>\n    {\n      :package_url => \"http://repo.example.com/com/bonitasoft/bonitasoft-server-sp/5.6/bonitasoft-server-sp-5.6-tomcat.zip\",\n      :package_checksum => \"15462a164fffe0533782fba3d2e9f0a6fbec308c\",\n      :license_url => \"http://repo.example.com/com/bonitasoft/bonitasoft-server-sp/license/5.6/license-5.6-MyUser-bonita.example.com-20111128-20120226.lic\",\n      :license_checksum => \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n      :database =>\n        {\n          :driver_package_url => \"http://repo.example.com/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar\",\n          :driver_package_checksum => \"6761d4a036e661a8719a54b507a0fb8e\",\n          :jdbc =>\n            {\n              :bonita_url => 'jdbc:jtds:sqlserver://db.example.com/BONITA',\n              :xcmis_url => 'jdbc:jtds:sqlserver://db.example.com/xCMIS',\n              :username => 'username',\n              :password => 'password',\n            }\n        },\n    :xcmis =>\n      {\n        :username => 'xcmis_username',\n        :password => 'xcmis_password'\n      }\n    }\n\n= TODO:\n\nCurrently when running Bonita on a SQL Server instance you need to execute the following SQL;\n\n  ALTER DATABASE BONITA SET ALLOW_SNAPSHOT_ISOLATION ON\n  ALTER DATABASE BONITA SET READ_COMMITTED_SNAPSHOT ON\n\nThis should be automated somehow...",
  "requires": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/tomcat",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "parameters": {
    "bonita/package_url": {
      "display_name": "URL of bonita package",
      "description": "The url of package to download to install bonita.",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    },
    "bonita/package_checksum": {
      "display_name": "Bonita Package Checksum",
      "description": "The checksum for the bonita package",
      "type": "string",
      "choice": [],
      "calculated": false,
      "required": "optional",
      "recipes": [],
      "mapping": "cookbook_attribute"
    }
  }
}