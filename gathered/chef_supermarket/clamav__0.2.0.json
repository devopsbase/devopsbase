{
  "name": "clamav Chef cookbook",
  "chef_cookbook_name": "clamav",
  "revision": "0.2.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/clamav",
    "https://supermarket.chef.io/cookbooks/clamav/download",
    "https://supermarket.chef.io/cookbooks/clamav/versions/0.2.0",
    "https://supermarket.chef.io/cookbooks/clamav/versions/0.2.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/clamav/versions/0.2.0",
    "https://supermarket.chef.io/api/v1/cookbooks/clamav",
    "https://supermarket.chef.io/api/v1/cookbooks/clamav/versions/0.2.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/clamav",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/clamav/versions/0.2.0/download",
  "deprecated": false,
  "created": "2013-01-16T23:00:00.000Z",
  "updated": "2016-02-05T19:06:16.006Z",
  "description": "Installs/configures ClamAV",
  "maintainer": {
    "name": "roboticcheese",
    "email": "j@p4nt5.com"
  },
  "license": "Apache v2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 12,
  "downloads_count": 7110875,
  "downloads_count_revision": 1211739,
  "repository_url": "https://github.com/RoboticCheese/clamav",
  "issues_url": "https://github.com/RoboticCheese/clamav",
  "chef_source_url": "https://github.com/RoboticCheese/clamav",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "[![Build Status](https://travis-ci.org/RoboticCheese/clamav.png?branch=master)](https://travis-ci.org/RoboticCheese/clamav)\n\nDescription\n===========\nA cookbook for installing and configuring ClamAV. Components to be installed/enabled\nare accessible as attributes.\n\nRequirements\n============\n* A RHEL/CentOS/Scientific, Debian/Ubuntu, or compatible OS\n\nAttributes\n==========\nPretty much everything offered as options for ClamAV is configurable. Some\nattributes that one might commonly want to override:\n\n    default[\"clamav\"][\"clamd\"][\"enabled\"] = false\n    default[\"clamav\"][\"freshclam\"][\"enabled\"] = false\n\nWhether or not the ClamAV daemons should be running\n\n    default[\"clamav\"][\"version\"] = \"0.97.6<VARIES_BY_OS>\"\n\nThe version of the ClamAV packages to install\n\n    default[\"clamav\"][\"dev_package\"] = false\n\nWhether to install the appropriate ClamAV development package\n\n    default[\"clamav\"][\"clamd\"][\"log_file\"] = \"/var/log/clamav/clamd.log\"\n    default[\"clamav\"][\"clamd\"][\"logrotate_frequency\"] = \"daily\"\n    default[\"clamav\"][\"clamd\"][\"logrotate_rotations\"] = 7 \n    default[\"clamav\"][\"clamd\"][\"log_file_unlock\"] = \"no\"\n    default[\"clamav\"][\"clamd\"][\"log_file_max_size\"] = \"1M\"\n    default[\"clamav\"][\"clamd\"][\"log_time\"] = \"no\"\n    default[\"clamav\"][\"clamd\"][\"log_clean\"] = \"no\"\n    default[\"clamav\"][\"clamd\"][\"log_syslog\"] = \"no\"\n    default[\"clamav\"][\"clamd\"][\"log_facility\"] = nil \n    default[\"clamav\"][\"clamd\"][\"log_verbose\"] = \"no\"\n    default[\"clamav\"][\"freshclam\"][\"update_log_file\"] = \"/var/log/clamav/freshclam.log\"\n    default[\"clamav\"][\"freshclam\"][\"logrotate_frequency\"] = \"daily\"\n    default[\"clamav\"][\"freshclam\"][\"logrotate_rotations\"] = 7\n    default[\"clamav\"][\"freshclam\"][\"log_file_max_size\"] = \"1M\"\n    default[\"clamav\"][\"freshclam\"][\"log_time\"] = \"no\"\n    default[\"clamav\"][\"freshclam\"][\"log_verbose\"] = \"no\"\n    default[\"clamav\"][\"freshclam\"][\"log_syslog\"] = \"no\"\n    default[\"clamav\"][\"freshclam\"][\"log_facility\"] = nil \n\nLog file/syslog facility logging options\n\nClamAV has many other options. See the attribute files and ClamAV\n[documentation](http://www.clamav.net/doc/latest/html/) for details.\n\nUsage\n=====\nNothing special. Override the default attributes as you see fit and go to town!\n\nDevelopment\n=====\nFeel free to fork this project and submit any changes via pull request.\n\nTesting\n=====\nAs a first project to implement cookbook tests, I probably went a bit\noverboard, but this cookbook implements several sets of tests using a number\nof tools.\n\n* [Vagrant](http://vagrantup.com/) and [VirtualBox](https://www.virtualbox.org/) for creating virtual environments\n* [Berkshelf](http://berkshelf.com/) for retrieving cookbook dependencies\n* [FoodCritic](http://acrmp.github.com/foodcritic/) for lint tests\n* [ChefSpec](https://github.com/acrmp/chefspec/) for the cookbook tests\n* [Minitest Chef Handler](https://github.com/calavera/minitest-chef-handler) for the full-on Chef run tests\n* [Cucumber](http://cukes.info/) for high-level behavior tests\n* [Test Kitchen](https://github.com/opscode/test-kitchen) to tie all the tests together\n\nTo run the Foodcritic tests only, run:\n\n    foodcritic\n\nTo run the ChefSpec tests:\n\n    rspec\n\nTo start up a development environment for basic Chef run verification:\n\n    vagrant up\n\nTo do a full-on run of all tests on every supported platform:\n\n    kitchen test\n\nTo Do\n=====\n* Use Fauxhai for some of the spec tests\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 5.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 5.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 5.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 5.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/logrotate",
      "revision": "= 1.0.2",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": "= 2.1.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": "= 1.8.0",
      "self_resolve": true
    }
  ]
}