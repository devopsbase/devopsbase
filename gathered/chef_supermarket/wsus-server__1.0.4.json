{
  "name": "wsus-server Chef cookbook",
  "chef_cookbook_name": "wsus-server",
  "revision": "1.0.4",
  "uris": [
    "https://supermarket.chef.io/cookbooks/wsus-server",
    "https://supermarket.chef.io/cookbooks/wsus-server/download",
    "https://supermarket.chef.io/cookbooks/wsus-server/versions/1.0.4",
    "https://supermarket.chef.io/cookbooks/wsus-server/versions/1.0.4/download",
    "https://supermarket.chef.io/api/v1/cookbooks/wsus-server/versions/1.0.4",
    "https://supermarket.chef.io/api/v1/cookbooks/wsus-server",
    "https://supermarket.chef.io/api/v1/cookbooks/wsus-server/versions/1.0.4/download"
  ],
  "labels": [
    "Chef cookbook",
    "Package Management",
    "Executable/Script/Chef Cookbook",
    "Binding/Region/North America/US",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/wsus-server",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/wsus-server/versions/1.0.4/download",
  "deprecated": false,
  "created": "2014-09-15T15:25:46.628Z",
  "updated": "2016-07-22T13:09:55.878Z",
  "description": "Installs wsus server",
  "maintainer": {
    "name": "criteo",
    "email": "b.courtois@criteo.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 7,
  "downloads_count": 2727144,
  "downloads_count_revision": 328,
  "repository_url": "https://github.com/criteo-cookbooks/wsus-server",
  "issues_url": "https://github.com/criteo-cookbooks/wsus-server/issues",
  "chef_source_url": "https://github.com/criteo-cookbooks/wsus-server",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Wsus-server Cookbook\n=============\nInstalls WSUS (Windows Server Update Services) and configure approved updates.\n\n\nRequirements\n------------\nThis cookbook requires Chef 11.12.0+ because it leverages the `guard_interpreter` feature for powershell scripts.\n\n### Platforms\n* Windows Server 2008 (R1, R2)\n* Windows Server 2012 (R1, R2)\n\n### Cookbooks\nThe following cookbooks are required as noted:\n\n* [windows][windows_cookbook] (`wsus-server::install` leverages windows_package and windows_feature LWRPs)\n\nUsage\n-----\nPlace an explicit dependency on this cookbook (using depends in the cookbook's metadata.rb) from any cookbook where you would like to use the Wsus-Server-specific resources/providers that ship with this cookbook.\n\n```ruby\ndepends 'wsus-server'\n```\n\nThen include the recipes you want, or use one the LWRP provided.\n\n\nProviders & Resources\n---------------------\n## wsus_server_configuration\nResource provider for configuring WSUS server global settings, for example specify a proxy server if necessary, the update languages to download, and whether the updates are stored locally.\nThis is a mapping of the [IUpdateServerConfiguration][configuration] interface.\n\n### Attributes\nAttribute        | Description                         | Type\n-----------------|-------------------------------------|-----\nname             | Name of the resource                | String\nendpoint         | Url of the server to configure      | String, URI\nmaster_server    | Url of the upstream server          | String, URI\nproxy_password   | Password to access the proxy server | String\nproperties       | Hash to configure all [IUpdateServerConfiguration][configuration_members] writeable properties | Hash\nupdate_languages | Update languages to download        | Array\n\n## wsus_server_notification\nResource provider for configuring WSUS notifications and e-mail settings, such as user account and e-mail server.\nThis is a mapping of the [IEmailNotificationConfiguration][notification] interface.\n\n### Attributes\nAttribute                     | Description                                              | Type\n------------------------------|----------------------------------------------------------|-----\nname                          | Name of the resource                                     | String\nendpoint                      | Url of the server to configure                           | String, URI\nenable_sync_notification      | Whether update alerts should be sent                     | TrueClass, FalseClass\nenable_smtp_authentication    | Whether the SMTP server requires authentication          | TrueClass, FalseClass\nenable_status_notification    | Whether new update status summaries are to be sent       | TrueClass, FalseClass\nlanguage                      | Language used in the e-mail                              | String\nproperties                    | Hash to configure all [IEmailNotificationConfiguration][notification_members] writeable properties | Hash\nsender_address                | E-mail address of the sender                             | String\nsender_name                   | Display name of the e-mail sender                        | String\nsmtp_host                     | Password of the e-mail sender                            | String\nsmtp_password                 | Name of the SMTP server                                  | String\nsmtp_port                     | SMTP port number                                         | FixNum\nsmtp_user                     | Username of the e-mail sender                            | String\nstatus_notification_frequency | Frequency with which e-mail notifications should be sent | String\nstatus_notification_time      | Time of the day e-mail notifications should be sent      | String\n\n## wsus_server_subscription\nResource provider for configuring WSUS synchronization settings.\nThis is a mapping of the [ISubscription][subscription] interface.\n\n### Attributes\nAttribute                | Description                                       | Type\n-------------------------|---------------------------------------------------|-----\nname                     | Name of the resource                              | String\nendpoint                 | Url of the server to configure                    | String, URI\nautomatic_synchronization| Whether to automatically synchronizes updates     | TrueClass, FalseClass\ncategories               | Categories of updates that WSUS synchronizes      | Array\nclassifications          | Classifications of updates that WSUS synchronizes | Array\nproperties               | Hash to configure all [ISubscription][subscription_members] writeable properties | Hash\nsynchronization_per_day  | Number of server-to-server synchronizations a day | FixNum\nsynchronization_time     | Time of day to automatically synchronize updates  | String\nsynchronize_categories   | Whether to only synchronize categories not updates| TrueClass, FalseClass\n\nRecipes\n-------\nAll recipes described below are configurable via attributes, as described in the previous section.\n\n## wsus-server::configure\nThis is the main recipe to configure WSUS servers.\nIt configures the service itself - upstream server, listening port, etc. - but also subscriptions and notifications\n\n### Attributes\nThe following attributes are used to configure the `wsus-server::configure` recipe.\n\n#### WSUS global settings\nAccessible via `node['wsus_server']['configuration']`.\n\nAttribute                | Description                                                          | Type        | Default\n-------------------------|----------------------------------------------------------------------|-------------|--------\nproxy_password           | Password to use when accessing the proxy server                      | String      | `nil`\nupdate_languages         | Enables update for the specified list of languages                   | Array       | `['en']`\nmaster_server            | Defines the upstream server and set the current server as its replica| String, URI | `nil`\nproperties               | Hash to configure all [IUpdateServerConfiguration][configuration_members] writeable properties | Hash | `{ 'TargetingMode' => 'Client' }`\n\n\n#### WSUS notification settings\nAccessible via `node['wsus_server']['notification']`.\n\nAttribute                    | Description                                             | Type                  | Default\n-----------------------------|---------------------------------------------------------|-----------------------|--------\nenable_sync_notification     | Whether new update alerts should be sent                | TrueClass, FalseClass | `false`\nenable_smtp_authentication   | Whether the SMTP server requires authentication         | TrueClass, FalseClass | `false`\nenable_status_notification   | Whether the new update status summaries should be send  | TrueClass, FalseClass | `false`\nlanguage                     | Language used to send notification e-mails              | String                | `en`\nproperties                   | Hash to configure all [ISubscription][subscription_members] writeable properties | Hash | `{}`\nsender_address               | E-mail address of the notification sender               | String                | `nil`\nsender_name                  | Display name of the notification sender                 | String                | `nil`\nsmtp_host                    | Hostname of the SMTP server used by notifications       | String                | `nil`\nsmtp_password                | Time of day when WSUS synchronize updates and categories| String                | `nil`\nsmtp_port                    | port of the SMTP server used for notifications          | FixNum                | `25`\nsmtp_user                    | Username of the notification sender                     | String                | `nil`\nstatus_notification_frequency| E-mail notification frequency (`Daily` or `Weekly`)     | String                | `Daily`\nstatus_notification_time     | Time of the day e-mail notifications should be sent     | String                | `00:00:00`\n\n\n#### WSUS synchronization settings\nAccessible via `node['wsus_server']['subscription']`.\n\nAttribute                 | Description                                                | Type                  | Default\n--------------------------|------------------------------------------------------------|-----------------------|--------\nautomatic_synchronization | Controls automatic updates synchronization                 | TrueClass, FalseClass | `true`\ncategories                | List of update categories to synchronize (ID or Title)     | Array                 | `[]`\nclassifications           | List of update classifications to synchronize (ID or Title)| Array                 | `[]`\nproperties                | Hash to configure all [ISubscription][subscription_members] writeable properties | Hash | `{}`\nsynchronization_per_day   | Number of server-to-server synchronizations a day          | FixNum                | `12`\nsynchronization_time      | Time of day when WSUS synchronize updates and categories   | String                | `00:00:00`\nsynchronization_categories| Synchronizes category before configuring other settings    | TrueClass, FalseClass | `true`\n\n\n## wsus-server::default\nConvenience recipe that installs and configures latest WSUS then synchronizes updates.\nIt basicly includes `wsus-server::install` and `wsus-server::synchronize`\n\n## wsus-server::freeze\nConvenience recipe that tries to create a new Computer target group then approves all available updates for this specific group.\n\n### Attributes\nAccessible via `node['wsus_server']['freeze']`.\n\nAttribute | Description                                               | Type   | Default\n----------|-----------------------------------------------------------|--------|--------\nname      | Name of the frozen update list (computer group) to create | String | `nil`\n\n## wsus-server::install\nThis recipe can be included in a node's run_list to installs the latest available Windows Server Update Services.\nOn Windows Server 2008 and 2008R2 it leverages the `windows_package` LWRP to installs WSUS 3.0 SP2\nOn Windows Server 2012 and 2012R2 it leverages the `windows_feature` LWRP to enable WSUS 4.0.\n\nIn order to setup WSUS services properly it also enables some IIS components.\n\n### Attributes\nAccessible via `node['wsus_server']['setup']`\n\nAttribute       | Description                                        | Type   | Default\n----------------|----------------------------------------------------|--------|--------\ncontent_dir     | Directory to store localy WSUS content             | String | `nil`\nsqlinstance_name| Local or remote SQL instance for WSUS configuration| String | `nil`\n\n#### More Setup attributes for Windows Server 2008R2 and earlier\nAccessible via `node['wsus_server']['setup']`\n\nAttribute               | Description                                        | Type   | Default\n------------------------|----------------------------------------------------|--------|--------\nenable_inventory        | Enables the inventory feature                      | TrueClass, FalseClass | `false`\nfrontend_setup          | Whether WSUS should be setup as an additional [frontend server][frontend_server]| TrueClass, FalseClass | `false`\njoin_improvement_program| Joins the Microsoft Update Improvement Program     | TrueClass, FalseClass | `false`\nuse_default_website     | Whether WSUS should be set as default website - port 80 instead of 8530 | TrueClass, FalseClass | `false`\nwyukon_data_dir         | Path to windows internal database data directory   | String | `nil`\n\n#### Package attributes for Windows Server 2008R2 and earlier\nAccessible via `node['wsus_server']['package']`\n\nAttribute | Description                                        | Type   | Default\n----------|----------------------------------------------------|--------|--------\nname      | Name of the windows package                        | String | `Microsoft Server Update Services 3.0 SP2`\nsource    | Source of the windows package                      | String | *depends of the architecture*\nchecksum  | Checksum of the windows package                    | String | *depends of the architecture*\noptions   | Options to use when installing the windows package | String | `/q`\n\n## wsus-server::report_viewer\nInstall reporting viewer 2008 SP1 to enable wsus reports.\n\n### Attributes\nAccessible via `node['wsus_server']['report_viewer']`.\n\nAttribute | Description                                        | Type   | Default\n----------|----------------------------------------------------|--------|--------\nname      | Name of the windows package                        | String | `Microsoft Report Viewer Redistributable 2008 SP1`\nsource    | Source of the windows package                      | String | [http://download.microsoft.com/.../ReportViewer.exe][report_viewer]\nchecksum  | Checksum of the windows package                    | String | `1a0e41b1d82125ae214d3...f287290874ca2874b78f86a9`\noptions   | Options to use when installing the windows package | String | `/q`\n\n## wsus-server::synchronize\nThis recipe performs a synchronous update of the update catalog, according to the configured subscriptions.\n\n### Attributes\nAccessible via `node['wsus_server']['synchronize']`.\n\nAttribute | Description                                        | Type   | Default\n----------|----------------------------------------------------|--------|--------\ntimeout   | Synchronization timeout in minutes<br/>(zero or negative value for asynchronous synchronization) | FixNum | `60`\n\nContributing\n------------\n1. Fork the [repository on Github][repository]\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\nAuthors: [Baptiste Courtois][author] (<b.courtois@criteo.com>)\n\n```text\nCopyright 2014, Criteo.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n[author]:                https://github.com/Annih\n[repository]:            https://github.com/criteo-cookbooks/wsus-server\n[windows_cookbook]:      https://community.opscode.com/cookbooks/windows/\n[configuration]:         http://msdn.microsoft.com/library/microsoft.updateservices.administration.iupdateserverconfiguration\n[configuration_members]: http://msdn.microsoft.com/library/microsoft.updateservices.administration.iupdateserverconfiguration_members\n[notification]:          http://msdn.microsoft.com/library/microsoft.updateservices.administration.iemailnotificationconfiguration\n[notification_members]:  http://msdn.microsoft.com/library/microsoft.updateservices.administration.iemailnotificationconfiguration_members\n[subscription]:          http://msdn.microsoft.com/library/microsoft.updateservices.administration.isubscription\n[subscription_members]:  http://msdn.microsoft.com/library/microsoft.updateservices.administration.isubscription_members\n[frontend_server]: \t\t http://technet.microsoft.com/library/dd939896\n[report_viewer]:\t\t http://download.microsoft.com/download/3/a/e/3aeb7a63-ade6-48c2-9b6a-d3b6bed17fe9/ReportViewer.exe\n",
  "requires": [
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/windows",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}