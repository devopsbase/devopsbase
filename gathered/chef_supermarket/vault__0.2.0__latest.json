{
  "name": "vault Chef cookbook",
  "chef_cookbook_name": "vault",
  "revision": "0.2.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/vault",
    "https://supermarket.chef.io/cookbooks/vault/download",
    "https://supermarket.chef.io/cookbooks/vault/versions/0.2.0",
    "https://supermarket.chef.io/cookbooks/vault/versions/0.2.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/vault/versions/0.2.0",
    "https://supermarket.chef.io/api/v1/cookbooks/vault",
    "https://supermarket.chef.io/api/v1/cookbooks/vault/versions/0.2.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Applications",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/vault",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/vault/versions/0.2.0/download",
  "deprecated": false,
  "created": "2015-04-28T20:51:20.067Z",
  "updated": "2016-06-22T18:07:11.291Z",
  "description": "Installs/Configures Vault",
  "maintainer": {
    "name": "someara",
    "email": "hexedpackets@gmail.com"
  },
  "license": "MIT",
  "chef_foodcritic_failure": true,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 1,
  "downloads_count": 217501,
  "downloads_count_revision": 24768,
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "# chef-vault\nChef cookbook for managing [Vault](https://vaultproject.io).\n\nIn client mode, only the Vault binary will be installed.\n\nIn server mode, the binary will be installed, configured, and started as server.\nWARNING: The default behavior of the server is to start unconfigured. You must run `vault init` to generate the unseal keys and the initial root token.\n\n## Attributes\n\n#### vault::default\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>[:vault][:bin_dir]</tt></td>\n    <td>String</td>\n    <td>Directory to install the vault binary.</td>\n    <td><tt>/usr/local/bin</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:vault][:version]</tt></td>\n    <td>String</td>\n    <td>Version of Vault to install.</td>\n    <td><tt>0.1.0</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:vault][:mode]</tt></td>\n    <td>String</td>\n    <td>Indicates whether to install just the vault binary, or also start it as a server. Valud values are \"client\" and \"server\".</td>\n    <td><tt>client</tt></td>\n  </tr>\n\n\n  <tr>\n    <td><tt>[:vault][:server][:config]</tt></td>\n    <td>String</td>\n    <td>Location of the configuration file.</td>\n    <td><tt>/etc/vault.hcl</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:vault][:server][:service_name]</tt></td>\n    <td>String</td>\n    <td>Name of the service as seen by the init system.</td>\n    <td><tt>vault</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:vault][:server][:init_type]</tt></td>\n    <td>String</td>\n    <td>Init system to run the server under. Currenly only upstart is supported.</td>\n    <td><tt>upstart</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:vault][:server][:oom_score]</tt></td>\n    <td>Integer</td>\n    <td>OOM score adjustment in the init config.</td>\n    <td><tt>-100</tt></td>\n  </tr>\n\n  <tr>\n    <td><tt>[:vault][:server][:backends]</tt></td>\n    <td>Hash</td>\n    <td>Name of backends to enable along with their configurations.</td>\n    <td><tt>{\n  consul: {\n    address: \"demo.consul.io:80\",\n    path: \"vault\"\n  }\n}</tt></td>\n  </tr>\n  <tr>\n    <td><tt>[:vault][:server][:listeners]</tt></td>\n    <td>Hash</td>\n    <td>Name of listeners to enable along with their configurations.</td>\n    <td><tt>{\n  tcp: {\n    address: \"127.0.0.1:8200\",\n    tls_cert_file: \"/etc/ssl/certificate.crt\",\n    tls_key_file: \"/etc/ssl/key.pem\"\n  }\n}</tt></td>\n  </tr>\n</table>\n\n## Usage\n#### vault::default\n\nJust include `vault` in your node's `run_list`. This will load either `vault::client` or `vault::server` depending on the value of `node[:vault][:mode]`.\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[vault]\"\n  ]\n}\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    }
  ]
}