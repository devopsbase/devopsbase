{
  "name": "openvpn Chef cookbook",
  "chef_cookbook_name": "openvpn",
  "revision": "2.1.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/openvpn",
    "https://supermarket.chef.io/cookbooks/openvpn/download",
    "https://supermarket.chef.io/cookbooks/openvpn/versions/2.1.0",
    "https://supermarket.chef.io/cookbooks/openvpn/versions/2.1.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/openvpn/versions/2.1.0",
    "https://supermarket.chef.io/api/v1/cookbooks/openvpn",
    "https://supermarket.chef.io/api/v1/cookbooks/openvpn/versions/2.1.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Networking",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Style/Virtualization Level/Hardware/Network/VPN"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/openvpn",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/openvpn/versions/2.1.0/download",
  "deprecated": false,
  "created": "2009-10-28T19:17:34.000Z",
  "updated": "2013-12-16T18:06:34.000Z",
  "description": "Installs and configures openvpn and includes rake tasks for managing certs",
  "maintainer": {
    "name": "xhost",
    "email": "cookbooks@opscode.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 45,
  "downloads_count": 17397864,
  "downloads_count_revision": 1308963,
  "repository_url": "http://github.com/opscode-cookbooks/openvpn",
  "issues_url": "http://github.com/opscode-cookbooks/openvpn",
  "chef_source_url": "http://github.com/opscode-cookbooks/openvpn",
  "latest": true,
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "openvpn Cookbook\n================\n[![Build Status](https://secure.travis-ci.org/opscode-cookbooks/openvpn.png?branch=master)](http://travis-ci.org/opscode-cookbooks/openvpn)\n\nInstalls OpenVPN and sets up a fairly basic configuration. Since OpenVPN is very complex, we provide a baseline, but your site will need probably need to customize.\n\n\nRequirements\n------------\nOpenSSL 0.9.7 or later and OpenSSL bindings for Ruby\n\n### Platform\n- Debian 6.0\n- Ubuntu 10.04+\n- RHEL 5.x and RHEL 6.x w/ EPEL enabled.\n\n### Cookbooks\nThe `yum` cookbook by Opscode provides `recipe[yum::epel]` that can be used on RHEL-family systems to enable the EPEL repository containing the openvpn RPM. See __Usage__ below.\n\n### Not Supported\nThis cookbook is designed to set up a basic installation of OpenVPN that will work for many common use cases. The following configurations are not supported by default with this cookbook:\n\n- setting up routers and other network devices\n- ethernet-bridging (tap interfaces)\n- dual-factor authentication\n- many other advanced OpenVPN configurations\n\nFor further modification of the cookbook see __Usage__ below.\n\nFor more information about OpenVPN, see the [official site](http://openvpn.net/).\n\n\nAttributes\n----------\nThese attributes are set by the cookbook by default.\n\n* `node[\"openvpn\"][\"local\"]` - IP to listen on, defaults to node[:ipaddress]\n* `node[\"openvpn\"][\"proto\"]` - Valid values are 'udp' or 'tcp', defaults to 'udp'.\n* `node[\"openvpn\"][\"port\"]` - Port to listen on, defaults to '1194'.\n* `node[\"openvpn\"][\"type\"]` - Valid values are 'server' or 'server-bridge'. Default is 'server' and it will create a routed IP tunnel, and use the 'tun' device. 'server-bridge' will create an ethernet bridge and requires a tap0 device bridged with the ethernet interface, and is beyond the scope of this cookbook.\n* `node[\"openvpn\"][\"subnet\"]` - Used for server mode to configure a VPN subnet to draw client addresses. Default is 10.8.0.0, which is what the sample OpenVPN config package uses.\n* `node[\"openvpn\"][\"netmask\"]` - Netmask for the subnet, default is 255.255.0.0.\n* `node[\"openvpn\"][\"gateway\"]` - FQDN for the VPN gateway server. Default is `node[\"fqdn\"]`.\n* `node[\"openvpn\"][\"log\"]` - Server log file. Default /var/log/openvpn.log\n* `node[\"openvpn\"][\"key_dir\"]` - Location to store keys, certificates and related files. Default `/etc/openvpn/keys`.\n* `node[\"openvpn\"][\"signing_ca_cert\"]` - CA certificate for signing, default `/etc/openvpn/keys/ca.crt`\n* `node[\"openvpn\"][\"signing_ca_key\"]` - CA key for signing, default `/etc/openvpn/keys/ca.key`\n* `node[\"openvpn\"][\"routes\"]` - Array of routes to add as `push` statements in the server.conf. Default is empty.\n* `node[\"openvpn\"][\"script_security\"]` - Script Security setting to use in server config. Default is 1. The \"up\" script will not be included in the configuration if this is 0 or 1. Set it to 2 to use the \"up\" script.\n* `node[\"openvpn\"][\"configure_default_server\"]` - Boolean.  Set this to false if you want to create all of your \"conf\" files with the LWRP.\n* `node[\"openvpn\"][\"push\"]` - DEPRECATED: Use `routes` above. If you're still using this in your roles, the recipe will append to `routes` attribute.\n\nThe following attributes are used to populate the `easy-rsa` vars file. Defaults are the same as the vars file that ships with OpenVPN.\n\n* `node[\"openvpn\"][\"key\"][\"ca_expire\"]` - In how many days should the root CA key expire - `CA_EXPIRE`.\n* `node[\"openvpn\"][\"key\"][\"expire\"]` - In how many days should certificates expire - `KEY_EXPIRE`.\n* `node[\"openvpn\"][\"key\"][\"size\"]` - Default key size, set to 2048 if paranoid but will slow down TLS negotiation performance - `KEY_SIZE`.\n\nThe following are for the default values for fields place in the certificate from the vars file. Do not leave these blank.\n\n* `node[\"openvpn\"][\"key\"][\"country\"]` - `KEY_COUNTRY`\n* `node[\"openvpn\"][\"key\"][\"province\"]` - `KEY_PROVINCE`\n* `node[\"openvpn\"][\"key\"][\"city\"]` - `KEY_CITY`\n* `node[\"openvpn\"][\"key\"][\"org\"]` - `KEY_ORG`\n* `node[\"openvpn\"][\"key\"][\"email\"]` - `KEY_EMAIL`\n\n\nRecipes\n-------\n### default\nSets up an OpenVPN server.\n\n### users\nUtilizes a data bag called `users` to generate OpenVPN keys for each user.\n\n\nUsage\n-----\nCreate a role for the OpenVPN server. See above for attributes that can be entered here.\n\n```ruby\nname \"openvpn\"\ndescription \"The server that runs OpenVPN\"\nrun_list(\"recipe[openvpn]\")\noverride_attributes(\n  \"openvpn\" => {\n    \"gateway\" => \"vpn.example.com\",\n    \"subnet\" => \"10.8.0.0\",\n    \"netmask\" => \"255.255.0.0\",\n    \"key\" => {\n      \"country\" => \"US\",\n      \"province\" => \"CA\",\n      \"city\" => \"SanFrancisco\",\n      \"org\" => \"Fort-Funston\",\n      \"email\" => \"me@example.com\"\n    }\n  }\n)\n```\n\n**Note**: If you are using a Red Hat EL distribution, you may need the EPEL repository enabled to install the openvpn package. You can use Opscode's `recipe[yum::epel]` for this. Either add it to the run list in the openvpn role above, or add to a base role used by all your RHEL-family systems.\n\nTo push routes to clients, add `node['openvpn']['routes]` as an array attribute, e.g. if the internal network is 192.168.100.0/24:\n\n```ruby\noverride_attributes(\n  \"openvpn\" => {\n    \"routes => [\n      \"push 'route 192.168.100.0 255.255.255.0'\"\n    ]\n  }\n)\n```\n\nTo automatically create new certificates and configurations for users, create data bags for each user. The only content required is the `id`, but this can be used in conjunction with other cookbooks by Opscode such as `users` or `samba`. See __SSL Certificates__ below for more about generating client certificate sets.\n\n```javascript\n{\n  \"id\": \"jtimberman\"\n}\n```\n\nThis cookbook also provides an 'up' script that runs when OpenVPN is started. This script is for setting up firewall rules and kernel networking parameters as needed for your environment. Modify to suit your needs, upload the cookbook and re-run chef on the openvpn server. For example, you'll probably want to enable IP forwarding (sample Linux setting is commented out). The attribute `node[\"openvpn\"][\"script_security\"]` must be set to 2 or higher to use this otherwise openvpn server startup will fail.\n\n\nCustomizing Server Configuration\n--------------------------------\nTo further customize the server configuration, there are two templates that can be modified in this cookbook.\n\n* templates/default/server.conf.erb\n* templates/default/server.up.sh.erb\n\nThe first is the OpenVPN server configuration file. Modify to suit your needs for more advanced features of [OpenVPN](http://openvpn.net). The second is an `up` script run when OpenVPN starts. This is where you can add firewall rules, enable IP forwarding and other OS network settings required for OpenVPN. Attributes in the cookbook are provided as defaults, you can add more via the openvpn role if you need them.\n\n\nUsing the LWRP\n--------------\nTo create (possibly multiple) \"conf\" files on a server, use openvpn_conf \"name\".  See the conf.rb file in the resources directory to find the supported attributes, or add some of your own.  If you don't want to use the default \"server.conf\" from the default recipe, set `node[\"openvpn\"][\"configure_default_server\"]` to false, then use the LWRP to configure as many as you like.\n\n\nSSL Certificates\n----------------\nSome of the easy-rsa tools are copied to /etc/openvpn/easy-rsa to provide the minimum to generate the certificates using the default and users recipes. We provide a Rakefile to make it easier to generate client certificate sets if you're not using the data bags above. To generate new client certificates you will need `rake` installed (either as a gem or a package), then run:\n\n    cd /etc/openvpn/easy-rsa\n    source ./vars\n    rake client name=\"CLIENT_NAME\" gateway=\"vpn.example.com\"\n\nReplace `CLIENT_NAME` and `vpn.example.com` with your desired values. The rake task will generate a tar.gz file with the configuration and certificates for the client.\n\n\nLicense & Authors\n-----------------\n- Author:: Joshua Timberman (<joshua@opscode.com>)\n\n```text\nCopyright:: 2009-2010, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "requires": [
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": "~> 3.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum-epel",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "chef_recipes": {
    "openvpn": "Installs and configures openvpn",
    "openvpn::users": "Sets up openvpn cert/configs for users data bag items"
  },
  "parameters": {
    "openvpn/local": {
      "display_name": "OpenVPN Local",
      "description": "Local interface (ip) to listen on",
      "default": "ipaddress",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/proto": {
      "display_name": "OpenVPN Protocol",
      "description": "UDP or TCP",
      "default": "udp",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/type": {
      "display_name": "OpenVPN Type",
      "description": "Server or server-bridge",
      "default": "server",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/subnet": {
      "display_name": "OpenVPN Subnet",
      "description": "Subnet to hand out to clients",
      "default": "10.8.0.0",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/netmask": {
      "display_name": "OpenVPN Netmask",
      "description": "Netmask for clients",
      "default": "255.255.0.0",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/port": {
      "display_name": "OpenVPN Listen Port",
      "description": "Port to listen on, defaults to 1194",
      "default": "1194",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/gateway": {
      "display_name": "OpenVPN Gateway FQDN",
      "description": "FQDN for the VPN gateway server. Default is vpn.domain",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/log": {
      "display_name": "OpenVPN Log File",
      "description": "OpenVPN Server log file. Default /var/log/openvpn.log",
      "default": "/var/log/openvpn.log",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/key_dir": {
      "display_name": "OpenVPN Key Directory",
      "description": "Location to store keys, certificates and related files. Default /etc/openvpn/keys",
      "default": "/etc/openvpn/keys",
      "recipes": [
        "openvpn::default",
        "openvpn::users"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/signing_ca_cert": {
      "display_name": "OpenVPN CA Certificate",
      "description": "CA certificate for signing, default /etc/openvpn/keys/ca.crt",
      "default": "/etc/openvpn/keys/ca.crt",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/signing_ca_key": {
      "display_name": "OpenVPN CA key",
      "description": "CA key for signing, default /etc/openvpn/keys/ca.key",
      "default": "/etc/openvpn/keys/ca.key",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/routes": {
      "display_name": "OpenVPN Routes",
      "description": "Array of routes to add as push statements in the server.conf. Default is empty",
      "type": "array",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/script_security": {
      "display_name": "OpenVPN Script Security",
      "description": "Script Security setting to use in server config. Default is 1. The \"up\" script will not be included if this is 0 or 1. Set it to 2 to use the \"up\" script",
      "default": "1",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/configure_default_server": {
      "display_name": "Configure Default Server",
      "description": "Boolean to determine whether the default recipe will create a \"conf\" file for the default server. Set to false if you want to use the LWRP to create the conf files.",
      "default": "true",
      "recipes": [
        "openvpn::default"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/key/ca_expire": {
      "display_name": "OpenVPN Root CA Expiry",
      "description": "In how many days should the root CA key expire",
      "default": "3650",
      "recipes": [
        "openvpn::default",
        "openvpn::users"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/key/expire": {
      "display_name": "OpenVPN Certificate Expiry",
      "description": "In how many days should certificates expire",
      "default": "3650",
      "recipes": [
        "openvpn::default",
        "openvpn::users"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/key/size": {
      "display_name": "OpenVPN Key Size",
      "description": "Default key size, set to 2048 if paranoid but will slow down TLS negotiation performance",
      "default": "1024",
      "recipes": [
        "openvpn::default",
        "openvpn::users"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/key/country": {
      "display_name": "OpenVPN Certificate Country",
      "description": "The country for the TLS certificate",
      "default": "US",
      "recipes": [
        "openvpn::default",
        "openvpn::users"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/key/province": {
      "display_name": "OpenVPN Certificate Province",
      "description": "The province for the TLS certificate",
      "default": "CA",
      "recipes": [
        "openvpn::default",
        "openvpn::users"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/key/city": {
      "display_name": "OpenVPN Certificate City",
      "description": "The city for the TLS certificate",
      "default": "San Francisco",
      "recipes": [
        "openvpn::default",
        "openvpn::users"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/key/org": {
      "display_name": "OpenVPN Certificate Organization",
      "description": "The organization name for the TLS certificate",
      "default": "Fort-Funston",
      "recipes": [
        "openvpn::default",
        "openvpn::users"
      ],
      "mapping": "cookbook_attribute"
    },
    "openvpn/key/email": {
      "display_name": "OpenVPN Certificate Email",
      "description": "The email address for the TLS certificate",
      "default": "me@example.com",
      "recipes": [
        "openvpn::default",
        "openvpn::users"
      ],
      "mapping": "cookbook_attribute"
    }
  }
}