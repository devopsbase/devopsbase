{
  "name": "datadog Chef cookbook",
  "chef_cookbook_name": "datadog",
  "revision": "2.3.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/datadog",
    "https://supermarket.chef.io/cookbooks/datadog/download",
    "https://supermarket.chef.io/cookbooks/datadog/versions/2.3.0",
    "https://supermarket.chef.io/cookbooks/datadog/versions/2.3.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/datadog/versions/2.3.0",
    "https://supermarket.chef.io/api/v1/cookbooks/datadog",
    "https://supermarket.chef.io/api/v1/cookbooks/datadog/versions/2.3.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Other",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook",
    "Type/Devopsware/Monitoring/Datadog"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/datadog",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/datadog/versions/2.3.0/download",
  "deprecated": false,
  "created": "2011-11-19T10:07:30.000Z",
  "updated": "2016-09-20T14:16:31.130Z",
  "description": "Installs/Configures datadog components",
  "maintainer": {
    "name": "datadoghq",
    "email": "package@datadoghq.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": false,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 36,
  "downloads_count": 25572569,
  "downloads_count_revision": 1727,
  "repository_url": "https://github.com/DataDog/chef-datadog",
  "issues_url": "https://github.com/DataDog/chef-datadog/issues",
  "chef_source_url": "https://github.com/DataDog/chef-datadog",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Where to Find the Code\n======================\nTo submit issues and patches please visit https://github.com/DataDog/chef-datadog.\nThe code is licensed under the Apache License 2.0 (see  LICENSE for details).\n\n[![Chef cookbook](https://img.shields.io/cookbook/v/datadog.svg?style=flat)](https://github.com/DataDog/chef-datadog)\n[![Build Status](https://travis-ci.org/DataDog/chef-datadog.svg?branch=master)](https://travis-ci.org/DataDog/chef-datadog)\n[![Circle CI](https://circleci.com/gh/DataDog/chef-datadog.svg?style=shield)](https://circleci.com/gh/DataDog/chef-datadog)\n[![Coverage Status](https://coveralls.io/repos/DataDog/chef-datadog/badge.svg?branch=master)](https://coveralls.io/r/DataDog/chef-datadog?branch=master)\n[![GitHub forks](https://img.shields.io/github/forks/DataDog/chef-datadog.svg)](https://github.com/DataDog/chef-datadog/network)\n[![GitHub stars](https://img.shields.io/github/stars/DataDog/chef-datadog.svg)](https://github.com/DataDog/chef-datadog/stargazers)\n\nDatadog Cookbook\n================\n\nChef recipes to deploy Datadog's components and configuration automatically.\n\nRequirements\n============\n- chef >= 10.14\n\nPlatforms\n---------\n\n* Amazon Linux\n* CentOS\n* Debian\n* RedHat\n* Scientific Linux\n* Ubuntu\n* Windows (requires chef >= 12.0)\n\nCookbooks\n---------\n\nThe following Opscode cookbooks are dependencies:\n\n* `apt`\n* `chef_handler`\n* `windows`\n* `yum`\n\n\nRecipes\n=======\n\ndefault\n-------\nJust a placeholder for now, when we have more shared components they will probably live there.\n\ndd-agent\n--------\nInstalls the Datadog agent on the target system, sets the API key, and start the service to report on the local system metrics\n\ndd-handler\n----------\nInstalls the [chef-handler-datadog](https://rubygems.org/gems/chef-handler-datadog) gem and invokes the handler at the end of a Chef run to report the details back to the newsfeed.\n\ndogstatsd-(python|ruby)\n-----------------------\nInstalls the language-specific libraries to interact with `dogstatsd`.\n\nother\n-----\nThere are many other integration-specific recipes, that are meant to assist in deploying the correct agent configuration files and dependencies for a given integration.\n\n\nUsage\n=====\n\n1. Add this cookbook to your Chef Server, either by installing with knife or by adding it to your Berksfile:\n  ```\n  cookbook 'datadog', '~> 2.1.0'\n  ```\n2. Add your API Key as a node attribute via an `environment` or `role` or by declaring it in another cookbook at a higher precedence level.\n3. Create an 'application key' for `chef_handler` [here](https://app.datadoghq.com/account/settings#api), and add it as a node attribute, as in Step #2.\n4. Associate the recipes with the desired `roles`, i.e. \"role:chef-client\" should contain \"datadog::dd-handler\" and a \"role:base\" should start the agent with \"datadog::dd-agent\".  Here's an example role with both recipes:\n  ```\n  name 'example'\n  description 'Example role using DataDog'\n\n  default_attributes(\n    'datadog' => {\n      'api_key' => 'api_key',\n      'application_key' => 'app_key'\n    }\n  )\n\n  run_list %w(\n    recipe[datadog::dd-agent]\n    recipe[datadog::dd-handler]\n  )\n  ```\n5. Wait until `chef-client` runs on the target node (or trigger chef-client manually if you're impatient)\n\nWe are not making use of data_bags in this recipe at this time, as it is unlikely that you will have more than one API key and one application key.\n\nFor more deployment details, visit the [Datadog Documentation site](http://docs.datadoghq.com/).\n",
  "requires": [
    {
      "kind": "host",
      "label": "amazon",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "fedora",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "scientific",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "windows",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/apt",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/chef_handler",
      "revision": "~> 1.1.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/windows",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/yum",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ],
  "recommends": [
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/sudo",
      "revision": ">= 0.0.0"
    }
  ],
  "chef_recipes": {
    "datadog::default": "Default",
    "datadog::dd-agent": "Installs the Datadog Agent",
    "datadog::dd-handler": "Installs a Chef handler for Datadog",
    "datadog::repository": "Installs the Datadog package repository",
    "datadog::dogstatsd-python": "Installs the Python dogstatsd package for custom metrics",
    "datadog::dogstatsd-ruby": "Installs the Ruby dogstatsd package for custom metrics",
    "datadog::cassandra": "Installs and configures the Cassandra integration",
    "datadog::couchdb": "Installs and configures the CouchDB integration",
    "datadog::postfix": "Installs and configures the Postfix integration"
  }
}