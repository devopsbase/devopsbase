{
  "name": "dhcp Chef cookbook",
  "chef_cookbook_name": "dhcp",
  "revision": "2.0.0",
  "uris": [
    "https://supermarket.chef.io/cookbooks/dhcp",
    "https://supermarket.chef.io/cookbooks/dhcp/download",
    "https://supermarket.chef.io/cookbooks/dhcp/versions/2.0.0",
    "https://supermarket.chef.io/cookbooks/dhcp/versions/2.0.0/download",
    "https://supermarket.chef.io/api/v1/cookbooks/dhcp/versions/2.0.0",
    "https://supermarket.chef.io/api/v1/cookbooks/dhcp",
    "https://supermarket.chef.io/api/v1/cookbooks/dhcp/versions/2.0.0/download"
  ],
  "labels": [
    "Chef cookbook",
    "Executable/Script/Chef Cookbook",
    "Mode/Executable/Script/Chef Cookbook"
  ],
  "info_url": "https://supermarket.chef.io/cookbooks/dhcp",
  "package_url": "https://supermarket.chef.io/api/v1/cookbooks/dhcp/versions/2.0.0/download",
  "deprecated": false,
  "created": "2012-11-22T12:53:11.000Z",
  "updated": "2016-05-04T17:59:51.076Z",
  "description": "DHCP",
  "maintainer": {
    "name": "chef-brigade",
    "email": "spheromak@gmail.com"
  },
  "license": "Apache 2.0",
  "chef_foodcritic_failure": null,
  "chef_up_for_adoption": null,
  "rating": null,
  "followers_count": 13,
  "downloads_count": 7673880,
  "downloads_count_revision": 1266039,
  "repository_url": "https://github.com/chef-brigade/dhcp-cookbook",
  "issues_url": "https://github.com/chef-brigade/dhcp-cookbook/issues",
  "chef_source_url": "https://github.com/chef-brigade/dhcp-cookbook",
  "gatherbase_origin": "chef-supermarket",
  "readme_name": "README.md",
  "readme": "Description\n===========\nData bag and environment driven DHCP server with isc-dhcpd \n\n* Supports setting up Master/Master isc DHCP failover.  \n* Includes Support for ddns \n* Includes LWRPs for managing hosts, groups and subnets.\n\nLarge parts were borrowed from  work initially done by Dell, extended by Atalanta Systems and reworked by Matt Ray and Opscode. Big thanks to all of them. \n\nRequirements\n============\nTested on `Ubuntu 12.04` `CentOS 6` using Chef 10+\n\nLimitations\n===========\n* currently only setup to handle ipv4\n* no generic classification support\n* ddns is tied to dns_zones databags \n\n\nRecipes\n=======\ndefault\n-------\nStubb recipe that does nothing. Good for including LWRP's but not the other recipe stuffs. \n\nserver\n------\nThe node will install and configure the `dhcp-server` application. \nConfiguration is through various dhcp_X bags, and the current role/environment \n\nNode Attributes\n==========\nAllmost everyone of the parameters and options are able to be overode in the \nhost/group/network scope these are general defaults for the server. \n\n Check out the [man page][1] for details on dhcpd.conf options/params.\n\n##  Attribute - _Type_ - Default\n## `node[:dhcp][:hosts_bag]` - `String` - `\"dhcp_hosts\"`\nThe name of the data bag that holds host items\n\n## `node[:dhcp][:networks_bag]` - `String` - `\"dhcp_networks\"`\nThe name of the data bag that holds network items\n\n## `node[:dhcp][:groups_bag]` - `String` - `\"dhcp_groups\"`\nThe name of the data bag that holds group items\n\n## `node[:dhcp][:hosts]` - `Array` - `[]`\nThe list of hosts items that this server should load \n\n## `node[:dhcp][:groups]` - `Array` - `[]`\nThe list of group items this server should load \n\n## `node[:dhcp][:networks]` - `Array` - `[]`\nThe list of network items this node shoul load\n\n## `node[:dhcp][:interfaces]` - `Array` - `[]`\nThe Network Interface(s) to listen on. If an empty list then we will listen on all interfaces.\n\n## `node[:dhcp][:failover]` - `Boolean` -  `false`\nEnable Failover support buy setting to `true`\n\n## `node[:dhcp][:allows]` - `Array` - `[ \"booting\", \"bootp\", \"unknown-clients\" ]`\nSet global Dhcpd allow entries \n\n### `node[:dhcp][:options]` Global Options \n## `node[:dhcp][:options]['domain-name-servers']` - `String` - `\"8.8.8.8, 8.8.4.4\"`\nList of dns servers to send to clients in the global scope \n\n## `node[:dhcp][:options]['host-name']` - `String` `\" = binary-to-ascii (16, 8, \\\"-\\\", substring (hardware, 1, 6))\"`\nOptions for global scop host-name settings. The default here will generate a host as mac address if the node doesn't provide a hostname or is not defined in dns/hosts/groups.\n\n## `node[:dhcp][:options]['domain-name']` - `String` - `\"\\\"#{domain}\\\"\"`\nSet domainname  in the global scope to this nodes domain \n\n\n### `node[:dhcp][:parameters]` Global Parameters\nThese are all just k/v entries in the global params hash. All values are type: `String`\n## `node[:dhcp][:parameters][\"default-lease-time\"]` - `String` -  `\"6400\"`\nSet the default lease time in the global scope\n\n## `node[:dhcp][:parameters][\"ddns-domainname\"]` - `String` - \"\\\"#{domain}\\\"\"`\nSet the ddns domain to this nodes domain\n\n## `node[:dhcp][:parameters][\"ddns-update-style\"]` - `String` - `\"interim\"`\nddns Upadte style\n\n## `node[:dhcp][:parameters][\"max-lease-time\"]` - `String` - `\"86400\"`\nMax Lease time\n\n## `node[:dhcp][:parameters][\"update-static-leases\"]` - `String` - `\"true\"`\nMake sure we push static ip adresses defined in groups/hosts to the dns server\n\n## `node[:dhcp][:parameters][\"one-lease-per-client\"]` - `String` - `\"true\"`\nWhen a client requests an ip it will release any held leases.\n\n## `node[:dhcp][:parameters][\"authoritative\"]` - `String` - `\"\"`\nThis setting has no value on purpose thats how isc-dhcpd wants it.\n\n## `node[:dhcp][:parameters][\"ping-check\"]` - `String` - `\"true\"`\nEnable Adress collision checking\n\n## `node[:dhcp][:parameters][\"next-server\"]` - `String` - `\"#{ipaddress}\"`\nSet this server as the global next-server\n\n## `node[:dhcp][:parameters][\"filename\"]` - `String` - `'\"pxelinux.0\"'`\nFor tftp file name __Note:__ the quotes are nessicary for this option in the fall throught to dhcpd config.\n\n\n### Platform Default Attributes\n\n### RHEL\n## `node[:dhcp][:dir]` - `String` - `\"/etc/dhcpd\"`\n## `node[:dhcp][:package_name]` - `String` - `\"dhcp\"`\n## `node[:dhcp][:service_name]` - `String` - `\"dhcpd\"`\n## `node[:dhcp][:config_file]`  - `String` - `\"/etc/dhcp/dhcpd.conf\"`\n on `RHEL < 6` it defaults to `\"/etc/dhcpd.conf`\n## `node[:dhcp][:init_config]`  - `String` - `\"/etc/sysconfig/dhcpd\"`\n\n\n### Debian\n## `node[:dhcp][:dir]` - `String` - `\"/etc/dhcpd\"`\n## `node[:dhcp][:package_name]` - `String` - `\"isc-dhcp-server\"`\n## `node[:dhcp][:service_name]` - `String` - `\"isc-dhcp-server\"`\n## `node[:dhcp][:config_file]`  - `String` - `\"/etc/dhcp/dhcpd.conf\"`\n## `node[:dhcp][:init_config]`  - `String` - `\"/etc/default/isc-dhcp-server\"`\n\n\nData Bags\n========\nData bags drive the lionshare of the dhcp configuration. Beyond the global settings. It is not required to configure \nany bags other than dhcp_networks to get up and running, But if you want to statically map a network or have handy \nHost names provisioned by dhcp you will have to add either dhcp_groups/dhcp_hosts bags and items. \n\nYou can generate example bags by using these handy commands\n\n    % knife data bag create dhcp_networks\n    % knife data bag create dhcp_groups\n    % knife data bag create dhcp_hosts\n    % knife data bag from file dhcp_networks examples/data_bags/dhcp_networks\n    % knife data bag from file dhcp_groups examples/data_bags/dhcp_groups\n    % knife data bag from file dhcp_hosts examples/data_bags/dhcp_hosts\n\n\n\ndhcp_networks  \n-------------\nLooked up via `node[:dhcp][:networks_bag]`. Describes networks this dhcp server should be configured to provide services for. \nPer-network options can be provided as an array of strings where each string is a dhcp option. \nMake sure you escape `\"`'s properly as dhcpd is touchy about the format of values. \n\n    {\n      \"id\": \"192-168-1-0_24\",\n      \"routers\": [ \"192.168.1.1\" ],\n      \"address\": \"192.168.1.0\",\n      \"netmask\": \"255.255.255.0\",\n      \"broadcast\": \"192.168.1.255\",\n      \"range\": \"192.168.1.50 192.168.1.240\",\n      \"options\": [ \"next-server 192.168.1.11\" ]\n    }\n\n\ndhcp_groups\n----------\nLooked up via `node[:dhcp][:grougroups] Items for this bag are group entries as per the [man page][1].\nGroups are sets of machines that can be configured with common parameters.  A group can be bare. I.e. \nContains no host or parameters entries whatsover, and just defines options.\n\n\nThe only required key in a host def is the `\"mac\":` key. Everything else is optional\n\nExample Group Bag\n        {\n          \"id\": \"test\",\n          \"pxe\":  \"ubuntu-precise\",\n          \"parameters\": [\n            \"use-host-decl-names on\",\n            \"max-lease-time 300\",\n            \"default-lease-time 120\",\n            \"next-server \\\"someplace\\\"\"\n          ],\n          \"hosts\": {\n            \"some-vm\": {\n              \"parameters\": [  ],\n              \"mac\": \"11:22:33:44:55:66\",\n              \"ip\": \"192.168.1.111\"\n            },\n            \"another-host\": {\n              \"mac\": \"22:33:44:55:66:77\"\n            }\n          }\n        }\n\n\n\nThere are a few keys that merit more discussion: \n## `\"hosts\":` key dhcp_group Items\nGroups in isc-dhcp can define lists of hosts. In this example we are using the `use-host-decl-names on`\ntell dhcp to use the \"some-vm\" and \"another-host\" entries as the host-name for these clients.\nAs well as setting other per-group parameters. \n\nEach Host in the hosts Hash can have a number of settings, but the only required setting is `\"mac\":` the mac address\nfor the host.  \n\n### `\"mac\":` \nmac address of this host\n### `\"ip\":`\nip address of this host\n### `\"parameters\":` \nan array of isc-dhcpd parameters as-per the global parameter setting. \n### `\"pxe\":` \nThis key is used by my pxe cookbook to figure out what pxe item  you want this group to boot too. That Pxe cookbook should be released soon (hopefully).\n\n\ndhcp_hosts\n----------\nDhcp hosts bag is looked up via  `node[:dhcp][:hosts_bag]`, and contains Host Items. \n\nExample Most Basic host:\n\n    {\n      \"id\": \"vagrant-vm\",\n      \"hostname\": \"vagrant.vm\",\n      \"mac\": \"08:00:27:f1:1f:b6\",\n    }\n\n\nExample Complex host: \n\n    {\n      \"id\": \"pxe_test-vm\",\n      \"hostname\": \"pxe_test.vm\",\n      \"mac\": \"08:00:27:8f:7b:db\",\n      \"ip\": \"192.168.1.31\",\n      \"parameters\": [ ],\n      \"options\": [ ],\n      \"pxe\": \"ubuntu-precise\"\n    }\n\n\n\nResources/Providers\n===================\n## dhcp_host\n\nManipulate host entries in dhcpd \n\n### Actions\n* `add` -  _default_ \n* `remove` \n\n### Paramaters\n* `hostname` - _String_ \n* `macaddress` -  _String_\n* `ipaddress` - _String_\n* `options` - _Array_ - [] \n* `parameters` - _Array_ - [] \n* `conf_dir` - _String_ - \"/etc/dhcp\"\n\n### Example\n\nAdd a Node\n\n    dhcp_host \"myhost\" do\n      hostname   \"somebox.foobar.com\"\n      macaddress \"08:00:27:f1:1f:b6\"\n      ipaddress  \"192.168.1.22\"\n      options   [ \"domain-name-servers 8.8.8.8\" ] \n    end\n\nRemove a node\n\n    dhcp_host \"myhost\" do \n      action :remove\n      hostname \"somebox.foobar.com\"\n    end\n\nIf you undefine an entry it will also get removed.\n\n\n## dhcp_group\n\n### Actions\n* `add` - _default_\n* `remove` \n\n### Paramaters\n* `name` - _String_ - :name_attribute\n* `hosts`- _Hash_ - {} - This is a hash of host entries that follow the host-databag format. See the example entry in examples directory\n* `parameters` - _Array_ -  []\n* `conf_dir` - _String_ - \"/etc/dhcp\" - The directory where the config files are stored\n\n### Example\n\n\n    hosts_data = { \n      \"some-vm\"=> {\"parameters\"=>[], \"mac\"=>\"11:22:33:44:55:66\", \"ip\"=>\"192.168.1.111\"},\n      \"another-host\"=>{\"mac\"=>\"22:33:44:55:66:77\"}}\n    }\n\n    group \"some_group\" do\n      parameters [ \"default-lease-time 120\", \"next-server \\\"someplace\\\"\"]\n      hosts hosts_data\n    end\n\n\n\n## dhcp_subnet\n### Actions\n* `:add` - _default_\n* `:remove` - _default_\n\n### Paramaters\n* `subnet` - _String_ -  :name_attribute  - The network subnet \n* `broadcast` - _String_ \n* `netmask` - _String_ - \n* `routers` - _Array_ - []  \n* `options` - _Array_ - []\n* `range` - _String_ \n* `peer` - _String_ - nil - Peer server for this segment\n* `conf_dir` - _String_ - \"/etc/dhcp\" \n\n### Example\n\n    dhcp_subnet \"192.168.1.0\" do \n      range \"192.168.1.100 192.168.1.200\"\n      netmask \"255.255.255.0\"\n      broadcast \"192.168.1.255\"\n      options [ \"next-server 192.168.1.11\" ]\n      routers \"192.168.1.1\"\n    end\n\nLicense and Author\n==================\nAuthor:: Jesse Nelson (<spheromak@gmail.com>)\nAuthor:: Matt Ray (<matt@opscode.com>)\n\nCopyright:: 2012 Jesse Nelson\nCopyright:: 2011 Atalanta Systems\nCopyright:: 2011 Dell, Inc.\nCopyright:: 2011 Opscode, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n[1]: http://www.daemon-systems.org/man/dhcpd.conf.5.html \"dhcpd.conf man page\"\n\n",
  "requires": [
    {
      "kind": "host",
      "label": "debian",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "ubuntu",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "centos",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "host",
      "label": "redhat",
      "revision": ">= 0.0.0",
      "one_of_group": "os"
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/ruby-helper",
      "revision": ">= 0.0.0",
      "self_resolve": true
    },
    {
      "kind": "env",
      "uri": "https://supermarket.chef.io/cookbooks/helpers-databags",
      "revision": ">= 0.0.0",
      "self_resolve": true
    }
  ]
}